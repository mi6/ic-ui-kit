'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

/*!
 Stencil Mock Doc v4.3.0 | MIT Licensed | https://stenciljs.com
 */
const CONTENT_REF_ID = 'r';
const ORG_LOCATION_ID = 'o';
const SLOT_NODE_ID = 's';
const TEXT_NODE_ID = 't';
const XLINK_NS = 'http://www.w3.org/1999/xlink';

const attrHandler = {
  get(obj, prop) {
    if (prop in obj) {
      return obj[prop];
    }
    if (typeof prop !== 'symbol' && !isNaN(prop)) {
      return obj.__items[prop];
    }
    return undefined;
  },
};
const createAttributeProxy = (caseInsensitive) => new Proxy(new MockAttributeMap(caseInsensitive), attrHandler);
class MockAttributeMap {
  constructor(caseInsensitive = false) {
    this.caseInsensitive = caseInsensitive;
    this.__items = [];
  }
  get length() {
    return this.__items.length;
  }
  item(index) {
    return this.__items[index] || null;
  }
  setNamedItem(attr) {
    attr.namespaceURI = null;
    this.setNamedItemNS(attr);
  }
  setNamedItemNS(attr) {
    if (attr != null && attr.value != null) {
      attr.value = String(attr.value);
    }
    const existingAttr = this.__items.find((a) => a.name === attr.name && a.namespaceURI === attr.namespaceURI);
    if (existingAttr != null) {
      existingAttr.value = attr.value;
    }
    else {
      this.__items.push(attr);
    }
  }
  getNamedItem(attrName) {
    if (this.caseInsensitive) {
      attrName = attrName.toLowerCase();
    }
    return this.getNamedItemNS(null, attrName);
  }
  getNamedItemNS(namespaceURI, attrName) {
    namespaceURI = getNamespaceURI(namespaceURI);
    return (this.__items.find((attr) => attr.name === attrName && getNamespaceURI(attr.namespaceURI) === namespaceURI) || null);
  }
  removeNamedItem(attr) {
    this.removeNamedItemNS(attr);
  }
  removeNamedItemNS(attr) {
    for (let i = 0, ii = this.__items.length; i < ii; i++) {
      if (this.__items[i].name === attr.name && this.__items[i].namespaceURI === attr.namespaceURI) {
        this.__items.splice(i, 1);
        break;
      }
    }
  }
  [Symbol.iterator]() {
    let i = 0;
    return {
      next: () => ({
        done: i === this.length,
        value: this.item(i++),
      }),
    };
  }
  get [Symbol.toStringTag]() {
    return 'MockAttributeMap';
  }
}
function getNamespaceURI(namespaceURI) {
  return namespaceURI === XLINK_NS ? null : namespaceURI;
}
function cloneAttributes(srcAttrs, sortByName = false) {
  const dstAttrs = new MockAttributeMap(srcAttrs.caseInsensitive);
  if (srcAttrs != null) {
    const attrLen = srcAttrs.length;
    if (sortByName && attrLen > 1) {
      const sortedAttrs = [];
      for (let i = 0; i < attrLen; i++) {
        const srcAttr = srcAttrs.item(i);
        const dstAttr = new MockAttr(srcAttr.name, srcAttr.value, srcAttr.namespaceURI);
        sortedAttrs.push(dstAttr);
      }
      sortedAttrs.sort(sortAttributes).forEach((attr) => {
        dstAttrs.setNamedItemNS(attr);
      });
    }
    else {
      for (let i = 0; i < attrLen; i++) {
        const srcAttr = srcAttrs.item(i);
        const dstAttr = new MockAttr(srcAttr.name, srcAttr.value, srcAttr.namespaceURI);
        dstAttrs.setNamedItemNS(dstAttr);
      }
    }
  }
  return dstAttrs;
}
function sortAttributes(a, b) {
  if (a.name < b.name)
    return -1;
  if (a.name > b.name)
    return 1;
  return 0;
}
class MockAttr {
  constructor(attrName, attrValue, namespaceURI = null) {
    this._name = attrName;
    this._value = String(attrValue);
    this._namespaceURI = namespaceURI;
  }
  get name() {
    return this._name;
  }
  set name(value) {
    this._name = value;
  }
  get value() {
    return this._value;
  }
  set value(value) {
    this._value = String(value);
  }
  get nodeName() {
    return this._name;
  }
  set nodeName(value) {
    this._name = value;
  }
  get nodeValue() {
    return this._value;
  }
  set nodeValue(value) {
    this._value = String(value);
  }
  get namespaceURI() {
    return this._namespaceURI;
  }
  set namespaceURI(namespaceURI) {
    this._namespaceURI = namespaceURI;
  }
}

class MockClassList {
  constructor(elm) {
    this.elm = elm;
  }
  add(...classNames) {
    const clsNames = getItems(this.elm);
    let updated = false;
    classNames.forEach((className) => {
      className = String(className);
      validateClass(className);
      if (clsNames.includes(className) === false) {
        clsNames.push(className);
        updated = true;
      }
    });
    if (updated) {
      this.elm.setAttributeNS(null, 'class', clsNames.join(' '));
    }
  }
  remove(...classNames) {
    const clsNames = getItems(this.elm);
    let updated = false;
    classNames.forEach((className) => {
      className = String(className);
      validateClass(className);
      const index = clsNames.indexOf(className);
      if (index > -1) {
        clsNames.splice(index, 1);
        updated = true;
      }
    });
    if (updated) {
      this.elm.setAttributeNS(null, 'class', clsNames.filter((c) => c.length > 0).join(' '));
    }
  }
  contains(className) {
    className = String(className);
    return getItems(this.elm).includes(className);
  }
  toggle(className) {
    className = String(className);
    if (this.contains(className) === true) {
      this.remove(className);
    }
    else {
      this.add(className);
    }
  }
  get length() {
    return getItems(this.elm).length;
  }
  item(index) {
    return getItems(this.elm)[index];
  }
  toString() {
    return getItems(this.elm).join(' ');
  }
}
function validateClass(className) {
  if (className === '') {
    throw new Error('The token provided must not be empty.');
  }
  if (/\s/.test(className)) {
    throw new Error(`The token provided ('${className}') contains HTML space characters, which are not valid in tokens.`);
  }
}
function getItems(elm) {
  const className = elm.getAttribute('class');
  if (typeof className === 'string' && className.length > 0) {
    return className
      .trim()
      .split(' ')
      .filter((c) => c.length > 0);
  }
  return [];
}

class MockCSSStyleDeclaration {
  constructor() {
    this._styles = new Map();
  }
  setProperty(prop, value) {
    prop = jsCaseToCssCase(prop);
    if (value == null || value === '') {
      this._styles.delete(prop);
    }
    else {
      this._styles.set(prop, String(value));
    }
  }
  getPropertyValue(prop) {
    prop = jsCaseToCssCase(prop);
    return String(this._styles.get(prop) || '');
  }
  removeProperty(prop) {
    prop = jsCaseToCssCase(prop);
    this._styles.delete(prop);
  }
  get length() {
    return this._styles.size;
  }
  get cssText() {
    const cssText = [];
    this._styles.forEach((value, prop) => {
      cssText.push(`${prop}: ${value};`);
    });
    return cssText.join(' ').trim();
  }
  set cssText(cssText) {
    if (cssText == null || cssText === '') {
      this._styles.clear();
      return;
    }
    cssText.split(';').forEach((rule) => {
      rule = rule.trim();
      if (rule.length > 0) {
        const splt = rule.split(':');
        if (splt.length > 1) {
          const prop = splt[0].trim();
          const value = splt.slice(1).join(':').trim();
          if (prop !== '' && value !== '') {
            this._styles.set(jsCaseToCssCase(prop), value);
          }
        }
      }
    });
  }
}
function createCSSStyleDeclaration() {
  return new Proxy(new MockCSSStyleDeclaration(), cssProxyHandler);
}
const cssProxyHandler = {
  get(cssStyle, prop) {
    if (prop in cssStyle) {
      return cssStyle[prop];
    }
    prop = cssCaseToJsCase(prop);
    return cssStyle.getPropertyValue(prop);
  },
  set(cssStyle, prop, value) {
    if (prop in cssStyle) {
      cssStyle[prop] = value;
    }
    else {
      cssStyle.setProperty(prop, value);
    }
    return true;
  },
};
function cssCaseToJsCase(str) {
  // font-size to fontSize
  if (str.length > 1 && str.includes('-') === true) {
    str = str
      .toLowerCase()
      .split('-')
      .map((segment) => segment.charAt(0).toUpperCase() + segment.slice(1))
      .join('');
    str = str.slice(0, 1).toLowerCase() + str.slice(1);
  }
  return str;
}
function jsCaseToCssCase(str) {
  // fontSize to font-size
  if (str.length > 1 && str.includes('-') === false && /[A-Z]/.test(str) === true) {
    str = str
      .replace(/([A-Z])/g, (g) => ' ' + g[0])
      .trim()
      .replace(/ /g, '-')
      .toLowerCase();
  }
  return str;
}

class MockCustomElementRegistry {
  constructor(win) {
    this.win = win;
  }
  define(tagName, cstr, options) {
    if (tagName.toLowerCase() !== tagName) {
      throw new Error(`Failed to execute 'define' on 'CustomElementRegistry': "${tagName}" is not a valid custom element name`);
    }
    if (this.__registry == null) {
      this.__registry = new Map();
    }
    this.__registry.set(tagName, { cstr, options });
    if (this.__whenDefined != null) {
      const whenDefinedResolveFns = this.__whenDefined.get(tagName);
      if (whenDefinedResolveFns != null) {
        whenDefinedResolveFns.forEach((whenDefinedResolveFn) => {
          whenDefinedResolveFn();
        });
        whenDefinedResolveFns.length = 0;
        this.__whenDefined.delete(tagName);
      }
    }
    const doc = this.win.document;
    if (doc != null) {
      const hosts = doc.querySelectorAll(tagName);
      hosts.forEach((host) => {
        if (upgradedElements.has(host) === false) {
          tempDisableCallbacks.add(doc);
          const upgradedCmp = createCustomElement(this, doc, tagName);
          for (let i = 0; i < host.childNodes.length; i++) {
            const childNode = host.childNodes[i];
            childNode.remove();
            upgradedCmp.appendChild(childNode);
          }
          tempDisableCallbacks.delete(doc);
          if (proxyElements.has(host)) {
            proxyElements.set(host, upgradedCmp);
          }
        }
        fireConnectedCallback(host);
      });
    }
  }
  get(tagName) {
    if (this.__registry != null) {
      const def = this.__registry.get(tagName.toLowerCase());
      if (def != null) {
        return def.cstr;
      }
    }
    return undefined;
  }
  upgrade(_rootNode) {
    //
  }
  clear() {
    if (this.__registry != null) {
      this.__registry.clear();
    }
    if (this.__whenDefined != null) {
      this.__whenDefined.clear();
    }
  }
  whenDefined(tagName) {
    tagName = tagName.toLowerCase();
    if (this.__registry != null && this.__registry.has(tagName) === true) {
      return Promise.resolve(this.__registry.get(tagName).cstr);
    }
    return new Promise((resolve) => {
      if (this.__whenDefined == null) {
        this.__whenDefined = new Map();
      }
      let whenDefinedResolveFns = this.__whenDefined.get(tagName);
      if (whenDefinedResolveFns == null) {
        whenDefinedResolveFns = [];
        this.__whenDefined.set(tagName, whenDefinedResolveFns);
      }
      whenDefinedResolveFns.push(resolve);
    });
  }
}
function createCustomElement(customElements, ownerDocument, tagName) {
  const Cstr = customElements.get(tagName);
  if (Cstr != null) {
    const cmp = new Cstr(ownerDocument);
    cmp.nodeName = tagName.toUpperCase();
    upgradedElements.add(cmp);
    return cmp;
  }
  const host = new Proxy({}, {
    get(obj, prop) {
      const elm = proxyElements.get(host);
      if (elm != null) {
        return elm[prop];
      }
      return obj[prop];
    },
    set(obj, prop, val) {
      const elm = proxyElements.get(host);
      if (elm != null) {
        elm[prop] = val;
      }
      else {
        obj[prop] = val;
      }
      return true;
    },
    has(obj, prop) {
      const elm = proxyElements.get(host);
      if (prop in elm) {
        return true;
      }
      if (prop in obj) {
        return true;
      }
      return false;
    },
  });
  const elm = new MockHTMLElement(ownerDocument, tagName);
  proxyElements.set(host, elm);
  return host;
}
const proxyElements = new WeakMap();
const upgradedElements = new WeakSet();
function connectNode(ownerDocument, node) {
  node.ownerDocument = ownerDocument;
  if (node.nodeType === 1 /* NODE_TYPES.ELEMENT_NODE */) {
    if (ownerDocument != null && node.nodeName.includes('-')) {
      const win = ownerDocument.defaultView;
      if (win != null && typeof node.connectedCallback === 'function' && node.isConnected) {
        fireConnectedCallback(node);
      }
      const shadowRoot = node.shadowRoot;
      if (shadowRoot != null) {
        shadowRoot.childNodes.forEach((childNode) => {
          connectNode(ownerDocument, childNode);
        });
      }
    }
    node.childNodes.forEach((childNode) => {
      connectNode(ownerDocument, childNode);
    });
  }
  else {
    node.childNodes.forEach((childNode) => {
      childNode.ownerDocument = ownerDocument;
    });
  }
}
function fireConnectedCallback(node) {
  if (typeof node.connectedCallback === 'function') {
    if (tempDisableCallbacks.has(node.ownerDocument) === false) {
      try {
        node.connectedCallback();
      }
      catch (e) {
        console.error(e);
      }
    }
  }
}
function disconnectNode(node) {
  if (node.nodeType === 1 /* NODE_TYPES.ELEMENT_NODE */) {
    if (node.nodeName.includes('-') === true && typeof node.disconnectedCallback === 'function') {
      if (tempDisableCallbacks.has(node.ownerDocument) === false) {
        try {
          node.disconnectedCallback();
        }
        catch (e) {
          console.error(e);
        }
      }
    }
    node.childNodes.forEach(disconnectNode);
  }
}
function attributeChanged(node, attrName, oldValue, newValue) {
  attrName = attrName.toLowerCase();
  const observedAttributes = node.constructor.observedAttributes;
  if (Array.isArray(observedAttributes) === true &&
    observedAttributes.some((obs) => obs.toLowerCase() === attrName) === true) {
    try {
      node.attributeChangedCallback(attrName, oldValue, newValue);
    }
    catch (e) {
      console.error(e);
    }
  }
}
function checkAttributeChanged(node) {
  return node.nodeName.includes('-') === true && typeof node.attributeChangedCallback === 'function';
}
const tempDisableCallbacks = new Set();

function dataset(elm) {
  const ds = {};
  const attributes = elm.attributes;
  const attrLen = attributes.length;
  for (let i = 0; i < attrLen; i++) {
    const attr = attributes.item(i);
    const nodeName = attr.nodeName;
    if (nodeName.startsWith('data-')) {
      ds[dashToPascalCase(nodeName)] = attr.nodeValue;
    }
  }
  return new Proxy(ds, {
    get(_obj, camelCaseProp) {
      return ds[camelCaseProp];
    },
    set(_obj, camelCaseProp, value) {
      const dataAttr = toDataAttribute(camelCaseProp);
      elm.setAttribute(dataAttr, value);
      return true;
    },
  });
}
function toDataAttribute(str) {
  return ('data-' +
    String(str)
      .replace(/([A-Z0-9])/g, (g) => ' ' + g[0])
      .trim()
      .replace(/ /g, '-')
      .toLowerCase());
}
function dashToPascalCase(str) {
  str = String(str).slice(5);
  return str
    .split('-')
    .map((segment, index) => {
    if (index === 0) {
      return segment.charAt(0).toLowerCase() + segment.slice(1);
    }
    return segment.charAt(0).toUpperCase() + segment.slice(1);
  })
    .join('');
}

class MockEvent {
  constructor(type, eventInitDict) {
    this.bubbles = false;
    this.cancelBubble = false;
    this.cancelable = false;
    this.composed = false;
    this.currentTarget = null;
    this.defaultPrevented = false;
    this.srcElement = null;
    this.target = null;
    if (typeof type !== 'string') {
      throw new Error(`Event type required`);
    }
    this.type = type;
    this.timeStamp = Date.now();
    if (eventInitDict != null) {
      Object.assign(this, eventInitDict);
    }
  }
  preventDefault() {
    this.defaultPrevented = true;
  }
  stopPropagation() {
    this.cancelBubble = true;
  }
  stopImmediatePropagation() {
    this.cancelBubble = true;
  }
  composedPath() {
    const composedPath = [];
    let currentElement = this.target;
    while (currentElement) {
      composedPath.push(currentElement);
      if (!currentElement.parentElement && currentElement.nodeName === "#document" /* NODE_NAMES.DOCUMENT_NODE */) {
        // the current element doesn't have a parent, but we've detected it's our root document node. push the window
        // object associated with the document onto the path
        composedPath.push(currentElement.defaultView);
        break;
      }
      currentElement = currentElement.parentElement;
    }
    return composedPath;
  }
}
class MockCustomEvent extends MockEvent {
  constructor(type, customEventInitDic) {
    super(type);
    this.detail = null;
    if (customEventInitDic != null) {
      Object.assign(this, customEventInitDic);
    }
  }
}
class MockKeyboardEvent extends MockEvent {
  constructor(type, keyboardEventInitDic) {
    super(type);
    this.code = '';
    this.key = '';
    this.altKey = false;
    this.ctrlKey = false;
    this.metaKey = false;
    this.shiftKey = false;
    this.location = 0;
    this.repeat = false;
    if (keyboardEventInitDic != null) {
      Object.assign(this, keyboardEventInitDic);
    }
  }
}
class MockMouseEvent extends MockEvent {
  constructor(type, mouseEventInitDic) {
    super(type);
    this.screenX = 0;
    this.screenY = 0;
    this.clientX = 0;
    this.clientY = 0;
    this.ctrlKey = false;
    this.shiftKey = false;
    this.altKey = false;
    this.metaKey = false;
    this.button = 0;
    this.buttons = 0;
    this.relatedTarget = null;
    if (mouseEventInitDic != null) {
      Object.assign(this, mouseEventInitDic);
    }
  }
}
class MockUIEvent extends MockEvent {
  constructor(type, uiEventInitDic) {
    super(type);
    this.detail = null;
    this.view = null;
    if (uiEventInitDic != null) {
      Object.assign(this, uiEventInitDic);
    }
  }
}
class MockFocusEvent extends MockUIEvent {
  constructor(type, focusEventInitDic) {
    super(type);
    this.relatedTarget = null;
    if (focusEventInitDic != null) {
      Object.assign(this, focusEventInitDic);
    }
  }
}
class MockEventListener {
  constructor(type, handler) {
    this.type = type;
    this.handler = handler;
  }
}
function addEventListener(elm, type, handler) {
  const target = elm;
  if (target.__listeners == null) {
    target.__listeners = [];
  }
  target.__listeners.push(new MockEventListener(type, handler));
}
function removeEventListener(elm, type, handler) {
  const target = elm;
  if (target != null && Array.isArray(target.__listeners) === true) {
    const elmListener = target.__listeners.find((e) => e.type === type && e.handler === handler);
    if (elmListener != null) {
      const index = target.__listeners.indexOf(elmListener);
      target.__listeners.splice(index, 1);
    }
  }
}
function resetEventListeners(target) {
  if (target != null && target.__listeners != null) {
    target.__listeners = null;
  }
}
function triggerEventListener(elm, ev) {
  if (elm == null || ev.cancelBubble === true) {
    return;
  }
  const target = elm;
  ev.currentTarget = elm;
  if (Array.isArray(target.__listeners) === true) {
    const listeners = target.__listeners.filter((e) => e.type === ev.type);
    listeners.forEach((listener) => {
      try {
        listener.handler.call(target, ev);
      }
      catch (err) {
        console.error(err);
      }
    });
  }
  if (ev.bubbles === false) {
    return;
  }
  if (elm.nodeName === "#document" /* NODE_NAMES.DOCUMENT_NODE */) {
    triggerEventListener(elm.defaultView, ev);
  }
  else {
    triggerEventListener(elm.parentElement, ev);
  }
}
function dispatchEvent(currentTarget, ev) {
  ev.target = currentTarget;
  triggerEventListener(currentTarget, ev);
  return true;
}

// Parse5 7.1.2
const e=function(e){const t=new Set([65534,65535,131070,131071,196606,196607,262142,262143,327678,327679,393214,393215,458750,458751,524286,524287,589822,589823,655358,655359,720894,720895,786430,786431,851966,851967,917502,917503,983038,983039,1048574,1048575,1114110,1114111]),s="�";var a;!function(e){e[e.EOF=-1]="EOF",e[e.NULL=0]="NULL",e[e.TABULATION=9]="TABULATION",e[e.CARRIAGE_RETURN=13]="CARRIAGE_RETURN",e[e.LINE_FEED=10]="LINE_FEED",e[e.FORM_FEED=12]="FORM_FEED",e[e.SPACE=32]="SPACE",e[e.EXCLAMATION_MARK=33]="EXCLAMATION_MARK",e[e.QUOTATION_MARK=34]="QUOTATION_MARK",e[e.NUMBER_SIGN=35]="NUMBER_SIGN",e[e.AMPERSAND=38]="AMPERSAND",e[e.APOSTROPHE=39]="APOSTROPHE",e[e.HYPHEN_MINUS=45]="HYPHEN_MINUS",e[e.SOLIDUS=47]="SOLIDUS",e[e.DIGIT_0=48]="DIGIT_0",e[e.DIGIT_9=57]="DIGIT_9",e[e.SEMICOLON=59]="SEMICOLON",e[e.LESS_THAN_SIGN=60]="LESS_THAN_SIGN",e[e.EQUALS_SIGN=61]="EQUALS_SIGN",e[e.GREATER_THAN_SIGN=62]="GREATER_THAN_SIGN",e[e.QUESTION_MARK=63]="QUESTION_MARK",e[e.LATIN_CAPITAL_A=65]="LATIN_CAPITAL_A",e[e.LATIN_CAPITAL_F=70]="LATIN_CAPITAL_F",e[e.LATIN_CAPITAL_X=88]="LATIN_CAPITAL_X",e[e.LATIN_CAPITAL_Z=90]="LATIN_CAPITAL_Z",e[e.RIGHT_SQUARE_BRACKET=93]="RIGHT_SQUARE_BRACKET",e[e.GRAVE_ACCENT=96]="GRAVE_ACCENT",e[e.LATIN_SMALL_A=97]="LATIN_SMALL_A",e[e.LATIN_SMALL_F=102]="LATIN_SMALL_F",e[e.LATIN_SMALL_X=120]="LATIN_SMALL_X",e[e.LATIN_SMALL_Z=122]="LATIN_SMALL_Z",e[e.REPLACEMENT_CHARACTER=65533]="REPLACEMENT_CHARACTER";}(a=a||(a={}));const r="[CDATA[",n="doctype",i="script";function o(e){return e>=55296&&e<=57343}function c(e){return 32!==e&&10!==e&&13!==e&&9!==e&&12!==e&&e>=1&&e<=31||e>=127&&e<=159}function E(e){return e>=64976&&e<=65007||t.has(e)}var T,h;!function(e){e.controlCharacterInInputStream="control-character-in-input-stream",e.noncharacterInInputStream="noncharacter-in-input-stream",e.surrogateInInputStream="surrogate-in-input-stream",e.nonVoidHtmlElementStartTagWithTrailingSolidus="non-void-html-element-start-tag-with-trailing-solidus",e.endTagWithAttributes="end-tag-with-attributes",e.endTagWithTrailingSolidus="end-tag-with-trailing-solidus",e.unexpectedSolidusInTag="unexpected-solidus-in-tag",e.unexpectedNullCharacter="unexpected-null-character",e.unexpectedQuestionMarkInsteadOfTagName="unexpected-question-mark-instead-of-tag-name",e.invalidFirstCharacterOfTagName="invalid-first-character-of-tag-name",e.unexpectedEqualsSignBeforeAttributeName="unexpected-equals-sign-before-attribute-name",e.missingEndTagName="missing-end-tag-name",e.unexpectedCharacterInAttributeName="unexpected-character-in-attribute-name",e.unknownNamedCharacterReference="unknown-named-character-reference",e.missingSemicolonAfterCharacterReference="missing-semicolon-after-character-reference",e.unexpectedCharacterAfterDoctypeSystemIdentifier="unexpected-character-after-doctype-system-identifier",e.unexpectedCharacterInUnquotedAttributeValue="unexpected-character-in-unquoted-attribute-value",e.eofBeforeTagName="eof-before-tag-name",e.eofInTag="eof-in-tag",e.missingAttributeValue="missing-attribute-value",e.missingWhitespaceBetweenAttributes="missing-whitespace-between-attributes",e.missingWhitespaceAfterDoctypePublicKeyword="missing-whitespace-after-doctype-public-keyword",e.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers="missing-whitespace-between-doctype-public-and-system-identifiers",e.missingWhitespaceAfterDoctypeSystemKeyword="missing-whitespace-after-doctype-system-keyword",e.missingQuoteBeforeDoctypePublicIdentifier="missing-quote-before-doctype-public-identifier",e.missingQuoteBeforeDoctypeSystemIdentifier="missing-quote-before-doctype-system-identifier",e.missingDoctypePublicIdentifier="missing-doctype-public-identifier",e.missingDoctypeSystemIdentifier="missing-doctype-system-identifier",e.abruptDoctypePublicIdentifier="abrupt-doctype-public-identifier",e.abruptDoctypeSystemIdentifier="abrupt-doctype-system-identifier",e.cdataInHtmlContent="cdata-in-html-content",e.incorrectlyOpenedComment="incorrectly-opened-comment",e.eofInScriptHtmlCommentLikeText="eof-in-script-html-comment-like-text",e.eofInDoctype="eof-in-doctype",e.nestedComment="nested-comment",e.abruptClosingOfEmptyComment="abrupt-closing-of-empty-comment",e.eofInComment="eof-in-comment",e.incorrectlyClosedComment="incorrectly-closed-comment",e.eofInCdata="eof-in-cdata",e.absenceOfDigitsInNumericCharacterReference="absence-of-digits-in-numeric-character-reference",e.nullCharacterReference="null-character-reference",e.surrogateCharacterReference="surrogate-character-reference",e.characterReferenceOutsideUnicodeRange="character-reference-outside-unicode-range",e.controlCharacterReference="control-character-reference",e.noncharacterCharacterReference="noncharacter-character-reference",e.missingWhitespaceBeforeDoctypeName="missing-whitespace-before-doctype-name",e.missingDoctypeName="missing-doctype-name",e.invalidCharacterSequenceAfterDoctypeName="invalid-character-sequence-after-doctype-name",e.duplicateAttribute="duplicate-attribute",e.nonConformingDoctype="non-conforming-doctype",e.missingDoctype="missing-doctype",e.misplacedDoctype="misplaced-doctype",e.endTagWithoutMatchingOpenElement="end-tag-without-matching-open-element",e.closingOfElementWithOpenChildElements="closing-of-element-with-open-child-elements",e.disallowedContentInNoscriptInHead="disallowed-content-in-noscript-in-head",e.openElementsLeftAfterEof="open-elements-left-after-eof",e.abandonedHeadElementChild="abandoned-head-element-child",e.misplacedStartTagForHeadElement="misplaced-start-tag-for-head-element",e.nestedNoscriptInHead="nested-noscript-in-head",e.eofInElementThatCanContainOnlyText="eof-in-element-that-can-contain-only-text";}(T=T||(T={}));class _{constructor(e){this.handler=e,this.html="",this.pos=-1,this.lastGapPos=-2,this.gapStack=[],this.skipNextNewLine=!1,this.lastChunkWritten=!1,this.endOfChunkHit=!1,this.bufferWaterline=65536,this.isEol=!1,this.lineStartPos=0,this.droppedBufferSize=0,this.line=1,this.lastErrOffset=-1;}get col(){return this.pos-this.lineStartPos+Number(this.lastGapPos!==this.pos)}get offset(){return this.droppedBufferSize+this.pos}getError(e){const{line:t,col:s,offset:a}=this;return {code:e,startLine:t,endLine:t,startCol:s,endCol:s,startOffset:a,endOffset:a}}_err(e){this.handler.onParseError&&this.lastErrOffset!==this.offset&&(this.lastErrOffset=this.offset,this.handler.onParseError(this.getError(e)));}_addGap(){this.gapStack.push(this.lastGapPos),this.lastGapPos=this.pos;}_processSurrogate(e){if(this.pos!==this.html.length-1){const t=this.html.charCodeAt(this.pos+1);if(function(e){return e>=56320&&e<=57343}(t))return this.pos++,this._addGap(),1024*(e-55296)+9216+t}else if(!this.lastChunkWritten)return this.endOfChunkHit=!0,a.EOF;return this._err(T.surrogateInInputStream),e}willDropParsedChunk(){return this.pos>this.bufferWaterline}dropParsedChunk(){this.willDropParsedChunk()&&(this.html=this.html.substring(this.pos),this.lineStartPos-=this.pos,this.droppedBufferSize+=this.pos,this.pos=0,this.lastGapPos=-2,this.gapStack.length=0);}write(e,t){this.html.length>0?this.html+=e:this.html=e,this.endOfChunkHit=!1,this.lastChunkWritten=t;}insertHtmlAtCurrentPos(e){this.html=this.html.substring(0,this.pos+1)+e+this.html.substring(this.pos+1),this.endOfChunkHit=!1;}startsWith(e,t){if(this.pos+e.length>this.html.length)return this.endOfChunkHit=!this.lastChunkWritten,!1;if(t)return this.html.startsWith(e,this.pos);for(let t=0;t<e.length;t++)if((32|this.html.charCodeAt(this.pos+t))!==e.charCodeAt(t))return !1;return !0}peek(e){const t=this.pos+e;if(t>=this.html.length)return this.endOfChunkHit=!this.lastChunkWritten,a.EOF;const s=this.html.charCodeAt(t);return s===a.CARRIAGE_RETURN?a.LINE_FEED:s}advance(){if(this.pos++,this.isEol&&(this.isEol=!1,this.line++,this.lineStartPos=this.pos),this.pos>=this.html.length)return this.endOfChunkHit=!this.lastChunkWritten,a.EOF;let e=this.html.charCodeAt(this.pos);return e===a.CARRIAGE_RETURN?(this.isEol=!0,this.skipNextNewLine=!0,a.LINE_FEED):e===a.LINE_FEED&&(this.isEol=!0,this.skipNextNewLine)?(this.line--,this.skipNextNewLine=!1,this._addGap(),this.advance()):(this.skipNextNewLine=!1,o(e)&&(e=this._processSurrogate(e)),null===this.handler.onParseError||e>31&&e<127||e===a.LINE_FEED||e===a.CARRIAGE_RETURN||e>159&&e<64976||this._checkForProblematicCharacters(e),e)}_checkForProblematicCharacters(e){c(e)?this._err(T.controlCharacterInInputStream):E(e)&&this._err(T.noncharacterInInputStream);}retreat(e){for(this.pos-=e;this.pos<this.lastGapPos;)this.lastGapPos=this.gapStack.pop(),this.pos--;this.isEol=!1;}}function A(e,t){for(let s=e.attrs.length-1;s>=0;s--)if(e.attrs[s].name===t)return e.attrs[s].value;return null}!function(e){e[e.CHARACTER=0]="CHARACTER",e[e.NULL_CHARACTER=1]="NULL_CHARACTER",e[e.WHITESPACE_CHARACTER=2]="WHITESPACE_CHARACTER",e[e.START_TAG=3]="START_TAG",e[e.END_TAG=4]="END_TAG",e[e.COMMENT=5]="COMMENT",e[e.DOCTYPE=6]="DOCTYPE",e[e.EOF=7]="EOF",e[e.HIBERNATION=8]="HIBERNATION";}(h=h||(h={}));var l="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};function m(e,t,s){return e(s={path:t,exports:{},require:function(e,t){return function(){throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs")}(null==t&&s.path)}},s.exports),s.exports}var p,d,I,N,u,C=m((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=new Uint16Array('ᵁ<Õıʊҝջאٵ۞ޢߖࠏ੊ઑඡ๭༉༦჊ረዡᐕᒝᓃᓟᔥ\0\0\0\0\0\0ᕫᛍᦍᰒᷝ὾⁠↰⊍⏀⏻⑂⠤⤒ⴈ⹈⿎〖㊺㘹㞬㣾㨨㩱㫠㬮ࠀEMabcfglmnoprstu\\bfms¦³¹ÈÏlig耻Æ䃆P耻&䀦cute耻Á䃁reve;䄂Āiyx}rc耻Â䃂;䐐r;쀀𝔄rave耻À䃀pha;䎑acr;䄀d;橓Āgp¡on;䄄f;쀀𝔸plyFunction;恡ing耻Å䃅Ācs¾Ãr;쀀𝒜ign;扔ilde耻Ã䃃ml耻Ä䃄ЀaceforsuåûþėĜĢħĪĀcrêòkslash;或Ŷöø;櫧ed;挆y;䐑ƀcrtąċĔause;戵noullis;愬a;䎒r;쀀𝔅pf;쀀𝔹eve;䋘còēmpeq;扎܀HOacdefhilorsuōőŖƀƞƢƵƷƺǜȕɳɸɾcy;䐧PY耻©䂩ƀcpyŝŢźute;䄆Ā;iŧŨ拒talDifferentialD;慅leys;愭ȀaeioƉƎƔƘron;䄌dil耻Ç䃇rc;䄈nint;戰ot;䄊ĀdnƧƭilla;䂸terDot;䂷òſi;䎧rcleȀDMPTǇǋǑǖot;抙inus;抖lus;投imes;抗oĀcsǢǸkwiseContourIntegral;戲eCurlyĀDQȃȏoubleQuote;思uote;怙ȀlnpuȞȨɇɕonĀ;eȥȦ户;橴ƀgitȯȶȺruent;扡nt;戯ourIntegral;戮ĀfrɌɎ;愂oduct;成nterClockwiseContourIntegral;戳oss;樯cr;쀀𝒞pĀ;Cʄʅ拓ap;才րDJSZacefiosʠʬʰʴʸˋ˗ˡ˦̳ҍĀ;oŹʥtrahd;椑cy;䐂cy;䐅cy;䐏ƀgrsʿ˄ˇger;怡r;憡hv;櫤Āayː˕ron;䄎;䐔lĀ;t˝˞戇a;䎔r;쀀𝔇Āaf˫̧Ācm˰̢riticalȀADGT̖̜̀̆cute;䂴oŴ̋̍;䋙bleAcute;䋝rave;䁠ilde;䋜ond;拄ferentialD;慆Ѱ̽\0\0\0͔͂\0Ѕf;쀀𝔻ƀ;DE͈͉͍䂨ot;惜qual;扐blèCDLRUVͣͲ΂ϏϢϸontourIntegraìȹoɴ͹\0\0ͻ»͉nArrow;懓Āeo·ΤftƀARTΐΖΡrrow;懐ightArrow;懔eåˊngĀLRΫτeftĀARγιrrow;柸ightArrow;柺ightArrow;柹ightĀATϘϞrrow;懒ee;抨pɁϩ\0\0ϯrrow;懑ownArrow;懕erticalBar;戥ǹABLRTaВЪаўѿͼrrowƀ;BUНОТ憓ar;椓pArrow;懵reve;䌑eft˒к\0ц\0ѐightVector;楐eeVector;楞ectorĀ;Bљњ憽ar;楖ightǔѧ\0ѱeeVector;楟ectorĀ;BѺѻ懁ar;楗eeĀ;A҆҇护rrow;憧ĀctҒҗr;쀀𝒟rok;䄐ࠀNTacdfglmopqstuxҽӀӄӋӞӢӧӮӵԡԯԶՒ՝ՠեG;䅊H耻Ð䃐cute耻É䃉ƀaiyӒӗӜron;䄚rc耻Ê䃊;䐭ot;䄖r;쀀𝔈rave耻È䃈ement;戈ĀapӺӾcr;䄒tyɓԆ\0\0ԒmallSquare;旻erySmallSquare;斫ĀgpԦԪon;䄘f;쀀𝔼silon;䎕uĀaiԼՉlĀ;TՂՃ橵ilde;扂librium;懌Āci՗՚r;愰m;橳a;䎗ml耻Ë䃋Āipժկsts;戃onentialE;慇ʀcfiosօֈ֍ֲ׌y;䐤r;쀀𝔉lledɓ֗\0\0֣mallSquare;旼erySmallSquare;斪Ͱֺ\0ֿ\0\0ׄf;쀀𝔽All;戀riertrf;愱cò׋؀JTabcdfgorstר׬ׯ׺؀ؒؖ؛؝أ٬ٲcy;䐃耻>䀾mmaĀ;d׷׸䎓;䏜reve;䄞ƀeiy؇،ؐdil;䄢rc;䄜;䐓ot;䄠r;쀀𝔊;拙pf;쀀𝔾eater̀EFGLSTصلَٖٛ٦qualĀ;Lؾؿ扥ess;招ullEqual;执reater;檢ess;扷lantEqual;橾ilde;扳cr;쀀𝒢;扫ЀAacfiosuڅڋږڛڞڪھۊRDcy;䐪Āctڐڔek;䋇;䁞irc;䄤r;愌lbertSpace;愋ǰگ\0ڲf;愍izontalLine;攀Āctۃۅòکrok;䄦mpńېۘownHumðįqual;扏܀EJOacdfgmnostuۺ۾܃܇܎ܚܞܡܨ݄ݸދޏޕcy;䐕lig;䄲cy;䐁cute耻Í䃍Āiyܓܘrc耻Î䃎;䐘ot;䄰r;愑rave耻Ì䃌ƀ;apܠܯܿĀcgܴܷr;䄪inaryI;慈lieóϝǴ݉\0ݢĀ;eݍݎ戬Āgrݓݘral;戫section;拂isibleĀCTݬݲomma;恣imes;恢ƀgptݿރވon;䄮f;쀀𝕀a;䎙cr;愐ilde;䄨ǫޚ\0ޞcy;䐆l耻Ï䃏ʀcfosuެ޷޼߂ߐĀiyޱ޵rc;䄴;䐙r;쀀𝔍pf;쀀𝕁ǣ߇\0ߌr;쀀𝒥rcy;䐈kcy;䐄΀HJacfosߤߨ߽߬߱ࠂࠈcy;䐥cy;䐌ppa;䎚Āey߶߻dil;䄶;䐚r;쀀𝔎pf;쀀𝕂cr;쀀𝒦րJTaceflmostࠥࠩࠬࡐࡣ঳সে্਷ੇcy;䐉耻<䀼ʀcmnpr࠷࠼ࡁࡄࡍute;䄹bda;䎛g;柪lacetrf;愒r;憞ƀaeyࡗ࡜ࡡron;䄽dil;䄻;䐛Āfsࡨ॰tԀACDFRTUVarࡾࢩࢱࣦ࣠ࣼयज़ΐ४Ānrࢃ࢏gleBracket;柨rowƀ;BR࢙࢚࢞憐ar;懤ightArrow;懆eiling;挈oǵࢷ\0ࣃbleBracket;柦nǔࣈ\0࣒eeVector;楡ectorĀ;Bࣛࣜ懃ar;楙loor;挊ightĀAV࣯ࣵrrow;憔ector;楎Āerँगeƀ;AVउऊऐ抣rrow;憤ector;楚iangleƀ;BEतथऩ抲ar;槏qual;抴pƀDTVषूौownVector;楑eeVector;楠ectorĀ;Bॖॗ憿ar;楘ectorĀ;B॥०憼ar;楒ightáΜs̀EFGLSTॾঋকঝঢভqualGreater;拚ullEqual;扦reater;扶ess;檡lantEqual;橽ilde;扲r;쀀𝔏Ā;eঽা拘ftarrow;懚idot;䄿ƀnpw৔ਖਛgȀLRlr৞৷ਂਐeftĀAR০৬rrow;柵ightArrow;柷ightArrow;柶eftĀarγਊightáοightáϊf;쀀𝕃erĀLRਢਬeftArrow;憙ightArrow;憘ƀchtਾੀੂòࡌ;憰rok;䅁;扪Ѐacefiosuਗ਼੝੠੷੼અઋ઎p;椅y;䐜Ādl੥੯iumSpace;恟lintrf;愳r;쀀𝔐nusPlus;戓pf;쀀𝕄cò੶;䎜ҀJacefostuણધભીଔଙඑ඗ඞcy;䐊cute;䅃ƀaey઴હાron;䅇dil;䅅;䐝ƀgswે૰଎ativeƀMTV૓૟૨ediumSpace;怋hiĀcn૦૘ë૙eryThiî૙tedĀGL૸ଆreaterGreateòٳessLesóੈLine;䀊r;쀀𝔑ȀBnptଢନଷ଺reak;恠BreakingSpace;䂠f;愕ڀ;CDEGHLNPRSTV୕ୖ୪୼஡௫ఄ౞಄ದ೘ൡඅ櫬Āou୛୤ngruent;扢pCap;扭oubleVerticalBar;戦ƀlqxஃஊ஛ement;戉ualĀ;Tஒஓ扠ilde;쀀≂̸ists;戄reater΀;EFGLSTஶஷ஽௉௓௘௥扯qual;扱ullEqual;쀀≧̸reater;쀀≫̸ess;批lantEqual;쀀⩾̸ilde;扵umpń௲௽ownHump;쀀≎̸qual;쀀≏̸eĀfsఊధtTriangleƀ;BEచఛడ拪ar;쀀⧏̸qual;括s̀;EGLSTవశ఼ౄోౘ扮qual;扰reater;扸ess;쀀≪̸lantEqual;쀀⩽̸ilde;扴estedĀGL౨౹reaterGreater;쀀⪢̸essLess;쀀⪡̸recedesƀ;ESಒಓಛ技qual;쀀⪯̸lantEqual;拠ĀeiಫಹverseElement;戌ghtTriangleƀ;BEೋೌ೒拫ar;쀀⧐̸qual;拭ĀquೝഌuareSuĀbp೨೹setĀ;E೰ೳ쀀⊏̸qual;拢ersetĀ;Eഃആ쀀⊐̸qual;拣ƀbcpഓതൎsetĀ;Eഛഞ쀀⊂⃒qual;抈ceedsȀ;ESTലള഻െ抁qual;쀀⪰̸lantEqual;拡ilde;쀀≿̸ersetĀ;E൘൛쀀⊃⃒qual;抉ildeȀ;EFT൮൯൵ൿ扁qual;扄ullEqual;扇ilde;扉erticalBar;戤cr;쀀𝒩ilde耻Ñ䃑;䎝܀Eacdfgmoprstuvලෂ෉෕ෛ෠෧෼ขภยา฿ไlig;䅒cute耻Ó䃓Āiy෎ීrc耻Ô䃔;䐞blac;䅐r;쀀𝔒rave耻Ò䃒ƀaei෮ෲ෶cr;䅌ga;䎩cron;䎟pf;쀀𝕆enCurlyĀDQฎบoubleQuote;怜uote;怘;橔Āclวฬr;쀀𝒪ash耻Ø䃘iŬื฼de耻Õ䃕es;樷ml耻Ö䃖erĀBP๋๠Āar๐๓r;怾acĀek๚๜;揞et;掴arenthesis;揜Ҁacfhilors๿ງຊຏຒດຝະ໼rtialD;戂y;䐟r;쀀𝔓i;䎦;䎠usMinus;䂱Āipຢອncareplanåڝf;愙Ȁ;eio຺ູ໠໤檻cedesȀ;EST່້໏໚扺qual;檯lantEqual;扼ilde;找me;怳Ādp໩໮uct;戏ortionĀ;aȥ໹l;戝Āci༁༆r;쀀𝒫;䎨ȀUfos༑༖༛༟OT耻"䀢r;쀀𝔔pf;愚cr;쀀𝒬؀BEacefhiorsu༾གྷཇའཱིྦྷྪྭ႖ႩႴႾarr;椐G耻®䂮ƀcnrཎནབute;䅔g;柫rĀ;tཛྷཝ憠l;椖ƀaeyཧཬཱron;䅘dil;䅖;䐠Ā;vླྀཹ愜erseĀEUྂྙĀlq྇ྎement;戋uilibrium;懋pEquilibrium;楯r»ཹo;䎡ghtЀACDFTUVa࿁࿫࿳ဢဨၛႇϘĀnr࿆࿒gleBracket;柩rowƀ;BL࿜࿝࿡憒ar;懥eftArrow;懄eiling;按oǵ࿹\0စbleBracket;柧nǔည\0နeeVector;楝ectorĀ;Bဝသ懂ar;楕loor;挋Āerိ၃eƀ;AVဵံြ抢rrow;憦ector;楛iangleƀ;BEၐၑၕ抳ar;槐qual;抵pƀDTVၣၮၸownVector;楏eeVector;楜ectorĀ;Bႂႃ憾ar;楔ectorĀ;B႑႒懀ar;楓Āpuႛ႞f;愝ndImplies;楰ightarrow;懛ĀchႹႼr;愛;憱leDelayed;槴ڀHOacfhimoqstuფჱჷჽᄙᄞᅑᅖᅡᅧᆵᆻᆿĀCcჩხHcy;䐩y;䐨FTcy;䐬cute;䅚ʀ;aeiyᄈᄉᄎᄓᄗ檼ron;䅠dil;䅞rc;䅜;䐡r;쀀𝔖ortȀDLRUᄪᄴᄾᅉownArrow»ОeftArrow»࢚ightArrow»࿝pArrow;憑gma;䎣allCircle;战pf;쀀𝕊ɲᅭ\0\0ᅰt;戚areȀ;ISUᅻᅼᆉᆯ斡ntersection;抓uĀbpᆏᆞsetĀ;Eᆗᆘ抏qual;抑ersetĀ;Eᆨᆩ抐qual;抒nion;抔cr;쀀𝒮ar;拆ȀbcmpᇈᇛሉላĀ;sᇍᇎ拐etĀ;Eᇍᇕqual;抆ĀchᇠህeedsȀ;ESTᇭᇮᇴᇿ扻qual;檰lantEqual;扽ilde;承Tháྌ;我ƀ;esሒሓሣ拑rsetĀ;Eሜም抃qual;抇et»ሓրHRSacfhiorsሾቄ቉ቕ቞ቱቶኟዂወዑORN耻Þ䃞ADE;愢ĀHc቎ቒcy;䐋y;䐦Ābuቚቜ;䀉;䎤ƀaeyብቪቯron;䅤dil;䅢;䐢r;쀀𝔗Āeiቻ኉ǲኀ\0ኇefore;戴a;䎘Ācn኎ኘkSpace;쀀  Space;怉ldeȀ;EFTካኬኲኼ戼qual;扃ullEqual;扅ilde;扈pf;쀀𝕋ipleDot;惛Āctዖዛr;쀀𝒯rok;䅦ૡዷጎጚጦ\0ጬጱ\0\0\0\0\0ጸጽ፷ᎅ\0᏿ᐄᐊᐐĀcrዻጁute耻Ú䃚rĀ;oጇገ憟cir;楉rǣጓ\0጖y;䐎ve;䅬Āiyጞጣrc耻Û䃛;䐣blac;䅰r;쀀𝔘rave耻Ù䃙acr;䅪Ādiፁ፩erĀBPፈ፝Āarፍፐr;䁟acĀekፗፙ;揟et;掵arenthesis;揝onĀ;P፰፱拃lus;抎Āgp፻፿on;䅲f;쀀𝕌ЀADETadps᎕ᎮᎸᏄϨᏒᏗᏳrrowƀ;BDᅐᎠᎤar;椒ownArrow;懅ownArrow;憕quilibrium;楮eeĀ;AᏋᏌ报rrow;憥ownáϳerĀLRᏞᏨeftArrow;憖ightArrow;憗iĀ;lᏹᏺ䏒on;䎥ing;䅮cr;쀀𝒰ilde;䅨ml耻Ü䃜ҀDbcdefosvᐧᐬᐰᐳᐾᒅᒊᒐᒖash;披ar;櫫y;䐒ashĀ;lᐻᐼ抩;櫦Āerᑃᑅ;拁ƀbtyᑌᑐᑺar;怖Ā;iᑏᑕcalȀBLSTᑡᑥᑪᑴar;戣ine;䁼eparator;杘ilde;所ThinSpace;怊r;쀀𝔙pf;쀀𝕍cr;쀀𝒱dash;抪ʀcefosᒧᒬᒱᒶᒼirc;䅴dge;拀r;쀀𝔚pf;쀀𝕎cr;쀀𝒲Ȁfiosᓋᓐᓒᓘr;쀀𝔛;䎞pf;쀀𝕏cr;쀀𝒳ҀAIUacfosuᓱᓵᓹᓽᔄᔏᔔᔚᔠcy;䐯cy;䐇cy;䐮cute耻Ý䃝Āiyᔉᔍrc;䅶;䐫r;쀀𝔜pf;쀀𝕐cr;쀀𝒴ml;䅸ЀHacdefosᔵᔹᔿᕋᕏᕝᕠᕤcy;䐖cute;䅹Āayᕄᕉron;䅽;䐗ot;䅻ǲᕔ\0ᕛoWidtè૙a;䎖r;愨pf;愤cr;쀀𝒵௡ᖃᖊᖐ\0ᖰᖶᖿ\0\0\0\0ᗆᗛᗫᙟ᙭\0ᚕ᚛ᚲᚹ\0ᚾcute耻á䃡reve;䄃̀;Ediuyᖜᖝᖡᖣᖨᖭ戾;쀀∾̳;房rc耻â䃢te肻´̆;䐰lig耻æ䃦Ā;r²ᖺ;쀀𝔞rave耻à䃠ĀepᗊᗖĀfpᗏᗔsym;愵èᗓha;䎱ĀapᗟcĀclᗤᗧr;䄁g;樿ɤᗰ\0\0ᘊʀ;adsvᗺᗻᗿᘁᘇ戧nd;橕;橜lope;橘;橚΀;elmrszᘘᘙᘛᘞᘿᙏᙙ戠;榤e»ᘙsdĀ;aᘥᘦ戡ѡᘰᘲᘴᘶᘸᘺᘼᘾ;榨;榩;榪;榫;榬;榭;榮;榯tĀ;vᙅᙆ戟bĀ;dᙌᙍ抾;榝Āptᙔᙗh;戢»¹arr;捼Āgpᙣᙧon;䄅f;쀀𝕒΀;Eaeiop዁ᙻᙽᚂᚄᚇᚊ;橰cir;橯;扊d;手s;䀧roxĀ;e዁ᚒñᚃing耻å䃥ƀctyᚡᚦᚨr;쀀𝒶;䀪mpĀ;e዁ᚯñʈilde耻ã䃣ml耻ä䃤Āciᛂᛈoninôɲnt;樑ࠀNabcdefiklnoprsu᛭ᛱᜰ᜼ᝃᝈ᝸᝽០៦ᠹᡐᜍ᤽᥈ᥰot;櫭Ācrᛶ᜞kȀcepsᜀᜅᜍᜓong;扌psilon;䏶rime;怵imĀ;e᜚᜛戽q;拍Ŷᜢᜦee;抽edĀ;gᜬᜭ挅e»ᜭrkĀ;t፜᜷brk;掶Āoyᜁᝁ;䐱quo;怞ʀcmprtᝓ᝛ᝡᝤᝨausĀ;eĊĉptyv;榰séᜌnoõēƀahwᝯ᝱ᝳ;䎲;愶een;扬r;쀀𝔟g΀costuvwឍឝឳេ៕៛៞ƀaiuបពរðݠrc;旯p»፱ƀdptឤឨឭot;樀lus;樁imes;樂ɱឹ\0\0ើcup;樆ar;昅riangleĀdu៍្own;施p;斳plus;樄eåᑄåᒭarow;植ƀako៭ᠦᠵĀcn៲ᠣkƀlst៺֫᠂ozenge;槫riangleȀ;dlr᠒᠓᠘᠝斴own;斾eft;旂ight;斸k;搣Ʊᠫ\0ᠳƲᠯ\0ᠱ;斒;斑4;斓ck;斈ĀeoᠾᡍĀ;qᡃᡆ쀀=⃥uiv;쀀≡⃥t;挐Ȁptwxᡙᡞᡧᡬf;쀀𝕓Ā;tᏋᡣom»Ꮜtie;拈؀DHUVbdhmptuvᢅᢖᢪᢻᣗᣛᣬ᣿ᤅᤊᤐᤡȀLRlrᢎᢐᢒᢔ;敗;敔;敖;敓ʀ;DUduᢡᢢᢤᢦᢨ敐;敦;敩;敤;敧ȀLRlrᢳᢵᢷᢹ;敝;敚;敜;教΀;HLRhlrᣊᣋᣍᣏᣑᣓᣕ救;敬;散;敠;敫;敢;敟ox;槉ȀLRlrᣤᣦᣨᣪ;敕;敒;攐;攌ʀ;DUduڽ᣷᣹᣻᣽;敥;敨;攬;攴inus;抟lus;択imes;抠ȀLRlrᤙᤛᤝ᤟;敛;敘;攘;攔΀;HLRhlrᤰᤱᤳᤵᤷ᤻᤹攂;敪;敡;敞;攼;攤;攜Āevģ᥂bar耻¦䂦Ȁceioᥑᥖᥚᥠr;쀀𝒷mi;恏mĀ;e᜚᜜lƀ;bhᥨᥩᥫ䁜;槅sub;柈Ŭᥴ᥾lĀ;e᥹᥺怢t»᥺pƀ;Eeįᦅᦇ;檮Ā;qۜۛೡᦧ\0᧨ᨑᨕᨲ\0ᨷᩐ\0\0᪴\0\0᫁\0\0ᬡᬮ᭍᭒\0᯽\0ᰌƀcpr᦭ᦲ᧝ute;䄇̀;abcdsᦿᧀᧄ᧊᧕᧙戩nd;橄rcup;橉Āau᧏᧒p;橋p;橇ot;橀;쀀∩︀Āeo᧢᧥t;恁îړȀaeiu᧰᧻ᨁᨅǰ᧵\0᧸s;橍on;䄍dil耻ç䃧rc;䄉psĀ;sᨌᨍ橌m;橐ot;䄋ƀdmnᨛᨠᨦil肻¸ƭptyv;榲t脀¢;eᨭᨮ䂢räƲr;쀀𝔠ƀceiᨽᩀᩍy;䑇ckĀ;mᩇᩈ朓ark»ᩈ;䏇r΀;Ecefms᩟᩠ᩢᩫ᪤᪪᪮旋;槃ƀ;elᩩᩪᩭ䋆q;扗eɡᩴ\0\0᪈rrowĀlr᩼᪁eft;憺ight;憻ʀRSacd᪒᪔᪖᪚᪟»ཇ;擈st;抛irc;抚ash;抝nint;樐id;櫯cir;槂ubsĀ;u᪻᪼晣it»᪼ˬ᫇᫔᫺\0ᬊonĀ;eᫍᫎ䀺Ā;qÇÆɭ᫙\0\0᫢aĀ;t᫞᫟䀬;䁀ƀ;fl᫨᫩᫫戁îᅠeĀmx᫱᫶ent»᫩eóɍǧ᫾\0ᬇĀ;dኻᬂot;橭nôɆƀfryᬐᬔᬗ;쀀𝕔oäɔ脀©;sŕᬝr;愗Āaoᬥᬩrr;憵ss;朗Ācuᬲᬷr;쀀𝒸Ābpᬼ᭄Ā;eᭁᭂ櫏;櫑Ā;eᭉᭊ櫐;櫒dot;拯΀delprvw᭠᭬᭷ᮂᮬᯔ᯹arrĀlr᭨᭪;椸;椵ɰ᭲\0\0᭵r;拞c;拟arrĀ;p᭿ᮀ憶;椽̀;bcdosᮏᮐᮖᮡᮥᮨ截rcap;橈Āauᮛᮞp;橆p;橊ot;抍r;橅;쀀∪︀Ȁalrv᮵ᮿᯞᯣrrĀ;mᮼᮽ憷;椼yƀevwᯇᯔᯘqɰᯎ\0\0ᯒreã᭳uã᭵ee;拎edge;拏en耻¤䂤earrowĀlrᯮ᯳eft»ᮀight»ᮽeäᯝĀciᰁᰇoninôǷnt;戱lcty;挭ঀAHabcdefhijlorstuwz᰸᰻᰿ᱝᱩᱵᲊᲞᲬᲷ᳻᳿ᴍᵻᶑᶫᶻ᷆᷍rò΁ar;楥Ȁglrs᱈ᱍ᱒᱔ger;怠eth;愸òᄳhĀ;vᱚᱛ怐»ऊūᱡᱧarow;椏aã̕Āayᱮᱳron;䄏;䐴ƀ;ao̲ᱼᲄĀgrʿᲁr;懊tseq;橷ƀglmᲑᲔᲘ耻°䂰ta;䎴ptyv;榱ĀirᲣᲨsht;楿;쀀𝔡arĀlrᲳᲵ»ࣜ»သʀaegsv᳂͸᳖᳜᳠mƀ;oș᳊᳔ndĀ;ș᳑uit;晦amma;䏝in;拲ƀ;io᳧᳨᳸䃷de脀÷;o᳧ᳰntimes;拇nø᳷cy;䑒cɯᴆ\0\0ᴊrn;挞op;挍ʀlptuwᴘᴝᴢᵉᵕlar;䀤f;쀀𝕕ʀ;emps̋ᴭᴷᴽᵂqĀ;d͒ᴳot;扑inus;戸lus;戔quare;抡blebarwedgåúnƀadhᄮᵝᵧownarrowóᲃarpoonĀlrᵲᵶefôᲴighôᲶŢᵿᶅkaro÷གɯᶊ\0\0ᶎrn;挟op;挌ƀcotᶘᶣᶦĀryᶝᶡ;쀀𝒹;䑕l;槶rok;䄑Ādrᶰᶴot;拱iĀ;fᶺ᠖斿Āah᷀᷃ròЩaòྦangle;榦Āci᷒ᷕy;䑟grarr;柿ऀDacdefglmnopqrstuxḁḉḙḸոḼṉṡṾấắẽỡἪἷὄ὎὚ĀDoḆᴴoôᲉĀcsḎḔute耻é䃩ter;橮ȀaioyḢḧḱḶron;䄛rĀ;cḭḮ扖耻ê䃪lon;払;䑍ot;䄗ĀDrṁṅot;扒;쀀𝔢ƀ;rsṐṑṗ檚ave耻è䃨Ā;dṜṝ檖ot;檘Ȁ;ilsṪṫṲṴ檙nters;揧;愓Ā;dṹṺ檕ot;檗ƀapsẅẉẗcr;䄓tyƀ;svẒẓẕ戅et»ẓpĀ1;ẝẤĳạả;怄;怅怃ĀgsẪẬ;䅋p;怂ĀgpẴẸon;䄙f;쀀𝕖ƀalsỄỎỒrĀ;sỊị拕l;槣us;橱iƀ;lvỚớở䎵on»ớ;䏵ȀcsuvỪỳἋἣĀioữḱrc»Ḯɩỹ\0\0ỻíՈantĀglἂἆtr»ṝess»Ṻƀaeiἒ἖Ἒls;䀽st;扟vĀ;DȵἠD;橸parsl;槥ĀDaἯἳot;打rr;楱ƀcdiἾὁỸr;愯oô͒ĀahὉὋ;䎷耻ð䃰Āmrὓὗl耻ë䃫o;悬ƀcipὡὤὧl;䀡sôծĀeoὬὴctatioîՙnentialåչৡᾒ\0ᾞ\0ᾡᾧ\0\0ῆῌ\0ΐ\0ῦῪ \0 ⁚llingdotseñṄy;䑄male;晀ƀilrᾭᾳ῁lig;耀ﬃɩᾹ\0\0᾽g;耀ﬀig;耀ﬄ;쀀𝔣lig;耀ﬁlig;쀀fjƀaltῙ῜ῡt;晭ig;耀ﬂns;斱of;䆒ǰ΅\0ῳf;쀀𝕗ĀakֿῷĀ;vῼ´拔;櫙artint;樍Āao‌⁕Ācs‑⁒α‚‰‸⁅⁈\0⁐β•‥‧‪‬\0‮耻½䂽;慓耻¼䂼;慕;慙;慛Ƴ‴\0‶;慔;慖ʴ‾⁁\0\0⁃耻¾䂾;慗;慜5;慘ƶ⁌\0⁎;慚;慝8;慞l;恄wn;挢cr;쀀𝒻ࢀEabcdefgijlnorstv₂₉₟₥₰₴⃰⃵⃺⃿℃ℒℸ̗ℾ⅒↞Ā;lٍ₇;檌ƀcmpₐₕ₝ute;䇵maĀ;dₜ᳚䎳;檆reve;䄟Āiy₪₮rc;䄝;䐳ot;䄡Ȁ;lqsؾق₽⃉ƀ;qsؾٌ⃄lanô٥Ȁ;cdl٥⃒⃥⃕c;檩otĀ;o⃜⃝檀Ā;l⃢⃣檂;檄Ā;e⃪⃭쀀⋛︀s;檔r;쀀𝔤Ā;gٳ؛mel;愷cy;䑓Ȁ;Eajٚℌℎℐ;檒;檥;檤ȀEaesℛℝ℩ℴ;扩pĀ;p℣ℤ檊rox»ℤĀ;q℮ℯ檈Ā;q℮ℛim;拧pf;쀀𝕘Āci⅃ⅆr;愊mƀ;el٫ⅎ⅐;檎;檐茀>;cdlqr׮ⅠⅪⅮⅳⅹĀciⅥⅧ;檧r;橺ot;拗Par;榕uest;橼ʀadelsↄⅪ←ٖ↛ǰ↉\0↎proø₞r;楸qĀlqؿ↖lesó₈ií٫Āen↣↭rtneqq;쀀≩︀Å↪ԀAabcefkosy⇄⇇⇱⇵⇺∘∝∯≨≽ròΠȀilmr⇐⇔⇗⇛rsðᒄf»․ilôکĀdr⇠⇤cy;䑊ƀ;cwࣴ⇫⇯ir;楈;憭ar;意irc;䄥ƀalr∁∎∓rtsĀ;u∉∊晥it»∊lip;怦con;抹r;쀀𝔥sĀew∣∩arow;椥arow;椦ʀamopr∺∾≃≞≣rr;懿tht;戻kĀlr≉≓eftarrow;憩ightarrow;憪f;쀀𝕙bar;怕ƀclt≯≴≸r;쀀𝒽asè⇴rok;䄧Ābp⊂⊇ull;恃hen»ᱛૡ⊣\0⊪\0⊸⋅⋎\0⋕⋳\0\0⋸⌢⍧⍢⍿\0⎆⎪⎴cute耻í䃭ƀ;iyݱ⊰⊵rc耻î䃮;䐸Ācx⊼⊿y;䐵cl耻¡䂡ĀfrΟ⋉;쀀𝔦rave耻ì䃬Ȁ;inoܾ⋝⋩⋮Āin⋢⋦nt;樌t;戭fin;槜ta;愩lig;䄳ƀaop⋾⌚⌝ƀcgt⌅⌈⌗r;䄫ƀelpܟ⌏⌓inåގarôܠh;䄱f;抷ed;䆵ʀ;cfotӴ⌬⌱⌽⍁are;愅inĀ;t⌸⌹戞ie;槝doô⌙ʀ;celpݗ⍌⍐⍛⍡al;抺Āgr⍕⍙eróᕣã⍍arhk;樗rod;樼Ȁcgpt⍯⍲⍶⍻y;䑑on;䄯f;쀀𝕚a;䎹uest耻¿䂿Āci⎊⎏r;쀀𝒾nʀ;EdsvӴ⎛⎝⎡ӳ;拹ot;拵Ā;v⎦⎧拴;拳Ā;iݷ⎮lde;䄩ǫ⎸\0⎼cy;䑖l耻ï䃯̀cfmosu⏌⏗⏜⏡⏧⏵Āiy⏑⏕rc;䄵;䐹r;쀀𝔧ath;䈷pf;쀀𝕛ǣ⏬\0⏱r;쀀𝒿rcy;䑘kcy;䑔Ѐacfghjos␋␖␢␧␭␱␵␻ppaĀ;v␓␔䎺;䏰Āey␛␠dil;䄷;䐺r;쀀𝔨reen;䄸cy;䑅cy;䑜pf;쀀𝕜cr;쀀𝓀஀ABEHabcdefghjlmnoprstuv⑰⒁⒆⒍⒑┎┽╚▀♎♞♥♹♽⚚⚲⛘❝❨➋⟀⠁⠒ƀart⑷⑺⑼rò৆òΕail;椛arr;椎Ā;gঔ⒋;檋ar;楢ॣ⒥\0⒪\0⒱\0\0\0\0\0⒵Ⓔ\0ⓆⓈⓍ\0⓹ute;䄺mptyv;榴raîࡌbda;䎻gƀ;dlࢎⓁⓃ;榑åࢎ;檅uo耻«䂫rЀ;bfhlpst࢙ⓞⓦⓩ⓫⓮⓱⓵Ā;f࢝ⓣs;椟s;椝ë≒p;憫l;椹im;楳l;憢ƀ;ae⓿─┄檫il;椙Ā;s┉┊檭;쀀⪭︀ƀabr┕┙┝rr;椌rk;杲Āak┢┬cĀek┨┪;䁻;䁛Āes┱┳;榋lĀdu┹┻;榏;榍Ȁaeuy╆╋╖╘ron;䄾Ādi═╔il;䄼ìࢰâ┩;䐻Ȁcqrs╣╦╭╽a;椶uoĀ;rนᝆĀdu╲╷har;楧shar;楋h;憲ʀ;fgqs▋▌উ◳◿扤tʀahlrt▘▤▷◂◨rrowĀ;t࢙□aé⓶arpoonĀdu▯▴own»њp»०eftarrows;懇ightƀahs◍◖◞rrowĀ;sࣴࢧarpoonó྘quigarro÷⇰hreetimes;拋ƀ;qs▋ও◺lanôবʀ;cdgsব☊☍☝☨c;檨otĀ;o☔☕橿Ā;r☚☛檁;檃Ā;e☢☥쀀⋚︀s;檓ʀadegs☳☹☽♉♋pproøⓆot;拖qĀgq♃♅ôউgtò⒌ôছiíলƀilr♕࣡♚sht;楼;쀀𝔩Ā;Eজ♣;檑š♩♶rĀdu▲♮Ā;l॥♳;楪lk;斄cy;䑙ʀ;achtੈ⚈⚋⚑⚖rò◁orneòᴈard;楫ri;旺Āio⚟⚤dot;䅀ustĀ;a⚬⚭掰che»⚭ȀEaes⚻⚽⛉⛔;扨pĀ;p⛃⛄檉rox»⛄Ā;q⛎⛏檇Ā;q⛎⚻im;拦Ѐabnoptwz⛩⛴⛷✚✯❁❇❐Ānr⛮⛱g;柬r;懽rëࣁgƀlmr⛿✍✔eftĀar০✇ightá৲apsto;柼ightá৽parrowĀlr✥✩efô⓭ight;憬ƀafl✶✹✽r;榅;쀀𝕝us;樭imes;樴š❋❏st;戗áፎƀ;ef❗❘᠀旊nge»❘arĀ;l❤❥䀨t;榓ʀachmt❳❶❼➅➇ròࢨorneòᶌarĀ;d྘➃;業;怎ri;抿̀achiqt➘➝ੀ➢➮➻quo;怹r;쀀𝓁mƀ;egল➪➬;檍;檏Ābu┪➳oĀ;rฟ➹;怚rok;䅂萀<;cdhilqrࠫ⟒☹⟜⟠⟥⟪⟰Āci⟗⟙;檦r;橹reå◲mes;拉arr;楶uest;橻ĀPi⟵⟹ar;榖ƀ;ef⠀भ᠛旃rĀdu⠇⠍shar;楊har;楦Āen⠗⠡rtneqq;쀀≨︀Å⠞܀Dacdefhilnopsu⡀⡅⢂⢎⢓⢠⢥⢨⣚⣢⣤ઃ⣳⤂Dot;戺Ȁclpr⡎⡒⡣⡽r耻¯䂯Āet⡗⡙;時Ā;e⡞⡟朠se»⡟Ā;sျ⡨toȀ;dluျ⡳⡷⡻owîҌefôएðᏑker;斮Āoy⢇⢌mma;権;䐼ash;怔asuredangle»ᘦr;쀀𝔪o;愧ƀcdn⢯⢴⣉ro耻µ䂵Ȁ;acdᑤ⢽⣀⣄sôᚧir;櫰ot肻·Ƶusƀ;bd⣒ᤃ⣓戒Ā;uᴼ⣘;横ţ⣞⣡p;櫛ò−ðઁĀdp⣩⣮els;抧f;쀀𝕞Āct⣸⣽r;쀀𝓂pos»ᖝƀ;lm⤉⤊⤍䎼timap;抸ఀGLRVabcdefghijlmoprstuvw⥂⥓⥾⦉⦘⧚⧩⨕⨚⩘⩝⪃⪕⪤⪨⬄⬇⭄⭿⮮ⰴⱧⱼ⳩Āgt⥇⥋;쀀⋙̸Ā;v⥐௏쀀≫⃒ƀelt⥚⥲⥶ftĀar⥡⥧rrow;懍ightarrow;懎;쀀⋘̸Ā;v⥻ే쀀≪⃒ightarrow;懏ĀDd⦎⦓ash;抯ash;抮ʀbcnpt⦣⦧⦬⦱⧌la»˞ute;䅄g;쀀∠⃒ʀ;Eiop඄⦼⧀⧅⧈;쀀⩰̸d;쀀≋̸s;䅉roø඄urĀ;a⧓⧔普lĀ;s⧓ସǳ⧟\0⧣p肻 ଷmpĀ;e௹ఀʀaeouy⧴⧾⨃⨐⨓ǰ⧹\0⧻;橃on;䅈dil;䅆ngĀ;dൾ⨊ot;쀀⩭̸p;橂;䐽ash;怓΀;Aadqsxஒ⨩⨭⨻⩁⩅⩐rr;懗rĀhr⨳⨶k;椤Ā;oᏲᏰot;쀀≐̸uiöୣĀei⩊⩎ar;椨í஘istĀ;s஠டr;쀀𝔫ȀEest௅⩦⩹⩼ƀ;qs஼⩭௡ƀ;qs஼௅⩴lanô௢ií௪Ā;rஶ⪁»ஷƀAap⪊⪍⪑rò⥱rr;憮ar;櫲ƀ;svྍ⪜ྌĀ;d⪡⪢拼;拺cy;䑚΀AEadest⪷⪺⪾⫂⫅⫶⫹rò⥦;쀀≦̸rr;憚r;急Ȁ;fqs఻⫎⫣⫯tĀar⫔⫙rro÷⫁ightarro÷⪐ƀ;qs఻⪺⫪lanôౕĀ;sౕ⫴»శiíౝĀ;rవ⫾iĀ;eచథiäඐĀpt⬌⬑f;쀀𝕟膀¬;in⬙⬚⬶䂬nȀ;Edvஉ⬤⬨⬮;쀀⋹̸ot;쀀⋵̸ǡஉ⬳⬵;拷;拶iĀ;vಸ⬼ǡಸ⭁⭃;拾;拽ƀaor⭋⭣⭩rȀ;ast୻⭕⭚⭟lleì୻l;쀀⫽⃥;쀀∂̸lint;樔ƀ;ceಒ⭰⭳uåಥĀ;cಘ⭸Ā;eಒ⭽ñಘȀAait⮈⮋⮝⮧rò⦈rrƀ;cw⮔⮕⮙憛;쀀⤳̸;쀀↝̸ghtarrow»⮕riĀ;eೋೖ΀chimpqu⮽⯍⯙⬄୸⯤⯯Ȁ;cerല⯆ഷ⯉uå൅;쀀𝓃ortɭ⬅\0\0⯖ará⭖mĀ;e൮⯟Ā;q൴൳suĀbp⯫⯭å೸åഋƀbcp⯶ⰑⰙȀ;Ees⯿ⰀഢⰄ抄;쀀⫅̸etĀ;eഛⰋqĀ;qണⰀcĀ;eലⰗñസȀ;EesⰢⰣൟⰧ抅;쀀⫆̸etĀ;e൘ⰮqĀ;qൠⰣȀgilrⰽⰿⱅⱇìௗlde耻ñ䃱çృiangleĀlrⱒⱜeftĀ;eచⱚñదightĀ;eೋⱥñ೗Ā;mⱬⱭ䎽ƀ;esⱴⱵⱹ䀣ro;愖p;怇ҀDHadgilrsⲏⲔⲙⲞⲣⲰⲶⳓⳣash;抭arr;椄p;쀀≍⃒ash;抬ĀetⲨⲬ;쀀≥⃒;쀀>⃒nfin;槞ƀAetⲽⳁⳅrr;椂;쀀≤⃒Ā;rⳊⳍ쀀<⃒ie;쀀⊴⃒ĀAtⳘⳜrr;椃rie;쀀⊵⃒im;쀀∼⃒ƀAan⳰⳴ⴂrr;懖rĀhr⳺⳽k;椣Ā;oᏧᏥear;椧ቓ᪕\0\0\0\0\0\0\0\0\0\0\0\0\0ⴭ\0ⴸⵈⵠⵥ⵲ⶄᬇ\0\0ⶍⶫ\0ⷈⷎ\0ⷜ⸙⸫⸾⹃Ācsⴱ᪗ute耻ó䃳ĀiyⴼⵅrĀ;c᪞ⵂ耻ô䃴;䐾ʀabios᪠ⵒⵗǈⵚlac;䅑v;樸old;榼lig;䅓Ācr⵩⵭ir;榿;쀀𝔬ͯ⵹\0\0⵼\0ⶂn;䋛ave耻ò䃲;槁Ābmⶈ෴ar;榵Ȁacitⶕ⶘ⶥⶨrò᪀Āir⶝ⶠr;榾oss;榻nå๒;槀ƀaeiⶱⶵⶹcr;䅍ga;䏉ƀcdnⷀⷅǍron;䎿;榶pf;쀀𝕠ƀaelⷔ⷗ǒr;榷rp;榹΀;adiosvⷪⷫⷮ⸈⸍⸐⸖戨rò᪆Ȁ;efmⷷⷸ⸂⸅橝rĀ;oⷾⷿ愴f»ⷿ耻ª䂪耻º䂺gof;抶r;橖lope;橗;橛ƀclo⸟⸡⸧ò⸁ash耻ø䃸l;折iŬⸯ⸴de耻õ䃵esĀ;aǛ⸺s;樶ml耻ö䃶bar;挽ૡ⹞\0⹽\0⺀⺝\0⺢⺹\0\0⻋ຜ\0⼓\0\0⼫⾼\0⿈rȀ;astЃ⹧⹲຅脀¶;l⹭⹮䂶leìЃɩ⹸\0\0⹻m;櫳;櫽y;䐿rʀcimpt⺋⺏⺓ᡥ⺗nt;䀥od;䀮il;怰enk;怱r;쀀𝔭ƀimo⺨⺰⺴Ā;v⺭⺮䏆;䏕maô੶ne;明ƀ;tv⺿⻀⻈䏀chfork»´;䏖Āau⻏⻟nĀck⻕⻝kĀ;h⇴⻛;愎ö⇴sҀ;abcdemst⻳⻴ᤈ⻹⻽⼄⼆⼊⼎䀫cir;樣ir;樢Āouᵀ⼂;樥;橲n肻±ຝim;樦wo;樧ƀipu⼙⼠⼥ntint;樕f;쀀𝕡nd耻£䂣Ԁ;Eaceinosu່⼿⽁⽄⽇⾁⾉⾒⽾⾶;檳p;檷uå໙Ā;c໎⽌̀;acens່⽙⽟⽦⽨⽾pproø⽃urlyeñ໙ñ໎ƀaes⽯⽶⽺pprox;檹qq;檵im;拨iíໟmeĀ;s⾈ຮ怲ƀEas⽸⾐⽺ð⽵ƀdfp໬⾙⾯ƀals⾠⾥⾪lar;挮ine;挒urf;挓Ā;t໻⾴ï໻rel;抰Āci⿀⿅r;쀀𝓅;䏈ncsp;怈̀fiopsu⿚⋢⿟⿥⿫⿱r;쀀𝔮pf;쀀𝕢rime;恗cr;쀀𝓆ƀaeo⿸〉〓tĀei⿾々rnionóڰnt;樖stĀ;e【】䀿ñἙô༔઀ABHabcdefhilmnoprstux぀けさすムㄎㄫㅇㅢㅲㆎ㈆㈕㈤㈩㉘㉮㉲㊐㊰㊷ƀartぇおがròႳòϝail;検aròᱥar;楤΀cdenqrtとふへみわゔヌĀeuねぱ;쀀∽̱te;䅕iãᅮmptyv;榳gȀ;del࿑らるろ;榒;榥å࿑uo耻»䂻rր;abcfhlpstw࿜ガクシスゼゾダッデナp;極Ā;f࿠ゴs;椠;椳s;椞ë≝ð✮l;楅im;楴l;憣;憝Āaiパフil;椚oĀ;nホボ戶aló༞ƀabrョリヮrò៥rk;杳ĀakンヽcĀekヹ・;䁽;䁝Āes㄂㄄;榌lĀduㄊㄌ;榎;榐Ȁaeuyㄗㄜㄧㄩron;䅙Ādiㄡㄥil;䅗ì࿲âヺ;䑀Ȁclqsㄴㄷㄽㅄa;椷dhar;楩uoĀ;rȎȍh;憳ƀacgㅎㅟངlȀ;ipsླྀㅘㅛႜnåႻarôྩt;断ƀilrㅩဣㅮsht;楽;쀀𝔯ĀaoㅷㆆrĀduㅽㅿ»ѻĀ;l႑ㆄ;楬Ā;vㆋㆌ䏁;䏱ƀgns㆕ㇹㇼht̀ahlrstㆤㆰ㇂㇘㇤㇮rrowĀ;t࿜ㆭaéトarpoonĀduㆻㆿowîㅾp»႒eftĀah㇊㇐rrowó࿪arpoonóՑightarrows;應quigarro÷ニhreetimes;拌g;䋚ingdotseñἲƀahm㈍㈐㈓rò࿪aòՑ;怏oustĀ;a㈞㈟掱che»㈟mid;櫮Ȁabpt㈲㈽㉀㉒Ānr㈷㈺g;柭r;懾rëဃƀafl㉇㉊㉎r;榆;쀀𝕣us;樮imes;樵Āap㉝㉧rĀ;g㉣㉤䀩t;榔olint;樒arò㇣Ȁachq㉻㊀Ⴜ㊅quo;怺r;쀀𝓇Ābu・㊊oĀ;rȔȓƀhir㊗㊛㊠reåㇸmes;拊iȀ;efl㊪ၙᠡ㊫方tri;槎luhar;楨;愞ൡ㋕㋛㋟㌬㌸㍱\0㍺㎤\0\0㏬㏰\0㐨㑈㑚㒭㒱㓊㓱\0㘖\0\0㘳cute;䅛quï➺Ԁ;Eaceinpsyᇭ㋳㋵㋿㌂㌋㌏㌟㌦㌩;檴ǰ㋺\0㋼;檸on;䅡uåᇾĀ;dᇳ㌇il;䅟rc;䅝ƀEas㌖㌘㌛;檶p;檺im;择olint;樓iíሄ;䑁otƀ;be㌴ᵇ㌵担;橦΀Aacmstx㍆㍊㍗㍛㍞㍣㍭rr;懘rĀhr㍐㍒ë∨Ā;oਸ਼਴t耻§䂧i;䀻war;椩mĀin㍩ðnuóñt;朶rĀ;o㍶⁕쀀𝔰Ȁacoy㎂㎆㎑㎠rp;景Āhy㎋㎏cy;䑉;䑈rtɭ㎙\0\0㎜iäᑤaraì⹯耻­䂭Āgm㎨㎴maƀ;fv㎱㎲㎲䏃;䏂Ѐ;deglnprካ㏅㏉㏎㏖㏞㏡㏦ot;橪Ā;q኱ኰĀ;E㏓㏔檞;檠Ā;E㏛㏜檝;檟e;扆lus;樤arr;楲aròᄽȀaeit㏸㐈㐏㐗Āls㏽㐄lsetmé㍪hp;樳parsl;槤Ādlᑣ㐔e;挣Ā;e㐜㐝檪Ā;s㐢㐣檬;쀀⪬︀ƀflp㐮㐳㑂tcy;䑌Ā;b㐸㐹䀯Ā;a㐾㐿槄r;挿f;쀀𝕤aĀdr㑍ЂesĀ;u㑔㑕晠it»㑕ƀcsu㑠㑹㒟Āau㑥㑯pĀ;sᆈ㑫;쀀⊓︀pĀ;sᆴ㑵;쀀⊔︀uĀbp㑿㒏ƀ;esᆗᆜ㒆etĀ;eᆗ㒍ñᆝƀ;esᆨᆭ㒖etĀ;eᆨ㒝ñᆮƀ;afᅻ㒦ְrť㒫ֱ»ᅼaròᅈȀcemt㒹㒾㓂㓅r;쀀𝓈tmîñiì㐕aræᆾĀar㓎㓕rĀ;f㓔ឿ昆Āan㓚㓭ightĀep㓣㓪psiloîỠhé⺯s»⡒ʀbcmnp㓻㕞ሉ㖋㖎Ҁ;Edemnprs㔎㔏㔑㔕㔞㔣㔬㔱㔶抂;櫅ot;檽Ā;dᇚ㔚ot;櫃ult;櫁ĀEe㔨㔪;櫋;把lus;檿arr;楹ƀeiu㔽㕒㕕tƀ;en㔎㕅㕋qĀ;qᇚ㔏eqĀ;q㔫㔨m;櫇Ābp㕚㕜;櫕;櫓c̀;acensᇭ㕬㕲㕹㕻㌦pproø㋺urlyeñᇾñᇳƀaes㖂㖈㌛pproø㌚qñ㌗g;晪ڀ123;Edehlmnps㖩㖬㖯ሜ㖲㖴㗀㗉㗕㗚㗟㗨㗭耻¹䂹耻²䂲耻³䂳;櫆Āos㖹㖼t;檾ub;櫘Ā;dሢ㗅ot;櫄sĀou㗏㗒l;柉b;櫗arr;楻ult;櫂ĀEe㗤㗦;櫌;抋lus;櫀ƀeiu㗴㘉㘌tƀ;enሜ㗼㘂qĀ;qሢ㖲eqĀ;q㗧㗤m;櫈Ābp㘑㘓;櫔;櫖ƀAan㘜㘠㘭rr;懙rĀhr㘦㘨ë∮Ā;oਫ਩war;椪lig耻ß䃟௡㙑㙝㙠ዎ㙳㙹\0㙾㛂\0\0\0\0\0㛛㜃\0㜉㝬\0\0\0㞇ɲ㙖\0\0㙛get;挖;䏄rë๟ƀaey㙦㙫㙰ron;䅥dil;䅣;䑂lrec;挕r;쀀𝔱Ȁeiko㚆㚝㚵㚼ǲ㚋\0㚑eĀ4fኄኁaƀ;sv㚘㚙㚛䎸ym;䏑Ācn㚢㚲kĀas㚨㚮pproø዁im»ኬsðኞĀas㚺㚮ð዁rn耻þ䃾Ǭ̟㛆⋧es膀×;bd㛏㛐㛘䃗Ā;aᤏ㛕r;樱;樰ƀeps㛡㛣㜀á⩍Ȁ;bcf҆㛬㛰㛴ot;挶ir;櫱Ā;o㛹㛼쀀𝕥rk;櫚á㍢rime;怴ƀaip㜏㜒㝤dåቈ΀adempst㜡㝍㝀㝑㝗㝜㝟ngleʀ;dlqr㜰㜱㜶㝀㝂斵own»ᶻeftĀ;e⠀㜾ñम;扜ightĀ;e㊪㝋ñၚot;旬inus;樺lus;樹b;槍ime;樻ezium;揢ƀcht㝲㝽㞁Āry㝷㝻;쀀𝓉;䑆cy;䑛rok;䅧Āio㞋㞎xô᝷headĀlr㞗㞠eftarro÷ࡏightarrow»ཝऀAHabcdfghlmoprstuw㟐㟓㟗㟤㟰㟼㠎㠜㠣㠴㡑㡝㡫㢩㣌㣒㣪㣶ròϭar;楣Ācr㟜㟢ute耻ú䃺òᅐrǣ㟪\0㟭y;䑞ve;䅭Āiy㟵㟺rc耻û䃻;䑃ƀabh㠃㠆㠋ròᎭlac;䅱aòᏃĀir㠓㠘sht;楾;쀀𝔲rave耻ù䃹š㠧㠱rĀlr㠬㠮»ॗ»ႃlk;斀Āct㠹㡍ɯ㠿\0\0㡊rnĀ;e㡅㡆挜r»㡆op;挏ri;旸Āal㡖㡚cr;䅫肻¨͉Āgp㡢㡦on;䅳f;쀀𝕦̀adhlsuᅋ㡸㡽፲㢑㢠ownáᎳarpoonĀlr㢈㢌efô㠭ighô㠯iƀ;hl㢙㢚㢜䏅»ᏺon»㢚parrows;懈ƀcit㢰㣄㣈ɯ㢶\0\0㣁rnĀ;e㢼㢽挝r»㢽op;挎ng;䅯ri;旹cr;쀀𝓊ƀdir㣙㣝㣢ot;拰lde;䅩iĀ;f㜰㣨»᠓Āam㣯㣲rò㢨l耻ü䃼angle;榧ހABDacdeflnoprsz㤜㤟㤩㤭㦵㦸㦽㧟㧤㧨㧳㧹㧽㨁㨠ròϷarĀ;v㤦㤧櫨;櫩asèϡĀnr㤲㤷grt;榜΀eknprst㓣㥆㥋㥒㥝㥤㦖appá␕othinçẖƀhir㓫⻈㥙opô⾵Ā;hᎷ㥢ïㆍĀiu㥩㥭gmá㎳Ābp㥲㦄setneqĀ;q㥽㦀쀀⊊︀;쀀⫋︀setneqĀ;q㦏㦒쀀⊋︀;쀀⫌︀Āhr㦛㦟etá㚜iangleĀlr㦪㦯eft»थight»ၑy;䐲ash»ံƀelr㧄㧒㧗ƀ;beⷪ㧋㧏ar;抻q;扚lip;拮Ābt㧜ᑨaòᑩr;쀀𝔳tré㦮suĀbp㧯㧱»ജ»൙pf;쀀𝕧roð໻tré㦴Ācu㨆㨋r;쀀𝓋Ābp㨐㨘nĀEe㦀㨖»㥾nĀEe㦒㨞»㦐igzag;榚΀cefoprs㨶㨻㩖㩛㩔㩡㩪irc;䅵Ādi㩀㩑Ābg㩅㩉ar;機eĀ;qᗺ㩏;扙erp;愘r;쀀𝔴pf;쀀𝕨Ā;eᑹ㩦atèᑹcr;쀀𝓌ૣណ㪇\0㪋\0㪐㪛\0\0㪝㪨㪫㪯\0\0㫃㫎\0㫘ៜ៟tré៑r;쀀𝔵ĀAa㪔㪗ròσrò৶;䎾ĀAa㪡㪤ròθrò৫að✓is;拻ƀdptឤ㪵㪾Āfl㪺ឩ;쀀𝕩imåឲĀAa㫇㫊ròώròਁĀcq㫒ីr;쀀𝓍Āpt៖㫜ré។Ѐacefiosu㫰㫽㬈㬌㬑㬕㬛㬡cĀuy㫶㫻te耻ý䃽;䑏Āiy㬂㬆rc;䅷;䑋n耻¥䂥r;쀀𝔶cy;䑗pf;쀀𝕪cr;쀀𝓎Ācm㬦㬩y;䑎l耻ÿ䃿Ԁacdefhiosw㭂㭈㭔㭘㭤㭩㭭㭴㭺㮀cute;䅺Āay㭍㭒ron;䅾;䐷ot;䅼Āet㭝㭡træᕟa;䎶r;쀀𝔷cy;䐶grarr;懝pf;쀀𝕫cr;쀀𝓏Ājn㮅㮇;怍j;怌'.split("").map((function(e){return e.charCodeAt(0)})));})),D=m((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=new Uint16Array("Ȁaglq\tɭ\0\0p;䀦os;䀧t;䀾t;䀼uot;䀢".split("").map((function(e){return e.charCodeAt(0)})));})),S=m((function(e,t){var s;Object.defineProperty(t,"__esModule",{value:!0}),t.replaceCodePoint=t.fromCodePoint=void 0;var a=new Map([[0,65533],[128,8364],[130,8218],[131,402],[132,8222],[133,8230],[134,8224],[135,8225],[136,710],[137,8240],[138,352],[139,8249],[140,338],[142,381],[145,8216],[146,8217],[147,8220],[148,8221],[149,8226],[150,8211],[151,8212],[152,732],[153,8482],[154,353],[155,8250],[156,339],[158,382],[159,376]]);function r(e){var t;return e>=55296&&e<=57343||e>1114111?65533:null!==(t=a.get(e))&&void 0!==t?t:e}t.fromCodePoint=null!==(s=String.fromCodePoint)&&void 0!==s?s:function(e){var t="";return e>65535&&(e-=65536,t+=String.fromCharCode(e>>>10&1023|55296),e=56320|1023&e),t+String.fromCharCode(e)},t.replaceCodePoint=r,t.default=function(e){return (0, t.fromCodePoint)(r(e))};})),R=m((function(e,t){var s=l&&l.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.decodeXML=t.decodeHTMLStrict=t.decodeHTML=t.determineBranch=t.BinTrieFlags=t.fromCodePoint=t.replaceCodePoint=t.decodeCodePoint=t.xmlDecodeTree=t.htmlDecodeTree=void 0;var a=s(C);t.htmlDecodeTree=a.default;var r=s(D);t.xmlDecodeTree=r.default;var n=s(S);t.decodeCodePoint=n.default;var i,o,c=S;function E(e){return function(t,s){for(var a="",r=0,c=0;(c=t.indexOf("&",c))>=0;)if(a+=t.slice(r,c),r=c,c+=1,t.charCodeAt(c)!==i.NUM){for(var E=0,h=1,_=0,A=e[_];c<t.length&&!((_=T(e,A,_+1,t.charCodeAt(c)))<0);c++,h++){var l=(A=e[_])&o.VALUE_LENGTH;if(l){var m;if(s&&t.charCodeAt(c)!==i.SEMI||(E=_,h=0),0==(m=(l>>14)-1))break;_+=m;}}0!==E&&(a+=1==(m=(e[E]&o.VALUE_LENGTH)>>14)?String.fromCharCode(e[E]&~o.VALUE_LENGTH):2===m?String.fromCharCode(e[E+1]):String.fromCharCode(e[E+1],e[E+2]),r=c-h+1);}else {var p=c+1,d=10,I=t.charCodeAt(p);(I|i.To_LOWER_BIT)===i.LOWER_X&&(d=16,c+=1,p+=1);do{I=t.charCodeAt(++c);}while(I>=i.ZERO&&I<=i.NINE||16===d&&(I|i.To_LOWER_BIT)>=i.LOWER_A&&(I|i.To_LOWER_BIT)<=i.LOWER_F);if(p!==c){var N=t.substring(p,c),u=parseInt(N,d);if(t.charCodeAt(c)===i.SEMI)c+=1;else if(s)continue;a+=(0, n.default)(u),r=c;}}return a+t.slice(r)}}function T(e,t,s,a){var r=(t&o.BRANCH_LENGTH)>>7,n=t&o.JUMP_TABLE;if(0===r)return 0!==n&&a===n?s:-1;if(n){var i=a-n;return i<0||i>=r?-1:e[s+i]-1}for(var c=s,E=c+r-1;c<=E;){var T=c+E>>>1,h=e[T];if(h<a)c=T+1;else {if(!(h>a))return e[T+r];E=T-1;}}return -1}Object.defineProperty(t,"replaceCodePoint",{enumerable:!0,get:function(){return c.replaceCodePoint}}),Object.defineProperty(t,"fromCodePoint",{enumerable:!0,get:function(){return c.fromCodePoint}}),function(e){e[e.NUM=35]="NUM",e[e.SEMI=59]="SEMI",e[e.ZERO=48]="ZERO",e[e.NINE=57]="NINE",e[e.LOWER_A=97]="LOWER_A",e[e.LOWER_F=102]="LOWER_F",e[e.LOWER_X=120]="LOWER_X",e[e.To_LOWER_BIT=32]="To_LOWER_BIT";}(i||(i={})),function(e){e[e.VALUE_LENGTH=49152]="VALUE_LENGTH",e[e.BRANCH_LENGTH=16256]="BRANCH_LENGTH",e[e.JUMP_TABLE=127]="JUMP_TABLE";}(o=t.BinTrieFlags||(t.BinTrieFlags={})),t.determineBranch=T;var h=E(a.default),_=E(r.default);t.decodeHTML=function(e){return h(e,!1)},t.decodeHTMLStrict=function(e){return h(e,!0)},t.decodeXML=function(e){return _(e,!0)};}));!function(e){e.HTML="http://www.w3.org/1999/xhtml",e.MATHML="http://www.w3.org/1998/Math/MathML",e.SVG="http://www.w3.org/2000/svg",e.XLINK="http://www.w3.org/1999/xlink",e.XML="http://www.w3.org/XML/1998/namespace",e.XMLNS="http://www.w3.org/2000/xmlns/";}(p=p||(p={})),function(e){e.TYPE="type",e.ACTION="action",e.ENCODING="encoding",e.PROMPT="prompt",e.NAME="name",e.COLOR="color",e.FACE="face",e.SIZE="size";}(d=d||(d={})),function(e){e.NO_QUIRKS="no-quirks",e.QUIRKS="quirks",e.LIMITED_QUIRKS="limited-quirks";}(I=I||(I={})),function(e){e.A="a",e.ADDRESS="address",e.ANNOTATION_XML="annotation-xml",e.APPLET="applet",e.AREA="area",e.ARTICLE="article",e.ASIDE="aside",e.B="b",e.BASE="base",e.BASEFONT="basefont",e.BGSOUND="bgsound",e.BIG="big",e.BLOCKQUOTE="blockquote",e.BODY="body",e.BR="br",e.BUTTON="button",e.CAPTION="caption",e.CENTER="center",e.CODE="code",e.COL="col",e.COLGROUP="colgroup",e.DD="dd",e.DESC="desc",e.DETAILS="details",e.DIALOG="dialog",e.DIR="dir",e.DIV="div",e.DL="dl",e.DT="dt",e.EM="em",e.EMBED="embed",e.FIELDSET="fieldset",e.FIGCAPTION="figcaption",e.FIGURE="figure",e.FONT="font",e.FOOTER="footer",e.FOREIGN_OBJECT="foreignObject",e.FORM="form",e.FRAME="frame",e.FRAMESET="frameset",e.H1="h1",e.H2="h2",e.H3="h3",e.H4="h4",e.H5="h5",e.H6="h6",e.HEAD="head",e.HEADER="header",e.HGROUP="hgroup",e.HR="hr",e.HTML="html",e.I="i",e.IMG="img",e.IMAGE="image",e.INPUT="input",e.IFRAME="iframe",e.KEYGEN="keygen",e.LABEL="label",e.LI="li",e.LINK="link",e.LISTING="listing",e.MAIN="main",e.MALIGNMARK="malignmark",e.MARQUEE="marquee",e.MATH="math",e.MENU="menu",e.META="meta",e.MGLYPH="mglyph",e.MI="mi",e.MO="mo",e.MN="mn",e.MS="ms",e.MTEXT="mtext",e.NAV="nav",e.NOBR="nobr",e.NOFRAMES="noframes",e.NOEMBED="noembed",e.NOSCRIPT="noscript",e.OBJECT="object",e.OL="ol",e.OPTGROUP="optgroup",e.OPTION="option",e.P="p",e.PARAM="param",e.PLAINTEXT="plaintext",e.PRE="pre",e.RB="rb",e.RP="rp",e.RT="rt",e.RTC="rtc",e.RUBY="ruby",e.S="s",e.SCRIPT="script",e.SECTION="section",e.SELECT="select",e.SOURCE="source",e.SMALL="small",e.SPAN="span",e.STRIKE="strike",e.STRONG="strong",e.STYLE="style",e.SUB="sub",e.SUMMARY="summary",e.SUP="sup",e.TABLE="table",e.TBODY="tbody",e.TEMPLATE="template",e.TEXTAREA="textarea",e.TFOOT="tfoot",e.TD="td",e.TH="th",e.THEAD="thead",e.TITLE="title",e.TR="tr",e.TRACK="track",e.TT="tt",e.U="u",e.UL="ul",e.SVG="svg",e.VAR="var",e.WBR="wbr",e.XMP="xmp";}(N=N||(N={})),function(e){e[e.UNKNOWN=0]="UNKNOWN",e[e.A=1]="A",e[e.ADDRESS=2]="ADDRESS",e[e.ANNOTATION_XML=3]="ANNOTATION_XML",e[e.APPLET=4]="APPLET",e[e.AREA=5]="AREA",e[e.ARTICLE=6]="ARTICLE",e[e.ASIDE=7]="ASIDE",e[e.B=8]="B",e[e.BASE=9]="BASE",e[e.BASEFONT=10]="BASEFONT",e[e.BGSOUND=11]="BGSOUND",e[e.BIG=12]="BIG",e[e.BLOCKQUOTE=13]="BLOCKQUOTE",e[e.BODY=14]="BODY",e[e.BR=15]="BR",e[e.BUTTON=16]="BUTTON",e[e.CAPTION=17]="CAPTION",e[e.CENTER=18]="CENTER",e[e.CODE=19]="CODE",e[e.COL=20]="COL",e[e.COLGROUP=21]="COLGROUP",e[e.DD=22]="DD",e[e.DESC=23]="DESC",e[e.DETAILS=24]="DETAILS",e[e.DIALOG=25]="DIALOG",e[e.DIR=26]="DIR",e[e.DIV=27]="DIV",e[e.DL=28]="DL",e[e.DT=29]="DT",e[e.EM=30]="EM",e[e.EMBED=31]="EMBED",e[e.FIELDSET=32]="FIELDSET",e[e.FIGCAPTION=33]="FIGCAPTION",e[e.FIGURE=34]="FIGURE",e[e.FONT=35]="FONT",e[e.FOOTER=36]="FOOTER",e[e.FOREIGN_OBJECT=37]="FOREIGN_OBJECT",e[e.FORM=38]="FORM",e[e.FRAME=39]="FRAME",e[e.FRAMESET=40]="FRAMESET",e[e.H1=41]="H1",e[e.H2=42]="H2",e[e.H3=43]="H3",e[e.H4=44]="H4",e[e.H5=45]="H5",e[e.H6=46]="H6",e[e.HEAD=47]="HEAD",e[e.HEADER=48]="HEADER",e[e.HGROUP=49]="HGROUP",e[e.HR=50]="HR",e[e.HTML=51]="HTML",e[e.I=52]="I",e[e.IMG=53]="IMG",e[e.IMAGE=54]="IMAGE",e[e.INPUT=55]="INPUT",e[e.IFRAME=56]="IFRAME",e[e.KEYGEN=57]="KEYGEN",e[e.LABEL=58]="LABEL",e[e.LI=59]="LI",e[e.LINK=60]="LINK",e[e.LISTING=61]="LISTING",e[e.MAIN=62]="MAIN",e[e.MALIGNMARK=63]="MALIGNMARK",e[e.MARQUEE=64]="MARQUEE",e[e.MATH=65]="MATH",e[e.MENU=66]="MENU",e[e.META=67]="META",e[e.MGLYPH=68]="MGLYPH",e[e.MI=69]="MI",e[e.MO=70]="MO",e[e.MN=71]="MN",e[e.MS=72]="MS",e[e.MTEXT=73]="MTEXT",e[e.NAV=74]="NAV",e[e.NOBR=75]="NOBR",e[e.NOFRAMES=76]="NOFRAMES",e[e.NOEMBED=77]="NOEMBED",e[e.NOSCRIPT=78]="NOSCRIPT",e[e.OBJECT=79]="OBJECT",e[e.OL=80]="OL",e[e.OPTGROUP=81]="OPTGROUP",e[e.OPTION=82]="OPTION",e[e.P=83]="P",e[e.PARAM=84]="PARAM",e[e.PLAINTEXT=85]="PLAINTEXT",e[e.PRE=86]="PRE",e[e.RB=87]="RB",e[e.RP=88]="RP",e[e.RT=89]="RT",e[e.RTC=90]="RTC",e[e.RUBY=91]="RUBY",e[e.S=92]="S",e[e.SCRIPT=93]="SCRIPT",e[e.SECTION=94]="SECTION",e[e.SELECT=95]="SELECT",e[e.SOURCE=96]="SOURCE",e[e.SMALL=97]="SMALL",e[e.SPAN=98]="SPAN",e[e.STRIKE=99]="STRIKE",e[e.STRONG=100]="STRONG",e[e.STYLE=101]="STYLE",e[e.SUB=102]="SUB",e[e.SUMMARY=103]="SUMMARY",e[e.SUP=104]="SUP",e[e.TABLE=105]="TABLE",e[e.TBODY=106]="TBODY",e[e.TEMPLATE=107]="TEMPLATE",e[e.TEXTAREA=108]="TEXTAREA",e[e.TFOOT=109]="TFOOT",e[e.TD=110]="TD",e[e.TH=111]="TH",e[e.THEAD=112]="THEAD",e[e.TITLE=113]="TITLE",e[e.TR=114]="TR",e[e.TRACK=115]="TRACK",e[e.TT=116]="TT",e[e.U=117]="U",e[e.UL=118]="UL",e[e.SVG=119]="SVG",e[e.VAR=120]="VAR",e[e.WBR=121]="WBR",e[e.XMP=122]="XMP";}(u=u||(u={}));const O=new Map([[N.A,u.A],[N.ADDRESS,u.ADDRESS],[N.ANNOTATION_XML,u.ANNOTATION_XML],[N.APPLET,u.APPLET],[N.AREA,u.AREA],[N.ARTICLE,u.ARTICLE],[N.ASIDE,u.ASIDE],[N.B,u.B],[N.BASE,u.BASE],[N.BASEFONT,u.BASEFONT],[N.BGSOUND,u.BGSOUND],[N.BIG,u.BIG],[N.BLOCKQUOTE,u.BLOCKQUOTE],[N.BODY,u.BODY],[N.BR,u.BR],[N.BUTTON,u.BUTTON],[N.CAPTION,u.CAPTION],[N.CENTER,u.CENTER],[N.CODE,u.CODE],[N.COL,u.COL],[N.COLGROUP,u.COLGROUP],[N.DD,u.DD],[N.DESC,u.DESC],[N.DETAILS,u.DETAILS],[N.DIALOG,u.DIALOG],[N.DIR,u.DIR],[N.DIV,u.DIV],[N.DL,u.DL],[N.DT,u.DT],[N.EM,u.EM],[N.EMBED,u.EMBED],[N.FIELDSET,u.FIELDSET],[N.FIGCAPTION,u.FIGCAPTION],[N.FIGURE,u.FIGURE],[N.FONT,u.FONT],[N.FOOTER,u.FOOTER],[N.FOREIGN_OBJECT,u.FOREIGN_OBJECT],[N.FORM,u.FORM],[N.FRAME,u.FRAME],[N.FRAMESET,u.FRAMESET],[N.H1,u.H1],[N.H2,u.H2],[N.H3,u.H3],[N.H4,u.H4],[N.H5,u.H5],[N.H6,u.H6],[N.HEAD,u.HEAD],[N.HEADER,u.HEADER],[N.HGROUP,u.HGROUP],[N.HR,u.HR],[N.HTML,u.HTML],[N.I,u.I],[N.IMG,u.IMG],[N.IMAGE,u.IMAGE],[N.INPUT,u.INPUT],[N.IFRAME,u.IFRAME],[N.KEYGEN,u.KEYGEN],[N.LABEL,u.LABEL],[N.LI,u.LI],[N.LINK,u.LINK],[N.LISTING,u.LISTING],[N.MAIN,u.MAIN],[N.MALIGNMARK,u.MALIGNMARK],[N.MARQUEE,u.MARQUEE],[N.MATH,u.MATH],[N.MENU,u.MENU],[N.META,u.META],[N.MGLYPH,u.MGLYPH],[N.MI,u.MI],[N.MO,u.MO],[N.MN,u.MN],[N.MS,u.MS],[N.MTEXT,u.MTEXT],[N.NAV,u.NAV],[N.NOBR,u.NOBR],[N.NOFRAMES,u.NOFRAMES],[N.NOEMBED,u.NOEMBED],[N.NOSCRIPT,u.NOSCRIPT],[N.OBJECT,u.OBJECT],[N.OL,u.OL],[N.OPTGROUP,u.OPTGROUP],[N.OPTION,u.OPTION],[N.P,u.P],[N.PARAM,u.PARAM],[N.PLAINTEXT,u.PLAINTEXT],[N.PRE,u.PRE],[N.RB,u.RB],[N.RP,u.RP],[N.RT,u.RT],[N.RTC,u.RTC],[N.RUBY,u.RUBY],[N.S,u.S],[N.SCRIPT,u.SCRIPT],[N.SECTION,u.SECTION],[N.SELECT,u.SELECT],[N.SOURCE,u.SOURCE],[N.SMALL,u.SMALL],[N.SPAN,u.SPAN],[N.STRIKE,u.STRIKE],[N.STRONG,u.STRONG],[N.STYLE,u.STYLE],[N.SUB,u.SUB],[N.SUMMARY,u.SUMMARY],[N.SUP,u.SUP],[N.TABLE,u.TABLE],[N.TBODY,u.TBODY],[N.TEMPLATE,u.TEMPLATE],[N.TEXTAREA,u.TEXTAREA],[N.TFOOT,u.TFOOT],[N.TD,u.TD],[N.TH,u.TH],[N.THEAD,u.THEAD],[N.TITLE,u.TITLE],[N.TR,u.TR],[N.TRACK,u.TRACK],[N.TT,u.TT],[N.U,u.U],[N.UL,u.UL],[N.SVG,u.SVG],[N.VAR,u.VAR],[N.WBR,u.WBR],[N.XMP,u.XMP]]);function f(e){var t;return null!==(t=O.get(e))&&void 0!==t?t:u.UNKNOWN}const L=u,M={[p.HTML]:new Set([L.ADDRESS,L.APPLET,L.AREA,L.ARTICLE,L.ASIDE,L.BASE,L.BASEFONT,L.BGSOUND,L.BLOCKQUOTE,L.BODY,L.BR,L.BUTTON,L.CAPTION,L.CENTER,L.COL,L.COLGROUP,L.DD,L.DETAILS,L.DIR,L.DIV,L.DL,L.DT,L.EMBED,L.FIELDSET,L.FIGCAPTION,L.FIGURE,L.FOOTER,L.FORM,L.FRAME,L.FRAMESET,L.H1,L.H2,L.H3,L.H4,L.H5,L.H6,L.HEAD,L.HEADER,L.HGROUP,L.HR,L.HTML,L.IFRAME,L.IMG,L.INPUT,L.LI,L.LINK,L.LISTING,L.MAIN,L.MARQUEE,L.MENU,L.META,L.NAV,L.NOEMBED,L.NOFRAMES,L.NOSCRIPT,L.OBJECT,L.OL,L.P,L.PARAM,L.PLAINTEXT,L.PRE,L.SCRIPT,L.SECTION,L.SELECT,L.SOURCE,L.STYLE,L.SUMMARY,L.TABLE,L.TBODY,L.TD,L.TEMPLATE,L.TEXTAREA,L.TFOOT,L.TH,L.THEAD,L.TITLE,L.TR,L.TRACK,L.UL,L.WBR,L.XMP]),[p.MATHML]:new Set([L.MI,L.MO,L.MN,L.MS,L.MTEXT,L.ANNOTATION_XML]),[p.SVG]:new Set([L.TITLE,L.FOREIGN_OBJECT,L.DESC]),[p.XLINK]:new Set,[p.XML]:new Set,[p.XMLNS]:new Set};function g(e){return e===L.H1||e===L.H2||e===L.H3||e===L.H4||e===L.H5||e===L.H6}new Set([N.STYLE,N.SCRIPT,N.XMP,N.IFRAME,N.NOEMBED,N.NOFRAMES,N.PLAINTEXT]);const k=new Map([[128,8364],[130,8218],[131,402],[132,8222],[133,8230],[134,8224],[135,8225],[136,710],[137,8240],[138,352],[139,8249],[140,338],[142,381],[145,8216],[146,8217],[147,8220],[148,8221],[149,8226],[150,8211],[151,8212],[152,732],[153,8482],[154,353],[155,8250],[156,339],[158,382],[159,376]]);var P;!function(e){e[e.DATA=0]="DATA",e[e.RCDATA=1]="RCDATA",e[e.RAWTEXT=2]="RAWTEXT",e[e.SCRIPT_DATA=3]="SCRIPT_DATA",e[e.PLAINTEXT=4]="PLAINTEXT",e[e.TAG_OPEN=5]="TAG_OPEN",e[e.END_TAG_OPEN=6]="END_TAG_OPEN",e[e.TAG_NAME=7]="TAG_NAME",e[e.RCDATA_LESS_THAN_SIGN=8]="RCDATA_LESS_THAN_SIGN",e[e.RCDATA_END_TAG_OPEN=9]="RCDATA_END_TAG_OPEN",e[e.RCDATA_END_TAG_NAME=10]="RCDATA_END_TAG_NAME",e[e.RAWTEXT_LESS_THAN_SIGN=11]="RAWTEXT_LESS_THAN_SIGN",e[e.RAWTEXT_END_TAG_OPEN=12]="RAWTEXT_END_TAG_OPEN",e[e.RAWTEXT_END_TAG_NAME=13]="RAWTEXT_END_TAG_NAME",e[e.SCRIPT_DATA_LESS_THAN_SIGN=14]="SCRIPT_DATA_LESS_THAN_SIGN",e[e.SCRIPT_DATA_END_TAG_OPEN=15]="SCRIPT_DATA_END_TAG_OPEN",e[e.SCRIPT_DATA_END_TAG_NAME=16]="SCRIPT_DATA_END_TAG_NAME",e[e.SCRIPT_DATA_ESCAPE_START=17]="SCRIPT_DATA_ESCAPE_START",e[e.SCRIPT_DATA_ESCAPE_START_DASH=18]="SCRIPT_DATA_ESCAPE_START_DASH",e[e.SCRIPT_DATA_ESCAPED=19]="SCRIPT_DATA_ESCAPED",e[e.SCRIPT_DATA_ESCAPED_DASH=20]="SCRIPT_DATA_ESCAPED_DASH",e[e.SCRIPT_DATA_ESCAPED_DASH_DASH=21]="SCRIPT_DATA_ESCAPED_DASH_DASH",e[e.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN=22]="SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN",e[e.SCRIPT_DATA_ESCAPED_END_TAG_OPEN=23]="SCRIPT_DATA_ESCAPED_END_TAG_OPEN",e[e.SCRIPT_DATA_ESCAPED_END_TAG_NAME=24]="SCRIPT_DATA_ESCAPED_END_TAG_NAME",e[e.SCRIPT_DATA_DOUBLE_ESCAPE_START=25]="SCRIPT_DATA_DOUBLE_ESCAPE_START",e[e.SCRIPT_DATA_DOUBLE_ESCAPED=26]="SCRIPT_DATA_DOUBLE_ESCAPED",e[e.SCRIPT_DATA_DOUBLE_ESCAPED_DASH=27]="SCRIPT_DATA_DOUBLE_ESCAPED_DASH",e[e.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH=28]="SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH",e[e.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN=29]="SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN",e[e.SCRIPT_DATA_DOUBLE_ESCAPE_END=30]="SCRIPT_DATA_DOUBLE_ESCAPE_END",e[e.BEFORE_ATTRIBUTE_NAME=31]="BEFORE_ATTRIBUTE_NAME",e[e.ATTRIBUTE_NAME=32]="ATTRIBUTE_NAME",e[e.AFTER_ATTRIBUTE_NAME=33]="AFTER_ATTRIBUTE_NAME",e[e.BEFORE_ATTRIBUTE_VALUE=34]="BEFORE_ATTRIBUTE_VALUE",e[e.ATTRIBUTE_VALUE_DOUBLE_QUOTED=35]="ATTRIBUTE_VALUE_DOUBLE_QUOTED",e[e.ATTRIBUTE_VALUE_SINGLE_QUOTED=36]="ATTRIBUTE_VALUE_SINGLE_QUOTED",e[e.ATTRIBUTE_VALUE_UNQUOTED=37]="ATTRIBUTE_VALUE_UNQUOTED",e[e.AFTER_ATTRIBUTE_VALUE_QUOTED=38]="AFTER_ATTRIBUTE_VALUE_QUOTED",e[e.SELF_CLOSING_START_TAG=39]="SELF_CLOSING_START_TAG",e[e.BOGUS_COMMENT=40]="BOGUS_COMMENT",e[e.MARKUP_DECLARATION_OPEN=41]="MARKUP_DECLARATION_OPEN",e[e.COMMENT_START=42]="COMMENT_START",e[e.COMMENT_START_DASH=43]="COMMENT_START_DASH",e[e.COMMENT=44]="COMMENT",e[e.COMMENT_LESS_THAN_SIGN=45]="COMMENT_LESS_THAN_SIGN",e[e.COMMENT_LESS_THAN_SIGN_BANG=46]="COMMENT_LESS_THAN_SIGN_BANG",e[e.COMMENT_LESS_THAN_SIGN_BANG_DASH=47]="COMMENT_LESS_THAN_SIGN_BANG_DASH",e[e.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH=48]="COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH",e[e.COMMENT_END_DASH=49]="COMMENT_END_DASH",e[e.COMMENT_END=50]="COMMENT_END",e[e.COMMENT_END_BANG=51]="COMMENT_END_BANG",e[e.DOCTYPE=52]="DOCTYPE",e[e.BEFORE_DOCTYPE_NAME=53]="BEFORE_DOCTYPE_NAME",e[e.DOCTYPE_NAME=54]="DOCTYPE_NAME",e[e.AFTER_DOCTYPE_NAME=55]="AFTER_DOCTYPE_NAME",e[e.AFTER_DOCTYPE_PUBLIC_KEYWORD=56]="AFTER_DOCTYPE_PUBLIC_KEYWORD",e[e.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER=57]="BEFORE_DOCTYPE_PUBLIC_IDENTIFIER",e[e.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED=58]="DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED",e[e.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED=59]="DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED",e[e.AFTER_DOCTYPE_PUBLIC_IDENTIFIER=60]="AFTER_DOCTYPE_PUBLIC_IDENTIFIER",e[e.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS=61]="BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS",e[e.AFTER_DOCTYPE_SYSTEM_KEYWORD=62]="AFTER_DOCTYPE_SYSTEM_KEYWORD",e[e.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER=63]="BEFORE_DOCTYPE_SYSTEM_IDENTIFIER",e[e.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED=64]="DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED",e[e.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED=65]="DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED",e[e.AFTER_DOCTYPE_SYSTEM_IDENTIFIER=66]="AFTER_DOCTYPE_SYSTEM_IDENTIFIER",e[e.BOGUS_DOCTYPE=67]="BOGUS_DOCTYPE",e[e.CDATA_SECTION=68]="CDATA_SECTION",e[e.CDATA_SECTION_BRACKET=69]="CDATA_SECTION_BRACKET",e[e.CDATA_SECTION_END=70]="CDATA_SECTION_END",e[e.CHARACTER_REFERENCE=71]="CHARACTER_REFERENCE",e[e.NAMED_CHARACTER_REFERENCE=72]="NAMED_CHARACTER_REFERENCE",e[e.AMBIGUOUS_AMPERSAND=73]="AMBIGUOUS_AMPERSAND",e[e.NUMERIC_CHARACTER_REFERENCE=74]="NUMERIC_CHARACTER_REFERENCE",e[e.HEXADEMICAL_CHARACTER_REFERENCE_START=75]="HEXADEMICAL_CHARACTER_REFERENCE_START",e[e.HEXADEMICAL_CHARACTER_REFERENCE=76]="HEXADEMICAL_CHARACTER_REFERENCE",e[e.DECIMAL_CHARACTER_REFERENCE=77]="DECIMAL_CHARACTER_REFERENCE",e[e.NUMERIC_CHARACTER_REFERENCE_END=78]="NUMERIC_CHARACTER_REFERENCE_END";}(P||(P={}));const b={DATA:P.DATA,RCDATA:P.RCDATA,RAWTEXT:P.RAWTEXT,SCRIPT_DATA:P.SCRIPT_DATA,PLAINTEXT:P.PLAINTEXT,CDATA_SECTION:P.CDATA_SECTION};function B(e){return e>=a.DIGIT_0&&e<=a.DIGIT_9}function H(e){return e>=a.LATIN_CAPITAL_A&&e<=a.LATIN_CAPITAL_Z}function F(e){return function(e){return e>=a.LATIN_SMALL_A&&e<=a.LATIN_SMALL_Z}(e)||H(e)}function U(e){return F(e)||B(e)}function G(e){return e>=a.LATIN_CAPITAL_A&&e<=a.LATIN_CAPITAL_F}function y(e){return e>=a.LATIN_SMALL_A&&e<=a.LATIN_SMALL_F}function w(e){return e+32}function Y(e){return e===a.SPACE||e===a.LINE_FEED||e===a.TABULATION||e===a.FORM_FEED}function x(e){return Y(e)||e===a.SOLIDUS||e===a.GREATER_THAN_SIGN}class v{constructor(e,t){this.options=e,this.handler=t,this.paused=!1,this.inLoop=!1,this.inForeignNode=!1,this.lastStartTagName="",this.active=!1,this.state=P.DATA,this.returnState=P.DATA,this.charRefCode=-1,this.consumedAfterSnapshot=-1,this.currentCharacterToken=null,this.currentToken=null,this.currentAttr={name:"",value:""},this.preprocessor=new _(t),this.currentLocation=this.getCurrentLocation(-1);}_err(e){var t,s;null===(s=(t=this.handler).onParseError)||void 0===s||s.call(t,this.preprocessor.getError(e));}getCurrentLocation(e){return this.options.sourceCodeLocationInfo?{startLine:this.preprocessor.line,startCol:this.preprocessor.col-e,startOffset:this.preprocessor.offset-e,endLine:-1,endCol:-1,endOffset:-1}:null}_runParsingLoop(){if(!this.inLoop){for(this.inLoop=!0;this.active&&!this.paused;){this.consumedAfterSnapshot=0;const e=this._consume();this._ensureHibernation()||this._callState(e);}this.inLoop=!1;}}pause(){this.paused=!0;}resume(e){if(!this.paused)throw new Error("Parser was already resumed");this.paused=!1,this.inLoop||(this._runParsingLoop(),this.paused||null==e||e());}write(e,t,s){this.active=!0,this.preprocessor.write(e,t),this._runParsingLoop(),this.paused||null==s||s();}insertHtmlAtCurrentPos(e){this.active=!0,this.preprocessor.insertHtmlAtCurrentPos(e),this._runParsingLoop();}_ensureHibernation(){return !!this.preprocessor.endOfChunkHit&&(this._unconsume(this.consumedAfterSnapshot),this.active=!1,!0)}_consume(){return this.consumedAfterSnapshot++,this.preprocessor.advance()}_unconsume(e){this.consumedAfterSnapshot-=e,this.preprocessor.retreat(e);}_reconsumeInState(e,t){this.state=e,this._callState(t);}_advanceBy(e){this.consumedAfterSnapshot+=e;for(let t=0;t<e;t++)this.preprocessor.advance();}_consumeSequenceIfMatch(e,t){return !!this.preprocessor.startsWith(e,t)&&(this._advanceBy(e.length-1),!0)}_createStartTagToken(){this.currentToken={type:h.START_TAG,tagName:"",tagID:u.UNKNOWN,selfClosing:!1,ackSelfClosing:!1,attrs:[],location:this.getCurrentLocation(1)};}_createEndTagToken(){this.currentToken={type:h.END_TAG,tagName:"",tagID:u.UNKNOWN,selfClosing:!1,ackSelfClosing:!1,attrs:[],location:this.getCurrentLocation(2)};}_createCommentToken(e){this.currentToken={type:h.COMMENT,data:"",location:this.getCurrentLocation(e)};}_createDoctypeToken(e){this.currentToken={type:h.DOCTYPE,name:e,forceQuirks:!1,publicId:null,systemId:null,location:this.currentLocation};}_createCharacterToken(e,t){this.currentCharacterToken={type:e,chars:t,location:this.currentLocation};}_createAttr(e){this.currentAttr={name:e,value:""},this.currentLocation=this.getCurrentLocation(0);}_leaveAttrName(){var e,t;const s=this.currentToken;null===A(s,this.currentAttr.name)?(s.attrs.push(this.currentAttr),s.location&&this.currentLocation&&((null!==(e=(t=s.location).attrs)&&void 0!==e?e:t.attrs=Object.create(null))[this.currentAttr.name]=this.currentLocation,this._leaveAttrValue())):this._err(T.duplicateAttribute);}_leaveAttrValue(){this.currentLocation&&(this.currentLocation.endLine=this.preprocessor.line,this.currentLocation.endCol=this.preprocessor.col,this.currentLocation.endOffset=this.preprocessor.offset);}prepareToken(e){this._emitCurrentCharacterToken(e.location),this.currentToken=null,e.location&&(e.location.endLine=this.preprocessor.line,e.location.endCol=this.preprocessor.col+1,e.location.endOffset=this.preprocessor.offset+1),this.currentLocation=this.getCurrentLocation(-1);}emitCurrentTagToken(){const e=this.currentToken;this.prepareToken(e),e.tagID=f(e.tagName),e.type===h.START_TAG?(this.lastStartTagName=e.tagName,this.handler.onStartTag(e)):(e.attrs.length>0&&this._err(T.endTagWithAttributes),e.selfClosing&&this._err(T.endTagWithTrailingSolidus),this.handler.onEndTag(e)),this.preprocessor.dropParsedChunk();}emitCurrentComment(e){this.prepareToken(e),this.handler.onComment(e),this.preprocessor.dropParsedChunk();}emitCurrentDoctype(e){this.prepareToken(e),this.handler.onDoctype(e),this.preprocessor.dropParsedChunk();}_emitCurrentCharacterToken(e){if(this.currentCharacterToken){switch(e&&this.currentCharacterToken.location&&(this.currentCharacterToken.location.endLine=e.startLine,this.currentCharacterToken.location.endCol=e.startCol,this.currentCharacterToken.location.endOffset=e.startOffset),this.currentCharacterToken.type){case h.CHARACTER:this.handler.onCharacter(this.currentCharacterToken);break;case h.NULL_CHARACTER:this.handler.onNullCharacter(this.currentCharacterToken);break;case h.WHITESPACE_CHARACTER:this.handler.onWhitespaceCharacter(this.currentCharacterToken);}this.currentCharacterToken=null;}}_emitEOFToken(){const e=this.getCurrentLocation(0);e&&(e.endLine=e.startLine,e.endCol=e.startCol,e.endOffset=e.startOffset),this._emitCurrentCharacterToken(e),this.handler.onEof({type:h.EOF,location:e}),this.active=!1;}_appendCharToCurrentCharacterToken(e,t){if(this.currentCharacterToken){if(this.currentCharacterToken.type===e)return void(this.currentCharacterToken.chars+=t);this.currentLocation=this.getCurrentLocation(0),this._emitCurrentCharacterToken(this.currentLocation),this.preprocessor.dropParsedChunk();}this._createCharacterToken(e,t);}_emitCodePoint(e){const t=Y(e)?h.WHITESPACE_CHARACTER:e===a.NULL?h.NULL_CHARACTER:h.CHARACTER;this._appendCharToCurrentCharacterToken(t,String.fromCodePoint(e));}_emitChars(e){this._appendCharToCurrentCharacterToken(h.CHARACTER,e);}_matchNamedCharacterReference(e){let t=null,s=0,r=!1;for(let i=0,o=R.htmlDecodeTree[0];i>=0&&(i=R.determineBranch(R.htmlDecodeTree,o,i+1,e),!(i<0));e=this._consume()){s+=1,o=R.htmlDecodeTree[i];const c=o&R.BinTrieFlags.VALUE_LENGTH;if(c){const o=(c>>14)-1;if(e!==a.SEMICOLON&&this._isCharacterReferenceInAttribute()&&((n=this.preprocessor.peek(1))===a.EQUALS_SIGN||U(n))?(t=[a.AMPERSAND],i+=o):(t=0===o?[R.htmlDecodeTree[i]&~R.BinTrieFlags.VALUE_LENGTH]:1===o?[R.htmlDecodeTree[++i]]:[R.htmlDecodeTree[++i],R.htmlDecodeTree[++i]],s=0,r=e!==a.SEMICOLON),0===o){this._consume();break}}}var n;return this._unconsume(s),r&&!this.preprocessor.endOfChunkHit&&this._err(T.missingSemicolonAfterCharacterReference),this._unconsume(1),t}_isCharacterReferenceInAttribute(){return this.returnState===P.ATTRIBUTE_VALUE_DOUBLE_QUOTED||this.returnState===P.ATTRIBUTE_VALUE_SINGLE_QUOTED||this.returnState===P.ATTRIBUTE_VALUE_UNQUOTED}_flushCodePointConsumedAsCharacterReference(e){this._isCharacterReferenceInAttribute()?this.currentAttr.value+=String.fromCodePoint(e):this._emitCodePoint(e);}_callState(e){switch(this.state){case P.DATA:this._stateData(e);break;case P.RCDATA:this._stateRcdata(e);break;case P.RAWTEXT:this._stateRawtext(e);break;case P.SCRIPT_DATA:this._stateScriptData(e);break;case P.PLAINTEXT:this._statePlaintext(e);break;case P.TAG_OPEN:this._stateTagOpen(e);break;case P.END_TAG_OPEN:this._stateEndTagOpen(e);break;case P.TAG_NAME:this._stateTagName(e);break;case P.RCDATA_LESS_THAN_SIGN:this._stateRcdataLessThanSign(e);break;case P.RCDATA_END_TAG_OPEN:this._stateRcdataEndTagOpen(e);break;case P.RCDATA_END_TAG_NAME:this._stateRcdataEndTagName(e);break;case P.RAWTEXT_LESS_THAN_SIGN:this._stateRawtextLessThanSign(e);break;case P.RAWTEXT_END_TAG_OPEN:this._stateRawtextEndTagOpen(e);break;case P.RAWTEXT_END_TAG_NAME:this._stateRawtextEndTagName(e);break;case P.SCRIPT_DATA_LESS_THAN_SIGN:this._stateScriptDataLessThanSign(e);break;case P.SCRIPT_DATA_END_TAG_OPEN:this._stateScriptDataEndTagOpen(e);break;case P.SCRIPT_DATA_END_TAG_NAME:this._stateScriptDataEndTagName(e);break;case P.SCRIPT_DATA_ESCAPE_START:this._stateScriptDataEscapeStart(e);break;case P.SCRIPT_DATA_ESCAPE_START_DASH:this._stateScriptDataEscapeStartDash(e);break;case P.SCRIPT_DATA_ESCAPED:this._stateScriptDataEscaped(e);break;case P.SCRIPT_DATA_ESCAPED_DASH:this._stateScriptDataEscapedDash(e);break;case P.SCRIPT_DATA_ESCAPED_DASH_DASH:this._stateScriptDataEscapedDashDash(e);break;case P.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN:this._stateScriptDataEscapedLessThanSign(e);break;case P.SCRIPT_DATA_ESCAPED_END_TAG_OPEN:this._stateScriptDataEscapedEndTagOpen(e);break;case P.SCRIPT_DATA_ESCAPED_END_TAG_NAME:this._stateScriptDataEscapedEndTagName(e);break;case P.SCRIPT_DATA_DOUBLE_ESCAPE_START:this._stateScriptDataDoubleEscapeStart(e);break;case P.SCRIPT_DATA_DOUBLE_ESCAPED:this._stateScriptDataDoubleEscaped(e);break;case P.SCRIPT_DATA_DOUBLE_ESCAPED_DASH:this._stateScriptDataDoubleEscapedDash(e);break;case P.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH:this._stateScriptDataDoubleEscapedDashDash(e);break;case P.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN:this._stateScriptDataDoubleEscapedLessThanSign(e);break;case P.SCRIPT_DATA_DOUBLE_ESCAPE_END:this._stateScriptDataDoubleEscapeEnd(e);break;case P.BEFORE_ATTRIBUTE_NAME:this._stateBeforeAttributeName(e);break;case P.ATTRIBUTE_NAME:this._stateAttributeName(e);break;case P.AFTER_ATTRIBUTE_NAME:this._stateAfterAttributeName(e);break;case P.BEFORE_ATTRIBUTE_VALUE:this._stateBeforeAttributeValue(e);break;case P.ATTRIBUTE_VALUE_DOUBLE_QUOTED:this._stateAttributeValueDoubleQuoted(e);break;case P.ATTRIBUTE_VALUE_SINGLE_QUOTED:this._stateAttributeValueSingleQuoted(e);break;case P.ATTRIBUTE_VALUE_UNQUOTED:this._stateAttributeValueUnquoted(e);break;case P.AFTER_ATTRIBUTE_VALUE_QUOTED:this._stateAfterAttributeValueQuoted(e);break;case P.SELF_CLOSING_START_TAG:this._stateSelfClosingStartTag(e);break;case P.BOGUS_COMMENT:this._stateBogusComment(e);break;case P.MARKUP_DECLARATION_OPEN:this._stateMarkupDeclarationOpen(e);break;case P.COMMENT_START:this._stateCommentStart(e);break;case P.COMMENT_START_DASH:this._stateCommentStartDash(e);break;case P.COMMENT:this._stateComment(e);break;case P.COMMENT_LESS_THAN_SIGN:this._stateCommentLessThanSign(e);break;case P.COMMENT_LESS_THAN_SIGN_BANG:this._stateCommentLessThanSignBang(e);break;case P.COMMENT_LESS_THAN_SIGN_BANG_DASH:this._stateCommentLessThanSignBangDash(e);break;case P.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH:this._stateCommentLessThanSignBangDashDash(e);break;case P.COMMENT_END_DASH:this._stateCommentEndDash(e);break;case P.COMMENT_END:this._stateCommentEnd(e);break;case P.COMMENT_END_BANG:this._stateCommentEndBang(e);break;case P.DOCTYPE:this._stateDoctype(e);break;case P.BEFORE_DOCTYPE_NAME:this._stateBeforeDoctypeName(e);break;case P.DOCTYPE_NAME:this._stateDoctypeName(e);break;case P.AFTER_DOCTYPE_NAME:this._stateAfterDoctypeName(e);break;case P.AFTER_DOCTYPE_PUBLIC_KEYWORD:this._stateAfterDoctypePublicKeyword(e);break;case P.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER:this._stateBeforeDoctypePublicIdentifier(e);break;case P.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED:this._stateDoctypePublicIdentifierDoubleQuoted(e);break;case P.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED:this._stateDoctypePublicIdentifierSingleQuoted(e);break;case P.AFTER_DOCTYPE_PUBLIC_IDENTIFIER:this._stateAfterDoctypePublicIdentifier(e);break;case P.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS:this._stateBetweenDoctypePublicAndSystemIdentifiers(e);break;case P.AFTER_DOCTYPE_SYSTEM_KEYWORD:this._stateAfterDoctypeSystemKeyword(e);break;case P.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER:this._stateBeforeDoctypeSystemIdentifier(e);break;case P.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED:this._stateDoctypeSystemIdentifierDoubleQuoted(e);break;case P.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED:this._stateDoctypeSystemIdentifierSingleQuoted(e);break;case P.AFTER_DOCTYPE_SYSTEM_IDENTIFIER:this._stateAfterDoctypeSystemIdentifier(e);break;case P.BOGUS_DOCTYPE:this._stateBogusDoctype(e);break;case P.CDATA_SECTION:this._stateCdataSection(e);break;case P.CDATA_SECTION_BRACKET:this._stateCdataSectionBracket(e);break;case P.CDATA_SECTION_END:this._stateCdataSectionEnd(e);break;case P.CHARACTER_REFERENCE:this._stateCharacterReference(e);break;case P.NAMED_CHARACTER_REFERENCE:this._stateNamedCharacterReference(e);break;case P.AMBIGUOUS_AMPERSAND:this._stateAmbiguousAmpersand(e);break;case P.NUMERIC_CHARACTER_REFERENCE:this._stateNumericCharacterReference(e);break;case P.HEXADEMICAL_CHARACTER_REFERENCE_START:this._stateHexademicalCharacterReferenceStart(e);break;case P.HEXADEMICAL_CHARACTER_REFERENCE:this._stateHexademicalCharacterReference(e);break;case P.DECIMAL_CHARACTER_REFERENCE:this._stateDecimalCharacterReference(e);break;case P.NUMERIC_CHARACTER_REFERENCE_END:this._stateNumericCharacterReferenceEnd(e);break;default:throw new Error("Unknown state")}}_stateData(e){switch(e){case a.LESS_THAN_SIGN:this.state=P.TAG_OPEN;break;case a.AMPERSAND:this.returnState=P.DATA,this.state=P.CHARACTER_REFERENCE;break;case a.NULL:this._err(T.unexpectedNullCharacter),this._emitCodePoint(e);break;case a.EOF:this._emitEOFToken();break;default:this._emitCodePoint(e);}}_stateRcdata(e){switch(e){case a.AMPERSAND:this.returnState=P.RCDATA,this.state=P.CHARACTER_REFERENCE;break;case a.LESS_THAN_SIGN:this.state=P.RCDATA_LESS_THAN_SIGN;break;case a.NULL:this._err(T.unexpectedNullCharacter),this._emitChars(s);break;case a.EOF:this._emitEOFToken();break;default:this._emitCodePoint(e);}}_stateRawtext(e){switch(e){case a.LESS_THAN_SIGN:this.state=P.RAWTEXT_LESS_THAN_SIGN;break;case a.NULL:this._err(T.unexpectedNullCharacter),this._emitChars(s);break;case a.EOF:this._emitEOFToken();break;default:this._emitCodePoint(e);}}_stateScriptData(e){switch(e){case a.LESS_THAN_SIGN:this.state=P.SCRIPT_DATA_LESS_THAN_SIGN;break;case a.NULL:this._err(T.unexpectedNullCharacter),this._emitChars(s);break;case a.EOF:this._emitEOFToken();break;default:this._emitCodePoint(e);}}_statePlaintext(e){switch(e){case a.NULL:this._err(T.unexpectedNullCharacter),this._emitChars(s);break;case a.EOF:this._emitEOFToken();break;default:this._emitCodePoint(e);}}_stateTagOpen(e){if(F(e))this._createStartTagToken(),this.state=P.TAG_NAME,this._stateTagName(e);else switch(e){case a.EXCLAMATION_MARK:this.state=P.MARKUP_DECLARATION_OPEN;break;case a.SOLIDUS:this.state=P.END_TAG_OPEN;break;case a.QUESTION_MARK:this._err(T.unexpectedQuestionMarkInsteadOfTagName),this._createCommentToken(1),this.state=P.BOGUS_COMMENT,this._stateBogusComment(e);break;case a.EOF:this._err(T.eofBeforeTagName),this._emitChars("<"),this._emitEOFToken();break;default:this._err(T.invalidFirstCharacterOfTagName),this._emitChars("<"),this.state=P.DATA,this._stateData(e);}}_stateEndTagOpen(e){if(F(e))this._createEndTagToken(),this.state=P.TAG_NAME,this._stateTagName(e);else switch(e){case a.GREATER_THAN_SIGN:this._err(T.missingEndTagName),this.state=P.DATA;break;case a.EOF:this._err(T.eofBeforeTagName),this._emitChars("</"),this._emitEOFToken();break;default:this._err(T.invalidFirstCharacterOfTagName),this._createCommentToken(2),this.state=P.BOGUS_COMMENT,this._stateBogusComment(e);}}_stateTagName(e){const t=this.currentToken;switch(e){case a.SPACE:case a.LINE_FEED:case a.TABULATION:case a.FORM_FEED:this.state=P.BEFORE_ATTRIBUTE_NAME;break;case a.SOLIDUS:this.state=P.SELF_CLOSING_START_TAG;break;case a.GREATER_THAN_SIGN:this.state=P.DATA,this.emitCurrentTagToken();break;case a.NULL:this._err(T.unexpectedNullCharacter),t.tagName+=s;break;case a.EOF:this._err(T.eofInTag),this._emitEOFToken();break;default:t.tagName+=String.fromCodePoint(H(e)?w(e):e);}}_stateRcdataLessThanSign(e){e===a.SOLIDUS?this.state=P.RCDATA_END_TAG_OPEN:(this._emitChars("<"),this.state=P.RCDATA,this._stateRcdata(e));}_stateRcdataEndTagOpen(e){F(e)?(this.state=P.RCDATA_END_TAG_NAME,this._stateRcdataEndTagName(e)):(this._emitChars("</"),this.state=P.RCDATA,this._stateRcdata(e));}handleSpecialEndTag(e){if(!this.preprocessor.startsWith(this.lastStartTagName,!1))return !this._ensureHibernation();switch(this._createEndTagToken(),this.currentToken.tagName=this.lastStartTagName,this.preprocessor.peek(this.lastStartTagName.length)){case a.SPACE:case a.LINE_FEED:case a.TABULATION:case a.FORM_FEED:return this._advanceBy(this.lastStartTagName.length),this.state=P.BEFORE_ATTRIBUTE_NAME,!1;case a.SOLIDUS:return this._advanceBy(this.lastStartTagName.length),this.state=P.SELF_CLOSING_START_TAG,!1;case a.GREATER_THAN_SIGN:return this._advanceBy(this.lastStartTagName.length),this.emitCurrentTagToken(),this.state=P.DATA,!1;default:return !this._ensureHibernation()}}_stateRcdataEndTagName(e){this.handleSpecialEndTag(e)&&(this._emitChars("</"),this.state=P.RCDATA,this._stateRcdata(e));}_stateRawtextLessThanSign(e){e===a.SOLIDUS?this.state=P.RAWTEXT_END_TAG_OPEN:(this._emitChars("<"),this.state=P.RAWTEXT,this._stateRawtext(e));}_stateRawtextEndTagOpen(e){F(e)?(this.state=P.RAWTEXT_END_TAG_NAME,this._stateRawtextEndTagName(e)):(this._emitChars("</"),this.state=P.RAWTEXT,this._stateRawtext(e));}_stateRawtextEndTagName(e){this.handleSpecialEndTag(e)&&(this._emitChars("</"),this.state=P.RAWTEXT,this._stateRawtext(e));}_stateScriptDataLessThanSign(e){switch(e){case a.SOLIDUS:this.state=P.SCRIPT_DATA_END_TAG_OPEN;break;case a.EXCLAMATION_MARK:this.state=P.SCRIPT_DATA_ESCAPE_START,this._emitChars("<!");break;default:this._emitChars("<"),this.state=P.SCRIPT_DATA,this._stateScriptData(e);}}_stateScriptDataEndTagOpen(e){F(e)?(this.state=P.SCRIPT_DATA_END_TAG_NAME,this._stateScriptDataEndTagName(e)):(this._emitChars("</"),this.state=P.SCRIPT_DATA,this._stateScriptData(e));}_stateScriptDataEndTagName(e){this.handleSpecialEndTag(e)&&(this._emitChars("</"),this.state=P.SCRIPT_DATA,this._stateScriptData(e));}_stateScriptDataEscapeStart(e){e===a.HYPHEN_MINUS?(this.state=P.SCRIPT_DATA_ESCAPE_START_DASH,this._emitChars("-")):(this.state=P.SCRIPT_DATA,this._stateScriptData(e));}_stateScriptDataEscapeStartDash(e){e===a.HYPHEN_MINUS?(this.state=P.SCRIPT_DATA_ESCAPED_DASH_DASH,this._emitChars("-")):(this.state=P.SCRIPT_DATA,this._stateScriptData(e));}_stateScriptDataEscaped(e){switch(e){case a.HYPHEN_MINUS:this.state=P.SCRIPT_DATA_ESCAPED_DASH,this._emitChars("-");break;case a.LESS_THAN_SIGN:this.state=P.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;break;case a.NULL:this._err(T.unexpectedNullCharacter),this._emitChars(s);break;case a.EOF:this._err(T.eofInScriptHtmlCommentLikeText),this._emitEOFToken();break;default:this._emitCodePoint(e);}}_stateScriptDataEscapedDash(e){switch(e){case a.HYPHEN_MINUS:this.state=P.SCRIPT_DATA_ESCAPED_DASH_DASH,this._emitChars("-");break;case a.LESS_THAN_SIGN:this.state=P.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;break;case a.NULL:this._err(T.unexpectedNullCharacter),this.state=P.SCRIPT_DATA_ESCAPED,this._emitChars(s);break;case a.EOF:this._err(T.eofInScriptHtmlCommentLikeText),this._emitEOFToken();break;default:this.state=P.SCRIPT_DATA_ESCAPED,this._emitCodePoint(e);}}_stateScriptDataEscapedDashDash(e){switch(e){case a.HYPHEN_MINUS:this._emitChars("-");break;case a.LESS_THAN_SIGN:this.state=P.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;break;case a.GREATER_THAN_SIGN:this.state=P.SCRIPT_DATA,this._emitChars(">");break;case a.NULL:this._err(T.unexpectedNullCharacter),this.state=P.SCRIPT_DATA_ESCAPED,this._emitChars(s);break;case a.EOF:this._err(T.eofInScriptHtmlCommentLikeText),this._emitEOFToken();break;default:this.state=P.SCRIPT_DATA_ESCAPED,this._emitCodePoint(e);}}_stateScriptDataEscapedLessThanSign(e){e===a.SOLIDUS?this.state=P.SCRIPT_DATA_ESCAPED_END_TAG_OPEN:F(e)?(this._emitChars("<"),this.state=P.SCRIPT_DATA_DOUBLE_ESCAPE_START,this._stateScriptDataDoubleEscapeStart(e)):(this._emitChars("<"),this.state=P.SCRIPT_DATA_ESCAPED,this._stateScriptDataEscaped(e));}_stateScriptDataEscapedEndTagOpen(e){F(e)?(this.state=P.SCRIPT_DATA_ESCAPED_END_TAG_NAME,this._stateScriptDataEscapedEndTagName(e)):(this._emitChars("</"),this.state=P.SCRIPT_DATA_ESCAPED,this._stateScriptDataEscaped(e));}_stateScriptDataEscapedEndTagName(e){this.handleSpecialEndTag(e)&&(this._emitChars("</"),this.state=P.SCRIPT_DATA_ESCAPED,this._stateScriptDataEscaped(e));}_stateScriptDataDoubleEscapeStart(e){if(this.preprocessor.startsWith(i,!1)&&x(this.preprocessor.peek(6))){this._emitCodePoint(e);for(let e=0;e<6;e++)this._emitCodePoint(this._consume());this.state=P.SCRIPT_DATA_DOUBLE_ESCAPED;}else this._ensureHibernation()||(this.state=P.SCRIPT_DATA_ESCAPED,this._stateScriptDataEscaped(e));}_stateScriptDataDoubleEscaped(e){switch(e){case a.HYPHEN_MINUS:this.state=P.SCRIPT_DATA_DOUBLE_ESCAPED_DASH,this._emitChars("-");break;case a.LESS_THAN_SIGN:this.state=P.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN,this._emitChars("<");break;case a.NULL:this._err(T.unexpectedNullCharacter),this._emitChars(s);break;case a.EOF:this._err(T.eofInScriptHtmlCommentLikeText),this._emitEOFToken();break;default:this._emitCodePoint(e);}}_stateScriptDataDoubleEscapedDash(e){switch(e){case a.HYPHEN_MINUS:this.state=P.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH,this._emitChars("-");break;case a.LESS_THAN_SIGN:this.state=P.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN,this._emitChars("<");break;case a.NULL:this._err(T.unexpectedNullCharacter),this.state=P.SCRIPT_DATA_DOUBLE_ESCAPED,this._emitChars(s);break;case a.EOF:this._err(T.eofInScriptHtmlCommentLikeText),this._emitEOFToken();break;default:this.state=P.SCRIPT_DATA_DOUBLE_ESCAPED,this._emitCodePoint(e);}}_stateScriptDataDoubleEscapedDashDash(e){switch(e){case a.HYPHEN_MINUS:this._emitChars("-");break;case a.LESS_THAN_SIGN:this.state=P.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN,this._emitChars("<");break;case a.GREATER_THAN_SIGN:this.state=P.SCRIPT_DATA,this._emitChars(">");break;case a.NULL:this._err(T.unexpectedNullCharacter),this.state=P.SCRIPT_DATA_DOUBLE_ESCAPED,this._emitChars(s);break;case a.EOF:this._err(T.eofInScriptHtmlCommentLikeText),this._emitEOFToken();break;default:this.state=P.SCRIPT_DATA_DOUBLE_ESCAPED,this._emitCodePoint(e);}}_stateScriptDataDoubleEscapedLessThanSign(e){e===a.SOLIDUS?(this.state=P.SCRIPT_DATA_DOUBLE_ESCAPE_END,this._emitChars("/")):(this.state=P.SCRIPT_DATA_DOUBLE_ESCAPED,this._stateScriptDataDoubleEscaped(e));}_stateScriptDataDoubleEscapeEnd(e){if(this.preprocessor.startsWith(i,!1)&&x(this.preprocessor.peek(6))){this._emitCodePoint(e);for(let e=0;e<6;e++)this._emitCodePoint(this._consume());this.state=P.SCRIPT_DATA_ESCAPED;}else this._ensureHibernation()||(this.state=P.SCRIPT_DATA_DOUBLE_ESCAPED,this._stateScriptDataDoubleEscaped(e));}_stateBeforeAttributeName(e){switch(e){case a.SPACE:case a.LINE_FEED:case a.TABULATION:case a.FORM_FEED:break;case a.SOLIDUS:case a.GREATER_THAN_SIGN:case a.EOF:this.state=P.AFTER_ATTRIBUTE_NAME,this._stateAfterAttributeName(e);break;case a.EQUALS_SIGN:this._err(T.unexpectedEqualsSignBeforeAttributeName),this._createAttr("="),this.state=P.ATTRIBUTE_NAME;break;default:this._createAttr(""),this.state=P.ATTRIBUTE_NAME,this._stateAttributeName(e);}}_stateAttributeName(e){switch(e){case a.SPACE:case a.LINE_FEED:case a.TABULATION:case a.FORM_FEED:case a.SOLIDUS:case a.GREATER_THAN_SIGN:case a.EOF:this._leaveAttrName(),this.state=P.AFTER_ATTRIBUTE_NAME,this._stateAfterAttributeName(e);break;case a.EQUALS_SIGN:this._leaveAttrName(),this.state=P.BEFORE_ATTRIBUTE_VALUE;break;case a.QUOTATION_MARK:case a.APOSTROPHE:case a.LESS_THAN_SIGN:this._err(T.unexpectedCharacterInAttributeName),this.currentAttr.name+=String.fromCodePoint(e);break;case a.NULL:this._err(T.unexpectedNullCharacter),this.currentAttr.name+=s;break;default:this.currentAttr.name+=String.fromCodePoint(H(e)?w(e):e);}}_stateAfterAttributeName(e){switch(e){case a.SPACE:case a.LINE_FEED:case a.TABULATION:case a.FORM_FEED:break;case a.SOLIDUS:this.state=P.SELF_CLOSING_START_TAG;break;case a.EQUALS_SIGN:this.state=P.BEFORE_ATTRIBUTE_VALUE;break;case a.GREATER_THAN_SIGN:this.state=P.DATA,this.emitCurrentTagToken();break;case a.EOF:this._err(T.eofInTag),this._emitEOFToken();break;default:this._createAttr(""),this.state=P.ATTRIBUTE_NAME,this._stateAttributeName(e);}}_stateBeforeAttributeValue(e){switch(e){case a.SPACE:case a.LINE_FEED:case a.TABULATION:case a.FORM_FEED:break;case a.QUOTATION_MARK:this.state=P.ATTRIBUTE_VALUE_DOUBLE_QUOTED;break;case a.APOSTROPHE:this.state=P.ATTRIBUTE_VALUE_SINGLE_QUOTED;break;case a.GREATER_THAN_SIGN:this._err(T.missingAttributeValue),this.state=P.DATA,this.emitCurrentTagToken();break;default:this.state=P.ATTRIBUTE_VALUE_UNQUOTED,this._stateAttributeValueUnquoted(e);}}_stateAttributeValueDoubleQuoted(e){switch(e){case a.QUOTATION_MARK:this.state=P.AFTER_ATTRIBUTE_VALUE_QUOTED;break;case a.AMPERSAND:this.returnState=P.ATTRIBUTE_VALUE_DOUBLE_QUOTED,this.state=P.CHARACTER_REFERENCE;break;case a.NULL:this._err(T.unexpectedNullCharacter),this.currentAttr.value+=s;break;case a.EOF:this._err(T.eofInTag),this._emitEOFToken();break;default:this.currentAttr.value+=String.fromCodePoint(e);}}_stateAttributeValueSingleQuoted(e){switch(e){case a.APOSTROPHE:this.state=P.AFTER_ATTRIBUTE_VALUE_QUOTED;break;case a.AMPERSAND:this.returnState=P.ATTRIBUTE_VALUE_SINGLE_QUOTED,this.state=P.CHARACTER_REFERENCE;break;case a.NULL:this._err(T.unexpectedNullCharacter),this.currentAttr.value+=s;break;case a.EOF:this._err(T.eofInTag),this._emitEOFToken();break;default:this.currentAttr.value+=String.fromCodePoint(e);}}_stateAttributeValueUnquoted(e){switch(e){case a.SPACE:case a.LINE_FEED:case a.TABULATION:case a.FORM_FEED:this._leaveAttrValue(),this.state=P.BEFORE_ATTRIBUTE_NAME;break;case a.AMPERSAND:this.returnState=P.ATTRIBUTE_VALUE_UNQUOTED,this.state=P.CHARACTER_REFERENCE;break;case a.GREATER_THAN_SIGN:this._leaveAttrValue(),this.state=P.DATA,this.emitCurrentTagToken();break;case a.NULL:this._err(T.unexpectedNullCharacter),this.currentAttr.value+=s;break;case a.QUOTATION_MARK:case a.APOSTROPHE:case a.LESS_THAN_SIGN:case a.EQUALS_SIGN:case a.GRAVE_ACCENT:this._err(T.unexpectedCharacterInUnquotedAttributeValue),this.currentAttr.value+=String.fromCodePoint(e);break;case a.EOF:this._err(T.eofInTag),this._emitEOFToken();break;default:this.currentAttr.value+=String.fromCodePoint(e);}}_stateAfterAttributeValueQuoted(e){switch(e){case a.SPACE:case a.LINE_FEED:case a.TABULATION:case a.FORM_FEED:this._leaveAttrValue(),this.state=P.BEFORE_ATTRIBUTE_NAME;break;case a.SOLIDUS:this._leaveAttrValue(),this.state=P.SELF_CLOSING_START_TAG;break;case a.GREATER_THAN_SIGN:this._leaveAttrValue(),this.state=P.DATA,this.emitCurrentTagToken();break;case a.EOF:this._err(T.eofInTag),this._emitEOFToken();break;default:this._err(T.missingWhitespaceBetweenAttributes),this.state=P.BEFORE_ATTRIBUTE_NAME,this._stateBeforeAttributeName(e);}}_stateSelfClosingStartTag(e){switch(e){case a.GREATER_THAN_SIGN:this.currentToken.selfClosing=!0,this.state=P.DATA,this.emitCurrentTagToken();break;case a.EOF:this._err(T.eofInTag),this._emitEOFToken();break;default:this._err(T.unexpectedSolidusInTag),this.state=P.BEFORE_ATTRIBUTE_NAME,this._stateBeforeAttributeName(e);}}_stateBogusComment(e){const t=this.currentToken;switch(e){case a.GREATER_THAN_SIGN:this.state=P.DATA,this.emitCurrentComment(t);break;case a.EOF:this.emitCurrentComment(t),this._emitEOFToken();break;case a.NULL:this._err(T.unexpectedNullCharacter),t.data+=s;break;default:t.data+=String.fromCodePoint(e);}}_stateMarkupDeclarationOpen(e){this._consumeSequenceIfMatch("--",!0)?(this._createCommentToken(3),this.state=P.COMMENT_START):this._consumeSequenceIfMatch(n,!1)?(this.currentLocation=this.getCurrentLocation(8),this.state=P.DOCTYPE):this._consumeSequenceIfMatch(r,!0)?this.inForeignNode?this.state=P.CDATA_SECTION:(this._err(T.cdataInHtmlContent),this._createCommentToken(8),this.currentToken.data="[CDATA[",this.state=P.BOGUS_COMMENT):this._ensureHibernation()||(this._err(T.incorrectlyOpenedComment),this._createCommentToken(2),this.state=P.BOGUS_COMMENT,this._stateBogusComment(e));}_stateCommentStart(e){switch(e){case a.HYPHEN_MINUS:this.state=P.COMMENT_START_DASH;break;case a.GREATER_THAN_SIGN:{this._err(T.abruptClosingOfEmptyComment),this.state=P.DATA;const e=this.currentToken;this.emitCurrentComment(e);break}default:this.state=P.COMMENT,this._stateComment(e);}}_stateCommentStartDash(e){const t=this.currentToken;switch(e){case a.HYPHEN_MINUS:this.state=P.COMMENT_END;break;case a.GREATER_THAN_SIGN:this._err(T.abruptClosingOfEmptyComment),this.state=P.DATA,this.emitCurrentComment(t);break;case a.EOF:this._err(T.eofInComment),this.emitCurrentComment(t),this._emitEOFToken();break;default:t.data+="-",this.state=P.COMMENT,this._stateComment(e);}}_stateComment(e){const t=this.currentToken;switch(e){case a.HYPHEN_MINUS:this.state=P.COMMENT_END_DASH;break;case a.LESS_THAN_SIGN:t.data+="<",this.state=P.COMMENT_LESS_THAN_SIGN;break;case a.NULL:this._err(T.unexpectedNullCharacter),t.data+=s;break;case a.EOF:this._err(T.eofInComment),this.emitCurrentComment(t),this._emitEOFToken();break;default:t.data+=String.fromCodePoint(e);}}_stateCommentLessThanSign(e){const t=this.currentToken;switch(e){case a.EXCLAMATION_MARK:t.data+="!",this.state=P.COMMENT_LESS_THAN_SIGN_BANG;break;case a.LESS_THAN_SIGN:t.data+="<";break;default:this.state=P.COMMENT,this._stateComment(e);}}_stateCommentLessThanSignBang(e){e===a.HYPHEN_MINUS?this.state=P.COMMENT_LESS_THAN_SIGN_BANG_DASH:(this.state=P.COMMENT,this._stateComment(e));}_stateCommentLessThanSignBangDash(e){e===a.HYPHEN_MINUS?this.state=P.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH:(this.state=P.COMMENT_END_DASH,this._stateCommentEndDash(e));}_stateCommentLessThanSignBangDashDash(e){e!==a.GREATER_THAN_SIGN&&e!==a.EOF&&this._err(T.nestedComment),this.state=P.COMMENT_END,this._stateCommentEnd(e);}_stateCommentEndDash(e){const t=this.currentToken;switch(e){case a.HYPHEN_MINUS:this.state=P.COMMENT_END;break;case a.EOF:this._err(T.eofInComment),this.emitCurrentComment(t),this._emitEOFToken();break;default:t.data+="-",this.state=P.COMMENT,this._stateComment(e);}}_stateCommentEnd(e){const t=this.currentToken;switch(e){case a.GREATER_THAN_SIGN:this.state=P.DATA,this.emitCurrentComment(t);break;case a.EXCLAMATION_MARK:this.state=P.COMMENT_END_BANG;break;case a.HYPHEN_MINUS:t.data+="-";break;case a.EOF:this._err(T.eofInComment),this.emitCurrentComment(t),this._emitEOFToken();break;default:t.data+="--",this.state=P.COMMENT,this._stateComment(e);}}_stateCommentEndBang(e){const t=this.currentToken;switch(e){case a.HYPHEN_MINUS:t.data+="--!",this.state=P.COMMENT_END_DASH;break;case a.GREATER_THAN_SIGN:this._err(T.incorrectlyClosedComment),this.state=P.DATA,this.emitCurrentComment(t);break;case a.EOF:this._err(T.eofInComment),this.emitCurrentComment(t),this._emitEOFToken();break;default:t.data+="--!",this.state=P.COMMENT,this._stateComment(e);}}_stateDoctype(e){switch(e){case a.SPACE:case a.LINE_FEED:case a.TABULATION:case a.FORM_FEED:this.state=P.BEFORE_DOCTYPE_NAME;break;case a.GREATER_THAN_SIGN:this.state=P.BEFORE_DOCTYPE_NAME,this._stateBeforeDoctypeName(e);break;case a.EOF:{this._err(T.eofInDoctype),this._createDoctypeToken(null);const e=this.currentToken;e.forceQuirks=!0,this.emitCurrentDoctype(e),this._emitEOFToken();break}default:this._err(T.missingWhitespaceBeforeDoctypeName),this.state=P.BEFORE_DOCTYPE_NAME,this._stateBeforeDoctypeName(e);}}_stateBeforeDoctypeName(e){if(H(e))this._createDoctypeToken(String.fromCharCode(w(e))),this.state=P.DOCTYPE_NAME;else switch(e){case a.SPACE:case a.LINE_FEED:case a.TABULATION:case a.FORM_FEED:break;case a.NULL:this._err(T.unexpectedNullCharacter),this._createDoctypeToken(s),this.state=P.DOCTYPE_NAME;break;case a.GREATER_THAN_SIGN:{this._err(T.missingDoctypeName),this._createDoctypeToken(null);const e=this.currentToken;e.forceQuirks=!0,this.emitCurrentDoctype(e),this.state=P.DATA;break}case a.EOF:{this._err(T.eofInDoctype),this._createDoctypeToken(null);const e=this.currentToken;e.forceQuirks=!0,this.emitCurrentDoctype(e),this._emitEOFToken();break}default:this._createDoctypeToken(String.fromCodePoint(e)),this.state=P.DOCTYPE_NAME;}}_stateDoctypeName(e){const t=this.currentToken;switch(e){case a.SPACE:case a.LINE_FEED:case a.TABULATION:case a.FORM_FEED:this.state=P.AFTER_DOCTYPE_NAME;break;case a.GREATER_THAN_SIGN:this.state=P.DATA,this.emitCurrentDoctype(t);break;case a.NULL:this._err(T.unexpectedNullCharacter),t.name+=s;break;case a.EOF:this._err(T.eofInDoctype),t.forceQuirks=!0,this.emitCurrentDoctype(t),this._emitEOFToken();break;default:t.name+=String.fromCodePoint(H(e)?w(e):e);}}_stateAfterDoctypeName(e){const t=this.currentToken;switch(e){case a.SPACE:case a.LINE_FEED:case a.TABULATION:case a.FORM_FEED:break;case a.GREATER_THAN_SIGN:this.state=P.DATA,this.emitCurrentDoctype(t);break;case a.EOF:this._err(T.eofInDoctype),t.forceQuirks=!0,this.emitCurrentDoctype(t),this._emitEOFToken();break;default:this._consumeSequenceIfMatch("public",!1)?this.state=P.AFTER_DOCTYPE_PUBLIC_KEYWORD:this._consumeSequenceIfMatch("system",!1)?this.state=P.AFTER_DOCTYPE_SYSTEM_KEYWORD:this._ensureHibernation()||(this._err(T.invalidCharacterSequenceAfterDoctypeName),t.forceQuirks=!0,this.state=P.BOGUS_DOCTYPE,this._stateBogusDoctype(e));}}_stateAfterDoctypePublicKeyword(e){const t=this.currentToken;switch(e){case a.SPACE:case a.LINE_FEED:case a.TABULATION:case a.FORM_FEED:this.state=P.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER;break;case a.QUOTATION_MARK:this._err(T.missingWhitespaceAfterDoctypePublicKeyword),t.publicId="",this.state=P.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;break;case a.APOSTROPHE:this._err(T.missingWhitespaceAfterDoctypePublicKeyword),t.publicId="",this.state=P.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;break;case a.GREATER_THAN_SIGN:this._err(T.missingDoctypePublicIdentifier),t.forceQuirks=!0,this.state=P.DATA,this.emitCurrentDoctype(t);break;case a.EOF:this._err(T.eofInDoctype),t.forceQuirks=!0,this.emitCurrentDoctype(t),this._emitEOFToken();break;default:this._err(T.missingQuoteBeforeDoctypePublicIdentifier),t.forceQuirks=!0,this.state=P.BOGUS_DOCTYPE,this._stateBogusDoctype(e);}}_stateBeforeDoctypePublicIdentifier(e){const t=this.currentToken;switch(e){case a.SPACE:case a.LINE_FEED:case a.TABULATION:case a.FORM_FEED:break;case a.QUOTATION_MARK:t.publicId="",this.state=P.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;break;case a.APOSTROPHE:t.publicId="",this.state=P.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;break;case a.GREATER_THAN_SIGN:this._err(T.missingDoctypePublicIdentifier),t.forceQuirks=!0,this.state=P.DATA,this.emitCurrentDoctype(t);break;case a.EOF:this._err(T.eofInDoctype),t.forceQuirks=!0,this.emitCurrentDoctype(t),this._emitEOFToken();break;default:this._err(T.missingQuoteBeforeDoctypePublicIdentifier),t.forceQuirks=!0,this.state=P.BOGUS_DOCTYPE,this._stateBogusDoctype(e);}}_stateDoctypePublicIdentifierDoubleQuoted(e){const t=this.currentToken;switch(e){case a.QUOTATION_MARK:this.state=P.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;break;case a.NULL:this._err(T.unexpectedNullCharacter),t.publicId+=s;break;case a.GREATER_THAN_SIGN:this._err(T.abruptDoctypePublicIdentifier),t.forceQuirks=!0,this.emitCurrentDoctype(t),this.state=P.DATA;break;case a.EOF:this._err(T.eofInDoctype),t.forceQuirks=!0,this.emitCurrentDoctype(t),this._emitEOFToken();break;default:t.publicId+=String.fromCodePoint(e);}}_stateDoctypePublicIdentifierSingleQuoted(e){const t=this.currentToken;switch(e){case a.APOSTROPHE:this.state=P.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;break;case a.NULL:this._err(T.unexpectedNullCharacter),t.publicId+=s;break;case a.GREATER_THAN_SIGN:this._err(T.abruptDoctypePublicIdentifier),t.forceQuirks=!0,this.emitCurrentDoctype(t),this.state=P.DATA;break;case a.EOF:this._err(T.eofInDoctype),t.forceQuirks=!0,this.emitCurrentDoctype(t),this._emitEOFToken();break;default:t.publicId+=String.fromCodePoint(e);}}_stateAfterDoctypePublicIdentifier(e){const t=this.currentToken;switch(e){case a.SPACE:case a.LINE_FEED:case a.TABULATION:case a.FORM_FEED:this.state=P.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS;break;case a.GREATER_THAN_SIGN:this.state=P.DATA,this.emitCurrentDoctype(t);break;case a.QUOTATION_MARK:this._err(T.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers),t.systemId="",this.state=P.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;break;case a.APOSTROPHE:this._err(T.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers),t.systemId="",this.state=P.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;break;case a.EOF:this._err(T.eofInDoctype),t.forceQuirks=!0,this.emitCurrentDoctype(t),this._emitEOFToken();break;default:this._err(T.missingQuoteBeforeDoctypeSystemIdentifier),t.forceQuirks=!0,this.state=P.BOGUS_DOCTYPE,this._stateBogusDoctype(e);}}_stateBetweenDoctypePublicAndSystemIdentifiers(e){const t=this.currentToken;switch(e){case a.SPACE:case a.LINE_FEED:case a.TABULATION:case a.FORM_FEED:break;case a.GREATER_THAN_SIGN:this.emitCurrentDoctype(t),this.state=P.DATA;break;case a.QUOTATION_MARK:t.systemId="",this.state=P.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;break;case a.APOSTROPHE:t.systemId="",this.state=P.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;break;case a.EOF:this._err(T.eofInDoctype),t.forceQuirks=!0,this.emitCurrentDoctype(t),this._emitEOFToken();break;default:this._err(T.missingQuoteBeforeDoctypeSystemIdentifier),t.forceQuirks=!0,this.state=P.BOGUS_DOCTYPE,this._stateBogusDoctype(e);}}_stateAfterDoctypeSystemKeyword(e){const t=this.currentToken;switch(e){case a.SPACE:case a.LINE_FEED:case a.TABULATION:case a.FORM_FEED:this.state=P.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER;break;case a.QUOTATION_MARK:this._err(T.missingWhitespaceAfterDoctypeSystemKeyword),t.systemId="",this.state=P.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;break;case a.APOSTROPHE:this._err(T.missingWhitespaceAfterDoctypeSystemKeyword),t.systemId="",this.state=P.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;break;case a.GREATER_THAN_SIGN:this._err(T.missingDoctypeSystemIdentifier),t.forceQuirks=!0,this.state=P.DATA,this.emitCurrentDoctype(t);break;case a.EOF:this._err(T.eofInDoctype),t.forceQuirks=!0,this.emitCurrentDoctype(t),this._emitEOFToken();break;default:this._err(T.missingQuoteBeforeDoctypeSystemIdentifier),t.forceQuirks=!0,this.state=P.BOGUS_DOCTYPE,this._stateBogusDoctype(e);}}_stateBeforeDoctypeSystemIdentifier(e){const t=this.currentToken;switch(e){case a.SPACE:case a.LINE_FEED:case a.TABULATION:case a.FORM_FEED:break;case a.QUOTATION_MARK:t.systemId="",this.state=P.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;break;case a.APOSTROPHE:t.systemId="",this.state=P.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;break;case a.GREATER_THAN_SIGN:this._err(T.missingDoctypeSystemIdentifier),t.forceQuirks=!0,this.state=P.DATA,this.emitCurrentDoctype(t);break;case a.EOF:this._err(T.eofInDoctype),t.forceQuirks=!0,this.emitCurrentDoctype(t),this._emitEOFToken();break;default:this._err(T.missingQuoteBeforeDoctypeSystemIdentifier),t.forceQuirks=!0,this.state=P.BOGUS_DOCTYPE,this._stateBogusDoctype(e);}}_stateDoctypeSystemIdentifierDoubleQuoted(e){const t=this.currentToken;switch(e){case a.QUOTATION_MARK:this.state=P.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;break;case a.NULL:this._err(T.unexpectedNullCharacter),t.systemId+=s;break;case a.GREATER_THAN_SIGN:this._err(T.abruptDoctypeSystemIdentifier),t.forceQuirks=!0,this.emitCurrentDoctype(t),this.state=P.DATA;break;case a.EOF:this._err(T.eofInDoctype),t.forceQuirks=!0,this.emitCurrentDoctype(t),this._emitEOFToken();break;default:t.systemId+=String.fromCodePoint(e);}}_stateDoctypeSystemIdentifierSingleQuoted(e){const t=this.currentToken;switch(e){case a.APOSTROPHE:this.state=P.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;break;case a.NULL:this._err(T.unexpectedNullCharacter),t.systemId+=s;break;case a.GREATER_THAN_SIGN:this._err(T.abruptDoctypeSystemIdentifier),t.forceQuirks=!0,this.emitCurrentDoctype(t),this.state=P.DATA;break;case a.EOF:this._err(T.eofInDoctype),t.forceQuirks=!0,this.emitCurrentDoctype(t),this._emitEOFToken();break;default:t.systemId+=String.fromCodePoint(e);}}_stateAfterDoctypeSystemIdentifier(e){const t=this.currentToken;switch(e){case a.SPACE:case a.LINE_FEED:case a.TABULATION:case a.FORM_FEED:break;case a.GREATER_THAN_SIGN:this.emitCurrentDoctype(t),this.state=P.DATA;break;case a.EOF:this._err(T.eofInDoctype),t.forceQuirks=!0,this.emitCurrentDoctype(t),this._emitEOFToken();break;default:this._err(T.unexpectedCharacterAfterDoctypeSystemIdentifier),this.state=P.BOGUS_DOCTYPE,this._stateBogusDoctype(e);}}_stateBogusDoctype(e){const t=this.currentToken;switch(e){case a.GREATER_THAN_SIGN:this.emitCurrentDoctype(t),this.state=P.DATA;break;case a.NULL:this._err(T.unexpectedNullCharacter);break;case a.EOF:this.emitCurrentDoctype(t),this._emitEOFToken();}}_stateCdataSection(e){switch(e){case a.RIGHT_SQUARE_BRACKET:this.state=P.CDATA_SECTION_BRACKET;break;case a.EOF:this._err(T.eofInCdata),this._emitEOFToken();break;default:this._emitCodePoint(e);}}_stateCdataSectionBracket(e){e===a.RIGHT_SQUARE_BRACKET?this.state=P.CDATA_SECTION_END:(this._emitChars("]"),this.state=P.CDATA_SECTION,this._stateCdataSection(e));}_stateCdataSectionEnd(e){switch(e){case a.GREATER_THAN_SIGN:this.state=P.DATA;break;case a.RIGHT_SQUARE_BRACKET:this._emitChars("]");break;default:this._emitChars("]]"),this.state=P.CDATA_SECTION,this._stateCdataSection(e);}}_stateCharacterReference(e){e===a.NUMBER_SIGN?this.state=P.NUMERIC_CHARACTER_REFERENCE:U(e)?(this.state=P.NAMED_CHARACTER_REFERENCE,this._stateNamedCharacterReference(e)):(this._flushCodePointConsumedAsCharacterReference(a.AMPERSAND),this._reconsumeInState(this.returnState,e));}_stateNamedCharacterReference(e){const t=this._matchNamedCharacterReference(e);if(this._ensureHibernation());else if(t){for(let e=0;e<t.length;e++)this._flushCodePointConsumedAsCharacterReference(t[e]);this.state=this.returnState;}else this._flushCodePointConsumedAsCharacterReference(a.AMPERSAND),this.state=P.AMBIGUOUS_AMPERSAND;}_stateAmbiguousAmpersand(e){U(e)?this._flushCodePointConsumedAsCharacterReference(e):(e===a.SEMICOLON&&this._err(T.unknownNamedCharacterReference),this._reconsumeInState(this.returnState,e));}_stateNumericCharacterReference(e){this.charRefCode=0,e===a.LATIN_SMALL_X||e===a.LATIN_CAPITAL_X?this.state=P.HEXADEMICAL_CHARACTER_REFERENCE_START:B(e)?(this.state=P.DECIMAL_CHARACTER_REFERENCE,this._stateDecimalCharacterReference(e)):(this._err(T.absenceOfDigitsInNumericCharacterReference),this._flushCodePointConsumedAsCharacterReference(a.AMPERSAND),this._flushCodePointConsumedAsCharacterReference(a.NUMBER_SIGN),this._reconsumeInState(this.returnState,e));}_stateHexademicalCharacterReferenceStart(e){!function(e){return B(e)||G(e)||y(e)}(e)?(this._err(T.absenceOfDigitsInNumericCharacterReference),this._flushCodePointConsumedAsCharacterReference(a.AMPERSAND),this._flushCodePointConsumedAsCharacterReference(a.NUMBER_SIGN),this._unconsume(2),this.state=this.returnState):(this.state=P.HEXADEMICAL_CHARACTER_REFERENCE,this._stateHexademicalCharacterReference(e));}_stateHexademicalCharacterReference(e){G(e)?this.charRefCode=16*this.charRefCode+e-55:y(e)?this.charRefCode=16*this.charRefCode+e-87:B(e)?this.charRefCode=16*this.charRefCode+e-48:e===a.SEMICOLON?this.state=P.NUMERIC_CHARACTER_REFERENCE_END:(this._err(T.missingSemicolonAfterCharacterReference),this.state=P.NUMERIC_CHARACTER_REFERENCE_END,this._stateNumericCharacterReferenceEnd(e));}_stateDecimalCharacterReference(e){B(e)?this.charRefCode=10*this.charRefCode+e-48:e===a.SEMICOLON?this.state=P.NUMERIC_CHARACTER_REFERENCE_END:(this._err(T.missingSemicolonAfterCharacterReference),this.state=P.NUMERIC_CHARACTER_REFERENCE_END,this._stateNumericCharacterReferenceEnd(e));}_stateNumericCharacterReferenceEnd(e){if(this.charRefCode===a.NULL)this._err(T.nullCharacterReference),this.charRefCode=a.REPLACEMENT_CHARACTER;else if(this.charRefCode>1114111)this._err(T.characterReferenceOutsideUnicodeRange),this.charRefCode=a.REPLACEMENT_CHARACTER;else if(o(this.charRefCode))this._err(T.surrogateCharacterReference),this.charRefCode=a.REPLACEMENT_CHARACTER;else if(E(this.charRefCode))this._err(T.noncharacterCharacterReference);else if(c(this.charRefCode)||this.charRefCode===a.CARRIAGE_RETURN){this._err(T.controlCharacterReference);const e=k.get(this.charRefCode);void 0!==e&&(this.charRefCode=e);}this._flushCodePointConsumedAsCharacterReference(this.charRefCode),this._reconsumeInState(this.returnState,e);}}const Q=new Set([u.DD,u.DT,u.LI,u.OPTGROUP,u.OPTION,u.P,u.RB,u.RP,u.RT,u.RTC]),q=new Set([...Q,u.CAPTION,u.COLGROUP,u.TBODY,u.TD,u.TFOOT,u.TH,u.THEAD,u.TR]),W=new Map([[u.APPLET,p.HTML],[u.CAPTION,p.HTML],[u.HTML,p.HTML],[u.MARQUEE,p.HTML],[u.OBJECT,p.HTML],[u.TABLE,p.HTML],[u.TD,p.HTML],[u.TEMPLATE,p.HTML],[u.TH,p.HTML],[u.ANNOTATION_XML,p.MATHML],[u.MI,p.MATHML],[u.MN,p.MATHML],[u.MO,p.MATHML],[u.MS,p.MATHML],[u.MTEXT,p.MATHML],[u.DESC,p.SVG],[u.FOREIGN_OBJECT,p.SVG],[u.TITLE,p.SVG]]),X=[u.H1,u.H2,u.H3,u.H4,u.H5,u.H6],K=[u.TR,u.TEMPLATE,u.HTML],V=[u.TBODY,u.TFOOT,u.THEAD,u.TEMPLATE,u.HTML],z=[u.TABLE,u.TEMPLATE,u.HTML],j=[u.TD,u.TH];class J{get currentTmplContentOrNode(){return this._isInTemplate()?this.treeAdapter.getTemplateContent(this.current):this.current}constructor(e,t,s){this.treeAdapter=t,this.handler=s,this.items=[],this.tagIDs=[],this.stackTop=-1,this.tmplCount=0,this.currentTagId=u.UNKNOWN,this.current=e;}_indexOf(e){return this.items.lastIndexOf(e,this.stackTop)}_isInTemplate(){return this.currentTagId===u.TEMPLATE&&this.treeAdapter.getNamespaceURI(this.current)===p.HTML}_updateCurrentElement(){this.current=this.items[this.stackTop],this.currentTagId=this.tagIDs[this.stackTop];}push(e,t){this.stackTop++,this.items[this.stackTop]=e,this.current=e,this.tagIDs[this.stackTop]=t,this.currentTagId=t,this._isInTemplate()&&this.tmplCount++,this.handler.onItemPush(e,t,!0);}pop(){const e=this.current;this.tmplCount>0&&this._isInTemplate()&&this.tmplCount--,this.stackTop--,this._updateCurrentElement(),this.handler.onItemPop(e,!0);}replace(e,t){const s=this._indexOf(e);this.items[s]=t,s===this.stackTop&&(this.current=t);}insertAfter(e,t,s){const a=this._indexOf(e)+1;this.items.splice(a,0,t),this.tagIDs.splice(a,0,s),this.stackTop++,a===this.stackTop&&this._updateCurrentElement(),this.handler.onItemPush(this.current,this.currentTagId,a===this.stackTop);}popUntilTagNamePopped(e){let t=this.stackTop+1;do{t=this.tagIDs.lastIndexOf(e,t-1);}while(t>0&&this.treeAdapter.getNamespaceURI(this.items[t])!==p.HTML);this.shortenToLength(t<0?0:t);}shortenToLength(e){for(;this.stackTop>=e;){const t=this.current;this.tmplCount>0&&this._isInTemplate()&&(this.tmplCount-=1),this.stackTop--,this._updateCurrentElement(),this.handler.onItemPop(t,this.stackTop<e);}}popUntilElementPopped(e){const t=this._indexOf(e);this.shortenToLength(t<0?0:t);}popUntilPopped(e,t){const s=this._indexOfTagNames(e,t);this.shortenToLength(s<0?0:s);}popUntilNumberedHeaderPopped(){this.popUntilPopped(X,p.HTML);}popUntilTableCellPopped(){this.popUntilPopped(j,p.HTML);}popAllUpToHtmlElement(){this.tmplCount=0,this.shortenToLength(1);}_indexOfTagNames(e,t){for(let s=this.stackTop;s>=0;s--)if(e.includes(this.tagIDs[s])&&this.treeAdapter.getNamespaceURI(this.items[s])===t)return s;return -1}clearBackTo(e,t){const s=this._indexOfTagNames(e,t);this.shortenToLength(s+1);}clearBackToTableContext(){this.clearBackTo(z,p.HTML);}clearBackToTableBodyContext(){this.clearBackTo(V,p.HTML);}clearBackToTableRowContext(){this.clearBackTo(K,p.HTML);}remove(e){const t=this._indexOf(e);t>=0&&(t===this.stackTop?this.pop():(this.items.splice(t,1),this.tagIDs.splice(t,1),this.stackTop--,this._updateCurrentElement(),this.handler.onItemPop(e,!1)));}tryPeekProperlyNestedBodyElement(){return this.stackTop>=1&&this.tagIDs[1]===u.BODY?this.items[1]:null}contains(e){return this._indexOf(e)>-1}getCommonAncestor(e){const t=this._indexOf(e)-1;return t>=0?this.items[t]:null}isRootHtmlElementCurrent(){return 0===this.stackTop&&this.tagIDs[0]===u.HTML}hasInScope(e){for(let t=this.stackTop;t>=0;t--){const s=this.tagIDs[t],a=this.treeAdapter.getNamespaceURI(this.items[t]);if(s===e&&a===p.HTML)return !0;if(W.get(s)===a)return !1}return !0}hasNumberedHeaderInScope(){for(let e=this.stackTop;e>=0;e--){const t=this.tagIDs[e],s=this.treeAdapter.getNamespaceURI(this.items[e]);if(g(t)&&s===p.HTML)return !0;if(W.get(t)===s)return !1}return !0}hasInListItemScope(e){for(let t=this.stackTop;t>=0;t--){const s=this.tagIDs[t],a=this.treeAdapter.getNamespaceURI(this.items[t]);if(s===e&&a===p.HTML)return !0;if((s===u.UL||s===u.OL)&&a===p.HTML||W.get(s)===a)return !1}return !0}hasInButtonScope(e){for(let t=this.stackTop;t>=0;t--){const s=this.tagIDs[t],a=this.treeAdapter.getNamespaceURI(this.items[t]);if(s===e&&a===p.HTML)return !0;if(s===u.BUTTON&&a===p.HTML||W.get(s)===a)return !1}return !0}hasInTableScope(e){for(let t=this.stackTop;t>=0;t--){const s=this.tagIDs[t];if(this.treeAdapter.getNamespaceURI(this.items[t])===p.HTML){if(s===e)return !0;if(s===u.TABLE||s===u.TEMPLATE||s===u.HTML)return !1}}return !0}hasTableBodyContextInTableScope(){for(let e=this.stackTop;e>=0;e--){const t=this.tagIDs[e];if(this.treeAdapter.getNamespaceURI(this.items[e])===p.HTML){if(t===u.TBODY||t===u.THEAD||t===u.TFOOT)return !0;if(t===u.TABLE||t===u.HTML)return !1}}return !0}hasInSelectScope(e){for(let t=this.stackTop;t>=0;t--){const s=this.tagIDs[t];if(this.treeAdapter.getNamespaceURI(this.items[t])===p.HTML){if(s===e)return !0;if(s!==u.OPTION&&s!==u.OPTGROUP)return !1}}return !0}generateImpliedEndTags(){for(;Q.has(this.currentTagId);)this.pop();}generateImpliedEndTagsThoroughly(){for(;q.has(this.currentTagId);)this.pop();}generateImpliedEndTagsWithExclusion(e){for(;this.currentTagId!==e&&q.has(this.currentTagId);)this.pop();}}var Z;!function(e){e[e.Marker=0]="Marker",e[e.Element=1]="Element";}(Z=Z||(Z={}));const $={type:Z.Marker};class ee{constructor(e){this.treeAdapter=e,this.entries=[],this.bookmark=null;}_getNoahArkConditionCandidates(e,t){const s=[],a=t.length,r=this.treeAdapter.getTagName(e),n=this.treeAdapter.getNamespaceURI(e);for(let e=0;e<this.entries.length;e++){const t=this.entries[e];if(t.type===Z.Marker)break;const{element:i}=t;if(this.treeAdapter.getTagName(i)===r&&this.treeAdapter.getNamespaceURI(i)===n){const t=this.treeAdapter.getAttrList(i);t.length===a&&s.push({idx:e,attrs:t});}}return s}_ensureNoahArkCondition(e){if(this.entries.length<3)return;const t=this.treeAdapter.getAttrList(e),s=this._getNoahArkConditionCandidates(e,t);if(s.length<3)return;const a=new Map(t.map((e=>[e.name,e.value])));let r=0;for(let e=0;e<s.length;e++){const t=s[e];t.attrs.every((e=>a.get(e.name)===e.value))&&(r+=1,r>=3&&this.entries.splice(t.idx,1));}}insertMarker(){this.entries.unshift($);}pushElement(e,t){this._ensureNoahArkCondition(e),this.entries.unshift({type:Z.Element,element:e,token:t});}insertElementAfterBookmark(e,t){const s=this.entries.indexOf(this.bookmark);this.entries.splice(s,0,{type:Z.Element,element:e,token:t});}removeEntry(e){const t=this.entries.indexOf(e);t>=0&&this.entries.splice(t,1);}clearToLastMarker(){const e=this.entries.indexOf($);e>=0?this.entries.splice(0,e+1):this.entries.length=0;}getElementEntryInScopeWithTagName(e){const t=this.entries.find((t=>t.type===Z.Marker||this.treeAdapter.getTagName(t.element)===e));return t&&t.type===Z.Element?t:null}getElementEntry(e){return this.entries.find((t=>t.type===Z.Element&&t.element===e))}}function te(e){return {nodeName:"#text",value:e,parentNode:null}}const se={createDocument:()=>({nodeName:"#document",mode:I.NO_QUIRKS,childNodes:[]}),createDocumentFragment:()=>({nodeName:"#document-fragment",childNodes:[]}),createElement:(e,t,s)=>({nodeName:e,tagName:e,attrs:s,namespaceURI:t,childNodes:[],parentNode:null}),createCommentNode:e=>({nodeName:"#comment",data:e,parentNode:null}),appendChild(e,t){e.childNodes.push(t),t.parentNode=e;},insertBefore(e,t,s){const a=e.childNodes.indexOf(s);e.childNodes.splice(a,0,t),t.parentNode=e;},setTemplateContent(e,t){e.content=t;},getTemplateContent:e=>e.content,setDocumentType(e,t,s,a){const r=e.childNodes.find((e=>"#documentType"===e.nodeName));if(r)r.name=t,r.publicId=s,r.systemId=a;else {const r={nodeName:"#documentType",name:t,publicId:s,systemId:a,parentNode:null};se.appendChild(e,r);}},setDocumentMode(e,t){e.mode=t;},getDocumentMode:e=>e.mode,detachNode(e){if(e.parentNode){const t=e.parentNode.childNodes.indexOf(e);e.parentNode.childNodes.splice(t,1),e.parentNode=null;}},insertText(e,t){if(e.childNodes.length>0){const s=e.childNodes[e.childNodes.length-1];if(se.isTextNode(s))return void(s.value+=t)}se.appendChild(e,te(t));},insertTextBefore(e,t,s){const a=e.childNodes[e.childNodes.indexOf(s)-1];a&&se.isTextNode(a)?a.value+=t:se.insertBefore(e,te(t),s);},adoptAttributes(e,t){const s=new Set(e.attrs.map((e=>e.name)));for(let a=0;a<t.length;a++)s.has(t[a].name)||e.attrs.push(t[a]);},getFirstChild:e=>e.childNodes[0],getChildNodes:e=>e.childNodes,getParentNode:e=>e.parentNode,getAttrList:e=>e.attrs,getTagName:e=>e.tagName,getNamespaceURI:e=>e.namespaceURI,getTextNodeContent:e=>e.value,getCommentNodeContent:e=>e.data,getDocumentTypeNodeName:e=>e.name,getDocumentTypeNodePublicId:e=>e.publicId,getDocumentTypeNodeSystemId:e=>e.systemId,isTextNode:e=>"#text"===e.nodeName,isCommentNode:e=>"#comment"===e.nodeName,isDocumentTypeNode:e=>"#documentType"===e.nodeName,isElementNode:e=>Object.prototype.hasOwnProperty.call(e,"tagName"),setNodeSourceCodeLocation(e,t){e.sourceCodeLocation=t;},getNodeSourceCodeLocation:e=>e.sourceCodeLocation,updateNodeSourceCodeLocation(e,t){e.sourceCodeLocation={...e.sourceCodeLocation,...t};}},ae="html",re=["+//silmaril//dtd html pro v0r11 19970101//","-//as//dtd html 3.0 aswedit + extensions//","-//advasoft ltd//dtd html 3.0 aswedit + extensions//","-//ietf//dtd html 2.0 level 1//","-//ietf//dtd html 2.0 level 2//","-//ietf//dtd html 2.0 strict level 1//","-//ietf//dtd html 2.0 strict level 2//","-//ietf//dtd html 2.0 strict//","-//ietf//dtd html 2.0//","-//ietf//dtd html 2.1e//","-//ietf//dtd html 3.0//","-//ietf//dtd html 3.2 final//","-//ietf//dtd html 3.2//","-//ietf//dtd html 3//","-//ietf//dtd html level 0//","-//ietf//dtd html level 1//","-//ietf//dtd html level 2//","-//ietf//dtd html level 3//","-//ietf//dtd html strict level 0//","-//ietf//dtd html strict level 1//","-//ietf//dtd html strict level 2//","-//ietf//dtd html strict level 3//","-//ietf//dtd html strict//","-//ietf//dtd html//","-//metrius//dtd metrius presentational//","-//microsoft//dtd internet explorer 2.0 html strict//","-//microsoft//dtd internet explorer 2.0 html//","-//microsoft//dtd internet explorer 2.0 tables//","-//microsoft//dtd internet explorer 3.0 html strict//","-//microsoft//dtd internet explorer 3.0 html//","-//microsoft//dtd internet explorer 3.0 tables//","-//netscape comm. corp.//dtd html//","-//netscape comm. corp.//dtd strict html//","-//o'reilly and associates//dtd html 2.0//","-//o'reilly and associates//dtd html extended 1.0//","-//o'reilly and associates//dtd html extended relaxed 1.0//","-//sq//dtd html 2.0 hotmetal + extensions//","-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//","-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//","-//spyglass//dtd html 2.0 extended//","-//sun microsystems corp.//dtd hotjava html//","-//sun microsystems corp.//dtd hotjava strict html//","-//w3c//dtd html 3 1995-03-24//","-//w3c//dtd html 3.2 draft//","-//w3c//dtd html 3.2 final//","-//w3c//dtd html 3.2//","-//w3c//dtd html 3.2s draft//","-//w3c//dtd html 4.0 frameset//","-//w3c//dtd html 4.0 transitional//","-//w3c//dtd html experimental 19960712//","-//w3c//dtd html experimental 970421//","-//w3c//dtd w3 html//","-//w3o//dtd w3 html 3.0//","-//webtechs//dtd mozilla html 2.0//","-//webtechs//dtd mozilla html//"],ne=[...re,"-//w3c//dtd html 4.01 frameset//","-//w3c//dtd html 4.01 transitional//"],ie=new Set(["-//w3o//dtd w3 html strict 3.0//en//","-/w3c/dtd html 4.0 transitional/en","html"]),oe=["-//w3c//dtd xhtml 1.0 frameset//","-//w3c//dtd xhtml 1.0 transitional//"],ce=[...oe,"-//w3c//dtd html 4.01 frameset//","-//w3c//dtd html 4.01 transitional//"];function Ee(e,t){return t.some((t=>e.startsWith(t)))}const Te="text/html",he="application/xhtml+xml",_e="definitionurl",Ae="definitionURL",le=new Map(["attributeName","attributeType","baseFrequency","baseProfile","calcMode","clipPathUnits","diffuseConstant","edgeMode","filterUnits","glyphRef","gradientTransform","gradientUnits","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","lengthAdjust","limitingConeAngle","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","numOctaves","pathLength","patternContentUnits","patternTransform","patternUnits","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","specularConstant","specularExponent","spreadMethod","startOffset","stdDeviation","stitchTiles","surfaceScale","systemLanguage","tableValues","targetX","targetY","textLength","viewBox","viewTarget","xChannelSelector","yChannelSelector","zoomAndPan"].map((e=>[e.toLowerCase(),e]))),me=new Map([["xlink:actuate",{prefix:"xlink",name:"actuate",namespace:p.XLINK}],["xlink:arcrole",{prefix:"xlink",name:"arcrole",namespace:p.XLINK}],["xlink:href",{prefix:"xlink",name:"href",namespace:p.XLINK}],["xlink:role",{prefix:"xlink",name:"role",namespace:p.XLINK}],["xlink:show",{prefix:"xlink",name:"show",namespace:p.XLINK}],["xlink:title",{prefix:"xlink",name:"title",namespace:p.XLINK}],["xlink:type",{prefix:"xlink",name:"type",namespace:p.XLINK}],["xml:base",{prefix:"xml",name:"base",namespace:p.XML}],["xml:lang",{prefix:"xml",name:"lang",namespace:p.XML}],["xml:space",{prefix:"xml",name:"space",namespace:p.XML}],["xmlns",{prefix:"",name:"xmlns",namespace:p.XMLNS}],["xmlns:xlink",{prefix:"xmlns",name:"xlink",namespace:p.XMLNS}]]),pe=new Map(["altGlyph","altGlyphDef","altGlyphItem","animateColor","animateMotion","animateTransform","clipPath","feBlend","feColorMatrix","feComponentTransfer","feComposite","feConvolveMatrix","feDiffuseLighting","feDisplacementMap","feDistantLight","feFlood","feFuncA","feFuncB","feFuncG","feFuncR","feGaussianBlur","feImage","feMerge","feMergeNode","feMorphology","feOffset","fePointLight","feSpecularLighting","feSpotLight","feTile","feTurbulence","foreignObject","glyphRef","linearGradient","radialGradient","textPath"].map((e=>[e.toLowerCase(),e]))),de=new Set([u.B,u.BIG,u.BLOCKQUOTE,u.BODY,u.BR,u.CENTER,u.CODE,u.DD,u.DIV,u.DL,u.DT,u.EM,u.EMBED,u.H1,u.H2,u.H3,u.H4,u.H5,u.H6,u.HEAD,u.HR,u.I,u.IMG,u.LI,u.LISTING,u.MENU,u.META,u.NOBR,u.OL,u.P,u.PRE,u.RUBY,u.S,u.SMALL,u.SPAN,u.STRONG,u.STRIKE,u.SUB,u.SUP,u.TABLE,u.TT,u.U,u.UL,u.VAR]);function Ie(e){for(let t=0;t<e.attrs.length;t++)if(e.attrs[t].name===_e){e.attrs[t].name=Ae;break}}function Ne(e){for(let t=0;t<e.attrs.length;t++){const s=le.get(e.attrs[t].name);null!=s&&(e.attrs[t].name=s);}}function ue(e){for(let t=0;t<e.attrs.length;t++){const s=me.get(e.attrs[t].name);s&&(e.attrs[t].prefix=s.prefix,e.attrs[t].name=s.name,e.attrs[t].namespace=s.namespace);}}const Ce="hidden",De=8,Se=3;var Re;!function(e){e[e.INITIAL=0]="INITIAL",e[e.BEFORE_HTML=1]="BEFORE_HTML",e[e.BEFORE_HEAD=2]="BEFORE_HEAD",e[e.IN_HEAD=3]="IN_HEAD",e[e.IN_HEAD_NO_SCRIPT=4]="IN_HEAD_NO_SCRIPT",e[e.AFTER_HEAD=5]="AFTER_HEAD",e[e.IN_BODY=6]="IN_BODY",e[e.TEXT=7]="TEXT",e[e.IN_TABLE=8]="IN_TABLE",e[e.IN_TABLE_TEXT=9]="IN_TABLE_TEXT",e[e.IN_CAPTION=10]="IN_CAPTION",e[e.IN_COLUMN_GROUP=11]="IN_COLUMN_GROUP",e[e.IN_TABLE_BODY=12]="IN_TABLE_BODY",e[e.IN_ROW=13]="IN_ROW",e[e.IN_CELL=14]="IN_CELL",e[e.IN_SELECT=15]="IN_SELECT",e[e.IN_SELECT_IN_TABLE=16]="IN_SELECT_IN_TABLE",e[e.IN_TEMPLATE=17]="IN_TEMPLATE",e[e.AFTER_BODY=18]="AFTER_BODY",e[e.IN_FRAMESET=19]="IN_FRAMESET",e[e.AFTER_FRAMESET=20]="AFTER_FRAMESET",e[e.AFTER_AFTER_BODY=21]="AFTER_AFTER_BODY",e[e.AFTER_AFTER_FRAMESET=22]="AFTER_AFTER_FRAMESET";}(Re||(Re={}));const Oe={startLine:-1,startCol:-1,startOffset:-1,endLine:-1,endCol:-1,endOffset:-1},fe=new Set([u.TABLE,u.TBODY,u.TFOOT,u.THEAD,u.TR]),Le={scriptingEnabled:!0,sourceCodeLocationInfo:!1,treeAdapter:se,onParseError:null};class Me{constructor(e,t,s=null,a=null){this.fragmentContext=s,this.scriptHandler=a,this.currentToken=null,this.stopped=!1,this.insertionMode=Re.INITIAL,this.originalInsertionMode=Re.INITIAL,this.headElement=null,this.formElement=null,this.currentNotInHTML=!1,this.tmplInsertionModeStack=[],this.pendingCharacterTokens=[],this.hasNonWhitespacePendingCharacterToken=!1,this.framesetOk=!0,this.skipNextNewLine=!1,this.fosterParentingEnabled=!1,this.options={...Le,...e},this.treeAdapter=this.options.treeAdapter,this.onParseError=this.options.onParseError,this.onParseError&&(this.options.sourceCodeLocationInfo=!0),this.document=null!=t?t:this.treeAdapter.createDocument(),this.tokenizer=new v(this.options,this),this.activeFormattingElements=new ee(this.treeAdapter),this.fragmentContextID=s?f(this.treeAdapter.getTagName(s)):u.UNKNOWN,this._setContextModes(null!=s?s:this.document,this.fragmentContextID),this.openElements=new J(this.document,this.treeAdapter,this);}static parse(e,t){const s=new this(t);return s.tokenizer.write(e,!0),s.document}static getFragmentParser(e,t){const s={...Le,...t};null!=e||(e=s.treeAdapter.createElement(N.TEMPLATE,p.HTML,[]));const a=s.treeAdapter.createElement("documentmock",p.HTML,[]),r=new this(s,a,e);return r.fragmentContextID===u.TEMPLATE&&r.tmplInsertionModeStack.unshift(Re.IN_TEMPLATE),r._initTokenizerForFragmentParsing(),r._insertFakeRootElement(),r._resetInsertionMode(),r._findFormInFragmentContext(),r}getFragment(){const e=this.treeAdapter.getFirstChild(this.document),t=this.treeAdapter.createDocumentFragment();return this._adoptNodes(e,t),t}_err(e,t,s){var a;if(!this.onParseError)return;const r=null!==(a=e.location)&&void 0!==a?a:Oe,n={code:t,startLine:r.startLine,startCol:r.startCol,startOffset:r.startOffset,endLine:s?r.startLine:r.endLine,endCol:s?r.startCol:r.endCol,endOffset:s?r.startOffset:r.endOffset};this.onParseError(n);}onItemPush(e,t,s){var a,r;null===(r=(a=this.treeAdapter).onItemPush)||void 0===r||r.call(a,e),s&&this.openElements.stackTop>0&&this._setContextModes(e,t);}onItemPop(e,t){var s,a;if(this.options.sourceCodeLocationInfo&&this._setEndLocation(e,this.currentToken),null===(a=(s=this.treeAdapter).onItemPop)||void 0===a||a.call(s,e,this.openElements.current),t){let e,t;0===this.openElements.stackTop&&this.fragmentContext?(e=this.fragmentContext,t=this.fragmentContextID):({current:e,currentTagId:t}=this.openElements),this._setContextModes(e,t);}}_setContextModes(e,t){const s=e===this.document||this.treeAdapter.getNamespaceURI(e)===p.HTML;this.currentNotInHTML=!s,this.tokenizer.inForeignNode=!s&&!this._isIntegrationPoint(t,e);}_switchToTextParsing(e,t){this._insertElement(e,p.HTML),this.tokenizer.state=t,this.originalInsertionMode=this.insertionMode,this.insertionMode=Re.TEXT;}switchToPlaintextParsing(){this.insertionMode=Re.TEXT,this.originalInsertionMode=Re.IN_BODY,this.tokenizer.state=b.PLAINTEXT;}_getAdjustedCurrentElement(){return 0===this.openElements.stackTop&&this.fragmentContext?this.fragmentContext:this.openElements.current}_findFormInFragmentContext(){let e=this.fragmentContext;for(;e;){if(this.treeAdapter.getTagName(e)===N.FORM){this.formElement=e;break}e=this.treeAdapter.getParentNode(e);}}_initTokenizerForFragmentParsing(){if(this.fragmentContext&&this.treeAdapter.getNamespaceURI(this.fragmentContext)===p.HTML)switch(this.fragmentContextID){case u.TITLE:case u.TEXTAREA:this.tokenizer.state=b.RCDATA;break;case u.STYLE:case u.XMP:case u.IFRAME:case u.NOEMBED:case u.NOFRAMES:case u.NOSCRIPT:this.tokenizer.state=b.RAWTEXT;break;case u.SCRIPT:this.tokenizer.state=b.SCRIPT_DATA;break;case u.PLAINTEXT:this.tokenizer.state=b.PLAINTEXT;}}_setDocumentType(e){const t=e.name||"",s=e.publicId||"",a=e.systemId||"";if(this.treeAdapter.setDocumentType(this.document,t,s,a),e.location){const t=this.treeAdapter.getChildNodes(this.document).find((e=>this.treeAdapter.isDocumentTypeNode(e)));t&&this.treeAdapter.setNodeSourceCodeLocation(t,e.location);}}_attachElementToTree(e,t){if(this.options.sourceCodeLocationInfo){const s=t&&{...t,startTag:t};this.treeAdapter.setNodeSourceCodeLocation(e,s);}if(this._shouldFosterParentOnInsertion())this._fosterParentElement(e);else {const t=this.openElements.currentTmplContentOrNode;this.treeAdapter.appendChild(t,e);}}_appendElement(e,t){const s=this.treeAdapter.createElement(e.tagName,t,e.attrs);this._attachElementToTree(s,e.location);}_insertElement(e,t){const s=this.treeAdapter.createElement(e.tagName,t,e.attrs);this._attachElementToTree(s,e.location),this.openElements.push(s,e.tagID);}_insertFakeElement(e,t){const s=this.treeAdapter.createElement(e,p.HTML,[]);this._attachElementToTree(s,null),this.openElements.push(s,t);}_insertTemplate(e){const t=this.treeAdapter.createElement(e.tagName,p.HTML,e.attrs),s=this.treeAdapter.createDocumentFragment();this.treeAdapter.setTemplateContent(t,s),this._attachElementToTree(t,e.location),this.openElements.push(t,e.tagID),this.options.sourceCodeLocationInfo&&this.treeAdapter.setNodeSourceCodeLocation(s,null);}_insertFakeRootElement(){const e=this.treeAdapter.createElement(N.HTML,p.HTML,[]);this.options.sourceCodeLocationInfo&&this.treeAdapter.setNodeSourceCodeLocation(e,null),this.treeAdapter.appendChild(this.openElements.current,e),this.openElements.push(e,u.HTML);}_appendCommentNode(e,t){const s=this.treeAdapter.createCommentNode(e.data);this.treeAdapter.appendChild(t,s),this.options.sourceCodeLocationInfo&&this.treeAdapter.setNodeSourceCodeLocation(s,e.location);}_insertCharacters(e){let t,s;if(this._shouldFosterParentOnInsertion()?(({parent:t,beforeElement:s}=this._findFosterParentingLocation()),s?this.treeAdapter.insertTextBefore(t,e.chars,s):this.treeAdapter.insertText(t,e.chars)):(t=this.openElements.currentTmplContentOrNode,this.treeAdapter.insertText(t,e.chars)),!e.location)return;const a=this.treeAdapter.getChildNodes(t),r=s?a.lastIndexOf(s):a.length,n=a[r-1];if(this.treeAdapter.getNodeSourceCodeLocation(n)){const{endLine:t,endCol:s,endOffset:a}=e.location;this.treeAdapter.updateNodeSourceCodeLocation(n,{endLine:t,endCol:s,endOffset:a});}else this.options.sourceCodeLocationInfo&&this.treeAdapter.setNodeSourceCodeLocation(n,e.location);}_adoptNodes(e,t){for(let s=this.treeAdapter.getFirstChild(e);s;s=this.treeAdapter.getFirstChild(e))this.treeAdapter.detachNode(s),this.treeAdapter.appendChild(t,s);}_setEndLocation(e,t){if(this.treeAdapter.getNodeSourceCodeLocation(e)&&t.location){const s=t.location,a=this.treeAdapter.getTagName(e),r=t.type===h.END_TAG&&a===t.tagName?{endTag:{...s},endLine:s.endLine,endCol:s.endCol,endOffset:s.endOffset}:{endLine:s.startLine,endCol:s.startCol,endOffset:s.startOffset};this.treeAdapter.updateNodeSourceCodeLocation(e,r);}}shouldProcessStartTagTokenInForeignContent(e){if(!this.currentNotInHTML)return !1;let t,s;return 0===this.openElements.stackTop&&this.fragmentContext?(t=this.fragmentContext,s=this.fragmentContextID):({current:t,currentTagId:s}=this.openElements),(e.tagID!==u.SVG||this.treeAdapter.getTagName(t)!==N.ANNOTATION_XML||this.treeAdapter.getNamespaceURI(t)!==p.MATHML)&&(this.tokenizer.inForeignNode||(e.tagID===u.MGLYPH||e.tagID===u.MALIGNMARK)&&!this._isIntegrationPoint(s,t,p.HTML))}_processToken(e){switch(e.type){case h.CHARACTER:this.onCharacter(e);break;case h.NULL_CHARACTER:this.onNullCharacter(e);break;case h.COMMENT:this.onComment(e);break;case h.DOCTYPE:this.onDoctype(e);break;case h.START_TAG:this._processStartTag(e);break;case h.END_TAG:this.onEndTag(e);break;case h.EOF:this.onEof(e);break;case h.WHITESPACE_CHARACTER:this.onWhitespaceCharacter(e);}}_isIntegrationPoint(e,t,s){return function(e,t,s,a){return (!a||a===p.HTML)&&function(e,t,s){if(t===p.MATHML&&e===u.ANNOTATION_XML)for(let e=0;e<s.length;e++)if(s[e].name===d.ENCODING){const t=s[e].value.toLowerCase();return t===Te||t===he}return t===p.SVG&&(e===u.FOREIGN_OBJECT||e===u.DESC||e===u.TITLE)}(e,t,s)||(!a||a===p.MATHML)&&function(e,t){return t===p.MATHML&&(e===u.MI||e===u.MO||e===u.MN||e===u.MS||e===u.MTEXT)}(e,t)}(e,this.treeAdapter.getNamespaceURI(t),this.treeAdapter.getAttrList(t),s)}_reconstructActiveFormattingElements(){const e=this.activeFormattingElements.entries.length;if(e){const t=this.activeFormattingElements.entries.findIndex((e=>e.type===Z.Marker||this.openElements.contains(e.element)));for(let s=t<0?e-1:t-1;s>=0;s--){const e=this.activeFormattingElements.entries[s];this._insertElement(e.token,this.treeAdapter.getNamespaceURI(e.element)),e.element=this.openElements.current;}}}_closeTableCell(){this.openElements.generateImpliedEndTags(),this.openElements.popUntilTableCellPopped(),this.activeFormattingElements.clearToLastMarker(),this.insertionMode=Re.IN_ROW;}_closePElement(){this.openElements.generateImpliedEndTagsWithExclusion(u.P),this.openElements.popUntilTagNamePopped(u.P);}_resetInsertionMode(){for(let e=this.openElements.stackTop;e>=0;e--)switch(0===e&&this.fragmentContext?this.fragmentContextID:this.openElements.tagIDs[e]){case u.TR:return void(this.insertionMode=Re.IN_ROW);case u.TBODY:case u.THEAD:case u.TFOOT:return void(this.insertionMode=Re.IN_TABLE_BODY);case u.CAPTION:return void(this.insertionMode=Re.IN_CAPTION);case u.COLGROUP:return void(this.insertionMode=Re.IN_COLUMN_GROUP);case u.TABLE:return void(this.insertionMode=Re.IN_TABLE);case u.BODY:return void(this.insertionMode=Re.IN_BODY);case u.FRAMESET:return void(this.insertionMode=Re.IN_FRAMESET);case u.SELECT:return void this._resetInsertionModeForSelect(e);case u.TEMPLATE:return void(this.insertionMode=this.tmplInsertionModeStack[0]);case u.HTML:return void(this.insertionMode=this.headElement?Re.AFTER_HEAD:Re.BEFORE_HEAD);case u.TD:case u.TH:if(e>0)return void(this.insertionMode=Re.IN_CELL);break;case u.HEAD:if(e>0)return void(this.insertionMode=Re.IN_HEAD)}this.insertionMode=Re.IN_BODY;}_resetInsertionModeForSelect(e){if(e>0)for(let t=e-1;t>0;t--){const e=this.openElements.tagIDs[t];if(e===u.TEMPLATE)break;if(e===u.TABLE)return void(this.insertionMode=Re.IN_SELECT_IN_TABLE)}this.insertionMode=Re.IN_SELECT;}_isElementCausesFosterParenting(e){return fe.has(e)}_shouldFosterParentOnInsertion(){return this.fosterParentingEnabled&&this._isElementCausesFosterParenting(this.openElements.currentTagId)}_findFosterParentingLocation(){for(let e=this.openElements.stackTop;e>=0;e--){const t=this.openElements.items[e];switch(this.openElements.tagIDs[e]){case u.TEMPLATE:if(this.treeAdapter.getNamespaceURI(t)===p.HTML)return {parent:this.treeAdapter.getTemplateContent(t),beforeElement:null};break;case u.TABLE:{const s=this.treeAdapter.getParentNode(t);return s?{parent:s,beforeElement:t}:{parent:this.openElements.items[e-1],beforeElement:null}}}}return {parent:this.openElements.items[0],beforeElement:null}}_fosterParentElement(e){const t=this._findFosterParentingLocation();t.beforeElement?this.treeAdapter.insertBefore(t.parent,e,t.beforeElement):this.treeAdapter.appendChild(t.parent,e);}_isSpecialElement(e,t){const s=this.treeAdapter.getNamespaceURI(e);return M[s].has(t)}onCharacter(e){if(this.skipNextNewLine=!1,this.tokenizer.inForeignNode)!function(e,t){e._insertCharacters(t),e.framesetOk=!1;}(this,e);else switch(this.insertionMode){case Re.INITIAL:ye(this,e);break;case Re.BEFORE_HTML:we(this,e);break;case Re.BEFORE_HEAD:Ye(this,e);break;case Re.IN_HEAD:Qe(this,e);break;case Re.IN_HEAD_NO_SCRIPT:qe(this,e);break;case Re.AFTER_HEAD:We(this,e);break;case Re.IN_BODY:case Re.IN_CAPTION:case Re.IN_CELL:case Re.IN_TEMPLATE:Ve(this,e);break;case Re.TEXT:case Re.IN_SELECT:case Re.IN_SELECT_IN_TABLE:this._insertCharacters(e);break;case Re.IN_TABLE:case Re.IN_TABLE_BODY:case Re.IN_ROW:at(this,e);break;case Re.IN_TABLE_TEXT:ct(this,e);break;case Re.IN_COLUMN_GROUP:_t(this,e);break;case Re.AFTER_BODY:Ct(this,e);break;case Re.AFTER_AFTER_BODY:Dt(this,e);}}onNullCharacter(e){if(this.skipNextNewLine=!1,this.tokenizer.inForeignNode)!function(e,t){t.chars=s,e._insertCharacters(t);}(this,e);else switch(this.insertionMode){case Re.INITIAL:ye(this,e);break;case Re.BEFORE_HTML:we(this,e);break;case Re.BEFORE_HEAD:Ye(this,e);break;case Re.IN_HEAD:Qe(this,e);break;case Re.IN_HEAD_NO_SCRIPT:qe(this,e);break;case Re.AFTER_HEAD:We(this,e);break;case Re.TEXT:this._insertCharacters(e);break;case Re.IN_TABLE:case Re.IN_TABLE_BODY:case Re.IN_ROW:at(this,e);break;case Re.IN_COLUMN_GROUP:_t(this,e);break;case Re.AFTER_BODY:Ct(this,e);break;case Re.AFTER_AFTER_BODY:Dt(this,e);}}onComment(e){if(this.skipNextNewLine=!1,this.currentNotInHTML)Ue(this,e);else switch(this.insertionMode){case Re.INITIAL:case Re.BEFORE_HTML:case Re.BEFORE_HEAD:case Re.IN_HEAD:case Re.IN_HEAD_NO_SCRIPT:case Re.AFTER_HEAD:case Re.IN_BODY:case Re.IN_TABLE:case Re.IN_CAPTION:case Re.IN_COLUMN_GROUP:case Re.IN_TABLE_BODY:case Re.IN_ROW:case Re.IN_CELL:case Re.IN_SELECT:case Re.IN_SELECT_IN_TABLE:case Re.IN_TEMPLATE:case Re.IN_FRAMESET:case Re.AFTER_FRAMESET:Ue(this,e);break;case Re.IN_TABLE_TEXT:Et(this,e);break;case Re.AFTER_BODY:!function(e,t){e._appendCommentNode(t,e.openElements.items[0]);}(this,e);break;case Re.AFTER_AFTER_BODY:case Re.AFTER_AFTER_FRAMESET:!function(e,t){e._appendCommentNode(t,e.document);}(this,e);}}onDoctype(e){switch(this.skipNextNewLine=!1,this.insertionMode){case Re.INITIAL:!function(e,t){e._setDocumentType(t);const s=t.forceQuirks?I.QUIRKS:function(e){if(e.name!==ae)return I.QUIRKS;const{systemId:t}=e;if(t&&"http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd"===t.toLowerCase())return I.QUIRKS;let{publicId:s}=e;if(null!==s){if(s=s.toLowerCase(),ie.has(s))return I.QUIRKS;let e=null===t?ne:re;if(Ee(s,e))return I.QUIRKS;if(e=null===t?oe:ce,Ee(s,e))return I.LIMITED_QUIRKS}return I.NO_QUIRKS}(t);(function(e){return e.name===ae&&null===e.publicId&&(null===e.systemId||"about:legacy-compat"===e.systemId)})(t)||e._err(t,T.nonConformingDoctype),e.treeAdapter.setDocumentMode(e.document,s),e.insertionMode=Re.BEFORE_HTML;}(this,e);break;case Re.BEFORE_HEAD:case Re.IN_HEAD:case Re.IN_HEAD_NO_SCRIPT:case Re.AFTER_HEAD:this._err(e,T.misplacedDoctype);break;case Re.IN_TABLE_TEXT:Et(this,e);}}onStartTag(e){this.skipNextNewLine=!1,this.currentToken=e,this._processStartTag(e),e.selfClosing&&!e.ackSelfClosing&&this._err(e,T.nonVoidHtmlElementStartTagWithTrailingSolidus);}_processStartTag(e){this.shouldProcessStartTagTokenInForeignContent(e)?function(e,t){if(function(e){const t=e.tagID;return t===u.FONT&&e.attrs.some((({name:e})=>e===d.COLOR||e===d.SIZE||e===d.FACE))||de.has(t)}(t))St(e),e._startTagOutsideForeignContent(t);else {const s=e._getAdjustedCurrentElement(),a=e.treeAdapter.getNamespaceURI(s);a===p.MATHML?Ie(t):a===p.SVG&&(function(e){const t=pe.get(e.tagName);null!=t&&(e.tagName=t,e.tagID=f(e.tagName));}(t),Ne(t)),ue(t),t.selfClosing?e._appendElement(t,a):e._insertElement(t,a),t.ackSelfClosing=!0;}}(this,e):this._startTagOutsideForeignContent(e);}_startTagOutsideForeignContent(e){switch(this.insertionMode){case Re.INITIAL:ye(this,e);break;case Re.BEFORE_HTML:!function(e,t){t.tagID===u.HTML?(e._insertElement(t,p.HTML),e.insertionMode=Re.BEFORE_HEAD):we(e,t);}(this,e);break;case Re.BEFORE_HEAD:!function(e,t){switch(t.tagID){case u.HTML:$e(e,t);break;case u.HEAD:e._insertElement(t,p.HTML),e.headElement=e.openElements.current,e.insertionMode=Re.IN_HEAD;break;default:Ye(e,t);}}(this,e);break;case Re.IN_HEAD:xe(this,e);break;case Re.IN_HEAD_NO_SCRIPT:!function(e,t){switch(t.tagID){case u.HTML:$e(e,t);break;case u.BASEFONT:case u.BGSOUND:case u.HEAD:case u.LINK:case u.META:case u.NOFRAMES:case u.STYLE:xe(e,t);break;case u.NOSCRIPT:e._err(t,T.nestedNoscriptInHead);break;default:qe(e,t);}}(this,e);break;case Re.AFTER_HEAD:!function(e,t){switch(t.tagID){case u.HTML:$e(e,t);break;case u.BODY:e._insertElement(t,p.HTML),e.framesetOk=!1,e.insertionMode=Re.IN_BODY;break;case u.FRAMESET:e._insertElement(t,p.HTML),e.insertionMode=Re.IN_FRAMESET;break;case u.BASE:case u.BASEFONT:case u.BGSOUND:case u.LINK:case u.META:case u.NOFRAMES:case u.SCRIPT:case u.STYLE:case u.TEMPLATE:case u.TITLE:e._err(t,T.abandonedHeadElementChild),e.openElements.push(e.headElement,u.HEAD),xe(e,t),e.openElements.remove(e.headElement);break;case u.HEAD:e._err(t,T.misplacedStartTagForHeadElement);break;default:We(e,t);}}(this,e);break;case Re.IN_BODY:$e(this,e);break;case Re.IN_TABLE:rt(this,e);break;case Re.IN_TABLE_TEXT:Et(this,e);break;case Re.IN_CAPTION:!function(e,t){const s=t.tagID;Tt.has(s)?e.openElements.hasInTableScope(u.CAPTION)&&(e.openElements.generateImpliedEndTags(),e.openElements.popUntilTagNamePopped(u.CAPTION),e.activeFormattingElements.clearToLastMarker(),e.insertionMode=Re.IN_TABLE,rt(e,t)):$e(e,t);}(this,e);break;case Re.IN_COLUMN_GROUP:ht(this,e);break;case Re.IN_TABLE_BODY:At(this,e);break;case Re.IN_ROW:mt(this,e);break;case Re.IN_CELL:!function(e,t){const s=t.tagID;Tt.has(s)?(e.openElements.hasInTableScope(u.TD)||e.openElements.hasInTableScope(u.TH))&&(e._closeTableCell(),mt(e,t)):$e(e,t);}(this,e);break;case Re.IN_SELECT:dt(this,e);break;case Re.IN_SELECT_IN_TABLE:!function(e,t){const s=t.tagID;s===u.CAPTION||s===u.TABLE||s===u.TBODY||s===u.TFOOT||s===u.THEAD||s===u.TR||s===u.TD||s===u.TH?(e.openElements.popUntilTagNamePopped(u.SELECT),e._resetInsertionMode(),e._processStartTag(t)):dt(e,t);}(this,e);break;case Re.IN_TEMPLATE:!function(e,t){switch(t.tagID){case u.BASE:case u.BASEFONT:case u.BGSOUND:case u.LINK:case u.META:case u.NOFRAMES:case u.SCRIPT:case u.STYLE:case u.TEMPLATE:case u.TITLE:xe(e,t);break;case u.CAPTION:case u.COLGROUP:case u.TBODY:case u.TFOOT:case u.THEAD:e.tmplInsertionModeStack[0]=Re.IN_TABLE,e.insertionMode=Re.IN_TABLE,rt(e,t);break;case u.COL:e.tmplInsertionModeStack[0]=Re.IN_COLUMN_GROUP,e.insertionMode=Re.IN_COLUMN_GROUP,ht(e,t);break;case u.TR:e.tmplInsertionModeStack[0]=Re.IN_TABLE_BODY,e.insertionMode=Re.IN_TABLE_BODY,At(e,t);break;case u.TD:case u.TH:e.tmplInsertionModeStack[0]=Re.IN_ROW,e.insertionMode=Re.IN_ROW,mt(e,t);break;default:e.tmplInsertionModeStack[0]=Re.IN_BODY,e.insertionMode=Re.IN_BODY,$e(e,t);}}(this,e);break;case Re.AFTER_BODY:!function(e,t){t.tagID===u.HTML?$e(e,t):Ct(e,t);}(this,e);break;case Re.IN_FRAMESET:!function(e,t){switch(t.tagID){case u.HTML:$e(e,t);break;case u.FRAMESET:e._insertElement(t,p.HTML);break;case u.FRAME:e._appendElement(t,p.HTML),t.ackSelfClosing=!0;break;case u.NOFRAMES:xe(e,t);}}(this,e);break;case Re.AFTER_FRAMESET:!function(e,t){switch(t.tagID){case u.HTML:$e(e,t);break;case u.NOFRAMES:xe(e,t);}}(this,e);break;case Re.AFTER_AFTER_BODY:!function(e,t){t.tagID===u.HTML?$e(e,t):Dt(e,t);}(this,e);break;case Re.AFTER_AFTER_FRAMESET:!function(e,t){switch(t.tagID){case u.HTML:$e(e,t);break;case u.NOFRAMES:xe(e,t);}}(this,e);}}onEndTag(e){this.skipNextNewLine=!1,this.currentToken=e,this.currentNotInHTML?function(e,t){if(t.tagID===u.P||t.tagID===u.BR)return St(e),void e._endTagOutsideForeignContent(t);for(let s=e.openElements.stackTop;s>0;s--){const a=e.openElements.items[s];if(e.treeAdapter.getNamespaceURI(a)===p.HTML){e._endTagOutsideForeignContent(t);break}const r=e.treeAdapter.getTagName(a);if(r.toLowerCase()===t.tagName){t.tagName=r,e.openElements.shortenToLength(s);break}}}(this,e):this._endTagOutsideForeignContent(e);}_endTagOutsideForeignContent(e){switch(this.insertionMode){case Re.INITIAL:ye(this,e);break;case Re.BEFORE_HTML:!function(e,t){const s=t.tagID;s!==u.HTML&&s!==u.HEAD&&s!==u.BODY&&s!==u.BR||we(e,t);}(this,e);break;case Re.BEFORE_HEAD:!function(e,t){const s=t.tagID;s===u.HEAD||s===u.BODY||s===u.HTML||s===u.BR?Ye(e,t):e._err(t,T.endTagWithoutMatchingOpenElement);}(this,e);break;case Re.IN_HEAD:!function(e,t){switch(t.tagID){case u.HEAD:e.openElements.pop(),e.insertionMode=Re.AFTER_HEAD;break;case u.BODY:case u.BR:case u.HTML:Qe(e,t);break;case u.TEMPLATE:ve(e,t);break;default:e._err(t,T.endTagWithoutMatchingOpenElement);}}(this,e);break;case Re.IN_HEAD_NO_SCRIPT:!function(e,t){switch(t.tagID){case u.NOSCRIPT:e.openElements.pop(),e.insertionMode=Re.IN_HEAD;break;case u.BR:qe(e,t);break;default:e._err(t,T.endTagWithoutMatchingOpenElement);}}(this,e);break;case Re.AFTER_HEAD:!function(e,t){switch(t.tagID){case u.BODY:case u.HTML:case u.BR:We(e,t);break;case u.TEMPLATE:ve(e,t);break;default:e._err(t,T.endTagWithoutMatchingOpenElement);}}(this,e);break;case Re.IN_BODY:tt(this,e);break;case Re.TEXT:!function(e,t){var s;t.tagID===u.SCRIPT&&(null===(s=e.scriptHandler)||void 0===s||s.call(e,e.openElements.current)),e.openElements.pop(),e.insertionMode=e.originalInsertionMode;}(this,e);break;case Re.IN_TABLE:nt(this,e);break;case Re.IN_TABLE_TEXT:Et(this,e);break;case Re.IN_CAPTION:!function(e,t){const s=t.tagID;switch(s){case u.CAPTION:case u.TABLE:e.openElements.hasInTableScope(u.CAPTION)&&(e.openElements.generateImpliedEndTags(),e.openElements.popUntilTagNamePopped(u.CAPTION),e.activeFormattingElements.clearToLastMarker(),e.insertionMode=Re.IN_TABLE,s===u.TABLE&&nt(e,t));break;case u.BODY:case u.COL:case u.COLGROUP:case u.HTML:case u.TBODY:case u.TD:case u.TFOOT:case u.TH:case u.THEAD:case u.TR:break;default:tt(e,t);}}(this,e);break;case Re.IN_COLUMN_GROUP:!function(e,t){switch(t.tagID){case u.COLGROUP:e.openElements.currentTagId===u.COLGROUP&&(e.openElements.pop(),e.insertionMode=Re.IN_TABLE);break;case u.TEMPLATE:ve(e,t);break;case u.COL:break;default:_t(e,t);}}(this,e);break;case Re.IN_TABLE_BODY:lt(this,e);break;case Re.IN_ROW:pt(this,e);break;case Re.IN_CELL:!function(e,t){const s=t.tagID;switch(s){case u.TD:case u.TH:e.openElements.hasInTableScope(s)&&(e.openElements.generateImpliedEndTags(),e.openElements.popUntilTagNamePopped(s),e.activeFormattingElements.clearToLastMarker(),e.insertionMode=Re.IN_ROW);break;case u.TABLE:case u.TBODY:case u.TFOOT:case u.THEAD:case u.TR:e.openElements.hasInTableScope(s)&&(e._closeTableCell(),pt(e,t));break;case u.BODY:case u.CAPTION:case u.COL:case u.COLGROUP:case u.HTML:break;default:tt(e,t);}}(this,e);break;case Re.IN_SELECT:It(this,e);break;case Re.IN_SELECT_IN_TABLE:!function(e,t){const s=t.tagID;s===u.CAPTION||s===u.TABLE||s===u.TBODY||s===u.TFOOT||s===u.THEAD||s===u.TR||s===u.TD||s===u.TH?e.openElements.hasInTableScope(s)&&(e.openElements.popUntilTagNamePopped(u.SELECT),e._resetInsertionMode(),e.onEndTag(t)):It(e,t);}(this,e);break;case Re.IN_TEMPLATE:!function(e,t){t.tagID===u.TEMPLATE&&ve(e,t);}(this,e);break;case Re.AFTER_BODY:ut(this,e);break;case Re.IN_FRAMESET:!function(e,t){t.tagID!==u.FRAMESET||e.openElements.isRootHtmlElementCurrent()||(e.openElements.pop(),e.fragmentContext||e.openElements.currentTagId===u.FRAMESET||(e.insertionMode=Re.AFTER_FRAMESET));}(this,e);break;case Re.AFTER_FRAMESET:!function(e,t){t.tagID===u.HTML&&(e.insertionMode=Re.AFTER_AFTER_FRAMESET);}(this,e);break;case Re.AFTER_AFTER_BODY:Dt(this,e);}}onEof(e){switch(this.insertionMode){case Re.INITIAL:ye(this,e);break;case Re.BEFORE_HTML:we(this,e);break;case Re.BEFORE_HEAD:Ye(this,e);break;case Re.IN_HEAD:Qe(this,e);break;case Re.IN_HEAD_NO_SCRIPT:qe(this,e);break;case Re.AFTER_HEAD:We(this,e);break;case Re.IN_BODY:case Re.IN_TABLE:case Re.IN_CAPTION:case Re.IN_COLUMN_GROUP:case Re.IN_TABLE_BODY:case Re.IN_ROW:case Re.IN_CELL:case Re.IN_SELECT:case Re.IN_SELECT_IN_TABLE:st(this,e);break;case Re.TEXT:!function(e,t){e._err(t,T.eofInElementThatCanContainOnlyText),e.openElements.pop(),e.insertionMode=e.originalInsertionMode,e.onEof(t);}(this,e);break;case Re.IN_TABLE_TEXT:Et(this,e);break;case Re.IN_TEMPLATE:Nt(this,e);break;case Re.AFTER_BODY:case Re.IN_FRAMESET:case Re.AFTER_FRAMESET:case Re.AFTER_AFTER_BODY:case Re.AFTER_AFTER_FRAMESET:Ge(this,e);}}onWhitespaceCharacter(e){if(this.skipNextNewLine&&(this.skipNextNewLine=!1,e.chars.charCodeAt(0)===a.LINE_FEED)){if(1===e.chars.length)return;e.chars=e.chars.substr(1);}if(this.tokenizer.inForeignNode)this._insertCharacters(e);else switch(this.insertionMode){case Re.IN_HEAD:case Re.IN_HEAD_NO_SCRIPT:case Re.AFTER_HEAD:case Re.TEXT:case Re.IN_COLUMN_GROUP:case Re.IN_SELECT:case Re.IN_SELECT_IN_TABLE:case Re.IN_FRAMESET:case Re.AFTER_FRAMESET:this._insertCharacters(e);break;case Re.IN_BODY:case Re.IN_CAPTION:case Re.IN_CELL:case Re.IN_TEMPLATE:case Re.AFTER_BODY:case Re.AFTER_AFTER_BODY:case Re.AFTER_AFTER_FRAMESET:Ke(this,e);break;case Re.IN_TABLE:case Re.IN_TABLE_BODY:case Re.IN_ROW:at(this,e);break;case Re.IN_TABLE_TEXT:ot(this,e);}}}function ge(e,t){let s=e.activeFormattingElements.getElementEntryInScopeWithTagName(t.tagName);return s?e.openElements.contains(s.element)?e.openElements.hasInScope(t.tagID)||(s=null):(e.activeFormattingElements.removeEntry(s),s=null):et(e,t),s}function ke(e,t){let s=null,a=e.openElements.stackTop;for(;a>=0;a--){const r=e.openElements.items[a];if(r===t.element)break;e._isSpecialElement(r,e.openElements.tagIDs[a])&&(s=r);}return s||(e.openElements.shortenToLength(a<0?0:a),e.activeFormattingElements.removeEntry(t)),s}function Pe(e,t,s){let a=t,r=e.openElements.getCommonAncestor(t);for(let n=0,i=r;i!==s;n++,i=r){r=e.openElements.getCommonAncestor(i);const s=e.activeFormattingElements.getElementEntry(i),o=s&&n>=Se;!s||o?(o&&e.activeFormattingElements.removeEntry(s),e.openElements.remove(i)):(i=be(e,s),a===t&&(e.activeFormattingElements.bookmark=s),e.treeAdapter.detachNode(a),e.treeAdapter.appendChild(i,a),a=i);}return a}function be(e,t){const s=e.treeAdapter.getNamespaceURI(t.element),a=e.treeAdapter.createElement(t.token.tagName,s,t.token.attrs);return e.openElements.replace(t.element,a),t.element=a,a}function Be(e,t,s){const a=f(e.treeAdapter.getTagName(t));if(e._isElementCausesFosterParenting(a))e._fosterParentElement(s);else {const r=e.treeAdapter.getNamespaceURI(t);a===u.TEMPLATE&&r===p.HTML&&(t=e.treeAdapter.getTemplateContent(t)),e.treeAdapter.appendChild(t,s);}}function He(e,t,s){const a=e.treeAdapter.getNamespaceURI(s.element),{token:r}=s,n=e.treeAdapter.createElement(r.tagName,a,r.attrs);e._adoptNodes(t,n),e.treeAdapter.appendChild(t,n),e.activeFormattingElements.insertElementAfterBookmark(n,r),e.activeFormattingElements.removeEntry(s),e.openElements.remove(s.element),e.openElements.insertAfter(t,n,r.tagID);}function Fe(e,t){for(let s=0;s<De;s++){const s=ge(e,t);if(!s)break;const a=ke(e,s);if(!a)break;e.activeFormattingElements.bookmark=s;const r=Pe(e,a,s.element),n=e.openElements.getCommonAncestor(s.element);e.treeAdapter.detachNode(r),n&&Be(e,n,r),He(e,a,s);}}function Ue(e,t){e._appendCommentNode(t,e.openElements.currentTmplContentOrNode);}function Ge(e,t){if(e.stopped=!0,t.location){const s=e.fragmentContext?0:2;for(let a=e.openElements.stackTop;a>=s;a--)e._setEndLocation(e.openElements.items[a],t);if(!e.fragmentContext&&e.openElements.stackTop>=0){const s=e.openElements.items[0],a=e.treeAdapter.getNodeSourceCodeLocation(s);if(a&&!a.endTag&&(e._setEndLocation(s,t),e.openElements.stackTop>=1)){const s=e.openElements.items[1],a=e.treeAdapter.getNodeSourceCodeLocation(s);a&&!a.endTag&&e._setEndLocation(s,t);}}}}function ye(e,t){e._err(t,T.missingDoctype,!0),e.treeAdapter.setDocumentMode(e.document,I.QUIRKS),e.insertionMode=Re.BEFORE_HTML,e._processToken(t);}function we(e,t){e._insertFakeRootElement(),e.insertionMode=Re.BEFORE_HEAD,e._processToken(t);}function Ye(e,t){e._insertFakeElement(N.HEAD,u.HEAD),e.headElement=e.openElements.current,e.insertionMode=Re.IN_HEAD,e._processToken(t);}function xe(e,t){switch(t.tagID){case u.HTML:$e(e,t);break;case u.BASE:case u.BASEFONT:case u.BGSOUND:case u.LINK:case u.META:e._appendElement(t,p.HTML),t.ackSelfClosing=!0;break;case u.TITLE:e._switchToTextParsing(t,b.RCDATA);break;case u.NOSCRIPT:e.options.scriptingEnabled?e._switchToTextParsing(t,b.RAWTEXT):(e._insertElement(t,p.HTML),e.insertionMode=Re.IN_HEAD_NO_SCRIPT);break;case u.NOFRAMES:case u.STYLE:e._switchToTextParsing(t,b.RAWTEXT);break;case u.SCRIPT:e._switchToTextParsing(t,b.SCRIPT_DATA);break;case u.TEMPLATE:e._insertTemplate(t),e.activeFormattingElements.insertMarker(),e.framesetOk=!1,e.insertionMode=Re.IN_TEMPLATE,e.tmplInsertionModeStack.unshift(Re.IN_TEMPLATE);break;case u.HEAD:e._err(t,T.misplacedStartTagForHeadElement);break;default:Qe(e,t);}}function ve(e,t){e.openElements.tmplCount>0?(e.openElements.generateImpliedEndTagsThoroughly(),e.openElements.currentTagId!==u.TEMPLATE&&e._err(t,T.closingOfElementWithOpenChildElements),e.openElements.popUntilTagNamePopped(u.TEMPLATE),e.activeFormattingElements.clearToLastMarker(),e.tmplInsertionModeStack.shift(),e._resetInsertionMode()):e._err(t,T.endTagWithoutMatchingOpenElement);}function Qe(e,t){e.openElements.pop(),e.insertionMode=Re.AFTER_HEAD,e._processToken(t);}function qe(e,t){const s=t.type===h.EOF?T.openElementsLeftAfterEof:T.disallowedContentInNoscriptInHead;e._err(t,s),e.openElements.pop(),e.insertionMode=Re.IN_HEAD,e._processToken(t);}function We(e,t){e._insertFakeElement(N.BODY,u.BODY),e.insertionMode=Re.IN_BODY,Xe(e,t);}function Xe(e,t){switch(t.type){case h.CHARACTER:Ve(e,t);break;case h.WHITESPACE_CHARACTER:Ke(e,t);break;case h.COMMENT:Ue(e,t);break;case h.START_TAG:$e(e,t);break;case h.END_TAG:tt(e,t);break;case h.EOF:st(e,t);}}function Ke(e,t){e._reconstructActiveFormattingElements(),e._insertCharacters(t);}function Ve(e,t){e._reconstructActiveFormattingElements(),e._insertCharacters(t),e.framesetOk=!1;}function ze(e,t){e._reconstructActiveFormattingElements(),e._appendElement(t,p.HTML),e.framesetOk=!1,t.ackSelfClosing=!0;}function je(e){const t=A(e,d.TYPE);return null!=t&&t.toLowerCase()===Ce}function Je(e,t){e._switchToTextParsing(t,b.RAWTEXT);}function Ze(e,t){e._reconstructActiveFormattingElements(),e._insertElement(t,p.HTML);}function $e(e,t){switch(t.tagID){case u.I:case u.S:case u.B:case u.U:case u.EM:case u.TT:case u.BIG:case u.CODE:case u.FONT:case u.SMALL:case u.STRIKE:case u.STRONG:!function(e,t){e._reconstructActiveFormattingElements(),e._insertElement(t,p.HTML),e.activeFormattingElements.pushElement(e.openElements.current,t);}(e,t);break;case u.A:!function(e,t){const s=e.activeFormattingElements.getElementEntryInScopeWithTagName(N.A);s&&(Fe(e,t),e.openElements.remove(s.element),e.activeFormattingElements.removeEntry(s)),e._reconstructActiveFormattingElements(),e._insertElement(t,p.HTML),e.activeFormattingElements.pushElement(e.openElements.current,t);}(e,t);break;case u.H1:case u.H2:case u.H3:case u.H4:case u.H5:case u.H6:!function(e,t){e.openElements.hasInButtonScope(u.P)&&e._closePElement(),g(e.openElements.currentTagId)&&e.openElements.pop(),e._insertElement(t,p.HTML);}(e,t);break;case u.P:case u.DL:case u.OL:case u.UL:case u.DIV:case u.DIR:case u.NAV:case u.MAIN:case u.MENU:case u.ASIDE:case u.CENTER:case u.FIGURE:case u.FOOTER:case u.HEADER:case u.HGROUP:case u.DIALOG:case u.DETAILS:case u.ADDRESS:case u.ARTICLE:case u.SECTION:case u.SUMMARY:case u.FIELDSET:case u.BLOCKQUOTE:case u.FIGCAPTION:!function(e,t){e.openElements.hasInButtonScope(u.P)&&e._closePElement(),e._insertElement(t,p.HTML);}(e,t);break;case u.LI:case u.DD:case u.DT:!function(e,t){e.framesetOk=!1;const s=t.tagID;for(let t=e.openElements.stackTop;t>=0;t--){const a=e.openElements.tagIDs[t];if(s===u.LI&&a===u.LI||(s===u.DD||s===u.DT)&&(a===u.DD||a===u.DT)){e.openElements.generateImpliedEndTagsWithExclusion(a),e.openElements.popUntilTagNamePopped(a);break}if(a!==u.ADDRESS&&a!==u.DIV&&a!==u.P&&e._isSpecialElement(e.openElements.items[t],a))break}e.openElements.hasInButtonScope(u.P)&&e._closePElement(),e._insertElement(t,p.HTML);}(e,t);break;case u.BR:case u.IMG:case u.WBR:case u.AREA:case u.EMBED:case u.KEYGEN:ze(e,t);break;case u.HR:!function(e,t){e.openElements.hasInButtonScope(u.P)&&e._closePElement(),e._appendElement(t,p.HTML),e.framesetOk=!1,t.ackSelfClosing=!0;}(e,t);break;case u.RB:case u.RTC:!function(e,t){e.openElements.hasInScope(u.RUBY)&&e.openElements.generateImpliedEndTags(),e._insertElement(t,p.HTML);}(e,t);break;case u.RT:case u.RP:!function(e,t){e.openElements.hasInScope(u.RUBY)&&e.openElements.generateImpliedEndTagsWithExclusion(u.RTC),e._insertElement(t,p.HTML);}(e,t);break;case u.PRE:case u.LISTING:!function(e,t){e.openElements.hasInButtonScope(u.P)&&e._closePElement(),e._insertElement(t,p.HTML),e.skipNextNewLine=!0,e.framesetOk=!1;}(e,t);break;case u.XMP:!function(e,t){e.openElements.hasInButtonScope(u.P)&&e._closePElement(),e._reconstructActiveFormattingElements(),e.framesetOk=!1,e._switchToTextParsing(t,b.RAWTEXT);}(e,t);break;case u.SVG:!function(e,t){e._reconstructActiveFormattingElements(),Ne(t),ue(t),t.selfClosing?e._appendElement(t,p.SVG):e._insertElement(t,p.SVG),t.ackSelfClosing=!0;}(e,t);break;case u.HTML:!function(e,t){0===e.openElements.tmplCount&&e.treeAdapter.adoptAttributes(e.openElements.items[0],t.attrs);}(e,t);break;case u.BASE:case u.LINK:case u.META:case u.STYLE:case u.TITLE:case u.SCRIPT:case u.BGSOUND:case u.BASEFONT:case u.TEMPLATE:xe(e,t);break;case u.BODY:!function(e,t){const s=e.openElements.tryPeekProperlyNestedBodyElement();s&&0===e.openElements.tmplCount&&(e.framesetOk=!1,e.treeAdapter.adoptAttributes(s,t.attrs));}(e,t);break;case u.FORM:!function(e,t){const s=e.openElements.tmplCount>0;e.formElement&&!s||(e.openElements.hasInButtonScope(u.P)&&e._closePElement(),e._insertElement(t,p.HTML),s||(e.formElement=e.openElements.current));}(e,t);break;case u.NOBR:!function(e,t){e._reconstructActiveFormattingElements(),e.openElements.hasInScope(u.NOBR)&&(Fe(e,t),e._reconstructActiveFormattingElements()),e._insertElement(t,p.HTML),e.activeFormattingElements.pushElement(e.openElements.current,t);}(e,t);break;case u.MATH:!function(e,t){e._reconstructActiveFormattingElements(),Ie(t),ue(t),t.selfClosing?e._appendElement(t,p.MATHML):e._insertElement(t,p.MATHML),t.ackSelfClosing=!0;}(e,t);break;case u.TABLE:!function(e,t){e.treeAdapter.getDocumentMode(e.document)!==I.QUIRKS&&e.openElements.hasInButtonScope(u.P)&&e._closePElement(),e._insertElement(t,p.HTML),e.framesetOk=!1,e.insertionMode=Re.IN_TABLE;}(e,t);break;case u.INPUT:!function(e,t){e._reconstructActiveFormattingElements(),e._appendElement(t,p.HTML),je(t)||(e.framesetOk=!1),t.ackSelfClosing=!0;}(e,t);break;case u.PARAM:case u.TRACK:case u.SOURCE:!function(e,t){e._appendElement(t,p.HTML),t.ackSelfClosing=!0;}(e,t);break;case u.IMAGE:!function(e,t){t.tagName=N.IMG,t.tagID=u.IMG,ze(e,t);}(e,t);break;case u.BUTTON:!function(e,t){e.openElements.hasInScope(u.BUTTON)&&(e.openElements.generateImpliedEndTags(),e.openElements.popUntilTagNamePopped(u.BUTTON)),e._reconstructActiveFormattingElements(),e._insertElement(t,p.HTML),e.framesetOk=!1;}(e,t);break;case u.APPLET:case u.OBJECT:case u.MARQUEE:!function(e,t){e._reconstructActiveFormattingElements(),e._insertElement(t,p.HTML),e.activeFormattingElements.insertMarker(),e.framesetOk=!1;}(e,t);break;case u.IFRAME:!function(e,t){e.framesetOk=!1,e._switchToTextParsing(t,b.RAWTEXT);}(e,t);break;case u.SELECT:!function(e,t){e._reconstructActiveFormattingElements(),e._insertElement(t,p.HTML),e.framesetOk=!1,e.insertionMode=e.insertionMode===Re.IN_TABLE||e.insertionMode===Re.IN_CAPTION||e.insertionMode===Re.IN_TABLE_BODY||e.insertionMode===Re.IN_ROW||e.insertionMode===Re.IN_CELL?Re.IN_SELECT_IN_TABLE:Re.IN_SELECT;}(e,t);break;case u.OPTION:case u.OPTGROUP:!function(e,t){e.openElements.currentTagId===u.OPTION&&e.openElements.pop(),e._reconstructActiveFormattingElements(),e._insertElement(t,p.HTML);}(e,t);break;case u.NOEMBED:Je(e,t);break;case u.FRAMESET:!function(e,t){const s=e.openElements.tryPeekProperlyNestedBodyElement();e.framesetOk&&s&&(e.treeAdapter.detachNode(s),e.openElements.popAllUpToHtmlElement(),e._insertElement(t,p.HTML),e.insertionMode=Re.IN_FRAMESET);}(e,t);break;case u.TEXTAREA:!function(e,t){e._insertElement(t,p.HTML),e.skipNextNewLine=!0,e.tokenizer.state=b.RCDATA,e.originalInsertionMode=e.insertionMode,e.framesetOk=!1,e.insertionMode=Re.TEXT;}(e,t);break;case u.NOSCRIPT:e.options.scriptingEnabled?Je(e,t):Ze(e,t);break;case u.PLAINTEXT:!function(e,t){e.openElements.hasInButtonScope(u.P)&&e._closePElement(),e._insertElement(t,p.HTML),e.tokenizer.state=b.PLAINTEXT;}(e,t);break;case u.COL:case u.TH:case u.TD:case u.TR:case u.HEAD:case u.FRAME:case u.TBODY:case u.TFOOT:case u.THEAD:case u.CAPTION:case u.COLGROUP:break;default:Ze(e,t);}}function et(e,t){const s=t.tagName,a=t.tagID;for(let t=e.openElements.stackTop;t>0;t--){const r=e.openElements.items[t],n=e.openElements.tagIDs[t];if(a===n&&(a!==u.UNKNOWN||e.treeAdapter.getTagName(r)===s)){e.openElements.generateImpliedEndTagsWithExclusion(a),e.openElements.stackTop>=t&&e.openElements.shortenToLength(t);break}if(e._isSpecialElement(r,n))break}}function tt(e,t){switch(t.tagID){case u.A:case u.B:case u.I:case u.S:case u.U:case u.EM:case u.TT:case u.BIG:case u.CODE:case u.FONT:case u.NOBR:case u.SMALL:case u.STRIKE:case u.STRONG:Fe(e,t);break;case u.P:!function(e){e.openElements.hasInButtonScope(u.P)||e._insertFakeElement(N.P,u.P),e._closePElement();}(e);break;case u.DL:case u.UL:case u.OL:case u.DIR:case u.DIV:case u.NAV:case u.PRE:case u.MAIN:case u.MENU:case u.ASIDE:case u.BUTTON:case u.CENTER:case u.FIGURE:case u.FOOTER:case u.HEADER:case u.HGROUP:case u.DIALOG:case u.ADDRESS:case u.ARTICLE:case u.DETAILS:case u.SECTION:case u.SUMMARY:case u.LISTING:case u.FIELDSET:case u.BLOCKQUOTE:case u.FIGCAPTION:!function(e,t){const s=t.tagID;e.openElements.hasInScope(s)&&(e.openElements.generateImpliedEndTags(),e.openElements.popUntilTagNamePopped(s));}(e,t);break;case u.LI:!function(e){e.openElements.hasInListItemScope(u.LI)&&(e.openElements.generateImpliedEndTagsWithExclusion(u.LI),e.openElements.popUntilTagNamePopped(u.LI));}(e);break;case u.DD:case u.DT:!function(e,t){const s=t.tagID;e.openElements.hasInScope(s)&&(e.openElements.generateImpliedEndTagsWithExclusion(s),e.openElements.popUntilTagNamePopped(s));}(e,t);break;case u.H1:case u.H2:case u.H3:case u.H4:case u.H5:case u.H6:!function(e){e.openElements.hasNumberedHeaderInScope()&&(e.openElements.generateImpliedEndTags(),e.openElements.popUntilNumberedHeaderPopped());}(e);break;case u.BR:!function(e){e._reconstructActiveFormattingElements(),e._insertFakeElement(N.BR,u.BR),e.openElements.pop(),e.framesetOk=!1;}(e);break;case u.BODY:!function(e,t){if(e.openElements.hasInScope(u.BODY)&&(e.insertionMode=Re.AFTER_BODY,e.options.sourceCodeLocationInfo)){const s=e.openElements.tryPeekProperlyNestedBodyElement();s&&e._setEndLocation(s,t);}}(e,t);break;case u.HTML:!function(e,t){e.openElements.hasInScope(u.BODY)&&(e.insertionMode=Re.AFTER_BODY,ut(e,t));}(e,t);break;case u.FORM:!function(e){const t=e.openElements.tmplCount>0,{formElement:s}=e;t||(e.formElement=null),(s||t)&&e.openElements.hasInScope(u.FORM)&&(e.openElements.generateImpliedEndTags(),t?e.openElements.popUntilTagNamePopped(u.FORM):s&&e.openElements.remove(s));}(e);break;case u.APPLET:case u.OBJECT:case u.MARQUEE:!function(e,t){const s=t.tagID;e.openElements.hasInScope(s)&&(e.openElements.generateImpliedEndTags(),e.openElements.popUntilTagNamePopped(s),e.activeFormattingElements.clearToLastMarker());}(e,t);break;case u.TEMPLATE:ve(e,t);break;default:et(e,t);}}function st(e,t){e.tmplInsertionModeStack.length>0?Nt(e,t):Ge(e,t);}function at(e,t){if(fe.has(e.openElements.currentTagId))switch(e.pendingCharacterTokens.length=0,e.hasNonWhitespacePendingCharacterToken=!1,e.originalInsertionMode=e.insertionMode,e.insertionMode=Re.IN_TABLE_TEXT,t.type){case h.CHARACTER:ct(e,t);break;case h.WHITESPACE_CHARACTER:ot(e,t);}else it(e,t);}function rt(e,t){switch(t.tagID){case u.TD:case u.TH:case u.TR:!function(e,t){e.openElements.clearBackToTableContext(),e._insertFakeElement(N.TBODY,u.TBODY),e.insertionMode=Re.IN_TABLE_BODY,At(e,t);}(e,t);break;case u.STYLE:case u.SCRIPT:case u.TEMPLATE:xe(e,t);break;case u.COL:!function(e,t){e.openElements.clearBackToTableContext(),e._insertFakeElement(N.COLGROUP,u.COLGROUP),e.insertionMode=Re.IN_COLUMN_GROUP,ht(e,t);}(e,t);break;case u.FORM:!function(e,t){e.formElement||0!==e.openElements.tmplCount||(e._insertElement(t,p.HTML),e.formElement=e.openElements.current,e.openElements.pop());}(e,t);break;case u.TABLE:!function(e,t){e.openElements.hasInTableScope(u.TABLE)&&(e.openElements.popUntilTagNamePopped(u.TABLE),e._resetInsertionMode(),e._processStartTag(t));}(e,t);break;case u.TBODY:case u.TFOOT:case u.THEAD:!function(e,t){e.openElements.clearBackToTableContext(),e._insertElement(t,p.HTML),e.insertionMode=Re.IN_TABLE_BODY;}(e,t);break;case u.INPUT:!function(e,t){je(t)?e._appendElement(t,p.HTML):it(e,t),t.ackSelfClosing=!0;}(e,t);break;case u.CAPTION:!function(e,t){e.openElements.clearBackToTableContext(),e.activeFormattingElements.insertMarker(),e._insertElement(t,p.HTML),e.insertionMode=Re.IN_CAPTION;}(e,t);break;case u.COLGROUP:!function(e,t){e.openElements.clearBackToTableContext(),e._insertElement(t,p.HTML),e.insertionMode=Re.IN_COLUMN_GROUP;}(e,t);break;default:it(e,t);}}function nt(e,t){switch(t.tagID){case u.TABLE:e.openElements.hasInTableScope(u.TABLE)&&(e.openElements.popUntilTagNamePopped(u.TABLE),e._resetInsertionMode());break;case u.TEMPLATE:ve(e,t);break;case u.BODY:case u.CAPTION:case u.COL:case u.COLGROUP:case u.HTML:case u.TBODY:case u.TD:case u.TFOOT:case u.TH:case u.THEAD:case u.TR:break;default:it(e,t);}}function it(e,t){const s=e.fosterParentingEnabled;e.fosterParentingEnabled=!0,Xe(e,t),e.fosterParentingEnabled=s;}function ot(e,t){e.pendingCharacterTokens.push(t);}function ct(e,t){e.pendingCharacterTokens.push(t),e.hasNonWhitespacePendingCharacterToken=!0;}function Et(e,t){let s=0;if(e.hasNonWhitespacePendingCharacterToken)for(;s<e.pendingCharacterTokens.length;s++)it(e,e.pendingCharacterTokens[s]);else for(;s<e.pendingCharacterTokens.length;s++)e._insertCharacters(e.pendingCharacterTokens[s]);e.insertionMode=e.originalInsertionMode,e._processToken(t);}const Tt=new Set([u.CAPTION,u.COL,u.COLGROUP,u.TBODY,u.TD,u.TFOOT,u.TH,u.THEAD,u.TR]);function ht(e,t){switch(t.tagID){case u.HTML:$e(e,t);break;case u.COL:e._appendElement(t,p.HTML),t.ackSelfClosing=!0;break;case u.TEMPLATE:xe(e,t);break;default:_t(e,t);}}function _t(e,t){e.openElements.currentTagId===u.COLGROUP&&(e.openElements.pop(),e.insertionMode=Re.IN_TABLE,e._processToken(t));}function At(e,t){switch(t.tagID){case u.TR:e.openElements.clearBackToTableBodyContext(),e._insertElement(t,p.HTML),e.insertionMode=Re.IN_ROW;break;case u.TH:case u.TD:e.openElements.clearBackToTableBodyContext(),e._insertFakeElement(N.TR,u.TR),e.insertionMode=Re.IN_ROW,mt(e,t);break;case u.CAPTION:case u.COL:case u.COLGROUP:case u.TBODY:case u.TFOOT:case u.THEAD:e.openElements.hasTableBodyContextInTableScope()&&(e.openElements.clearBackToTableBodyContext(),e.openElements.pop(),e.insertionMode=Re.IN_TABLE,rt(e,t));break;default:rt(e,t);}}function lt(e,t){const s=t.tagID;switch(t.tagID){case u.TBODY:case u.TFOOT:case u.THEAD:e.openElements.hasInTableScope(s)&&(e.openElements.clearBackToTableBodyContext(),e.openElements.pop(),e.insertionMode=Re.IN_TABLE);break;case u.TABLE:e.openElements.hasTableBodyContextInTableScope()&&(e.openElements.clearBackToTableBodyContext(),e.openElements.pop(),e.insertionMode=Re.IN_TABLE,nt(e,t));break;case u.BODY:case u.CAPTION:case u.COL:case u.COLGROUP:case u.HTML:case u.TD:case u.TH:case u.TR:break;default:nt(e,t);}}function mt(e,t){switch(t.tagID){case u.TH:case u.TD:e.openElements.clearBackToTableRowContext(),e._insertElement(t,p.HTML),e.insertionMode=Re.IN_CELL,e.activeFormattingElements.insertMarker();break;case u.CAPTION:case u.COL:case u.COLGROUP:case u.TBODY:case u.TFOOT:case u.THEAD:case u.TR:e.openElements.hasInTableScope(u.TR)&&(e.openElements.clearBackToTableRowContext(),e.openElements.pop(),e.insertionMode=Re.IN_TABLE_BODY,At(e,t));break;default:rt(e,t);}}function pt(e,t){switch(t.tagID){case u.TR:e.openElements.hasInTableScope(u.TR)&&(e.openElements.clearBackToTableRowContext(),e.openElements.pop(),e.insertionMode=Re.IN_TABLE_BODY);break;case u.TABLE:e.openElements.hasInTableScope(u.TR)&&(e.openElements.clearBackToTableRowContext(),e.openElements.pop(),e.insertionMode=Re.IN_TABLE_BODY,lt(e,t));break;case u.TBODY:case u.TFOOT:case u.THEAD:(e.openElements.hasInTableScope(t.tagID)||e.openElements.hasInTableScope(u.TR))&&(e.openElements.clearBackToTableRowContext(),e.openElements.pop(),e.insertionMode=Re.IN_TABLE_BODY,lt(e,t));break;case u.BODY:case u.CAPTION:case u.COL:case u.COLGROUP:case u.HTML:case u.TD:case u.TH:break;default:nt(e,t);}}function dt(e,t){switch(t.tagID){case u.HTML:$e(e,t);break;case u.OPTION:e.openElements.currentTagId===u.OPTION&&e.openElements.pop(),e._insertElement(t,p.HTML);break;case u.OPTGROUP:e.openElements.currentTagId===u.OPTION&&e.openElements.pop(),e.openElements.currentTagId===u.OPTGROUP&&e.openElements.pop(),e._insertElement(t,p.HTML);break;case u.INPUT:case u.KEYGEN:case u.TEXTAREA:case u.SELECT:e.openElements.hasInSelectScope(u.SELECT)&&(e.openElements.popUntilTagNamePopped(u.SELECT),e._resetInsertionMode(),t.tagID!==u.SELECT&&e._processStartTag(t));break;case u.SCRIPT:case u.TEMPLATE:xe(e,t);}}function It(e,t){switch(t.tagID){case u.OPTGROUP:e.openElements.stackTop>0&&e.openElements.currentTagId===u.OPTION&&e.openElements.tagIDs[e.openElements.stackTop-1]===u.OPTGROUP&&e.openElements.pop(),e.openElements.currentTagId===u.OPTGROUP&&e.openElements.pop();break;case u.OPTION:e.openElements.currentTagId===u.OPTION&&e.openElements.pop();break;case u.SELECT:e.openElements.hasInSelectScope(u.SELECT)&&(e.openElements.popUntilTagNamePopped(u.SELECT),e._resetInsertionMode());break;case u.TEMPLATE:ve(e,t);}}function Nt(e,t){e.openElements.tmplCount>0?(e.openElements.popUntilTagNamePopped(u.TEMPLATE),e.activeFormattingElements.clearToLastMarker(),e.tmplInsertionModeStack.shift(),e._resetInsertionMode(),e.onEof(t)):Ge(e,t);}function ut(e,t){var s;if(t.tagID===u.HTML){if(e.fragmentContext||(e.insertionMode=Re.AFTER_AFTER_BODY),e.options.sourceCodeLocationInfo&&e.openElements.tagIDs[0]===u.HTML){e._setEndLocation(e.openElements.items[0],t);const a=e.openElements.items[1];a&&!(null===(s=e.treeAdapter.getNodeSourceCodeLocation(a))||void 0===s?void 0:s.endTag)&&e._setEndLocation(a,t);}}else Ct(e,t);}function Ct(e,t){e.insertionMode=Re.IN_BODY,Xe(e,t);}function Dt(e,t){e.insertionMode=Re.IN_BODY,Xe(e,t);}function St(e){for(;e.treeAdapter.getNamespaceURI(e.openElements.current)!==p.HTML&&!e._isIntegrationPoint(e.openElements.currentTagId,e.openElements.current);)e.openElements.pop();}return new Set([N.AREA,N.BASE,N.BASEFONT,N.BGSOUND,N.BR,N.COL,N.EMBED,N.FRAME,N.HR,N.IMG,N.INPUT,N.KEYGEN,N.LINK,N.META,N.PARAM,N.SOURCE,N.TRACK,N.WBR]),e.parse=function(e,t){return Me.parse(e,t)},e.parseFragment=function(e,t,s){"string"==typeof e&&(s=t,t=e,e=null);const a=Me.getFragmentParser(e,s);return a.tokenizer.write(t,!0),a.getFragment()},Object.defineProperty(e,"__esModule",{value:!0}),e}({});const parse=e.parse;const parseFragment=e.parseFragment;

const docParser = new WeakMap();
function parseDocumentUtil(ownerDocument, html) {
  const doc = parse(html.trim(), getParser(ownerDocument));
  doc.documentElement = doc.firstElementChild;
  doc.head = doc.documentElement.firstElementChild;
  doc.body = doc.head.nextElementSibling;
  return doc;
}
function parseFragmentUtil(ownerDocument, html) {
  if (typeof html === 'string') {
    html = html.trim();
  }
  else {
    html = '';
  }
  const frag = parseFragment(html, getParser(ownerDocument));
  return frag;
}
function getParser(ownerDocument) {
  let parseOptions = docParser.get(ownerDocument);
  if (parseOptions != null) {
    return parseOptions;
  }
  const treeAdapter = {
    createDocument() {
      const doc = ownerDocument.createElement("#document" /* NODE_NAMES.DOCUMENT_NODE */);
      doc['x-mode'] = 'no-quirks';
      return doc;
    },
    setNodeSourceCodeLocation(node, location) {
      node.sourceCodeLocation = location;
    },
    getNodeSourceCodeLocation(node) {
      return node.sourceCodeLocation;
    },
    createDocumentFragment() {
      return ownerDocument.createDocumentFragment();
    },
    createElement(tagName, namespaceURI, attrs) {
      const elm = ownerDocument.createElementNS(namespaceURI, tagName);
      for (let i = 0; i < attrs.length; i++) {
        const attr = attrs[i];
        if (attr.namespace == null || attr.namespace === 'http://www.w3.org/1999/xhtml') {
          elm.setAttribute(attr.name, attr.value);
        }
        else {
          elm.setAttributeNS(attr.namespace, attr.name, attr.value);
        }
      }
      return elm;
    },
    createCommentNode(data) {
      return ownerDocument.createComment(data);
    },
    appendChild(parentNode, newNode) {
      parentNode.appendChild(newNode);
    },
    insertBefore(parentNode, newNode, referenceNode) {
      parentNode.insertBefore(newNode, referenceNode);
    },
    setTemplateContent(templateElement, contentElement) {
      templateElement.content = contentElement;
    },
    getTemplateContent(templateElement) {
      return templateElement.content;
    },
    setDocumentType(doc, name, publicId, systemId) {
      let doctypeNode = doc.childNodes.find((n) => n.nodeType === 10 /* NODE_TYPES.DOCUMENT_TYPE_NODE */);
      if (doctypeNode == null) {
        doctypeNode = ownerDocument.createDocumentTypeNode();
        doc.insertBefore(doctypeNode, doc.firstChild);
      }
      doctypeNode.nodeValue = '!DOCTYPE';
      doctypeNode['x-name'] = name;
      doctypeNode['x-publicId'] = publicId;
      doctypeNode['x-systemId'] = systemId;
    },
    setDocumentMode(doc, mode) {
      doc['x-mode'] = mode;
    },
    getDocumentMode(doc) {
      return doc['x-mode'];
    },
    detachNode(node) {
      node.remove();
    },
    insertText(parentNode, text) {
      const lastChild = parentNode.lastChild;
      if (lastChild != null && lastChild.nodeType === 3 /* NODE_TYPES.TEXT_NODE */) {
        lastChild.nodeValue += text;
      }
      else {
        parentNode.appendChild(ownerDocument.createTextNode(text));
      }
    },
    insertTextBefore(parentNode, text, referenceNode) {
      const prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];
      if (prevNode != null && prevNode.nodeType === 3 /* NODE_TYPES.TEXT_NODE */) {
        prevNode.nodeValue += text;
      }
      else {
        parentNode.insertBefore(ownerDocument.createTextNode(text), referenceNode);
      }
    },
    adoptAttributes(recipient, attrs) {
      for (let i = 0; i < attrs.length; i++) {
        const attr = attrs[i];
        if (recipient.hasAttributeNS(attr.namespace, attr.name) === false) {
          recipient.setAttributeNS(attr.namespace, attr.name, attr.value);
        }
      }
    },
    getFirstChild(node) {
      return node.childNodes[0];
    },
    getChildNodes(node) {
      return node.childNodes;
    },
    getParentNode(node) {
      return node.parentNode;
    },
    getAttrList(element) {
      const attrs = element.attributes.__items.map((attr) => {
        return {
          name: attr.name,
          value: attr.value,
          namespace: attr.namespaceURI,
          prefix: null,
        };
      });
      return attrs;
    },
    getTagName(element) {
      if (element.namespaceURI === 'http://www.w3.org/1999/xhtml') {
        return element.nodeName.toLowerCase();
      }
      else {
        return element.nodeName;
      }
    },
    getNamespaceURI(element) {
      // mock-doc widens the type of an element's namespace uri to 'string | null'
      // we use a type assertion here to adhere to parse5's type definitions
      return element.namespaceURI;
    },
    getTextNodeContent(textNode) {
      return textNode.nodeValue;
    },
    getCommentNodeContent(commentNode) {
      return commentNode.nodeValue;
    },
    getDocumentTypeNodeName(doctypeNode) {
      return doctypeNode['x-name'];
    },
    getDocumentTypeNodePublicId(doctypeNode) {
      return doctypeNode['x-publicId'];
    },
    getDocumentTypeNodeSystemId(doctypeNode) {
      return doctypeNode['x-systemId'];
    },
    // @ts-ignore - a `MockNode` will never be assignable to a `TreeAdapterTypeMap['text']`. As a result, we cannot
    // complete this function signature
    isTextNode(node) {
      return node.nodeType === 3 /* NODE_TYPES.TEXT_NODE */;
    },
    // @ts-ignore - a `MockNode` will never be assignable to a `TreeAdapterTypeMap['comment']`. As a result, we cannot
    // complete this function signature (which requires its return type to be a type predicate)
    isCommentNode(node) {
      return node.nodeType === 8 /* NODE_TYPES.COMMENT_NODE */;
    },
    // @ts-ignore - a `MockNode` will never be assignable to a `TreeAdapterTypeMap['document']`. As a result, we cannot
    // complete this function signature (which requires its return type to be a type predicate)
    isDocumentTypeNode(node) {
      return node.nodeType === 10 /* NODE_TYPES.DOCUMENT_TYPE_NODE */;
    },
    // @ts-ignore - a `MockNode` will never be assignable to a `TreeAdapterTypeMap['element']`. As a result, we cannot
    // complete this function signature (which requires its return type to be a type predicate)
    isElementNode(node) {
      return node.nodeType === 1 /* NODE_TYPES.ELEMENT_NODE */;
    },
  };
  parseOptions = {
    treeAdapter: treeAdapter,
  };
  docParser.set(ownerDocument, parseOptions);
  return parseOptions;
}

// Sizzle 2.3.10
const Sizzle = (function() {
const window = {
  document: {
  createElement() {
    return {};
  },
  nodeType: 9,
  documentElement: {
    nodeType: 1,
    nodeName: 'HTML'
  }
  }
};
const module = { exports: {} };

/*! Sizzle v2.3.10 | (c) JS Foundation and other contributors | js.foundation */
!function(e){var t,n,r,i,o,u,l,a,c,s,f,d,p,h,g,m,y,v,w,b="sizzle"+1*new Date,N=e.document,C=0,x=0,E=ae(),A=ae(),S=ae(),D=ae(),T=function(e,t){return e===t&&(f=!0),0},L={}.hasOwnProperty,q=[],I=q.pop,B=q.push,R=q.push,$=q.slice,k=function(e,t){for(var n=0,r=e.length;n<r;n++)if(e[n]===t)return n;return -1},H="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",M="[\\x20\\t\\r\\n\\f]",P="(?:\\\\[\\da-fA-F]{1,6}"+M+"?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+",z="\\["+M+"*("+P+")(?:"+M+"*([*^$|!~]?=)"+M+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+P+"))|)"+M+"*\\]",F=":("+P+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+z+")*)|.*)\\)|)",O=new RegExp(M+"+","g"),j=new RegExp("^"+M+"+|((?:^|[^\\\\])(?:\\\\.)*)"+M+"+$","g"),G=new RegExp("^"+M+"*,"+M+"*"),U=new RegExp("^"+M+"*([>+~]|"+M+")"+M+"*"),V=new RegExp(M+"|>"),X=new RegExp(F),J=new RegExp("^"+P+"$"),K={ID:new RegExp("^#("+P+")"),CLASS:new RegExp("^\\.("+P+")"),TAG:new RegExp("^("+P+"|[*])"),ATTR:new RegExp("^"+z),PSEUDO:new RegExp("^"+F),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+M+"*(even|odd|(([+-]|)(\\d*)n|)"+M+"*(?:([+-]|)"+M+"*(\\d+)|))"+M+"*\\)|)","i"),bool:new RegExp("^(?:"+H+")$","i"),needsContext:new RegExp("^"+M+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+M+"*((?:-\\d)?\\d*)"+M+"*\\)|)(?=[^-]|$)","i")},Q=/HTML$/i,W=/^(?:input|select|textarea|button)$/i,Y=/^h\d$/i,Z=/^[^{]+\{\s*\[native \w/,_=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,ee=/[+~]/,te=new RegExp("\\\\[\\da-fA-F]{1,6}"+M+"?|\\\\([^\\r\\n\\f])","g"),ne=function(e,t){var n="0x"+e.slice(1)-65536;return t||(n<0?String.fromCharCode(n+65536):String.fromCharCode(n>>10|55296,1023&n|56320))},re=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,ie=function(e,t){return t?"\0"===e?"\ufffd":e.slice(0,-1)+"\\"+e.charCodeAt(e.length-1).toString(16)+" ":"\\"+e},oe=function(){d();},ue=ve(function(e){return !0===e.disabled&&"fieldset"===e.nodeName.toLowerCase()},{dir:"parentNode",next:"legend"});try{R.apply(q=$.call(N.childNodes),N.childNodes),q[N.childNodes.length].nodeType;}catch(e){R={apply:q.length?function(e,t){B.apply(e,$.call(t));}:function(e,t){var n=e.length,r=0;while(e[n++]=t[r++]);e.length=n-1;}};}function le(e,t,r,i){var o,l,c,s,f,h,y,v=t&&t.ownerDocument,N=t?t.nodeType:9;if(r=r||[],"string"!=typeof e||!e||1!==N&&9!==N&&11!==N)return r;if(!i&&(d(t),t=t||p,g)){if(11!==N&&(f=_.exec(e)))if(o=f[1]){if(9===N){if(!(c=t.getElementById(o)))return r;if(c.id===o)return r.push(c),r}else if(v&&(c=v.getElementById(o))&&w(t,c)&&c.id===o)return r.push(c),r}else {if(f[2])return R.apply(r,t.getElementsByTagName(e)),r;if((o=f[3])&&n.getElementsByClassName&&t.getElementsByClassName)return R.apply(r,t.getElementsByClassName(o)),r}if(n.qsa&&!D[e+" "]&&(!m||!m.test(e))&&(1!==N||"object"!==t.nodeName.toLowerCase())){if(y=e,v=t,1===N&&(V.test(e)||U.test(e))){(v=ee.test(e)&&ge(t.parentNode)||t)===t&&n.scope||((s=t.getAttribute("id"))?s=s.replace(re,ie):t.setAttribute("id",s=b)),l=(h=u(e)).length;while(l--)h[l]=(s?"#"+s:":scope")+" "+ye(h[l]);y=h.join(",");}try{return R.apply(r,v.querySelectorAll(y)),r}catch(t){D(e,!0);}finally{s===b&&t.removeAttribute("id");}}}return a(e.replace(j,"$1"),t,r,i)}function ae(){var e=[];function t(n,i){return e.push(n+" ")>r.cacheLength&&delete t[e.shift()],t[n+" "]=i}return t}function ce(e){return e[b]=!0,e}function se(e){var t=p.createElement("fieldset");try{return !!e(t)}catch(e){return !1}finally{t.parentNode&&t.parentNode.removeChild(t),t=null;}}function fe(e,t){var n=e.split("|"),i=n.length;while(i--)r.attrHandle[n[i]]=t;}function de(e,t){var n=t&&e,r=n&&1===e.nodeType&&1===t.nodeType&&e.sourceIndex-t.sourceIndex;if(r)return r;if(n)while(n=n.nextSibling)if(n===t)return -1;return e?1:-1}function pe(e){return function(t){return "form"in t?t.parentNode&&!1===t.disabled?"label"in t?"label"in t.parentNode?t.parentNode.disabled===e:t.disabled===e:t.isDisabled===e||t.isDisabled!==!e&&ue(t)===e:t.disabled===e:"label"in t&&t.disabled===e}}function he(e){return ce(function(t){return t=+t,ce(function(n,r){var i,o=e([],n.length,t),u=o.length;while(u--)n[i=o[u]]&&(n[i]=!(r[i]=n[i]));})})}function ge(e){return e&&void 0!==e.getElementsByTagName&&e}n=le.support={},o=le.isXML=function(e){var t=e&&e.namespaceURI,n=e&&(e.ownerDocument||e).documentElement;return !Q.test(t||n&&n.nodeName||"HTML")},d=le.setDocument=function(e){var t,i,u=e?e.ownerDocument||e:N;return u!=p&&9===u.nodeType&&u.documentElement?(p=u,h=p.documentElement,g=!o(p),N!=p&&(i=p.defaultView)&&i.top!==i&&(i.addEventListener?i.addEventListener("unload",oe,!1):i.attachEvent&&i.attachEvent("onunload",oe)),n.scope=se(function(e){return h.appendChild(e).appendChild(p.createElement("div")),void 0!==e.querySelectorAll&&!e.querySelectorAll(":scope fieldset div").length}),n.cssHas=se(function(){try{return p.querySelector(":has(*,:jqfake)"),!1}catch(e){return !0}}),n.attributes=se(function(e){return e.className="i",!e.getAttribute("className")}),n.getElementsByTagName=se(function(e){return e.appendChild(p.createComment("")),!e.getElementsByTagName("*").length}),n.getElementsByClassName=Z.test(p.getElementsByClassName),n.getById=se(function(e){return h.appendChild(e).id=b,!p.getElementsByName||!p.getElementsByName(b).length}),n.getById?(r.filter.ID=function(e){var t=e.replace(te,ne);return function(e){return e.getAttribute("id")===t}},r.find.ID=function(e,t){if(void 0!==t.getElementById&&g){var n=t.getElementById(e);return n?[n]:[]}}):(r.filter.ID=function(e){var t=e.replace(te,ne);return function(e){var n=void 0!==e.getAttributeNode&&e.getAttributeNode("id");return n&&n.value===t}},r.find.ID=function(e,t){if(void 0!==t.getElementById&&g){var n,r,i,o=t.getElementById(e);if(o){if((n=o.getAttributeNode("id"))&&n.value===e)return [o];i=t.getElementsByName(e),r=0;while(o=i[r++])if((n=o.getAttributeNode("id"))&&n.value===e)return [o]}return []}}),r.find.TAG=n.getElementsByTagName?function(e,t){return void 0!==t.getElementsByTagName?t.getElementsByTagName(e):n.qsa?t.querySelectorAll(e):void 0}:function(e,t){var n,r=[],i=0,o=t.getElementsByTagName(e);if("*"===e){while(n=o[i++])1===n.nodeType&&r.push(n);return r}return o},r.find.CLASS=n.getElementsByClassName&&function(e,t){if(void 0!==t.getElementsByClassName&&g)return t.getElementsByClassName(e)},y=[],m=[],(n.qsa=Z.test(p.querySelectorAll))&&(se(function(e){var t;h.appendChild(e).innerHTML="<a id='"+b+"'></a><select id='"+b+"-\r\\' msallowcapture=''><option selected=''></option></select>",e.querySelectorAll("[msallowcapture^='']").length&&m.push("[*^$]="+M+"*(?:''|\"\")"),e.querySelectorAll("[selected]").length||m.push("\\["+M+"*(?:value|"+H+")"),e.querySelectorAll("[id~="+b+"-]").length||m.push("~="),(t=p.createElement("input")).setAttribute("name",""),e.appendChild(t),e.querySelectorAll("[name='']").length||m.push("\\["+M+"*name"+M+"*="+M+"*(?:''|\"\")"),e.querySelectorAll(":checked").length||m.push(":checked"),e.querySelectorAll("a#"+b+"+*").length||m.push(".#.+[+~]"),e.querySelectorAll("\\\f"),m.push("[\\r\\n\\f]");}),se(function(e){e.innerHTML="<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";var t=p.createElement("input");t.setAttribute("type","hidden"),e.appendChild(t).setAttribute("name","D"),e.querySelectorAll("[name=d]").length&&m.push("name"+M+"*[*^$|!~]?="),2!==e.querySelectorAll(":enabled").length&&m.push(":enabled",":disabled"),h.appendChild(e).disabled=!0,2!==e.querySelectorAll(":disabled").length&&m.push(":enabled",":disabled"),e.querySelectorAll("*,:x"),m.push(",.*:");})),(n.matchesSelector=Z.test(v=h.matches||h.webkitMatchesSelector||h.mozMatchesSelector||h.oMatchesSelector||h.msMatchesSelector))&&se(function(e){n.disconnectedMatch=v.call(e,"*"),v.call(e,"[s!='']:x"),y.push("!=",F);}),n.cssHas||m.push(":has"),m=m.length&&new RegExp(m.join("|")),y=y.length&&new RegExp(y.join("|")),t=Z.test(h.compareDocumentPosition),w=t||Z.test(h.contains)?function(e,t){var n=9===e.nodeType&&e.documentElement||e,r=t&&t.parentNode;return e===r||!(!r||1!==r.nodeType||!(n.contains?n.contains(r):e.compareDocumentPosition&&16&e.compareDocumentPosition(r)))}:function(e,t){if(t)while(t=t.parentNode)if(t===e)return !0;return !1},T=t?function(e,t){if(e===t)return f=!0,0;var r=!e.compareDocumentPosition-!t.compareDocumentPosition;return r||(1&(r=(e.ownerDocument||e)==(t.ownerDocument||t)?e.compareDocumentPosition(t):1)||!n.sortDetached&&t.compareDocumentPosition(e)===r?e==p||e.ownerDocument==N&&w(N,e)?-1:t==p||t.ownerDocument==N&&w(N,t)?1:s?k(s,e)-k(s,t):0:4&r?-1:1)}:function(e,t){if(e===t)return f=!0,0;var n,r=0,i=e.parentNode,o=t.parentNode,u=[e],l=[t];if(!i||!o)return e==p?-1:t==p?1:i?-1:o?1:s?k(s,e)-k(s,t):0;if(i===o)return de(e,t);n=e;while(n=n.parentNode)u.unshift(n);n=t;while(n=n.parentNode)l.unshift(n);while(u[r]===l[r])r++;return r?de(u[r],l[r]):u[r]==N?-1:l[r]==N?1:0},p):p},le.matches=function(e,t){return le(e,null,null,t)},le.matchesSelector=function(e,t){if(d(e),n.matchesSelector&&g&&!D[t+" "]&&(!y||!y.test(t))&&(!m||!m.test(t)))try{var r=v.call(e,t);if(r||n.disconnectedMatch||e.document&&11!==e.document.nodeType)return r}catch(e){D(t,!0);}return le(t,p,null,[e]).length>0},le.contains=function(e,t){return (e.ownerDocument||e)!=p&&d(e),w(e,t)},le.attr=function(e,t){(e.ownerDocument||e)!=p&&d(e);var i=r.attrHandle[t.toLowerCase()],o=i&&L.call(r.attrHandle,t.toLowerCase())?i(e,t,!g):void 0;return void 0!==o?o:n.attributes||!g?e.getAttribute(t):(o=e.getAttributeNode(t))&&o.specified?o.value:null},le.escape=function(e){return (e+"").replace(re,ie)},le.error=function(e){throw new Error("Syntax error, unrecognized expression: "+e)},le.uniqueSort=function(e){var t,r=[],i=0,o=0;if(f=!n.detectDuplicates,s=!n.sortStable&&e.slice(0),e.sort(T),f){while(t=e[o++])t===e[o]&&(i=r.push(o));while(i--)e.splice(r[i],1);}return s=null,e},i=le.getText=function(e){var t,n="",r=0,o=e.nodeType;if(o){if(1===o||9===o||11===o){if("string"==typeof e.textContent)return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)n+=i(e);}else if(3===o||4===o)return e.nodeValue}else while(t=e[r++])n+=i(t);return n},(r=le.selectors={cacheLength:50,createPseudo:ce,match:K,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(te,ne),e[3]=(e[3]||e[4]||e[5]||"").replace(te,ne),"~="===e[2]&&(e[3]=" "+e[3]+" "),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),"nth"===e[1].slice(0,3)?(e[3]||le.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*("even"===e[3]||"odd"===e[3])),e[5]=+(e[7]+e[8]||"odd"===e[3])):e[3]&&le.error(e[0]),e},PSEUDO:function(e){var t,n=!e[6]&&e[2];return K.CHILD.test(e[0])?null:(e[3]?e[2]=e[4]||e[5]||"":n&&X.test(n)&&(t=u(n,!0))&&(t=n.indexOf(")",n.length-t)-n.length)&&(e[0]=e[0].slice(0,t),e[2]=n.slice(0,t)),e.slice(0,3))}},filter:{TAG:function(e){var t=e.replace(te,ne).toLowerCase();return "*"===e?function(){return !0}:function(e){return e.nodeName&&e.nodeName.toLowerCase()===t}},CLASS:function(e){var t=E[e+" "];return t||(t=new RegExp("(^|"+M+")"+e+"("+M+"|$)"))&&E(e,function(e){return t.test("string"==typeof e.className&&e.className||void 0!==e.getAttribute&&e.getAttribute("class")||"")})},ATTR:function(e,t,n){return function(r){var i=le.attr(r,e);return null==i?"!="===t:!t||(i+="","="===t?i===n:"!="===t?i!==n:"^="===t?n&&0===i.indexOf(n):"*="===t?n&&i.indexOf(n)>-1:"$="===t?n&&i.slice(-n.length)===n:"~="===t?(" "+i.replace(O," ")+" ").indexOf(n)>-1:"|="===t&&(i===n||i.slice(0,n.length+1)===n+"-"))}},CHILD:function(e,t,n,r,i){var o="nth"!==e.slice(0,3),u="last"!==e.slice(-4),l="of-type"===t;return 1===r&&0===i?function(e){return !!e.parentNode}:function(t,n,a){var c,s,f,d,p,h,g=o!==u?"nextSibling":"previousSibling",m=t.parentNode,y=l&&t.nodeName.toLowerCase(),v=!a&&!l,w=!1;if(m){if(o){while(g){d=t;while(d=d[g])if(l?d.nodeName.toLowerCase()===y:1===d.nodeType)return !1;h=g="only"===e&&!h&&"nextSibling";}return !0}if(h=[u?m.firstChild:m.lastChild],u&&v){w=(p=(c=(s=(f=(d=m)[b]||(d[b]={}))[d.uniqueID]||(f[d.uniqueID]={}))[e]||[])[0]===C&&c[1])&&c[2],d=p&&m.childNodes[p];while(d=++p&&d&&d[g]||(w=p=0)||h.pop())if(1===d.nodeType&&++w&&d===t){s[e]=[C,p,w];break}}else if(v&&(w=p=(c=(s=(f=(d=t)[b]||(d[b]={}))[d.uniqueID]||(f[d.uniqueID]={}))[e]||[])[0]===C&&c[1]),!1===w)while(d=++p&&d&&d[g]||(w=p=0)||h.pop())if((l?d.nodeName.toLowerCase()===y:1===d.nodeType)&&++w&&(v&&((s=(f=d[b]||(d[b]={}))[d.uniqueID]||(f[d.uniqueID]={}))[e]=[C,w]),d===t))break;return (w-=i)===r||w%r==0&&w/r>=0}}},PSEUDO:function(e,t){var n,i=r.pseudos[e]||r.setFilters[e.toLowerCase()]||le.error("unsupported pseudo: "+e);return i[b]?i(t):i.length>1?(n=[e,e,"",t],r.setFilters.hasOwnProperty(e.toLowerCase())?ce(function(e,n){var r,o=i(e,t),u=o.length;while(u--)e[r=k(e,o[u])]=!(n[r]=o[u]);}):function(e){return i(e,0,n)}):i}},pseudos:{not:ce(function(e){var t=[],n=[],r=l(e.replace(j,"$1"));return r[b]?ce(function(e,t,n,i){var o,u=r(e,null,i,[]),l=e.length;while(l--)(o=u[l])&&(e[l]=!(t[l]=o));}):function(e,i,o){return t[0]=e,r(t,null,o,n),t[0]=null,!n.pop()}}),has:ce(function(e){return function(t){return le(e,t).length>0}}),contains:ce(function(e){return e=e.replace(te,ne),function(t){return (t.textContent||i(t)).indexOf(e)>-1}}),lang:ce(function(e){return J.test(e||"")||le.error("unsupported lang: "+e),e=e.replace(te,ne).toLowerCase(),function(t){var n;do{if(n=g?t.lang:t.getAttribute("xml:lang")||t.getAttribute("lang"))return (n=n.toLowerCase())===e||0===n.indexOf(e+"-")}while((t=t.parentNode)&&1===t.nodeType);return !1}}),target:function(t){var n=e.location&&e.location.hash;return n&&n.slice(1)===t.id},root:function(e){return e===h},focus:function(e){return e===p.activeElement&&(!p.hasFocus||p.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},enabled:pe(!1),disabled:pe(!0),checked:function(e){var t=e.nodeName.toLowerCase();return "input"===t&&!!e.checked||"option"===t&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,!0===e.selected},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeType<6)return !1;return !0},parent:function(e){return !r.pseudos.empty(e)},header:function(e){return Y.test(e.nodeName)},input:function(e){return W.test(e.nodeName)},button:function(e){var t=e.nodeName.toLowerCase();return "input"===t&&"button"===e.type||"button"===t},text:function(e){var t;return "input"===e.nodeName.toLowerCase()&&"text"===e.type&&(null==(t=e.getAttribute("type"))||"text"===t.toLowerCase())},first:he(function(){return [0]}),last:he(function(e,t){return [t-1]}),eq:he(function(e,t,n){return [n<0?n+t:n]}),even:he(function(e,t){for(var n=0;n<t;n+=2)e.push(n);return e}),odd:he(function(e,t){for(var n=1;n<t;n+=2)e.push(n);return e}),lt:he(function(e,t,n){for(var r=n<0?n+t:n>t?t:n;--r>=0;)e.push(r);return e}),gt:he(function(e,t,n){for(var r=n<0?n+t:n;++r<t;)e.push(r);return e})}}).pseudos.nth=r.pseudos.eq;for(t in {radio:!0,checkbox:!0,file:!0,password:!0,image:!0})r.pseudos[t]=function(e){return function(t){return "input"===t.nodeName.toLowerCase()&&t.type===e}}(t);for(t in {submit:!0,reset:!0})r.pseudos[t]=function(e){return function(t){var n=t.nodeName.toLowerCase();return ("input"===n||"button"===n)&&t.type===e}}(t);function me(){}me.prototype=r.filters=r.pseudos,r.setFilters=new me,u=le.tokenize=function(e,t){var n,i,o,u,l,a,c,s=A[e+" "];if(s)return t?0:s.slice(0);l=e,a=[],c=r.preFilter;while(l){n&&!(i=G.exec(l))||(i&&(l=l.slice(i[0].length)||l),a.push(o=[])),n=!1,(i=U.exec(l))&&(n=i.shift(),o.push({value:n,type:i[0].replace(j," ")}),l=l.slice(n.length));for(u in r.filter)!(i=K[u].exec(l))||c[u]&&!(i=c[u](i))||(n=i.shift(),o.push({value:n,type:u,matches:i}),l=l.slice(n.length));if(!n)break}return t?l.length:l?le.error(e):A(e,a).slice(0)};function ye(e){for(var t=0,n=e.length,r="";t<n;t++)r+=e[t].value;return r}function ve(e,t,n){var r=t.dir,i=t.next,o=i||r,u=n&&"parentNode"===o,l=x++;return t.first?function(t,n,i){while(t=t[r])if(1===t.nodeType||u)return e(t,n,i);return !1}:function(t,n,a){var c,s,f,d=[C,l];if(a){while(t=t[r])if((1===t.nodeType||u)&&e(t,n,a))return !0}else while(t=t[r])if(1===t.nodeType||u)if(f=t[b]||(t[b]={}),s=f[t.uniqueID]||(f[t.uniqueID]={}),i&&i===t.nodeName.toLowerCase())t=t[r]||t;else {if((c=s[o])&&c[0]===C&&c[1]===l)return d[2]=c[2];if(s[o]=d,d[2]=e(t,n,a))return !0}return !1}}function we(e){return e.length>1?function(t,n,r){var i=e.length;while(i--)if(!e[i](t,n,r))return !1;return !0}:e[0]}function be(e,t,n){for(var r=0,i=t.length;r<i;r++)le(e,t[r],n);return n}function Ne(e,t,n,r,i){for(var o,u=[],l=0,a=e.length,c=null!=t;l<a;l++)(o=e[l])&&(n&&!n(o,r,i)||(u.push(o),c&&t.push(l)));return u}function Ce(e,t,n,r,i,o){return r&&!r[b]&&(r=Ce(r)),i&&!i[b]&&(i=Ce(i,o)),ce(function(o,u,l,a){var c,s,f,d=[],p=[],h=u.length,g=o||be(t||"*",l.nodeType?[l]:l,[]),m=!e||!o&&t?g:Ne(g,d,e,l,a),y=n?i||(o?e:h||r)?[]:u:m;if(n&&n(m,y,l,a),r){c=Ne(y,p),r(c,[],l,a),s=c.length;while(s--)(f=c[s])&&(y[p[s]]=!(m[p[s]]=f));}if(o){if(i||e){if(i){c=[],s=y.length;while(s--)(f=y[s])&&c.push(m[s]=f);i(null,y=[],c,a);}s=y.length;while(s--)(f=y[s])&&(c=i?k(o,f):d[s])>-1&&(o[c]=!(u[c]=f));}}else y=Ne(y===u?y.splice(h,y.length):y),i?i(null,u,y,a):R.apply(u,y);})}function xe(e){for(var t,n,i,o=e.length,u=r.relative[e[0].type],l=u||r.relative[" "],a=u?1:0,s=ve(function(e){return e===t},l,!0),f=ve(function(e){return k(t,e)>-1},l,!0),d=[function(e,n,r){var i=!u&&(r||n!==c)||((t=n).nodeType?s(e,n,r):f(e,n,r));return t=null,i}];a<o;a++)if(n=r.relative[e[a].type])d=[ve(we(d),n)];else {if((n=r.filter[e[a].type].apply(null,e[a].matches))[b]){for(i=++a;i<o;i++)if(r.relative[e[i].type])break;return Ce(a>1&&we(d),a>1&&ye(e.slice(0,a-1).concat({value:" "===e[a-2].type?"*":""})).replace(j,"$1"),n,a<i&&xe(e.slice(a,i)),i<o&&xe(e=e.slice(i)),i<o&&ye(e))}d.push(n);}return we(d)}function Ee(e,t){var n=t.length>0,i=e.length>0,o=function(o,u,l,a,s){var f,h,m,y=0,v="0",w=o&&[],b=[],N=c,x=o||i&&r.find.TAG("*",s),E=C+=null==N?1:Math.random()||.1,A=x.length;for(s&&(c=u==p||u||s);v!==A&&null!=(f=x[v]);v++){if(i&&f){h=0,u||f.ownerDocument==p||(d(f),l=!g);while(m=e[h++])if(m(f,u||p,l)){a.push(f);break}s&&(C=E);}n&&((f=!m&&f)&&y--,o&&w.push(f));}if(y+=v,n&&v!==y){h=0;while(m=t[h++])m(w,b,u,l);if(o){if(y>0)while(v--)w[v]||b[v]||(b[v]=I.call(a));b=Ne(b);}R.apply(a,b),s&&!o&&b.length>0&&y+t.length>1&&le.uniqueSort(a);}return s&&(C=E,c=N),w};return n?ce(o):o}l=le.compile=function(e,t){var n,r=[],i=[],o=S[e+" "];if(!o){t||(t=u(e)),n=t.length;while(n--)(o=xe(t[n]))[b]?r.push(o):i.push(o);(o=S(e,Ee(i,r))).selector=e;}return o},a=le.select=function(e,t,n,i){var o,a,c,s,f,d="function"==typeof e&&e,p=!i&&u(e=d.selector||e);if(n=n||[],1===p.length){if((a=p[0]=p[0].slice(0)).length>2&&"ID"===(c=a[0]).type&&9===t.nodeType&&g&&r.relative[a[1].type]){if(!(t=(r.find.ID(c.matches[0].replace(te,ne),t)||[])[0]))return n;d&&(t=t.parentNode),e=e.slice(a.shift().value.length);}o=K.needsContext.test(e)?0:a.length;while(o--){if(c=a[o],r.relative[s=c.type])break;if((f=r.find[s])&&(i=f(c.matches[0].replace(te,ne),ee.test(a[0].type)&&ge(t.parentNode)||t))){if(a.splice(o,1),!(e=i.length&&ye(a)))return R.apply(n,i),n;break}}}return (d||l(e,p))(i,t,!g,n,!t||ee.test(e)&&ge(t.parentNode)||t),n},n.sortStable=b.split("").sort(T).join("")===b,n.detectDuplicates=!!f,d(),n.sortDetached=se(function(e){return 1&e.compareDocumentPosition(p.createElement("fieldset"))}),se(function(e){return e.innerHTML="<a href='#'></a>","#"===e.firstChild.getAttribute("href")})||fe("type|href|height|width",function(e,t,n){if(!n)return e.getAttribute(t,"type"===t.toLowerCase()?1:2)}),n.attributes&&se(function(e){return e.innerHTML="<input/>",e.firstChild.setAttribute("value",""),""===e.firstChild.getAttribute("value")})||fe("value",function(e,t,n){if(!n&&"input"===e.nodeName.toLowerCase())return e.defaultValue}),se(function(e){return null==e.getAttribute("disabled")})||fe(H,function(e,t,n){var r;if(!n)return !0===e[t]?t.toLowerCase():(r=e.getAttributeNode(t))&&r.specified?r.value:null});var Ae=e.Sizzle;le.noConflict=function(){return e.Sizzle===le&&(e.Sizzle=Ae),le},"function"==typeof define&&define.amd?define(function(){return le}):"undefined"!=typeof module&&module.exports?module.exports=le:e.Sizzle=le;}(window);
//# sourceMappingURL=sizzle.min.map

return module.exports;
})();

function matches(selector, elm) {
  const r = Sizzle.matches(selector, [elm]);
  return r.length > 0;
}
function selectOne(selector, elm) {
  const r = Sizzle(selector, elm);
  return r[0] || null;
}
function selectAll(selector, elm) {
  return Sizzle(selector, elm);
}

function serializeNodeToHtml(elm, opts = {}) {
  const output = {
    currentLineWidth: 0,
    indent: 0,
    isWithinBody: false,
    text: [],
  };
  if (opts.prettyHtml) {
    if (typeof opts.indentSpaces !== 'number') {
      opts.indentSpaces = 2;
    }
    if (typeof opts.newLines !== 'boolean') {
      opts.newLines = true;
    }
    opts.approximateLineWidth = -1;
  }
  else {
    opts.prettyHtml = false;
    if (typeof opts.newLines !== 'boolean') {
      opts.newLines = false;
    }
    if (typeof opts.indentSpaces !== 'number') {
      opts.indentSpaces = 0;
    }
  }
  if (typeof opts.approximateLineWidth !== 'number') {
    opts.approximateLineWidth = -1;
  }
  if (typeof opts.removeEmptyAttributes !== 'boolean') {
    opts.removeEmptyAttributes = true;
  }
  if (typeof opts.removeAttributeQuotes !== 'boolean') {
    opts.removeAttributeQuotes = false;
  }
  if (typeof opts.removeBooleanAttributeQuotes !== 'boolean') {
    opts.removeBooleanAttributeQuotes = false;
  }
  if (typeof opts.removeHtmlComments !== 'boolean') {
    opts.removeHtmlComments = false;
  }
  if (typeof opts.serializeShadowRoot !== 'boolean') {
    opts.serializeShadowRoot = false;
  }
  if (opts.outerHtml) {
    serializeToHtml(elm, opts, output, false);
  }
  else {
    for (let i = 0, ii = elm.childNodes.length; i < ii; i++) {
      serializeToHtml(elm.childNodes[i], opts, output, false);
    }
  }
  if (output.text[0] === '\n') {
    output.text.shift();
  }
  if (output.text[output.text.length - 1] === '\n') {
    output.text.pop();
  }
  return output.text.join('');
}
function serializeToHtml(node, opts, output, isShadowRoot) {
  if (node.nodeType === 1 /* NODE_TYPES.ELEMENT_NODE */ || isShadowRoot) {
    const tagName = isShadowRoot ? 'mock:shadow-root' : getTagName(node);
    if (tagName === 'body') {
      output.isWithinBody = true;
    }
    const ignoreTag = opts.excludeTags != null && opts.excludeTags.includes(tagName);
    if (ignoreTag === false) {
      const isWithinWhitespaceSensitiveNode = opts.newLines || opts.indentSpaces > 0 ? isWithinWhitespaceSensitive(node) : false;
      if (opts.newLines && !isWithinWhitespaceSensitiveNode) {
        output.text.push('\n');
        output.currentLineWidth = 0;
      }
      if (opts.indentSpaces > 0 && !isWithinWhitespaceSensitiveNode) {
        for (let i = 0; i < output.indent; i++) {
          output.text.push(' ');
        }
        output.currentLineWidth += output.indent;
      }
      output.text.push('<' + tagName);
      output.currentLineWidth += tagName.length + 1;
      const attrsLength = node.attributes.length;
      const attributes = opts.prettyHtml && attrsLength > 1
        ? cloneAttributes(node.attributes, true)
        : node.attributes;
      for (let i = 0; i < attrsLength; i++) {
        const attr = attributes.item(i);
        const attrName = attr.name;
        if (attrName === 'style') {
          continue;
        }
        let attrValue = attr.value;
        if (opts.removeEmptyAttributes && attrValue === '' && REMOVE_EMPTY_ATTR.has(attrName)) {
          continue;
        }
        const attrNamespaceURI = attr.namespaceURI;
        if (attrNamespaceURI == null) {
          output.currentLineWidth += attrName.length + 1;
          if (opts.approximateLineWidth > 0 && output.currentLineWidth > opts.approximateLineWidth) {
            output.text.push('\n' + attrName);
            output.currentLineWidth = 0;
          }
          else {
            output.text.push(' ' + attrName);
          }
        }
        else if (attrNamespaceURI === 'http://www.w3.org/XML/1998/namespace') {
          output.text.push(' xml:' + attrName);
          output.currentLineWidth += attrName.length + 5;
        }
        else if (attrNamespaceURI === 'http://www.w3.org/2000/xmlns/') {
          if (attrName !== 'xmlns') {
            output.text.push(' xmlns:' + attrName);
            output.currentLineWidth += attrName.length + 7;
          }
          else {
            output.text.push(' ' + attrName);
            output.currentLineWidth += attrName.length + 1;
          }
        }
        else if (attrNamespaceURI === XLINK_NS) {
          output.text.push(' xlink:' + attrName);
          output.currentLineWidth += attrName.length + 7;
        }
        else {
          output.text.push(' ' + attrNamespaceURI + ':' + attrName);
          output.currentLineWidth += attrNamespaceURI.length + attrName.length + 2;
        }
        if (opts.prettyHtml && attrName === 'class') {
          attrValue = attr.value = attrValue
            .split(' ')
            .filter((t) => t !== '')
            .sort()
            .join(' ')
            .trim();
        }
        if (attrValue === '') {
          if (opts.removeBooleanAttributeQuotes && BOOLEAN_ATTR.has(attrName)) {
            continue;
          }
          if (opts.removeEmptyAttributes && attrName.startsWith('data-')) {
            continue;
          }
        }
        if (opts.removeAttributeQuotes && CAN_REMOVE_ATTR_QUOTES.test(attrValue)) {
          output.text.push('=' + escapeString(attrValue, true));
          output.currentLineWidth += attrValue.length + 1;
        }
        else {
          output.text.push('="' + escapeString(attrValue, true) + '"');
          output.currentLineWidth += attrValue.length + 3;
        }
      }
      if (node.hasAttribute('style')) {
        const cssText = node.style.cssText;
        if (opts.approximateLineWidth > 0 &&
          output.currentLineWidth + cssText.length + 10 > opts.approximateLineWidth) {
          output.text.push(`\nstyle="${cssText}">`);
          output.currentLineWidth = 0;
        }
        else {
          output.text.push(` style="${cssText}">`);
          output.currentLineWidth += cssText.length + 10;
        }
      }
      else {
        output.text.push('>');
        output.currentLineWidth += 1;
      }
    }
    if (EMPTY_ELEMENTS.has(tagName) === false) {
      if (opts.serializeShadowRoot && node.shadowRoot != null) {
        output.indent = output.indent + opts.indentSpaces;
        serializeToHtml(node.shadowRoot, opts, output, true);
        output.indent = output.indent - opts.indentSpaces;
        if (opts.newLines &&
          (node.childNodes.length === 0 ||
            (node.childNodes.length === 1 &&
              node.childNodes[0].nodeType === 3 /* NODE_TYPES.TEXT_NODE */ &&
              node.childNodes[0].nodeValue.trim() === ''))) {
          output.text.push('\n');
          output.currentLineWidth = 0;
          for (let i = 0; i < output.indent; i++) {
            output.text.push(' ');
          }
          output.currentLineWidth += output.indent;
        }
      }
      if (opts.excludeTagContent == null || opts.excludeTagContent.includes(tagName) === false) {
        const childNodes = tagName === 'template' ? node.content.childNodes : node.childNodes;
        const childNodeLength = childNodes.length;
        if (childNodeLength > 0) {
          if (childNodeLength === 1 &&
            childNodes[0].nodeType === 3 /* NODE_TYPES.TEXT_NODE */ &&
            (typeof childNodes[0].nodeValue !== 'string' || childNodes[0].nodeValue.trim() === '')) ;
          else {
            const isWithinWhitespaceSensitiveNode = opts.newLines || opts.indentSpaces > 0 ? isWithinWhitespaceSensitive(node) : false;
            if (!isWithinWhitespaceSensitiveNode && opts.indentSpaces > 0 && ignoreTag === false) {
              output.indent = output.indent + opts.indentSpaces;
            }
            for (let i = 0; i < childNodeLength; i++) {
              serializeToHtml(childNodes[i], opts, output, false);
            }
            if (ignoreTag === false) {
              if (opts.newLines && !isWithinWhitespaceSensitiveNode) {
                output.text.push('\n');
                output.currentLineWidth = 0;
              }
              if (opts.indentSpaces > 0 && !isWithinWhitespaceSensitiveNode) {
                output.indent = output.indent - opts.indentSpaces;
                for (let i = 0; i < output.indent; i++) {
                  output.text.push(' ');
                }
                output.currentLineWidth += output.indent;
              }
            }
          }
        }
        if (ignoreTag === false) {
          output.text.push('</' + tagName + '>');
          output.currentLineWidth += tagName.length + 3;
        }
      }
    }
    if (opts.approximateLineWidth > 0 && STRUCTURE_ELEMENTS.has(tagName)) {
      output.text.push('\n');
      output.currentLineWidth = 0;
    }
    if (tagName === 'body') {
      output.isWithinBody = false;
    }
  }
  else if (node.nodeType === 3 /* NODE_TYPES.TEXT_NODE */) {
    let textContent = node.nodeValue;
    if (typeof textContent === 'string') {
      const trimmedTextContent = textContent.trim();
      if (trimmedTextContent === '') {
        // this text node is whitespace only
        if (isWithinWhitespaceSensitive(node)) {
          // whitespace matters within this element
          // just add the exact text we were given
          output.text.push(textContent);
          output.currentLineWidth += textContent.length;
        }
        else if (opts.approximateLineWidth > 0 && !output.isWithinBody) ;
        else if (!opts.prettyHtml) {
          // this text node is only whitespace, and it's not
          // within a whitespace sensitive element like <pre> or <code>
          // so replace the entire white space with a single new line
          output.currentLineWidth += 1;
          if (opts.approximateLineWidth > 0 && output.currentLineWidth > opts.approximateLineWidth) {
            // good enough for a new line
            // for perf these are all just estimates
            // we don't care to ensure exact line lengths
            output.text.push('\n');
            output.currentLineWidth = 0;
          }
          else {
            // let's keep it all on the same line yet
            output.text.push(' ');
          }
        }
      }
      else {
        // this text node has text content
        const isWithinWhitespaceSensitiveNode = opts.newLines || opts.indentSpaces > 0 || opts.prettyHtml ? isWithinWhitespaceSensitive(node) : false;
        if (opts.newLines && !isWithinWhitespaceSensitiveNode) {
          output.text.push('\n');
          output.currentLineWidth = 0;
        }
        if (opts.indentSpaces > 0 && !isWithinWhitespaceSensitiveNode) {
          for (let i = 0; i < output.indent; i++) {
            output.text.push(' ');
          }
          output.currentLineWidth += output.indent;
        }
        let textContentLength = textContent.length;
        if (textContentLength > 0) {
          // this text node has text content
          const parentTagName = node.parentNode != null && node.parentNode.nodeType === 1 /* NODE_TYPES.ELEMENT_NODE */
            ? node.parentNode.nodeName
            : null;
          if (NON_ESCAPABLE_CONTENT.has(parentTagName)) {
            // this text node cannot have its content escaped since it's going
            // into an element like <style> or <script>
            if (isWithinWhitespaceSensitive(node)) {
              output.text.push(textContent);
            }
            else {
              output.text.push(trimmedTextContent);
              textContentLength = trimmedTextContent.length;
            }
            output.currentLineWidth += textContentLength;
          }
          else {
            // this text node is going into a normal element and html can be escaped
            if (opts.prettyHtml && !isWithinWhitespaceSensitiveNode) {
              // pretty print the text node
              output.text.push(escapeString(textContent.replace(/\s\s+/g, ' ').trim(), false));
              output.currentLineWidth += textContentLength;
            }
            else {
              // not pretty printing the text node
              if (isWithinWhitespaceSensitive(node)) {
                output.currentLineWidth += textContentLength;
              }
              else {
                // this element is not a whitespace sensitive one, like <pre> or <code> so
                // any whitespace at the start and end can be cleaned up to just be one space
                if (/\s/.test(textContent.charAt(0))) {
                  textContent = ' ' + textContent.trimLeft();
                }
                textContentLength = textContent.length;
                if (textContentLength > 1) {
                  if (/\s/.test(textContent.charAt(textContentLength - 1))) {
                    if (opts.approximateLineWidth > 0 &&
                      output.currentLineWidth + textContentLength > opts.approximateLineWidth) {
                      textContent = textContent.trimRight() + '\n';
                      output.currentLineWidth = 0;
                    }
                    else {
                      textContent = textContent.trimRight() + ' ';
                    }
                  }
                }
                output.currentLineWidth += textContentLength;
              }
              output.text.push(escapeString(textContent, false));
            }
          }
        }
      }
    }
  }
  else if (node.nodeType === 8 /* NODE_TYPES.COMMENT_NODE */) {
    const nodeValue = node.nodeValue;
    if (opts.removeHtmlComments) {
      const isHydrateAnnotation = nodeValue.startsWith(CONTENT_REF_ID + '.') ||
        nodeValue.startsWith(ORG_LOCATION_ID + '.') ||
        nodeValue.startsWith(SLOT_NODE_ID + '.') ||
        nodeValue.startsWith(TEXT_NODE_ID + '.');
      if (!isHydrateAnnotation) {
        return;
      }
    }
    const isWithinWhitespaceSensitiveNode = opts.newLines || opts.indentSpaces > 0 ? isWithinWhitespaceSensitive(node) : false;
    if (opts.newLines && !isWithinWhitespaceSensitiveNode) {
      output.text.push('\n');
      output.currentLineWidth = 0;
    }
    if (opts.indentSpaces > 0 && !isWithinWhitespaceSensitiveNode) {
      for (let i = 0; i < output.indent; i++) {
        output.text.push(' ');
      }
      output.currentLineWidth += output.indent;
    }
    output.text.push('<!--' + nodeValue + '-->');
    output.currentLineWidth += nodeValue.length + 7;
  }
  else if (node.nodeType === 10 /* NODE_TYPES.DOCUMENT_TYPE_NODE */) {
    output.text.push('<!doctype html>');
  }
}
const AMP_REGEX = /&/g;
const NBSP_REGEX = /\u00a0/g;
const DOUBLE_QUOTE_REGEX = /"/g;
const LT_REGEX = /</g;
const GT_REGEX = />/g;
const CAN_REMOVE_ATTR_QUOTES = /^[^ \t\n\f\r"'`=<>\/\\-]+$/;
function getTagName(element) {
  if (element.namespaceURI === 'http://www.w3.org/1999/xhtml') {
    return element.nodeName.toLowerCase();
  }
  else {
    return element.nodeName;
  }
}
function escapeString(str, attrMode) {
  str = str.replace(AMP_REGEX, '&amp;').replace(NBSP_REGEX, '&nbsp;');
  if (attrMode) {
    return str.replace(DOUBLE_QUOTE_REGEX, '&quot;');
  }
  return str.replace(LT_REGEX, '&lt;').replace(GT_REGEX, '&gt;');
}
function isWithinWhitespaceSensitive(node) {
  while (node != null) {
    if (WHITESPACE_SENSITIVE.has(node.nodeName)) {
      return true;
    }
    node = node.parentNode;
  }
  return false;
}
/*@__PURE__*/ const NON_ESCAPABLE_CONTENT = new Set([
  'STYLE',
  'SCRIPT',
  'IFRAME',
  'NOSCRIPT',
  'XMP',
  'NOEMBED',
  'NOFRAMES',
  'PLAINTEXT',
]);
/*@__PURE__*/ const WHITESPACE_SENSITIVE = new Set([
  'CODE',
  'OUTPUT',
  'PLAINTEXT',
  'PRE',
  'SCRIPT',
  'TEMPLATE',
  'TEXTAREA',
]);
/*@__PURE__*/ const EMPTY_ELEMENTS = new Set([
  'area',
  'base',
  'basefont',
  'bgsound',
  'br',
  'col',
  'embed',
  'frame',
  'hr',
  'img',
  'input',
  'keygen',
  'link',
  'meta',
  'param',
  'source',
  'trace',
  'wbr',
]);
/*@__PURE__*/ const REMOVE_EMPTY_ATTR = new Set(['class', 'dir', 'id', 'lang', 'name', 'title']);
/*@__PURE__*/ const BOOLEAN_ATTR = new Set([
  'allowfullscreen',
  'async',
  'autofocus',
  'autoplay',
  'checked',
  'compact',
  'controls',
  'declare',
  'default',
  'defaultchecked',
  'defaultmuted',
  'defaultselected',
  'defer',
  'disabled',
  'enabled',
  'formnovalidate',
  'hidden',
  'indeterminate',
  'inert',
  'ismap',
  'itemscope',
  'loop',
  'multiple',
  'muted',
  'nohref',
  'nomodule',
  'noresize',
  'noshade',
  'novalidate',
  'nowrap',
  'open',
  'pauseonexit',
  'readonly',
  'required',
  'reversed',
  'scoped',
  'seamless',
  'selected',
  'sortable',
  'truespeed',
  'typemustmatch',
  'visible',
]);
/*@__PURE__*/ const STRUCTURE_ELEMENTS = new Set([
  'html',
  'body',
  'head',
  'iframe',
  'meta',
  'link',
  'base',
  'title',
  'script',
  'style',
]);

class MockNode {
  constructor(ownerDocument, nodeType, nodeName, nodeValue) {
    this.ownerDocument = ownerDocument;
    this.nodeType = nodeType;
    this.nodeName = nodeName;
    this._nodeValue = nodeValue;
    this.parentNode = null;
    this.childNodes = [];
  }
  appendChild(newNode) {
    if (newNode.nodeType === 11 /* NODE_TYPES.DOCUMENT_FRAGMENT_NODE */) {
      const nodes = newNode.childNodes.slice();
      for (const child of nodes) {
        this.appendChild(child);
      }
    }
    else {
      newNode.remove();
      newNode.parentNode = this;
      this.childNodes.push(newNode);
      connectNode(this.ownerDocument, newNode);
    }
    return newNode;
  }
  append(...items) {
    items.forEach((item) => {
      const isNode = typeof item === 'object' && item !== null && 'nodeType' in item;
      this.appendChild(isNode ? item : this.ownerDocument.createTextNode(String(item)));
    });
  }
  prepend(...items) {
    const firstChild = this.firstChild;
    items.forEach((item) => {
      const isNode = typeof item === 'object' && item !== null && 'nodeType' in item;
      if (firstChild) {
        this.insertBefore(isNode ? item : this.ownerDocument.createTextNode(String(item)), firstChild);
      }
    });
  }
  cloneNode(deep) {
    throw new Error(`invalid node type to clone: ${this.nodeType}, deep: ${deep}`);
  }
  compareDocumentPosition(_other) {
    // unimplemented
    // https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition
    return -1;
  }
  get firstChild() {
    return this.childNodes[0] || null;
  }
  insertBefore(newNode, referenceNode) {
    if (newNode.nodeType === 11 /* NODE_TYPES.DOCUMENT_FRAGMENT_NODE */) {
      for (let i = 0, ii = newNode.childNodes.length; i < ii; i++) {
        insertBefore(this, newNode.childNodes[i], referenceNode);
      }
    }
    else {
      insertBefore(this, newNode, referenceNode);
    }
    return newNode;
  }
  get isConnected() {
    let node = this;
    while (node != null) {
      if (node.nodeType === 9 /* NODE_TYPES.DOCUMENT_NODE */) {
        return true;
      }
      node = node.parentNode;
      if (node != null && node.nodeType === 11 /* NODE_TYPES.DOCUMENT_FRAGMENT_NODE */) {
        node = node.host;
      }
    }
    return false;
  }
  isSameNode(node) {
    return this === node;
  }
  get lastChild() {
    return this.childNodes[this.childNodes.length - 1] || null;
  }
  get nextSibling() {
    if (this.parentNode != null) {
      const index = this.parentNode.childNodes.indexOf(this) + 1;
      return this.parentNode.childNodes[index] || null;
    }
    return null;
  }
  get nodeValue() {
    var _a;
    return (_a = this._nodeValue) !== null && _a !== void 0 ? _a : '';
  }
  set nodeValue(value) {
    this._nodeValue = value;
  }
  get parentElement() {
    return this.parentNode || null;
  }
  set parentElement(value) {
    this.parentNode = value;
  }
  get previousSibling() {
    if (this.parentNode != null) {
      const index = this.parentNode.childNodes.indexOf(this) - 1;
      return this.parentNode.childNodes[index] || null;
    }
    return null;
  }
  contains(otherNode) {
    if (otherNode === this) {
      return true;
    }
    const childNodes = Array.from(this.childNodes);
    if (childNodes.includes(otherNode)) {
      return true;
    }
    return childNodes.some((node) => this.contains.bind(node)(otherNode));
  }
  removeChild(childNode) {
    const index = this.childNodes.indexOf(childNode);
    if (index > -1) {
      this.childNodes.splice(index, 1);
      if (this.nodeType === 1 /* NODE_TYPES.ELEMENT_NODE */) {
        const wasConnected = this.isConnected;
        childNode.parentNode = null;
        if (wasConnected === true) {
          disconnectNode(childNode);
        }
      }
      else {
        childNode.parentNode = null;
      }
    }
    else {
      throw new Error(`node not found within childNodes during removeChild`);
    }
    return childNode;
  }
  remove() {
    if (this.parentNode != null) {
      this.parentNode.removeChild(this);
    }
  }
  replaceChild(newChild, oldChild) {
    if (oldChild.parentNode === this) {
      this.insertBefore(newChild, oldChild);
      oldChild.remove();
      return newChild;
    }
    return null;
  }
  get textContent() {
    var _a;
    return (_a = this._nodeValue) !== null && _a !== void 0 ? _a : '';
  }
  set textContent(value) {
    this._nodeValue = String(value);
  }
}
MockNode.ELEMENT_NODE = 1;
MockNode.TEXT_NODE = 3;
MockNode.PROCESSING_INSTRUCTION_NODE = 7;
MockNode.COMMENT_NODE = 8;
MockNode.DOCUMENT_NODE = 9;
MockNode.DOCUMENT_TYPE_NODE = 10;
MockNode.DOCUMENT_FRAGMENT_NODE = 11;
class MockNodeList {
  constructor(ownerDocument, childNodes, length) {
    this.ownerDocument = ownerDocument;
    this.childNodes = childNodes;
    this.length = length;
  }
}
class MockElement extends MockNode {
  constructor(ownerDocument, nodeName) {
    super(ownerDocument, 1 /* NODE_TYPES.ELEMENT_NODE */, typeof nodeName === 'string' ? nodeName : null, null);
    this.namespaceURI = null;
    this.__shadowRoot = null;
    this.__attributeMap = null;
  }
  addEventListener(type, handler) {
    addEventListener(this, type, handler);
  }
  attachShadow(_opts) {
    const shadowRoot = this.ownerDocument.createDocumentFragment();
    this.shadowRoot = shadowRoot;
    return shadowRoot;
  }
  blur() {
    dispatchEvent(this, new MockFocusEvent('blur', { relatedTarget: null, bubbles: true, cancelable: true, composed: true }));
  }
  get shadowRoot() {
    return this.__shadowRoot || null;
  }
  set shadowRoot(shadowRoot) {
    if (shadowRoot != null) {
      shadowRoot.host = this;
      this.__shadowRoot = shadowRoot;
    }
    else {
      delete this.__shadowRoot;
    }
  }
  get attributes() {
    if (this.__attributeMap == null) {
      const attrMap = createAttributeProxy(false);
      this.__attributeMap = attrMap;
      return attrMap;
    }
    return this.__attributeMap;
  }
  set attributes(attrs) {
    this.__attributeMap = attrs;
  }
  get children() {
    return this.childNodes.filter((n) => n.nodeType === 1 /* NODE_TYPES.ELEMENT_NODE */);
  }
  get childElementCount() {
    return this.childNodes.filter((n) => n.nodeType === 1 /* NODE_TYPES.ELEMENT_NODE */).length;
  }
  get className() {
    return this.getAttributeNS(null, 'class') || '';
  }
  set className(value) {
    this.setAttributeNS(null, 'class', value);
  }
  get classList() {
    return new MockClassList(this);
  }
  click() {
    dispatchEvent(this, new MockEvent('click', { bubbles: true, cancelable: true, composed: true }));
  }
  cloneNode(_deep) {
    // implemented on MockElement.prototype from within element.ts
    // @ts-ignore - implemented on MockElement.prototype from within element.ts
    return null;
  }
  closest(selector) {
    let elm = this;
    while (elm != null) {
      if (elm.matches(selector)) {
        return elm;
      }
      elm = elm.parentNode;
    }
    return null;
  }
  get dataset() {
    return dataset(this);
  }
  get dir() {
    return this.getAttributeNS(null, 'dir') || '';
  }
  set dir(value) {
    this.setAttributeNS(null, 'dir', value);
  }
  dispatchEvent(ev) {
    return dispatchEvent(this, ev);
  }
  get firstElementChild() {
    return this.children[0] || null;
  }
  focus(_options) {
    dispatchEvent(this, new MockFocusEvent('focus', { relatedTarget: null, bubbles: true, cancelable: true, composed: true }));
  }
  getAttribute(attrName) {
    if (attrName === 'style') {
      if (this.__style != null && this.__style.length > 0) {
        return this.style.cssText;
      }
      return null;
    }
    const attr = this.attributes.getNamedItem(attrName);
    if (attr != null) {
      return attr.value;
    }
    return null;
  }
  getAttributeNS(namespaceURI, attrName) {
    const attr = this.attributes.getNamedItemNS(namespaceURI, attrName);
    if (attr != null) {
      return attr.value;
    }
    return null;
  }
  getBoundingClientRect() {
    return { bottom: 0, height: 0, left: 0, right: 0, top: 0, width: 0, x: 0, y: 0 };
  }
  getRootNode(opts) {
    const isComposed = opts != null && opts.composed === true;
    let node = this;
    while (node.parentNode != null) {
      node = node.parentNode;
      if (isComposed === true && node.parentNode == null && node.host != null) {
        node = node.host;
      }
    }
    return node;
  }
  get draggable() {
    return this.getAttributeNS(null, 'draggable') === 'true';
  }
  set draggable(value) {
    this.setAttributeNS(null, 'draggable', value);
  }
  hasChildNodes() {
    return this.childNodes.length > 0;
  }
  get id() {
    return this.getAttributeNS(null, 'id') || '';
  }
  set id(value) {
    this.setAttributeNS(null, 'id', value);
  }
  get innerHTML() {
    if (this.childNodes.length === 0) {
      return '';
    }
    return serializeNodeToHtml(this, {
      newLines: false,
      indentSpaces: 0,
    });
  }
  set innerHTML(html) {
    var _a;
    if (NON_ESCAPABLE_CONTENT.has((_a = this.nodeName) !== null && _a !== void 0 ? _a : '') === true) {
      setTextContent(this, html);
    }
    else {
      for (let i = this.childNodes.length - 1; i >= 0; i--) {
        this.removeChild(this.childNodes[i]);
      }
      if (typeof html === 'string') {
        const frag = parseFragmentUtil(this.ownerDocument, html);
        while (frag.childNodes.length > 0) {
          this.appendChild(frag.childNodes[0]);
        }
      }
    }
  }
  get innerText() {
    const text = [];
    getTextContent(this.childNodes, text);
    return text.join('');
  }
  set innerText(value) {
    setTextContent(this, value);
  }
  insertAdjacentElement(position, elm) {
    if (position === 'beforebegin') {
      insertBefore(this.parentNode, elm, this);
    }
    else if (position === 'afterbegin') {
      this.prepend(elm);
    }
    else if (position === 'beforeend') {
      this.appendChild(elm);
    }
    else if (position === 'afterend') {
      insertBefore(this.parentNode, elm, this.nextSibling);
    }
    return elm;
  }
  insertAdjacentHTML(position, html) {
    const frag = parseFragmentUtil(this.ownerDocument, html);
    if (position === 'beforebegin') {
      while (frag.childNodes.length > 0) {
        insertBefore(this.parentNode, frag.childNodes[0], this);
      }
    }
    else if (position === 'afterbegin') {
      while (frag.childNodes.length > 0) {
        this.prepend(frag.childNodes[frag.childNodes.length - 1]);
      }
    }
    else if (position === 'beforeend') {
      while (frag.childNodes.length > 0) {
        this.appendChild(frag.childNodes[0]);
      }
    }
    else if (position === 'afterend') {
      while (frag.childNodes.length > 0) {
        insertBefore(this.parentNode, frag.childNodes[frag.childNodes.length - 1], this.nextSibling);
      }
    }
  }
  insertAdjacentText(position, text) {
    const elm = this.ownerDocument.createTextNode(text);
    if (position === 'beforebegin') {
      insertBefore(this.parentNode, elm, this);
    }
    else if (position === 'afterbegin') {
      this.prepend(elm);
    }
    else if (position === 'beforeend') {
      this.appendChild(elm);
    }
    else if (position === 'afterend') {
      insertBefore(this.parentNode, elm, this.nextSibling);
    }
  }
  hasAttribute(attrName) {
    if (attrName === 'style') {
      return this.__style != null && this.__style.length > 0;
    }
    return this.getAttribute(attrName) !== null;
  }
  hasAttributeNS(namespaceURI, name) {
    return this.getAttributeNS(namespaceURI, name) !== null;
  }
  get hidden() {
    return this.hasAttributeNS(null, 'hidden');
  }
  set hidden(isHidden) {
    if (isHidden === true) {
      this.setAttributeNS(null, 'hidden', '');
    }
    else {
      this.removeAttributeNS(null, 'hidden');
    }
  }
  get lang() {
    return this.getAttributeNS(null, 'lang') || '';
  }
  set lang(value) {
    this.setAttributeNS(null, 'lang', value);
  }
  get lastElementChild() {
    const children = this.children;
    return children[children.length - 1] || null;
  }
  matches(selector) {
    return matches(selector, this);
  }
  get nextElementSibling() {
    const parentElement = this.parentElement;
    if (parentElement != null &&
      (parentElement.nodeType === 1 /* NODE_TYPES.ELEMENT_NODE */ ||
        parentElement.nodeType === 11 /* NODE_TYPES.DOCUMENT_FRAGMENT_NODE */ ||
        parentElement.nodeType === 9 /* NODE_TYPES.DOCUMENT_NODE */)) {
      const children = parentElement.children;
      const index = children.indexOf(this) + 1;
      return parentElement.children[index] || null;
    }
    return null;
  }
  get outerHTML() {
    return serializeNodeToHtml(this, {
      newLines: false,
      outerHtml: true,
      indentSpaces: 0,
    });
  }
  get previousElementSibling() {
    const parentElement = this.parentElement;
    if (parentElement != null &&
      (parentElement.nodeType === 1 /* NODE_TYPES.ELEMENT_NODE */ ||
        parentElement.nodeType === 11 /* NODE_TYPES.DOCUMENT_FRAGMENT_NODE */ ||
        parentElement.nodeType === 9 /* NODE_TYPES.DOCUMENT_NODE */)) {
      const children = parentElement.children;
      const index = children.indexOf(this) - 1;
      return parentElement.children[index] || null;
    }
    return null;
  }
  getElementsByClassName(classNames) {
    const classes = classNames
      .trim()
      .split(' ')
      .filter((c) => c.length > 0);
    const results = [];
    getElementsByClassName(this, classes, results);
    return results;
  }
  getElementsByTagName(tagName) {
    const results = [];
    getElementsByTagName(this, tagName.toLowerCase(), results);
    return results;
  }
  querySelector(selector) {
    return selectOne(selector, this);
  }
  querySelectorAll(selector) {
    return selectAll(selector, this);
  }
  removeAttribute(attrName) {
    if (attrName === 'style') {
      delete this.__style;
    }
    else {
      const attr = this.attributes.getNamedItem(attrName);
      if (attr != null) {
        this.attributes.removeNamedItemNS(attr);
        if (checkAttributeChanged(this) === true) {
          attributeChanged(this, attrName, attr.value, null);
        }
      }
    }
  }
  removeAttributeNS(namespaceURI, attrName) {
    const attr = this.attributes.getNamedItemNS(namespaceURI, attrName);
    if (attr != null) {
      this.attributes.removeNamedItemNS(attr);
      if (checkAttributeChanged(this) === true) {
        attributeChanged(this, attrName, attr.value, null);
      }
    }
  }
  removeEventListener(type, handler) {
    removeEventListener(this, type, handler);
  }
  setAttribute(attrName, value) {
    if (attrName === 'style') {
      this.style = value;
    }
    else {
      const attributes = this.attributes;
      let attr = attributes.getNamedItem(attrName);
      const checkAttrChanged = checkAttributeChanged(this);
      if (attr != null) {
        if (checkAttrChanged === true) {
          const oldValue = attr.value;
          attr.value = value;
          if (oldValue !== attr.value) {
            attributeChanged(this, attr.name, oldValue, attr.value);
          }
        }
        else {
          attr.value = value;
        }
      }
      else {
        if (attributes.caseInsensitive) {
          attrName = attrName.toLowerCase();
        }
        attr = new MockAttr(attrName, value);
        attributes.__items.push(attr);
        if (checkAttrChanged === true) {
          attributeChanged(this, attrName, null, attr.value);
        }
      }
    }
  }
  setAttributeNS(namespaceURI, attrName, value) {
    const attributes = this.attributes;
    let attr = attributes.getNamedItemNS(namespaceURI, attrName);
    const checkAttrChanged = checkAttributeChanged(this);
    if (attr != null) {
      if (checkAttrChanged === true) {
        const oldValue = attr.value;
        attr.value = value;
        if (oldValue !== attr.value) {
          attributeChanged(this, attr.name, oldValue, attr.value);
        }
      }
      else {
        attr.value = value;
      }
    }
    else {
      attr = new MockAttr(attrName, value, namespaceURI);
      attributes.__items.push(attr);
      if (checkAttrChanged === true) {
        attributeChanged(this, attrName, null, attr.value);
      }
    }
  }
  get style() {
    if (this.__style == null) {
      this.__style = createCSSStyleDeclaration();
    }
    return this.__style;
  }
  set style(val) {
    if (typeof val === 'string') {
      if (this.__style == null) {
        this.__style = createCSSStyleDeclaration();
      }
      this.__style.cssText = val;
    }
    else {
      this.__style = val;
    }
  }
  get tabIndex() {
    return parseInt(this.getAttributeNS(null, 'tabindex') || '-1', 10);
  }
  set tabIndex(value) {
    this.setAttributeNS(null, 'tabindex', value);
  }
  get tagName() {
    var _a;
    return (_a = this.nodeName) !== null && _a !== void 0 ? _a : '';
  }
  set tagName(value) {
    this.nodeName = value;
  }
  get textContent() {
    const text = [];
    getTextContent(this.childNodes, text);
    return text.join('');
  }
  set textContent(value) {
    setTextContent(this, value);
  }
  get title() {
    return this.getAttributeNS(null, 'title') || '';
  }
  set title(value) {
    this.setAttributeNS(null, 'title', value);
  }
  animate() {
    /**/
  }
  onanimationstart() {
    /**/
  }
  onanimationend() {
    /**/
  }
  onanimationiteration() {
    /**/
  }
  onabort() {
    /**/
  }
  onauxclick() {
    /**/
  }
  onbeforecopy() {
    /**/
  }
  onbeforecut() {
    /**/
  }
  onbeforepaste() {
    /**/
  }
  onblur() {
    /**/
  }
  oncancel() {
    /**/
  }
  oncanplay() {
    /**/
  }
  oncanplaythrough() {
    /**/
  }
  onchange() {
    /**/
  }
  onclick() {
    /**/
  }
  onclose() {
    /**/
  }
  oncontextmenu() {
    /**/
  }
  oncopy() {
    /**/
  }
  oncuechange() {
    /**/
  }
  oncut() {
    /**/
  }
  ondblclick() {
    /**/
  }
  ondrag() {
    /**/
  }
  ondragend() {
    /**/
  }
  ondragenter() {
    /**/
  }
  ondragleave() {
    /**/
  }
  ondragover() {
    /**/
  }
  ondragstart() {
    /**/
  }
  ondrop() {
    /**/
  }
  ondurationchange() {
    /**/
  }
  onemptied() {
    /**/
  }
  onended() {
    /**/
  }
  onerror() {
    /**/
  }
  onfocus() {
    /**/
  }
  onfocusin() {
    /**/
  }
  onfocusout() {
    /**/
  }
  onformdata() {
    /**/
  }
  onfullscreenchange() {
    /**/
  }
  onfullscreenerror() {
    /**/
  }
  ongotpointercapture() {
    /**/
  }
  oninput() {
    /**/
  }
  oninvalid() {
    /**/
  }
  onkeydown() {
    /**/
  }
  onkeypress() {
    /**/
  }
  onkeyup() {
    /**/
  }
  onload() {
    /**/
  }
  onloadeddata() {
    /**/
  }
  onloadedmetadata() {
    /**/
  }
  onloadstart() {
    /**/
  }
  onlostpointercapture() {
    /**/
  }
  onmousedown() {
    /**/
  }
  onmouseenter() {
    /**/
  }
  onmouseleave() {
    /**/
  }
  onmousemove() {
    /**/
  }
  onmouseout() {
    /**/
  }
  onmouseover() {
    /**/
  }
  onmouseup() {
    /**/
  }
  onmousewheel() {
    /**/
  }
  onpaste() {
    /**/
  }
  onpause() {
    /**/
  }
  onplay() {
    /**/
  }
  onplaying() {
    /**/
  }
  onpointercancel() {
    /**/
  }
  onpointerdown() {
    /**/
  }
  onpointerenter() {
    /**/
  }
  onpointerleave() {
    /**/
  }
  onpointermove() {
    /**/
  }
  onpointerout() {
    /**/
  }
  onpointerover() {
    /**/
  }
  onpointerup() {
    /**/
  }
  onprogress() {
    /**/
  }
  onratechange() {
    /**/
  }
  onreset() {
    /**/
  }
  onresize() {
    /**/
  }
  onscroll() {
    /**/
  }
  onsearch() {
    /**/
  }
  onseeked() {
    /**/
  }
  onseeking() {
    /**/
  }
  onselect() {
    /**/
  }
  onselectstart() {
    /**/
  }
  onstalled() {
    /**/
  }
  onsubmit() {
    /**/
  }
  onsuspend() {
    /**/
  }
  ontimeupdate() {
    /**/
  }
  ontoggle() {
    /**/
  }
  onvolumechange() {
    /**/
  }
  onwaiting() {
    /**/
  }
  onwebkitfullscreenchange() {
    /**/
  }
  onwebkitfullscreenerror() {
    /**/
  }
  onwheel() {
    /**/
  }
  requestFullscreen() {
    /**/
  }
  scrollBy() {
    /**/
  }
  scrollTo() {
    /**/
  }
  scrollIntoView() {
    /**/
  }
  toString(opts) {
    return serializeNodeToHtml(this, opts);
  }
}
function getElementsByClassName(elm, classNames, foundElms) {
  const children = elm.children;
  for (let i = 0, ii = children.length; i < ii; i++) {
    const childElm = children[i];
    for (let j = 0, jj = classNames.length; j < jj; j++) {
      if (childElm.classList.contains(classNames[j])) {
        foundElms.push(childElm);
      }
    }
    getElementsByClassName(childElm, classNames, foundElms);
  }
}
function getElementsByTagName(elm, tagName, foundElms) {
  var _a;
  const children = elm.children;
  for (let i = 0, ii = children.length; i < ii; i++) {
    const childElm = children[i];
    if (tagName === '*' || ((_a = childElm.nodeName) !== null && _a !== void 0 ? _a : '').toLowerCase() === tagName) {
      foundElms.push(childElm);
    }
    getElementsByTagName(childElm, tagName, foundElms);
  }
}
function resetElement(elm) {
  resetEventListeners(elm);
  delete elm.__attributeMap;
  delete elm.__shadowRoot;
  delete elm.__style;
}
function insertBefore(parentNode, newNode, referenceNode) {
  if (newNode !== referenceNode) {
    newNode.remove();
    newNode.parentNode = parentNode;
    newNode.ownerDocument = parentNode.ownerDocument;
    if (referenceNode != null) {
      const index = parentNode.childNodes.indexOf(referenceNode);
      if (index > -1) {
        parentNode.childNodes.splice(index, 0, newNode);
      }
      else {
        throw new Error(`referenceNode not found in parentNode.childNodes`);
      }
    }
    else {
      parentNode.childNodes.push(newNode);
    }
    connectNode(parentNode.ownerDocument, newNode);
  }
  return newNode;
}
class MockHTMLElement extends MockElement {
  constructor(ownerDocument, nodeName) {
    super(ownerDocument, typeof nodeName === 'string' ? nodeName.toUpperCase() : null);
    this.namespaceURI = 'http://www.w3.org/1999/xhtml';
  }
  get tagName() {
    var _a;
    return (_a = this.nodeName) !== null && _a !== void 0 ? _a : '';
  }
  set tagName(value) {
    this.nodeName = value;
  }
  get attributes() {
    if (this.__attributeMap == null) {
      const attrMap = createAttributeProxy(true);
      this.__attributeMap = attrMap;
      return attrMap;
    }
    return this.__attributeMap;
  }
  set attributes(attrs) {
    this.__attributeMap = attrs;
  }
}
class MockTextNode extends MockNode {
  constructor(ownerDocument, text) {
    super(ownerDocument, 3 /* NODE_TYPES.TEXT_NODE */, "#text" /* NODE_NAMES.TEXT_NODE */, text);
  }
  cloneNode(_deep) {
    return new MockTextNode(null, this.nodeValue);
  }
  get textContent() {
    return this.nodeValue;
  }
  set textContent(text) {
    this.nodeValue = text;
  }
  get data() {
    return this.nodeValue;
  }
  set data(text) {
    this.nodeValue = text;
  }
  get wholeText() {
    if (this.parentNode != null) {
      const text = [];
      for (let i = 0, ii = this.parentNode.childNodes.length; i < ii; i++) {
        const childNode = this.parentNode.childNodes[i];
        if (childNode.nodeType === 3 /* NODE_TYPES.TEXT_NODE */) {
          text.push(childNode.nodeValue);
        }
      }
      return text.join('');
    }
    return this.nodeValue;
  }
}
function getTextContent(childNodes, text) {
  for (let i = 0, ii = childNodes.length; i < ii; i++) {
    const childNode = childNodes[i];
    if (childNode.nodeType === 3 /* NODE_TYPES.TEXT_NODE */) {
      text.push(childNode.nodeValue);
    }
    else if (childNode.nodeType === 1 /* NODE_TYPES.ELEMENT_NODE */) {
      getTextContent(childNode.childNodes, text);
    }
  }
}
function setTextContent(elm, text) {
  for (let i = elm.childNodes.length - 1; i >= 0; i--) {
    elm.removeChild(elm.childNodes[i]);
  }
  const textNode = new MockTextNode(elm.ownerDocument, text);
  elm.appendChild(textNode);
}

class MockComment extends MockNode {
  constructor(ownerDocument, data) {
    super(ownerDocument, 8 /* NODE_TYPES.COMMENT_NODE */, "#comment" /* NODE_NAMES.COMMENT_NODE */, data);
  }
  cloneNode(_deep) {
    return new MockComment(null, this.nodeValue);
  }
  get textContent() {
    return this.nodeValue;
  }
  set textContent(text) {
    this.nodeValue = text;
  }
}

class MockDocumentFragment extends MockHTMLElement {
  constructor(ownerDocument) {
    super(ownerDocument, null);
    this.nodeName = "#document-fragment" /* NODE_NAMES.DOCUMENT_FRAGMENT_NODE */;
    this.nodeType = 11 /* NODE_TYPES.DOCUMENT_FRAGMENT_NODE */;
  }
  getElementById(id) {
    return getElementById(this, id);
  }
  cloneNode(deep) {
    const cloned = new MockDocumentFragment(null);
    if (deep) {
      for (let i = 0, ii = this.childNodes.length; i < ii; i++) {
        const childNode = this.childNodes[i];
        if (childNode.nodeType === 1 /* NODE_TYPES.ELEMENT_NODE */ ||
          childNode.nodeType === 3 /* NODE_TYPES.TEXT_NODE */ ||
          childNode.nodeType === 8 /* NODE_TYPES.COMMENT_NODE */) {
          const clonedChildNode = this.childNodes[i].cloneNode(true);
          cloned.appendChild(clonedChildNode);
        }
      }
    }
    return cloned;
  }
}

class MockDocumentTypeNode extends MockHTMLElement {
  constructor(ownerDocument) {
    super(ownerDocument, '!DOCTYPE');
    this.nodeType = 10 /* NODE_TYPES.DOCUMENT_TYPE_NODE */;
    this.setAttribute('html', '');
  }
}

class MockCSSRule {
  constructor(parentStyleSheet) {
    this.parentStyleSheet = parentStyleSheet;
    this.cssText = '';
    this.type = 0;
  }
}
class MockCSSStyleSheet {
  constructor(ownerNode) {
    this.type = 'text/css';
    this.parentStyleSheet = null;
    this.cssRules = [];
    this.ownerNode = ownerNode;
  }
  get rules() {
    return this.cssRules;
  }
  set rules(rules) {
    this.cssRules = rules;
  }
  deleteRule(index) {
    if (index >= 0 && index < this.cssRules.length) {
      this.cssRules.splice(index, 1);
      updateStyleTextNode(this.ownerNode);
    }
  }
  insertRule(rule, index = 0) {
    if (typeof index !== 'number') {
      index = 0;
    }
    if (index < 0) {
      index = 0;
    }
    if (index > this.cssRules.length) {
      index = this.cssRules.length;
    }
    const cssRule = new MockCSSRule(this);
    cssRule.cssText = rule;
    this.cssRules.splice(index, 0, cssRule);
    updateStyleTextNode(this.ownerNode);
    return index;
  }
}
function getStyleElementText(styleElm) {
  const output = [];
  for (let i = 0; i < styleElm.childNodes.length; i++) {
    output.push(styleElm.childNodes[i].nodeValue);
  }
  return output.join('');
}
function setStyleElementText(styleElm, text) {
  // keeping the innerHTML and the sheet.cssRules connected
  // is not technically correct, but since we're doing
  // SSR we'll need to turn any assigned cssRules into
  // real text, not just properties that aren't rendered
  const sheet = styleElm.sheet;
  sheet.cssRules.length = 0;
  sheet.insertRule(text);
  updateStyleTextNode(styleElm);
}
function updateStyleTextNode(styleElm) {
  const childNodeLen = styleElm.childNodes.length;
  if (childNodeLen > 1) {
    for (let i = childNodeLen - 1; i >= 1; i--) {
      styleElm.removeChild(styleElm.childNodes[i]);
    }
  }
  else if (childNodeLen < 1) {
    styleElm.appendChild(styleElm.ownerDocument.createTextNode(''));
  }
  const textNode = styleElm.childNodes[0];
  textNode.nodeValue = styleElm.sheet.cssRules.map((r) => r.cssText).join('\n');
}

function createElement(ownerDocument, tagName) {
  if (typeof tagName !== 'string' || tagName === '' || !/^[a-z0-9-_:]+$/i.test(tagName)) {
    throw new Error(`The tag name provided (${tagName}) is not a valid name.`);
  }
  tagName = tagName.toLowerCase();
  switch (tagName) {
    case 'a':
      return new MockAnchorElement(ownerDocument);
    case 'base':
      return new MockBaseElement(ownerDocument);
    case 'button':
      return new MockButtonElement(ownerDocument);
    case 'canvas':
      return new MockCanvasElement(ownerDocument);
    case 'form':
      return new MockFormElement(ownerDocument);
    case 'img':
      return new MockImageElement(ownerDocument);
    case 'input':
      return new MockInputElement(ownerDocument);
    case 'link':
      return new MockLinkElement(ownerDocument);
    case 'meta':
      return new MockMetaElement(ownerDocument);
    case 'script':
      return new MockScriptElement(ownerDocument);
    case 'style':
      return new MockStyleElement(ownerDocument);
    case 'template':
      return new MockTemplateElement(ownerDocument);
    case 'title':
      return new MockTitleElement(ownerDocument);
  }
  if (ownerDocument != null && tagName.includes('-')) {
    const win = ownerDocument.defaultView;
    if (win != null && win.customElements != null) {
      return createCustomElement(win.customElements, ownerDocument, tagName);
    }
  }
  return new MockHTMLElement(ownerDocument, tagName);
}
function createElementNS(ownerDocument, namespaceURI, tagName) {
  if (namespaceURI === 'http://www.w3.org/1999/xhtml') {
    return createElement(ownerDocument, tagName);
  }
  else if (namespaceURI === 'http://www.w3.org/2000/svg') {
    switch (tagName.toLowerCase()) {
      case 'text':
      case 'tspan':
      case 'tref':
      case 'altglyph':
      case 'textpath':
        return new MockSVGTextContentElement(ownerDocument, tagName);
      case 'circle':
      case 'ellipse':
      case 'image':
      case 'line':
      case 'path':
      case 'polygon':
      case 'polyline':
      case 'rect':
      case 'use':
        return new MockSVGGraphicsElement(ownerDocument, tagName);
      case 'svg':
        return new MockSVGSVGElement(ownerDocument, tagName);
      default:
        return new MockSVGElement(ownerDocument, tagName);
    }
  }
  else {
    return new MockElement(ownerDocument, tagName);
  }
}
class MockAnchorElement extends MockHTMLElement {
  constructor(ownerDocument) {
    super(ownerDocument, 'a');
  }
  get href() {
    return fullUrl(this, 'href');
  }
  set href(value) {
    this.setAttribute('href', value);
  }
  get pathname() {
    return new URL(this.href).pathname;
  }
}
class MockButtonElement extends MockHTMLElement {
  constructor(ownerDocument) {
    super(ownerDocument, 'button');
  }
}
patchPropAttributes(MockButtonElement.prototype, {
  type: String,
}, {
  type: 'submit',
});
class MockImageElement extends MockHTMLElement {
  constructor(ownerDocument) {
    super(ownerDocument, 'img');
  }
  get draggable() {
    return this.getAttributeNS(null, 'draggable') !== 'false';
  }
  set draggable(value) {
    this.setAttributeNS(null, 'draggable', value);
  }
  get src() {
    return fullUrl(this, 'src');
  }
  set src(value) {
    this.setAttribute('src', value);
  }
}
patchPropAttributes(MockImageElement.prototype, {
  height: Number,
  width: Number,
});
class MockInputElement extends MockHTMLElement {
  constructor(ownerDocument) {
    super(ownerDocument, 'input');
  }
  get list() {
    const listId = this.getAttribute('list');
    if (listId) {
      return this.ownerDocument.getElementById(listId);
    }
    return null;
  }
}
patchPropAttributes(MockInputElement.prototype, {
  accept: String,
  autocomplete: String,
  autofocus: Boolean,
  capture: String,
  checked: Boolean,
  disabled: Boolean,
  form: String,
  formaction: String,
  formenctype: String,
  formmethod: String,
  formnovalidate: String,
  formtarget: String,
  height: Number,
  inputmode: String,
  max: String,
  maxLength: Number,
  min: String,
  minLength: Number,
  multiple: Boolean,
  name: String,
  pattern: String,
  placeholder: String,
  required: Boolean,
  readOnly: Boolean,
  size: Number,
  spellCheck: Boolean,
  src: String,
  step: String,
  type: String,
  value: String,
  width: Number,
}, {
  type: 'text',
});
class MockFormElement extends MockHTMLElement {
  constructor(ownerDocument) {
    super(ownerDocument, 'form');
  }
}
patchPropAttributes(MockFormElement.prototype, {
  name: String,
});
class MockLinkElement extends MockHTMLElement {
  constructor(ownerDocument) {
    super(ownerDocument, 'link');
  }
  get href() {
    return fullUrl(this, 'href');
  }
  set href(value) {
    this.setAttribute('href', value);
  }
}
patchPropAttributes(MockLinkElement.prototype, {
  crossorigin: String,
  media: String,
  rel: String,
  type: String,
});
class MockMetaElement extends MockHTMLElement {
  constructor(ownerDocument) {
    super(ownerDocument, 'meta');
  }
}
patchPropAttributes(MockMetaElement.prototype, {
  charset: String,
  content: String,
  name: String,
});
class MockScriptElement extends MockHTMLElement {
  constructor(ownerDocument) {
    super(ownerDocument, 'script');
  }
  get src() {
    return fullUrl(this, 'src');
  }
  set src(value) {
    this.setAttribute('src', value);
  }
}
patchPropAttributes(MockScriptElement.prototype, {
  type: String,
});
class MockDOMMatrix {
  constructor() {
    this.a = 1;
    this.b = 0;
    this.c = 0;
    this.d = 1;
    this.e = 0;
    this.f = 0;
    this.m11 = 1;
    this.m12 = 0;
    this.m13 = 0;
    this.m14 = 0;
    this.m21 = 0;
    this.m22 = 1;
    this.m23 = 0;
    this.m24 = 0;
    this.m31 = 0;
    this.m32 = 0;
    this.m33 = 1;
    this.m34 = 0;
    this.m41 = 0;
    this.m42 = 0;
    this.m43 = 0;
    this.m44 = 1;
    this.is2D = true;
    this.isIdentity = true;
  }
  static fromMatrix() {
    return new MockDOMMatrix();
  }
  inverse() {
    return new MockDOMMatrix();
  }
  flipX() {
    return new MockDOMMatrix();
  }
  flipY() {
    return new MockDOMMatrix();
  }
  multiply() {
    return new MockDOMMatrix();
  }
  rotate() {
    return new MockDOMMatrix();
  }
  rotateAxisAngle() {
    return new MockDOMMatrix();
  }
  rotateFromVector() {
    return new MockDOMMatrix();
  }
  scale() {
    return new MockDOMMatrix();
  }
  scaleNonUniform() {
    return new MockDOMMatrix();
  }
  skewX() {
    return new MockDOMMatrix();
  }
  skewY() {
    return new MockDOMMatrix();
  }
  toJSON() { }
  toString() { }
  transformPoint() {
    return new MockDOMPoint();
  }
  translate() {
    return new MockDOMMatrix();
  }
}
class MockDOMPoint {
  constructor() {
    this.w = 1;
    this.x = 0;
    this.y = 0;
    this.z = 0;
  }
  toJSON() { }
  matrixTransform() {
    return new MockDOMMatrix();
  }
}
class MockSVGRect {
  constructor() {
    this.height = 10;
    this.width = 10;
    this.x = 0;
    this.y = 0;
  }
}
class MockStyleElement extends MockHTMLElement {
  constructor(ownerDocument) {
    super(ownerDocument, 'style');
    this.sheet = new MockCSSStyleSheet(this);
  }
  get innerHTML() {
    return getStyleElementText(this);
  }
  set innerHTML(value) {
    setStyleElementText(this, value);
  }
  get innerText() {
    return getStyleElementText(this);
  }
  set innerText(value) {
    setStyleElementText(this, value);
  }
  get textContent() {
    return getStyleElementText(this);
  }
  set textContent(value) {
    setStyleElementText(this, value);
  }
}
class MockSVGElement extends MockElement {
  // SVGElement properties and methods
  get ownerSVGElement() {
    return null;
  }
  get viewportElement() {
    return null;
  }
  onunload() {
    /**/
  }
  // SVGGeometryElement properties and methods
  get pathLength() {
    return 0;
  }
  isPointInFill(_pt) {
    return false;
  }
  isPointInStroke(_pt) {
    return false;
  }
  getTotalLength() {
    return 0;
  }
}
class MockSVGGraphicsElement extends MockSVGElement {
  getBBox(_options) {
    return new MockSVGRect();
  }
  getCTM() {
    return new MockDOMMatrix();
  }
  getScreenCTM() {
    return new MockDOMMatrix();
  }
}
class MockSVGSVGElement extends MockSVGGraphicsElement {
  createSVGPoint() {
    return new MockDOMPoint();
  }
}
class MockSVGTextContentElement extends MockSVGGraphicsElement {
  getComputedTextLength() {
    return 0;
  }
}
class MockBaseElement extends MockHTMLElement {
  constructor(ownerDocument) {
    super(ownerDocument, 'base');
  }
  get href() {
    return fullUrl(this, 'href');
  }
  set href(value) {
    this.setAttribute('href', value);
  }
}
class MockTemplateElement extends MockHTMLElement {
  constructor(ownerDocument) {
    super(ownerDocument, 'template');
    this.content = new MockDocumentFragment(ownerDocument);
  }
  get innerHTML() {
    return this.content.innerHTML;
  }
  set innerHTML(html) {
    this.content.innerHTML = html;
  }
  cloneNode(deep) {
    const cloned = new MockTemplateElement(null);
    cloned.attributes = cloneAttributes(this.attributes);
    const styleCssText = this.getAttribute('style');
    if (styleCssText != null && styleCssText.length > 0) {
      cloned.setAttribute('style', styleCssText);
    }
    cloned.content = this.content.cloneNode(deep);
    if (deep) {
      for (let i = 0, ii = this.childNodes.length; i < ii; i++) {
        const clonedChildNode = this.childNodes[i].cloneNode(true);
        cloned.appendChild(clonedChildNode);
      }
    }
    return cloned;
  }
}
class MockTitleElement extends MockHTMLElement {
  constructor(ownerDocument) {
    super(ownerDocument, 'title');
  }
  get text() {
    return this.textContent;
  }
  set text(value) {
    this.textContent = value;
  }
}
class MockCanvasElement extends MockHTMLElement {
  constructor(ownerDocument) {
    super(ownerDocument, 'canvas');
  }
  getContext() {
    return {
      fillRect() {
        return;
      },
      clearRect() { },
      getImageData: function (_, __, w, h) {
        return {
          data: new Array(w * h * 4),
        };
      },
      putImageData() { },
      createImageData: function () {
        return [];
      },
      setTransform() { },
      drawImage() { },
      save() { },
      fillText() { },
      restore() { },
      beginPath() { },
      moveTo() { },
      lineTo() { },
      closePath() { },
      stroke() { },
      translate() { },
      scale() { },
      rotate() { },
      arc() { },
      fill() { },
      measureText() {
        return { width: 0 };
      },
      transform() { },
      rect() { },
      clip() { },
    };
  }
}
function fullUrl(elm, attrName) {
  const val = elm.getAttribute(attrName) || '';
  if (elm.ownerDocument != null) {
    const win = elm.ownerDocument.defaultView;
    if (win != null) {
      const loc = win.location;
      if (loc != null) {
        try {
          const url = new URL(val, loc.href);
          return url.href;
        }
        catch (e) { }
      }
    }
  }
  return val.replace(/\'|\"/g, '').trim();
}
function patchPropAttributes(prototype, attrs, defaults = {}) {
  Object.keys(attrs).forEach((propName) => {
    const attr = attrs[propName];
    const defaultValue = defaults[propName];
    if (attr === Boolean) {
      Object.defineProperty(prototype, propName, {
        get() {
          return this.hasAttribute(propName);
        },
        set(value) {
          if (value) {
            this.setAttribute(propName, '');
          }
          else {
            this.removeAttribute(propName);
          }
        },
      });
    }
    else if (attr === Number) {
      Object.defineProperty(prototype, propName, {
        get() {
          const value = this.getAttribute(propName);
          return value ? parseInt(value, 10) : defaultValue === undefined ? 0 : defaultValue;
        },
        set(value) {
          this.setAttribute(propName, value);
        },
      });
    }
    else {
      Object.defineProperty(prototype, propName, {
        get() {
          return this.hasAttribute(propName) ? this.getAttribute(propName) : defaultValue || '';
        },
        set(value) {
          this.setAttribute(propName, value);
        },
      });
    }
  });
}
MockElement.prototype.cloneNode = function (deep) {
  // because we're creating elements, which extending specific HTML base classes there
  // is a MockElement circular reference that bundling has trouble dealing with so
  // the fix is to add cloneNode() to MockElement's prototype after the HTML classes
  const cloned = createElement(this.ownerDocument, this.nodeName);
  cloned.attributes = cloneAttributes(this.attributes);
  const styleCssText = this.getAttribute('style');
  if (styleCssText != null && styleCssText.length > 0) {
    cloned.setAttribute('style', styleCssText);
  }
  if (deep) {
    for (let i = 0, ii = this.childNodes.length; i < ii; i++) {
      const clonedChildNode = this.childNodes[i].cloneNode(true);
      cloned.appendChild(clonedChildNode);
    }
  }
  return cloned;
};

let sharedDocument;
function parseHtmlToDocument(html, ownerDocument = null) {
  if (ownerDocument == null) {
    if (sharedDocument == null) {
      sharedDocument = new MockDocument();
    }
    ownerDocument = sharedDocument;
  }
  return parseDocumentUtil(ownerDocument, html);
}
function parseHtmlToFragment(html, ownerDocument = null) {
  if (ownerDocument == null) {
    if (sharedDocument == null) {
      sharedDocument = new MockDocument();
    }
    ownerDocument = sharedDocument;
  }
  return parseFragmentUtil(ownerDocument, html);
}

const consoleNoop = () => {
  /**/
};
function createConsole() {
  return {
    debug: consoleNoop,
    error: consoleNoop,
    info: consoleNoop,
    log: consoleNoop,
    warn: consoleNoop,
    dir: consoleNoop,
    dirxml: consoleNoop,
    table: consoleNoop,
    trace: consoleNoop,
    group: consoleNoop,
    groupCollapsed: consoleNoop,
    groupEnd: consoleNoop,
    clear: consoleNoop,
    count: consoleNoop,
    countReset: consoleNoop,
    assert: consoleNoop,
    profile: consoleNoop,
    profileEnd: consoleNoop,
    time: consoleNoop,
    timeLog: consoleNoop,
    timeEnd: consoleNoop,
    timeStamp: consoleNoop,
    context: consoleNoop,
    memory: consoleNoop,
  };
}

class MockHeaders {
  constructor(init) {
    this._values = [];
    if (typeof init === 'object') {
      if (typeof init[Symbol.iterator] === 'function') {
        const kvs = [];
        for (const kv of init) {
          if (typeof kv[Symbol.iterator] === 'function') {
            kvs.push([...kv]);
          }
        }
        for (const kv of kvs) {
          this.append(kv[0], kv[1]);
        }
      }
      else {
        for (const key in init) {
          this.append(key, init[key]);
        }
      }
    }
  }
  append(key, value) {
    this._values.push([key, value + '']);
  }
  delete(key) {
    key = key.toLowerCase();
    for (let i = this._values.length - 1; i >= 0; i--) {
      if (this._values[i][0].toLowerCase() === key) {
        this._values.splice(i, 1);
      }
    }
  }
  entries() {
    const entries = [];
    for (const kv of this.keys()) {
      entries.push([kv, this.get(kv)]);
    }
    let index = -1;
    return {
      next() {
        index++;
        return {
          value: entries[index],
          done: !entries[index],
        };
      },
      [Symbol.iterator]() {
        return this;
      },
    };
  }
  forEach(cb) {
    for (const kv of this.entries()) {
      cb(kv[1], kv[0]);
    }
  }
  get(key) {
    const rtn = [];
    key = key.toLowerCase();
    for (const kv of this._values) {
      if (kv[0].toLowerCase() === key) {
        rtn.push(kv[1]);
      }
    }
    return rtn.length > 0 ? rtn.join(', ') : null;
  }
  has(key) {
    key = key.toLowerCase();
    for (const kv of this._values) {
      if (kv[0].toLowerCase() === key) {
        return true;
      }
    }
    return false;
  }
  keys() {
    const keys = [];
    for (const kv of this._values) {
      const key = kv[0].toLowerCase();
      if (!keys.includes(key)) {
        keys.push(key);
      }
    }
    let index = -1;
    return {
      next() {
        index++;
        return {
          value: keys[index],
          done: !keys[index],
        };
      },
      [Symbol.iterator]() {
        return this;
      },
    };
  }
  set(key, value) {
    for (const kv of this._values) {
      if (kv[0].toLowerCase() === key.toLowerCase()) {
        kv[1] = value + '';
        return;
      }
    }
    this.append(key, value);
  }
  values() {
    const values = this._values;
    let index = -1;
    return {
      next() {
        index++;
        const done = !values[index];
        return {
          value: done ? undefined : values[index][1],
          done,
        };
      },
      [Symbol.iterator]() {
        return this;
      },
    };
  }
  [Symbol.iterator]() {
    return this.entries();
  }
}

class MockDOMParser {
  parseFromString(htmlToParse, mimeType) {
    if (mimeType !== 'text/html') {
      console.error('XML parsing not implemented yet, continuing as html');
    }
    return parseHtmlToDocument(htmlToParse);
  }
}

class MockRequest {
  constructor(input, init = {}) {
    this._method = 'GET';
    this._url = '/';
    this.bodyUsed = false;
    this.cache = 'default';
    this.credentials = 'same-origin';
    this.integrity = '';
    this.keepalive = false;
    this.mode = 'cors';
    this.redirect = 'follow';
    this.referrer = 'about:client';
    this.referrerPolicy = '';
    if (typeof input === 'string') {
      this.url = input;
    }
    else if (input) {
      Object.assign(this, input);
      this.headers = new MockHeaders(input.headers);
    }
    Object.assign(this, init);
    if (init.headers) {
      this.headers = new MockHeaders(init.headers);
    }
    if (!this.headers) {
      this.headers = new MockHeaders();
    }
  }
  get url() {
    if (typeof this._url === 'string') {
      return new URL(this._url, location.href).href;
    }
    return new URL('/', location.href).href;
  }
  set url(value) {
    this._url = value;
  }
  get method() {
    if (typeof this._method === 'string') {
      return this._method.toUpperCase();
    }
    return 'GET';
  }
  set method(value) {
    this._method = value;
  }
  clone() {
    const clone = { ...this };
    clone.headers = new MockHeaders(this.headers);
    return new MockRequest(clone);
  }
}
class MockResponse {
  constructor(body, init = {}) {
    this.ok = true;
    this.status = 200;
    this.statusText = '';
    this.type = 'default';
    this.url = '';
    this._body = body;
    if (init) {
      Object.assign(this, init);
    }
    this.headers = new MockHeaders(init.headers);
  }
  async json() {
    return JSON.parse(this._body);
  }
  async text() {
    return this._body;
  }
  clone() {
    const initClone = { ...this };
    initClone.headers = new MockHeaders(this.headers);
    return new MockResponse(this._body, initClone);
  }
}

function setupGlobal(gbl) {
  if (gbl.window == null) {
    const win = (gbl.window = new MockWindow());
    WINDOW_FUNCTIONS.forEach((fnName) => {
      if (!(fnName in gbl)) {
        gbl[fnName] = win[fnName].bind(win);
      }
    });
    WINDOW_PROPS.forEach((propName) => {
      if (!(propName in gbl)) {
        Object.defineProperty(gbl, propName, {
          get() {
            return win[propName];
          },
          set(val) {
            win[propName] = val;
          },
          configurable: true,
          enumerable: true,
        });
      }
    });
    GLOBAL_CONSTRUCTORS.forEach(([cstrName]) => {
      gbl[cstrName] = win[cstrName];
    });
  }
  return gbl.window;
}
function teardownGlobal(gbl) {
  const win = gbl.window;
  if (win && typeof win.close === 'function') {
    win.close();
  }
}
function patchWindow(winToBePatched) {
  const mockWin = new MockWindow(false);
  WINDOW_FUNCTIONS.forEach((fnName) => {
    if (typeof winToBePatched[fnName] !== 'function') {
      winToBePatched[fnName] = mockWin[fnName].bind(mockWin);
    }
  });
  WINDOW_PROPS.forEach((propName) => {
    if (winToBePatched === undefined) {
      Object.defineProperty(winToBePatched, propName, {
        get() {
          return mockWin[propName];
        },
        set(val) {
          mockWin[propName] = val;
        },
        configurable: true,
        enumerable: true,
      });
    }
  });
}
function addGlobalsToWindowPrototype(mockWinPrototype) {
  GLOBAL_CONSTRUCTORS.forEach(([cstrName, Cstr]) => {
    Object.defineProperty(mockWinPrototype, cstrName, {
      get() {
        return this['__' + cstrName] || Cstr;
      },
      set(cstr) {
        this['__' + cstrName] = cstr;
      },
      configurable: true,
      enumerable: true,
    });
  });
}
const WINDOW_FUNCTIONS = [
  'addEventListener',
  'alert',
  'blur',
  'cancelAnimationFrame',
  'cancelIdleCallback',
  'clearInterval',
  'clearTimeout',
  'close',
  'confirm',
  'dispatchEvent',
  'focus',
  'getComputedStyle',
  'matchMedia',
  'open',
  'prompt',
  'removeEventListener',
  'requestAnimationFrame',
  'requestIdleCallback',
  'URL',
];
const WINDOW_PROPS = [
  'customElements',
  'devicePixelRatio',
  'document',
  'history',
  'innerHeight',
  'innerWidth',
  'localStorage',
  'location',
  'navigator',
  'pageXOffset',
  'pageYOffset',
  'performance',
  'screenLeft',
  'screenTop',
  'screenX',
  'screenY',
  'scrollX',
  'scrollY',
  'sessionStorage',
  'CSS',
  'CustomEvent',
  'Event',
  'Element',
  'HTMLElement',
  'Node',
  'NodeList',
  'FocusEvent',
  'KeyboardEvent',
  'MouseEvent',
];
const GLOBAL_CONSTRUCTORS = [
  ['CustomEvent', MockCustomEvent],
  ['Event', MockEvent],
  ['Headers', MockHeaders],
  ['FocusEvent', MockFocusEvent],
  ['KeyboardEvent', MockKeyboardEvent],
  ['MouseEvent', MockMouseEvent],
  ['Request', MockRequest],
  ['Response', MockResponse],
  ['DOMParser', MockDOMParser],
  ['HTMLAnchorElement', MockAnchorElement],
  ['HTMLBaseElement', MockBaseElement],
  ['HTMLButtonElement', MockButtonElement],
  ['HTMLCanvasElement', MockCanvasElement],
  ['HTMLFormElement', MockFormElement],
  ['HTMLImageElement', MockImageElement],
  ['HTMLInputElement', MockInputElement],
  ['HTMLLinkElement', MockLinkElement],
  ['HTMLMetaElement', MockMetaElement],
  ['HTMLScriptElement', MockScriptElement],
  ['HTMLStyleElement', MockStyleElement],
  ['HTMLTemplateElement', MockTemplateElement],
  ['HTMLTitleElement', MockTitleElement],
];

class MockHistory {
  constructor() {
    this.items = [];
  }
  get length() {
    return this.items.length;
  }
  back() {
    this.go(-1);
  }
  forward() {
    this.go(1);
  }
  go(_value) {
    //
  }
  pushState(_state, _title, _url) {
    //
  }
  replaceState(_state, _title, _url) {
    //
  }
}

class MockIntersectionObserver {
  constructor() {
    /**/
  }
  disconnect() {
    /**/
  }
  observe() {
    /**/
  }
  takeRecords() {
    return [];
  }
  unobserve() {
    /**/
  }
}

class MockLocation {
  constructor() {
    this.ancestorOrigins = null;
    this.protocol = '';
    this.host = '';
    this.hostname = '';
    this.port = '';
    this.pathname = '';
    this.search = '';
    this.hash = '';
    this.username = '';
    this.password = '';
    this.origin = '';
    this._href = '';
  }
  get href() {
    return this._href;
  }
  set href(value) {
    const url = new URL(value, 'http://mockdoc.stenciljs.com');
    this._href = url.href;
    this.protocol = url.protocol;
    this.host = url.host;
    this.hostname = url.hostname;
    this.port = url.port;
    this.pathname = url.pathname;
    this.search = url.search;
    this.hash = url.hash;
    this.username = url.username;
    this.password = url.password;
    this.origin = url.origin;
  }
  assign(_url) {
    //
  }
  reload(_forcedReload) {
    //
  }
  replace(_url) {
    //
  }
  toString() {
    return this.href;
  }
}

class MockNavigator {
  constructor() {
    this.appCodeName = 'MockNavigator';
    this.appName = 'MockNavigator';
    this.appVersion = 'MockNavigator';
    this.platform = 'MockNavigator';
    this.userAgent = 'MockNavigator';
  }
}

/**
 * https://developer.mozilla.org/en-US/docs/Web/API/Performance
 */
class MockPerformance {
  constructor() {
    this.timeOrigin = Date.now();
    this.eventCounts = new Map();
  }
  addEventListener() {
    //
  }
  clearMarks() {
    //
  }
  clearMeasures() {
    //
  }
  clearResourceTimings() {
    //
  }
  dispatchEvent() {
    return true;
  }
  getEntries() {
    return [];
  }
  getEntriesByName() {
    return [];
  }
  getEntriesByType() {
    return [];
  }
  // Stencil's implementation of `mark` is non-compliant with the `Performance` interface. Because Stencil will
  // instantiate an instance of this class and may attempt to assign it to a variable of type `Performance`, the return
  // type must match the `Performance` interface (rather than typing this function as returning `void` and ignoring the
  // associated errors returned by the type checker)
  // @ts-ignore
  mark() {
    //
  }
  // Stencil's implementation of `measure` is non-compliant with the `Performance` interface. Because Stencil will
  // instantiate an instance of this class and may attempt to assign it to a variable of type `Performance`, the return
  // type must match the `Performance` interface (rather than typing this function as returning `void` and ignoring the
  // associated errors returned by the type checker)
  // @ts-ignore
  measure() {
    //
  }
  get navigation() {
    return {};
  }
  now() {
    return Date.now() - this.timeOrigin;
  }
  get onresourcetimingbufferfull() {
    return null;
  }
  removeEventListener() {
    //
  }
  setResourceTimingBufferSize() {
    //
  }
  get timing() {
    return {};
  }
  toJSON() {
    //
  }
}
function resetPerformance(perf) {
  if (perf != null) {
    try {
      perf.timeOrigin = Date.now();
    }
    catch (e) { }
  }
}

class MockStorage {
  constructor() {
    this.items = new Map();
  }
  key(_value) {
    //
  }
  getItem(key) {
    key = String(key);
    if (this.items.has(key)) {
      return this.items.get(key);
    }
    return null;
  }
  setItem(key, value) {
    if (value == null) {
      value = 'null';
    }
    this.items.set(String(key), String(value));
  }
  removeItem(key) {
    this.items.delete(String(key));
  }
  clear() {
    this.items.clear();
  }
}

const nativeClearInterval = clearInterval;
const nativeClearTimeout = clearTimeout;
const nativeSetInterval = setInterval;
const nativeSetTimeout = setTimeout;
const nativeURL = URL;
class MockWindow {
  constructor(html = null) {
    if (html !== false) {
      this.document = new MockDocument(html, this);
    }
    else {
      this.document = null;
    }
    this.performance = new MockPerformance();
    this.customElements = new MockCustomElementRegistry(this);
    this.console = createConsole();
    resetWindowDefaults(this);
    resetWindowDimensions(this);
  }
  addEventListener(type, handler) {
    addEventListener(this, type, handler);
  }
  alert(msg) {
    if (this.console) {
      this.console.debug(msg);
    }
    else {
      console.debug(msg);
    }
  }
  blur() {
    /**/
  }
  cancelAnimationFrame(id) {
    this.__clearTimeout(id);
  }
  cancelIdleCallback(id) {
    this.__clearTimeout(id);
  }
  get CharacterData() {
    if (this.__charDataCstr == null) {
      const ownerDocument = this.document;
      this.__charDataCstr = class extends MockNode {
        constructor() {
          super(ownerDocument, 0, 'test', '');
          throw new Error('Illegal constructor: cannot construct CharacterData');
        }
      };
    }
    return this.__charDataCstr;
  }
  set CharacterData(charDataCstr) {
    this.__charDataCstr = charDataCstr;
  }
  clearInterval(id) {
    this.__clearInterval(id);
  }
  clearTimeout(id) {
    this.__clearTimeout(id);
  }
  close() {
    resetWindow(this);
  }
  confirm() {
    return false;
  }
  get CSS() {
    return {
      supports: () => true,
    };
  }
  get Document() {
    if (this.__docCstr == null) {
      const win = this;
      this.__docCstr = class extends MockDocument {
        constructor() {
          super(false, win);
          throw new Error('Illegal constructor: cannot construct Document');
        }
      };
    }
    return this.__docCstr;
  }
  set Document(docCstr) {
    this.__docCstr = docCstr;
  }
  get DocumentFragment() {
    if (this.__docFragCstr == null) {
      const ownerDocument = this.document;
      this.__docFragCstr = class extends MockDocumentFragment {
        constructor() {
          super(ownerDocument);
          throw new Error('Illegal constructor: cannot construct DocumentFragment');
        }
      };
    }
    return this.__docFragCstr;
  }
  set DocumentFragment(docFragCstr) {
    this.__docFragCstr = docFragCstr;
  }
  get DocumentType() {
    if (this.__docTypeCstr == null) {
      const ownerDocument = this.document;
      this.__docTypeCstr = class extends MockNode {
        constructor() {
          super(ownerDocument, 0, 'test', '');
          throw new Error('Illegal constructor: cannot construct DocumentType');
        }
      };
    }
    return this.__docTypeCstr;
  }
  set DocumentType(docTypeCstr) {
    this.__docTypeCstr = docTypeCstr;
  }
  get DOMTokenList() {
    if (this.__domTokenListCstr == null) {
      this.__domTokenListCstr = class MockDOMTokenList {
      };
    }
    return this.__domTokenListCstr;
  }
  set DOMTokenList(domTokenListCstr) {
    this.__domTokenListCstr = domTokenListCstr;
  }
  dispatchEvent(ev) {
    return dispatchEvent(this, ev);
  }
  get Element() {
    if (this.__elementCstr == null) {
      const ownerDocument = this.document;
      this.__elementCstr = class extends MockElement {
        constructor() {
          super(ownerDocument, '');
          throw new Error('Illegal constructor: cannot construct Element');
        }
      };
    }
    return this.__elementCstr;
  }
  fetch(input, init) {
    if (typeof fetch === 'function') {
      return fetch(input, init);
    }
    throw new Error(`fetch() not implemented`);
  }
  focus() {
    /**/
  }
  getComputedStyle(_) {
    return {
      cssText: '',
      length: 0,
      parentRule: null,
      getPropertyPriority() {
        return null;
      },
      getPropertyValue() {
        return '';
      },
      item() {
        return null;
      },
      removeProperty() {
        return null;
      },
      setProperty() {
        return null;
      },
    };
  }
  get globalThis() {
    return this;
  }
  get history() {
    if (this.__history == null) {
      this.__history = new MockHistory();
    }
    return this.__history;
  }
  set history(hsty) {
    this.__history = hsty;
  }
  get JSON() {
    return JSON;
  }
  get HTMLElement() {
    if (this.__htmlElementCstr == null) {
      const ownerDocument = this.document;
      this.__htmlElementCstr = class extends MockHTMLElement {
        constructor() {
          super(ownerDocument, '');
          const observedAttributes = this.constructor.observedAttributes;
          if (Array.isArray(observedAttributes) && typeof this.attributeChangedCallback === 'function') {
            observedAttributes.forEach((attrName) => {
              const attrValue = this.getAttribute(attrName);
              if (attrValue != null) {
                this.attributeChangedCallback(attrName, null, attrValue);
              }
            });
          }
        }
      };
    }
    return this.__htmlElementCstr;
  }
  set HTMLElement(htmlElementCstr) {
    this.__htmlElementCstr = htmlElementCstr;
  }
  get IntersectionObserver() {
    return MockIntersectionObserver;
  }
  get localStorage() {
    if (this.__localStorage == null) {
      this.__localStorage = new MockStorage();
    }
    return this.__localStorage;
  }
  set localStorage(locStorage) {
    this.__localStorage = locStorage;
  }
  get location() {
    if (this.__location == null) {
      this.__location = new MockLocation();
    }
    return this.__location;
  }
  set location(val) {
    if (typeof val === 'string') {
      if (this.__location == null) {
        this.__location = new MockLocation();
      }
      this.__location.href = val;
    }
    else {
      this.__location = val;
    }
  }
  matchMedia(media) {
    return {
      media,
      matches: false,
      addListener: (_handler) => { },
      removeListener: (_handler) => { },
      addEventListener: (_type, _handler) => { },
      removeEventListener: (_type, _handler) => { },
      dispatchEvent: (_ev) => { },
      onchange: null,
    };
  }
  get Node() {
    if (this.__nodeCstr == null) {
      const ownerDocument = this.document;
      this.__nodeCstr = class extends MockNode {
        constructor() {
          super(ownerDocument, 0, 'test', '');
          throw new Error('Illegal constructor: cannot construct Node');
        }
      };
    }
    return this.__nodeCstr;
  }
  get NodeList() {
    if (this.__nodeListCstr == null) {
      const ownerDocument = this.document;
      this.__nodeListCstr = class extends MockNodeList {
        constructor() {
          super(ownerDocument, [], 0);
          throw new Error('Illegal constructor: cannot construct NodeList');
        }
      };
    }
    return this.__nodeListCstr;
  }
  get navigator() {
    if (this.__navigator == null) {
      this.__navigator = new MockNavigator();
    }
    return this.__navigator;
  }
  set navigator(nav) {
    this.__navigator = nav;
  }
  get parent() {
    return null;
  }
  prompt() {
    return '';
  }
  open() {
    return null;
  }
  get origin() {
    return this.location.origin;
  }
  removeEventListener(type, handler) {
    removeEventListener(this, type, handler);
  }
  requestAnimationFrame(callback) {
    return this.setTimeout(() => {
      callback(Date.now());
    }, 0);
  }
  requestIdleCallback(callback) {
    return this.setTimeout(() => {
      callback({
        didTimeout: false,
        timeRemaining: () => 0,
      });
    }, 0);
  }
  scroll(_x, _y) {
    /**/
  }
  scrollBy(_x, _y) {
    /**/
  }
  scrollTo(_x, _y) {
    /**/
  }
  get self() {
    return this;
  }
  get sessionStorage() {
    if (this.__sessionStorage == null) {
      this.__sessionStorage = new MockStorage();
    }
    return this.__sessionStorage;
  }
  set sessionStorage(locStorage) {
    this.__sessionStorage = locStorage;
  }
  setInterval(callback, ms, ...args) {
    if (this.__timeouts == null) {
      this.__timeouts = new Set();
    }
    ms = Math.min(ms, this.__maxTimeout);
    if (this.__allowInterval) {
      const intervalId = this.__setInterval(() => {
        if (this.__timeouts) {
          this.__timeouts.delete(intervalId);
          try {
            callback(...args);
          }
          catch (e) {
            if (this.console) {
              this.console.error(e);
            }
            else {
              console.error(e);
            }
          }
        }
      }, ms);
      if (this.__timeouts) {
        this.__timeouts.add(intervalId);
      }
      return intervalId;
    }
    const timeoutId = this.__setTimeout(() => {
      if (this.__timeouts) {
        this.__timeouts.delete(timeoutId);
        try {
          callback(...args);
        }
        catch (e) {
          if (this.console) {
            this.console.error(e);
          }
          else {
            console.error(e);
          }
        }
      }
    }, ms);
    if (this.__timeouts) {
      this.__timeouts.add(timeoutId);
    }
    return timeoutId;
  }
  setTimeout(callback, ms, ...args) {
    if (this.__timeouts == null) {
      this.__timeouts = new Set();
    }
    ms = Math.min(ms, this.__maxTimeout);
    const timeoutId = this.__setTimeout(() => {
      if (this.__timeouts) {
        this.__timeouts.delete(timeoutId);
        try {
          callback(...args);
        }
        catch (e) {
          if (this.console) {
            this.console.error(e);
          }
          else {
            console.error(e);
          }
        }
      }
    }, ms);
    if (this.__timeouts) {
      this.__timeouts.add(timeoutId);
    }
    return timeoutId;
  }
  get top() {
    return this;
  }
  get window() {
    return this;
  }
  onanimationstart() {
    /**/
  }
  onanimationend() {
    /**/
  }
  onanimationiteration() {
    /**/
  }
  onabort() {
    /**/
  }
  onauxclick() {
    /**/
  }
  onbeforecopy() {
    /**/
  }
  onbeforecut() {
    /**/
  }
  onbeforepaste() {
    /**/
  }
  onblur() {
    /**/
  }
  oncancel() {
    /**/
  }
  oncanplay() {
    /**/
  }
  oncanplaythrough() {
    /**/
  }
  onchange() {
    /**/
  }
  onclick() {
    /**/
  }
  onclose() {
    /**/
  }
  oncontextmenu() {
    /**/
  }
  oncopy() {
    /**/
  }
  oncuechange() {
    /**/
  }
  oncut() {
    /**/
  }
  ondblclick() {
    /**/
  }
  ondrag() {
    /**/
  }
  ondragend() {
    /**/
  }
  ondragenter() {
    /**/
  }
  ondragleave() {
    /**/
  }
  ondragover() {
    /**/
  }
  ondragstart() {
    /**/
  }
  ondrop() {
    /**/
  }
  ondurationchange() {
    /**/
  }
  onemptied() {
    /**/
  }
  onended() {
    /**/
  }
  onerror() {
    /**/
  }
  onfocus() {
    /**/
  }
  onfocusin() {
    /**/
  }
  onfocusout() {
    /**/
  }
  onformdata() {
    /**/
  }
  onfullscreenchange() {
    /**/
  }
  onfullscreenerror() {
    /**/
  }
  ongotpointercapture() {
    /**/
  }
  oninput() {
    /**/
  }
  oninvalid() {
    /**/
  }
  onkeydown() {
    /**/
  }
  onkeypress() {
    /**/
  }
  onkeyup() {
    /**/
  }
  onload() {
    /**/
  }
  onloadeddata() {
    /**/
  }
  onloadedmetadata() {
    /**/
  }
  onloadstart() {
    /**/
  }
  onlostpointercapture() {
    /**/
  }
  onmousedown() {
    /**/
  }
  onmouseenter() {
    /**/
  }
  onmouseleave() {
    /**/
  }
  onmousemove() {
    /**/
  }
  onmouseout() {
    /**/
  }
  onmouseover() {
    /**/
  }
  onmouseup() {
    /**/
  }
  onmousewheel() {
    /**/
  }
  onpaste() {
    /**/
  }
  onpause() {
    /**/
  }
  onplay() {
    /**/
  }
  onplaying() {
    /**/
  }
  onpointercancel() {
    /**/
  }
  onpointerdown() {
    /**/
  }
  onpointerenter() {
    /**/
  }
  onpointerleave() {
    /**/
  }
  onpointermove() {
    /**/
  }
  onpointerout() {
    /**/
  }
  onpointerover() {
    /**/
  }
  onpointerup() {
    /**/
  }
  onprogress() {
    /**/
  }
  onratechange() {
    /**/
  }
  onreset() {
    /**/
  }
  onresize() {
    /**/
  }
  onscroll() {
    /**/
  }
  onsearch() {
    /**/
  }
  onseeked() {
    /**/
  }
  onseeking() {
    /**/
  }
  onselect() {
    /**/
  }
  onselectstart() {
    /**/
  }
  onstalled() {
    /**/
  }
  onsubmit() {
    /**/
  }
  onsuspend() {
    /**/
  }
  ontimeupdate() {
    /**/
  }
  ontoggle() {
    /**/
  }
  onvolumechange() {
    /**/
  }
  onwaiting() {
    /**/
  }
  onwebkitfullscreenchange() {
    /**/
  }
  onwebkitfullscreenerror() {
    /**/
  }
  onwheel() {
    /**/
  }
}
addGlobalsToWindowPrototype(MockWindow.prototype);
function resetWindowDefaults(win) {
  win.__clearInterval = nativeClearInterval;
  win.__clearTimeout = nativeClearTimeout;
  win.__setInterval = nativeSetInterval;
  win.__setTimeout = nativeSetTimeout;
  win.__maxTimeout = 30000;
  win.__allowInterval = true;
  win.URL = nativeURL;
}
function cloneWindow(srcWin, opts = {}) {
  if (srcWin == null) {
    return null;
  }
  const clonedWin = new MockWindow(false);
  if (!opts.customElementProxy) {
    // TODO(STENCIL-345) - Evaluate reconciling MockWindow, Window differences
    // @ts-ignore
    srcWin.customElements = null;
  }
  if (srcWin.document != null) {
    const clonedDoc = new MockDocument(false, clonedWin);
    clonedWin.document = clonedDoc;
    clonedDoc.documentElement = srcWin.document.documentElement.cloneNode(true);
  }
  else {
    clonedWin.document = new MockDocument(null, clonedWin);
  }
  return clonedWin;
}
function cloneDocument(srcDoc) {
  if (srcDoc == null) {
    return null;
  }
  const dstWin = cloneWindow(srcDoc.defaultView);
  return dstWin.document;
}
// TODO(STENCIL-345) - Evaluate reconciling MockWindow, Window differences
/**
 * Constrain setTimeout() to 1ms, but still async. Also
 * only allow setInterval() to fire once, also constrained to 1ms.
 * @param win the mock window instance to update
 */
function constrainTimeouts(win) {
  win.__allowInterval = false;
  win.__maxTimeout = 0;
}
function resetWindow(win) {
  if (win != null) {
    if (win.__timeouts) {
      win.__timeouts.forEach((timeoutId) => {
        nativeClearInterval(timeoutId);
        nativeClearTimeout(timeoutId);
      });
      win.__timeouts.clear();
    }
    if (win.customElements && win.customElements.clear) {
      win.customElements.clear();
    }
    resetDocument(win.document);
    resetPerformance(win.performance);
    for (const key in win) {
      if (win.hasOwnProperty(key) && key !== 'document' && key !== 'performance' && key !== 'customElements') {
        delete win[key];
      }
    }
    resetWindowDefaults(win);
    resetWindowDimensions(win);
    resetEventListeners(win);
    if (win.document != null) {
      try {
        win.document.defaultView = win;
      }
      catch (e) { }
    }
    // ensure we don't hold onto nodeFetch values
    win.fetch = null;
    win.Headers = null;
    win.Request = null;
    win.Response = null;
    win.FetchError = null;
  }
}
function resetWindowDimensions(win) {
  try {
    win.devicePixelRatio = 1;
    win.innerHeight = 768;
    win.innerWidth = 1366;
    win.pageXOffset = 0;
    win.pageYOffset = 0;
    win.screenLeft = 0;
    win.screenTop = 0;
    win.screenX = 0;
    win.screenY = 0;
    win.scrollX = 0;
    win.scrollY = 0;
    win.screen = {
      availHeight: win.innerHeight,
      availLeft: 0,
      availTop: 0,
      availWidth: win.innerWidth,
      colorDepth: 24,
      height: win.innerHeight,
      keepAwake: false,
      orientation: {
        angle: 0,
        type: 'portrait-primary',
      },
      pixelDepth: 24,
      width: win.innerWidth,
    };
  }
  catch (e) { }
}

class MockDocument extends MockHTMLElement {
  constructor(html = null, win = null) {
    super(null, null);
    this.nodeName = "#document" /* NODE_NAMES.DOCUMENT_NODE */;
    this.nodeType = 9 /* NODE_TYPES.DOCUMENT_NODE */;
    this.defaultView = win;
    this.cookie = '';
    this.referrer = '';
    this.appendChild(this.createDocumentTypeNode());
    if (typeof html === 'string') {
      const parsedDoc = parseDocumentUtil(this, html);
      const documentElement = parsedDoc.children.find((elm) => elm.nodeName === 'HTML');
      if (documentElement != null) {
        this.appendChild(documentElement);
        setOwnerDocument(documentElement, this);
      }
    }
    else if (html !== false) {
      const documentElement = new MockHTMLElement(this, 'html');
      this.appendChild(documentElement);
      documentElement.appendChild(new MockHTMLElement(this, 'head'));
      documentElement.appendChild(new MockHTMLElement(this, 'body'));
    }
  }
  get dir() {
    return this.documentElement.dir;
  }
  set dir(value) {
    this.documentElement.dir = value;
  }
  get location() {
    if (this.defaultView != null) {
      return this.defaultView.location;
    }
    return null;
  }
  set location(val) {
    if (this.defaultView != null) {
      this.defaultView.location = val;
    }
  }
  get baseURI() {
    const baseNode = this.head.childNodes.find((node) => node.nodeName === 'BASE');
    if (baseNode) {
      return baseNode.href;
    }
    return this.URL;
  }
  get URL() {
    return this.location.href;
  }
  get styleSheets() {
    return this.querySelectorAll('style');
  }
  get scripts() {
    return this.querySelectorAll('script');
  }
  get forms() {
    return this.querySelectorAll('form');
  }
  get images() {
    return this.querySelectorAll('img');
  }
  get scrollingElement() {
    return this.documentElement;
  }
  get documentElement() {
    for (let i = this.childNodes.length - 1; i >= 0; i--) {
      if (this.childNodes[i].nodeName === 'HTML') {
        return this.childNodes[i];
      }
    }
    const documentElement = new MockHTMLElement(this, 'html');
    this.appendChild(documentElement);
    return documentElement;
  }
  set documentElement(documentElement) {
    for (let i = this.childNodes.length - 1; i >= 0; i--) {
      if (this.childNodes[i].nodeType !== 10 /* NODE_TYPES.DOCUMENT_TYPE_NODE */) {
        this.childNodes[i].remove();
      }
    }
    if (documentElement != null) {
      this.appendChild(documentElement);
      setOwnerDocument(documentElement, this);
    }
  }
  get head() {
    const documentElement = this.documentElement;
    for (let i = 0; i < documentElement.childNodes.length; i++) {
      if (documentElement.childNodes[i].nodeName === 'HEAD') {
        return documentElement.childNodes[i];
      }
    }
    const head = new MockHTMLElement(this, 'head');
    documentElement.insertBefore(head, documentElement.firstChild);
    return head;
  }
  set head(head) {
    const documentElement = this.documentElement;
    for (let i = documentElement.childNodes.length - 1; i >= 0; i--) {
      if (documentElement.childNodes[i].nodeName === 'HEAD') {
        documentElement.childNodes[i].remove();
      }
    }
    if (head != null) {
      documentElement.insertBefore(head, documentElement.firstChild);
      setOwnerDocument(head, this);
    }
  }
  get body() {
    const documentElement = this.documentElement;
    for (let i = documentElement.childNodes.length - 1; i >= 0; i--) {
      if (documentElement.childNodes[i].nodeName === 'BODY') {
        return documentElement.childNodes[i];
      }
    }
    const body = new MockHTMLElement(this, 'body');
    documentElement.appendChild(body);
    return body;
  }
  set body(body) {
    const documentElement = this.documentElement;
    for (let i = documentElement.childNodes.length - 1; i >= 0; i--) {
      if (documentElement.childNodes[i].nodeName === 'BODY') {
        documentElement.childNodes[i].remove();
      }
    }
    if (body != null) {
      documentElement.appendChild(body);
      setOwnerDocument(body, this);
    }
  }
  appendChild(newNode) {
    newNode.remove();
    newNode.parentNode = this;
    this.childNodes.push(newNode);
    return newNode;
  }
  createComment(data) {
    return new MockComment(this, data);
  }
  createAttribute(attrName) {
    return new MockAttr(attrName.toLowerCase(), '');
  }
  createAttributeNS(namespaceURI, attrName) {
    return new MockAttr(attrName, '', namespaceURI);
  }
  createElement(tagName) {
    if (tagName === "#document" /* NODE_NAMES.DOCUMENT_NODE */) {
      const doc = new MockDocument(false);
      doc.nodeName = tagName;
      doc.parentNode = null;
      return doc;
    }
    return createElement(this, tagName);
  }
  createElementNS(namespaceURI, tagName) {
    const elmNs = createElementNS(this, namespaceURI, tagName);
    elmNs.namespaceURI = namespaceURI;
    return elmNs;
  }
  createTextNode(text) {
    return new MockTextNode(this, text);
  }
  createDocumentFragment() {
    return new MockDocumentFragment(this);
  }
  createDocumentTypeNode() {
    return new MockDocumentTypeNode(this);
  }
  getElementById(id) {
    return getElementById(this, id);
  }
  getElementsByName(elmName) {
    return getElementsByName(this, elmName.toLowerCase());
  }
  get title() {
    const title = this.head.childNodes.find((elm) => elm.nodeName === 'TITLE');
    if (title != null && typeof title.textContent === 'string') {
      return title.textContent.trim();
    }
    return '';
  }
  set title(value) {
    const head = this.head;
    let title = head.childNodes.find((elm) => elm.nodeName === 'TITLE');
    if (title == null) {
      title = this.createElement('title');
      head.appendChild(title);
    }
    title.textContent = value;
  }
}
function createDocument(html = null) {
  return new MockWindow(html).document;
}
function createFragment(html) {
  return parseHtmlToFragment(html, null);
}
function resetDocument(doc) {
  if (doc != null) {
    resetEventListeners(doc);
    const documentElement = doc.documentElement;
    if (documentElement != null) {
      resetElement(documentElement);
      for (let i = 0, ii = documentElement.childNodes.length; i < ii; i++) {
        const childNode = documentElement.childNodes[i];
        resetElement(childNode);
        childNode.childNodes.length = 0;
      }
    }
    for (const key in doc) {
      if (doc.hasOwnProperty(key) && !DOC_KEY_KEEPERS.has(key)) {
        delete doc[key];
      }
    }
    try {
      doc.nodeName = "#document" /* NODE_NAMES.DOCUMENT_NODE */;
    }
    catch (e) { }
    try {
      doc.nodeType = 9 /* NODE_TYPES.DOCUMENT_NODE */;
    }
    catch (e) { }
    try {
      doc.cookie = '';
    }
    catch (e) { }
    try {
      doc.referrer = '';
    }
    catch (e) { }
  }
}
const DOC_KEY_KEEPERS = new Set([
  'nodeName',
  'nodeType',
  'nodeValue',
  'ownerDocument',
  'parentNode',
  'childNodes',
  '_shadowRoot',
]);
function getElementById(elm, id) {
  const children = elm.children;
  for (let i = 0, ii = children.length; i < ii; i++) {
    const childElm = children[i];
    if (childElm.id === id) {
      return childElm;
    }
    const childElmFound = getElementById(childElm, id);
    if (childElmFound != null) {
      return childElmFound;
    }
  }
  return null;
}
function getElementsByName(elm, elmName, foundElms = []) {
  const children = elm.children;
  for (let i = 0, ii = children.length; i < ii; i++) {
    const childElm = children[i];
    if (childElm.name && childElm.name.toLowerCase() === elmName) {
      foundElms.push(childElm);
    }
    getElementsByName(childElm, elmName, foundElms);
  }
  return foundElms;
}
function setOwnerDocument(elm, ownerDocument) {
  for (let i = 0, ii = elm.childNodes.length; i < ii; i++) {
    elm.childNodes[i].ownerDocument = ownerDocument;
    if (elm.childNodes[i].nodeType === 1 /* NODE_TYPES.ELEMENT_NODE */) {
      setOwnerDocument(elm.childNodes[i], ownerDocument);
    }
  }
}

function hydrateFactory($stencilWindow, $stencilHydrateOpts, $stencilHydrateResults, $stencilAfterHydrate, $stencilHydrateResolve) {
  var globalThis = $stencilWindow;
  var self = $stencilWindow;
  var top = $stencilWindow;
  var parent = $stencilWindow;

  var addEventListener = $stencilWindow.addEventListener.bind($stencilWindow);
  var alert = $stencilWindow.alert.bind($stencilWindow);
  var blur = $stencilWindow.blur.bind($stencilWindow);
  var cancelAnimationFrame = $stencilWindow.cancelAnimationFrame.bind($stencilWindow);
  var cancelIdleCallback = $stencilWindow.cancelIdleCallback.bind($stencilWindow);
  var clearInterval = $stencilWindow.clearInterval.bind($stencilWindow);
  var clearTimeout = $stencilWindow.clearTimeout.bind($stencilWindow);
  var close = () => {};
  var confirm = $stencilWindow.confirm.bind($stencilWindow);
  var dispatchEvent = $stencilWindow.dispatchEvent.bind($stencilWindow);
  var focus = $stencilWindow.focus.bind($stencilWindow);
  var getComputedStyle = $stencilWindow.getComputedStyle.bind($stencilWindow);
  var matchMedia = $stencilWindow.matchMedia.bind($stencilWindow);
  var open = $stencilWindow.open.bind($stencilWindow);
  var prompt = $stencilWindow.prompt.bind($stencilWindow);
  var removeEventListener = $stencilWindow.removeEventListener.bind($stencilWindow);
  var requestAnimationFrame = $stencilWindow.requestAnimationFrame.bind($stencilWindow);
  var requestIdleCallback = $stencilWindow.requestIdleCallback.bind($stencilWindow);
  var setInterval = $stencilWindow.setInterval.bind($stencilWindow);
  var setTimeout = $stencilWindow.setTimeout.bind($stencilWindow);

  var CharacterData = $stencilWindow.CharacterData;
  var CSS = $stencilWindow.CSS;
  var CustomEvent = $stencilWindow.CustomEvent;
  var Document = $stencilWindow.Document;
  var DocumentFragment = $stencilWindow.DocumentFragment;
  var DocumentType = $stencilWindow.DocumentType;
  var DOMTokenList = $stencilWindow.DOMTokenList;
  var Element = $stencilWindow.Element;
  var Event = $stencilWindow.Event;
  var HTMLAnchorElement = $stencilWindow.HTMLAnchorElement;
  var HTMLBaseElement = $stencilWindow.HTMLBaseElement;
  var HTMLButtonElement = $stencilWindow.HTMLButtonElement;
  var HTMLCanvasElement = $stencilWindow.HTMLCanvasElement;
  var HTMLElement = $stencilWindow.HTMLElement;
  var HTMLFormElement = $stencilWindow.HTMLFormElement;
  var HTMLImageElement = $stencilWindow.HTMLImageElement;
  var HTMLInputElement = $stencilWindow.HTMLInputElement;
  var HTMLLinkElement = $stencilWindow.HTMLLinkElement;
  var HTMLMetaElement = $stencilWindow.HTMLMetaElement;
  var HTMLScriptElement = $stencilWindow.HTMLScriptElement;
  var HTMLStyleElement = $stencilWindow.HTMLStyleElement;
  var HTMLTemplateElement = $stencilWindow.HTMLTemplateElement;
  var HTMLTitleElement = $stencilWindow.HTMLTitleElement;
  var IntersectionObserver = $stencilWindow.IntersectionObserver;
  var KeyboardEvent = $stencilWindow.KeyboardEvent;
  var MouseEvent = $stencilWindow.MouseEvent;
  var Node = $stencilWindow.Node;
  var NodeList = $stencilWindow.NodeList;
  var URL = $stencilWindow.URL;

  var console = $stencilWindow.console;
  var customElements = $stencilWindow.customElements;
  var history = $stencilWindow.history;
  var localStorage = $stencilWindow.localStorage;
  var location = $stencilWindow.location;
  var navigator = $stencilWindow.navigator;
  var performance = $stencilWindow.performance;
  var sessionStorage = $stencilWindow.sessionStorage;

  var devicePixelRatio = $stencilWindow.devicePixelRatio;
  var innerHeight = $stencilWindow.innerHeight;
  var innerWidth = $stencilWindow.innerWidth;
  var origin = $stencilWindow.origin;
  var pageXOffset = $stencilWindow.pageXOffset;
  var pageYOffset = $stencilWindow.pageYOffset;
  var screen = $stencilWindow.screen;
  var screenLeft = $stencilWindow.screenLeft;
  var screenTop = $stencilWindow.screenTop;
  var screenX = $stencilWindow.screenX;
  var screenY = $stencilWindow.screenY;
  var scrollX = $stencilWindow.scrollX;
  var scrollY = $stencilWindow.scrollY;
  var exports = {};

  var fetch, FetchError, Headers, Request, Response;

  if (typeof $stencilWindow.fetch === 'function') {
  fetch = $stencilWindow.fetch;
  } else {
  fetch = $stencilWindow.fetch = function() { throw new Error('fetch() is not implemented'); };
  }

  if (typeof $stencilWindow.FetchError === 'function') {
  FetchError = $stencilWindow.FetchError;
  } else {
  FetchError = $stencilWindow.FetchError = class FetchError { constructor() { throw new Error('FetchError is not implemented'); } };
  }

  if (typeof $stencilWindow.Headers === 'function') {
  Headers = $stencilWindow.Headers;
  } else {
  Headers = $stencilWindow.Headers = class Headers { constructor() { throw new Error('Headers is not implemented'); } };
  }

  if (typeof $stencilWindow.Request === 'function') {
  Request = $stencilWindow.Request;
  } else {
  Request = $stencilWindow.Request = class Request { constructor() { throw new Error('Request is not implemented'); } };
  }

  if (typeof $stencilWindow.Response === 'function') {
  Response = $stencilWindow.Response;
  } else {
  Response = $stencilWindow.Response = class Response { constructor() { throw new Error('Response is not implemented'); } };
  }

  function hydrateAppClosure($stencilWindow) {
  const window = $stencilWindow;
  const document = $stencilWindow.document;
  /*hydrateAppClosure start*/


const NAMESPACE = 'core';
const BUILD = /* core */ { allRenderFn: true, appendChildSlotFix: false, asyncLoading: true, attachStyles: true, cloneNodeFix: false, cmpDidLoad: true, cmpDidRender: true, cmpDidUnload: false, cmpDidUpdate: true, cmpShouldUpdate: false, cmpWillLoad: true, cmpWillRender: true, cmpWillUpdate: true, connectedCallback: true, constructableCSS: false, cssAnnotations: true, devTools: false, disconnectedCallback: true, element: false, event: true, hasRenderFn: true, hostListener: true, hostListenerTarget: true, hostListenerTargetBody: false, hostListenerTargetDocument: true, hostListenerTargetParent: false, hostListenerTargetWindow: true, hotModuleReplacement: false, hydrateClientSide: true, hydrateServerSide: true, hydratedAttribute: false, hydratedClass: true, isDebug: false, isDev: false, isTesting: false, lazyLoad: true, lifecycle: true, lifecycleDOMEvents: false, member: true, method: true, mode: false, observeAttribute: true, patchPseudoShadowDom: false, profile: false, prop: true, propBoolean: true, propMutable: true, propNumber: true, propString: true, reflect: true, scoped: true, scriptDataOpts: false, shadowDelegatesFocus: true, shadowDom: true, shadowDomShim: true, slot: true, slotChildNodesFix: false, slotRelocation: true, state: true, style: true, svg: true, taskQueue: true, updatable: true, vdomAttribute: true, vdomClass: true, vdomFunctional: true, vdomKey: true, vdomListener: true, vdomPropOrAttr: true, vdomRef: true, vdomRender: true, vdomStyle: true, vdomText: true, vdomXlink: true, watchCallback: true };

function queryNonceMetaTagContent(e) {
 var t, o, n;
 return null !== (n = null === (o = null === (t = e.head) || void 0 === t ? void 0 : t.querySelector('meta[name="csp-nonce"]')) || void 0 === o ? void 0 : o.getAttribute("content")) && void 0 !== n ? n : void 0;
}

function componentOnReady() {
 return getHostRef(this).$onReadyPromise$;
}

function forceUpdate() {}

function hydrateApp(e, t, o, n, s) {
 function l() {
  if (global.clearTimeout(p), i.clear(), r.clear(), !h) {
   h = !0;
   try {
    t.clientHydrateAnnotations && insertVdomAnnotations(e.document, t.staticComponents), 
    e.dispatchEvent(new e.Event("DOMContentLoaded")), e.document.createElement = c, 
    e.document.createElementNS = $;
   } catch (e) {
    renderCatchError(t, o, e);
   }
  }
  n(e, t, o, s);
 }
 function a(e) {
  renderCatchError(t, o, e), l();
 }
 const r = new Set, i = new Set, d = new Set, c = e.document.createElement, $ = e.document.createElementNS, m = Promise.resolve();
 let p, h = !1;
 try {
  function u() {
   return g(this);
  }
  function f(e) {
   if (isValidComponent(e, t) && !getHostRef(e)) {
    const t = loadModule({
     $tagName$: e.nodeName.toLowerCase(),
     $flags$: null
    });
    null != t && null != t.cmpMeta && (i.add(e), e.connectedCallback = u, registerHost(e, t.cmpMeta), 
    function o(e, t) {
     if ("function" != typeof e.componentOnReady && (e.componentOnReady = componentOnReady), 
     "function" != typeof e.forceUpdate && (e.forceUpdate = forceUpdate), 1 & t.$flags$ && (e.shadowRoot = e), 
     null != t.$members$) {
      const o = getHostRef(e);
      Object.entries(t.$members$).forEach((([n, s]) => {
       const l = s[0];
       if (31 & l) {
        const a = s[1] || n, r = e.getAttribute(a);
        if (null != r) {
         const e = parsePropertyValue(r, l);
         o.$instanceValues$.set(n, e);
        }
        const i = e[n];
        void 0 !== i && (o.$instanceValues$.set(n, i), delete e[n]), Object.defineProperty(e, n, {
         get() {
          return getValue(this, n);
         },
         set(e) {
          setValue(this, n, e, t);
         },
         configurable: !0,
         enumerable: !0
        });
       } else 64 & l && Object.defineProperty(e, n, {
        value(...e) {
         const t = getHostRef(this);
         return t.$onInstancePromise$.then((() => t.$lazyInstance$[n](...e))).catch(consoleError);
        }
       });
      }));
     }
    }(e, t.cmpMeta));
   }
  }
  function g(n) {
   return i.delete(n), isValidComponent(n, t) && o.hydratedCount < t.maxHydrateCount && !r.has(n) && shouldHydrate(n) ? (r.add(n), 
   async function s(e, t, o, n, l) {
    o = o.toLowerCase();
    const a = loadModule({
     $tagName$: o,
     $flags$: null
    });
    if (null != a && null != a.cmpMeta) {
     l.add(n);
     try {
      connectedCallback(n), await n.componentOnReady(), t.hydratedCount++;
      const e = getHostRef(n), s = e.$modeName$ ? e.$modeName$ : "$";
      t.components.some((e => e.tag === o && e.mode === s)) || t.components.push({
       tag: o,
       mode: s,
       count: 0,
       depth: -1
      });
     } catch (t) {
      e.console.error(t);
     }
     l.delete(n);
    }
   }(e, o, n.nodeName, n, d)) : m;
  }
  e.document.createElement = function t(o) {
   const n = c.call(e.document, o);
   return f(n), n;
  }, e.document.createElementNS = function t(o, n) {
   const s = $.call(e.document, o, n);
   return f(s), s;
  }, p = global.setTimeout((function L() {
   a(`Hydrate exceeded timeout${function e(t) {
    return Array.from(t).map(waitingOnElementMsg);
   }(d)}`);
  }), t.timeout), plt.$resourcesUrl$ = new URL(t.resourcesUrl || "./", doc.baseURI).href, 
  function e(t) {
   if (null != t && 1 === t.nodeType) {
    f(t);
    const o = t.children;
    for (let t = 0, n = o.length; t < n; t++) e(o[t]);
   }
  }(e.document.body), function e() {
   const t = Array.from(i).filter((e => e.parentElement));
   return t.length > 0 ? Promise.all(t.map(g)).then(e) : m;
  }().then(l).catch(a);
 } catch (y) {
  a(y);
 }
}

function isValidComponent(e, t) {
 if (null != e && 1 === e.nodeType) {
  const o = e.nodeName;
  if ("string" == typeof o && o.includes("-")) return !t.excludeComponents.includes(o.toLowerCase());
 }
 return !1;
}

function shouldHydrate(e) {
 if (9 === e.nodeType) return !0;
 if (NO_HYDRATE_TAGS.has(e.nodeName)) return !1;
 if (e.hasAttribute("no-prerender")) return !1;
 const t = e.parentNode;
 return null == t || shouldHydrate(t);
}

function renderCatchError(e, t, o) {
 const n = {
  level: "error",
  type: "build",
  header: "Hydrate Error",
  messageText: "",
  relFilePath: void 0,
  absFilePath: void 0,
  lines: []
 };
 if (e.url) try {
  const t = new URL(e.url);
  "/" !== t.pathname && (n.header += ": " + t.pathname);
 } catch (e) {}
 null != o && (null != o.stack ? n.messageText = o.stack.toString() : null != o.message ? n.messageText = o.message.toString() : n.messageText = o.toString()), 
 t.diagnostics.push(n);
}

function printTag(e) {
 let t = `<${e.nodeName.toLowerCase()}`;
 if (Array.isArray(e.attributes)) for (let o = 0; o < e.attributes.length; o++) {
  const n = e.attributes[o];
  t += ` ${n.name}`, "" !== n.value && (t += `="${n.value}"`);
 }
 return t += ">", t;
}

function waitingOnElementMsg(e) {
 let t = "";
 if (e) {
  const o = [];
  t = " - waiting on:";
  let n = e;
  for (;n && 9 !== n.nodeType && "BODY" !== n.nodeName; ) o.unshift(printTag(n)), 
  n = n.parentElement;
  let s = "";
  for (const e of o) s += "  ", t += `\n${s}${e}`;
 }
 return t;
}

const createTime = (e, t = "") => {
 return () => {};
}, XLINK_NS = "http://www.w3.org/1999/xlink", EMPTY_OBJ = {}, isComplexType = e => "object" == (e = typeof e) || "function" === e, isPromise = e => !!e && ("object" == typeof e || "function" == typeof e) && "function" == typeof e.then, h = (e, t, ...o) => {
 let n = null, s = null, l = null, a = !1, r = !1;
 const i = [], d = t => {
  for (let o = 0; o < t.length; o++) n = t[o], Array.isArray(n) ? d(n) : null != n && "boolean" != typeof n && ((a = "function" != typeof e && !isComplexType(n)) ? n = String(n) : BUILD.isDev  , 
  a && r ? i[i.length - 1].$text$ += n : i.push(a ? newVNode(null, n) : n), r = a);
 };
 if (d(o), t && (t.key && (s = t.key), 
 t.name && (l = t.name), BUILD.vdomClass)) {
  const e = t.className || t.class;
  e && (t.class = "object" != typeof e ? e : Object.keys(e).filter((t => e[t])).join(" "));
 }
 if ("function" == typeof e) return e(null === t ? {} : t, i, vdomFnUtils);
 const c = newVNode(e, null);
 return c.$attrs$ = t, i.length > 0 && (c.$children$ = i), (c.$key$ = s), 
 (c.$name$ = l), c;
}, newVNode = (e, t) => {
 const o = {
  $flags$: 0,
  $tag$: e,
  $text$: t,
  $elm$: null,
  $children$: null
 };
 return (o.$attrs$ = null), (o.$key$ = null), 
 (o.$name$ = null), o;
}, Host = {}, isHost = e => e && e.$tag$ === Host, vdomFnUtils = {
 forEach: (e, t) => e.map(convertToPublic).forEach(t),
 map: (e, t) => e.map(convertToPublic).map(t).map(convertToPrivate)
}, convertToPublic = e => ({
 vattrs: e.$attrs$,
 vchildren: e.$children$,
 vkey: e.$key$,
 vname: e.$name$,
 vtag: e.$tag$,
 vtext: e.$text$
}), convertToPrivate = e => {
 if ("function" == typeof e.vtag) {
  const t = {
   ...e.vattrs
  };
  return e.vkey && (t.key = e.vkey), e.vname && (t.name = e.vname), h(e.vtag, t, ...e.vchildren || []);
 }
 const t = newVNode(e.vtag, e.vtext);
 return t.$attrs$ = e.vattrs, t.$children$ = e.vchildren, t.$key$ = e.vkey, t.$name$ = e.vname, 
 t;
}, clientHydrate = (e, t, o, n, s, l, a) => {
 let r, i, d, c;
 if (1 === l.nodeType) {
  for (r = l.getAttribute("c-id"), r && (i = r.split("."), i[0] !== a && "0" !== i[0] || (d = {
   $flags$: 0,
   $hostId$: i[0],
   $nodeId$: i[1],
   $depth$: i[2],
   $index$: i[3],
   $tag$: l.tagName.toLowerCase(),
   $elm$: l,
   $attrs$: null,
   $children$: null,
   $key$: null,
   $name$: null,
   $text$: null
  }, t.push(d), l.removeAttribute("c-id"), e.$children$ || (e.$children$ = []), e.$children$[d.$index$] = d, 
  e = d, n && "0" === d.$depth$ && (n[d.$index$] = d.$elm$))), c = l.childNodes.length - 1; c >= 0; c--) clientHydrate(e, t, o, n, s, l.childNodes[c], a);
  if (l.shadowRoot) for (c = l.shadowRoot.childNodes.length - 1; c >= 0; c--) clientHydrate(e, t, o, n, s, l.shadowRoot.childNodes[c], a);
 } else if (8 === l.nodeType) i = l.nodeValue.split("."), i[1] !== a && "0" !== i[1] || (r = i[0], 
 d = {
  $flags$: 0,
  $hostId$: i[1],
  $nodeId$: i[2],
  $depth$: i[3],
  $index$: i[4],
  $elm$: l,
  $attrs$: null,
  $children$: null,
  $key$: null,
  $name$: null,
  $tag$: null,
  $text$: null
 }, "t" === r ? (d.$elm$ = l.nextSibling, d.$elm$ && 3 === d.$elm$.nodeType && (d.$text$ = d.$elm$.textContent, 
 t.push(d), l.remove(), e.$children$ || (e.$children$ = []), e.$children$[d.$index$] = d, 
 n && "0" === d.$depth$ && (n[d.$index$] = d.$elm$))) : d.$hostId$ === a && ("s" === r ? (d.$tag$ = "slot", 
 i[5] ? l["s-sn"] = d.$name$ = i[5] : l["s-sn"] = "", l["s-sr"] = !0, n && (d.$elm$ = doc.createElement(d.$tag$), 
 d.$name$ && d.$elm$.setAttribute("name", d.$name$), l.parentNode.insertBefore(d.$elm$, l), 
 l.remove(), "0" === d.$depth$ && (n[d.$index$] = d.$elm$)), o.push(d), e.$children$ || (e.$children$ = []), 
 e.$children$[d.$index$] = d) : "r" === r && (n ? l.remove() : (s["s-cr"] = l, 
 l["s-cn"] = !0)))); else if (e && "style" === e.$tag$) {
  const t = newVNode(null, l.textContent);
  t.$elm$ = l, t.$index$ = "0", e.$children$ = [ t ];
 }
}, initializeDocumentHydrate = (e, t) => {
 if (1 === e.nodeType) {
  let o = 0;
  for (;o < e.childNodes.length; o++) initializeDocumentHydrate(e.childNodes[o], t);
  if (e.shadowRoot) for (o = 0; o < e.shadowRoot.childNodes.length; o++) initializeDocumentHydrate(e.shadowRoot.childNodes[o], t);
 } else if (8 === e.nodeType) {
  const o = e.nodeValue.split(".");
  "o" === o[0] && (t.set(o[1] + "." + o[2], e), e.nodeValue = "", e["s-en"] = o[3]);
 }
}, parsePropertyValue = (e, t) => null == e || isComplexType(e) ? e : 4 & t ? "false" !== e && ("" === e || !!e) : 2 & t ? parseFloat(e) : 1 & t ? String(e) : e, getElement = e => getHostRef(e).$hostElement$ , createEvent = (e, t, o) => {
 const n = getElement(e);
 return {
  emit: e => (emitEvent(n, t, {
   bubbles: !!(4 & o),
   composed: !!(2 & o),
   cancelable: !!(1 & o),
   detail: e
  }))
 };
}, emitEvent = (e, t, o) => {
 const n = plt.ce(t, o);
 return e.dispatchEvent(n), n;
}, rootAppliedStyles = new WeakMap, registerStyle = (e, t, o) => {
 let n = styles.get(e);
 n = t, styles.set(e, n);
}, addStyle = (e, t, o) => {
 var n;
 const s = getScopeId(t), l = styles.get(s);
 if (e = 11 === e.nodeType ? e : doc, l) if ("string" == typeof l) {
  e = e.head || e;
  let t, o = rootAppliedStyles.get(e);
  if (o || rootAppliedStyles.set(e, o = new Set), !o.has(s)) {
   if (e.host && (t = e.querySelector(`[sty-id="${s}"]`))) t.innerHTML = l; else {
    t = doc.createElement("style"), t.innerHTML = l;
    const o = null !== (n = plt.$nonce$) && void 0 !== n ? n : queryNonceMetaTagContent(doc);
    null != o && t.setAttribute("nonce", o), t.setAttribute("sty-id", s), 
    e.insertBefore(t, e.querySelector("link"));
   }
   o && o.add(s);
  }
 }
 return s;
}, attachStyles = e => {
 const t = e.$cmpMeta$, o = e.$hostElement$, n = t.$flags$, s = createTime("attachStyles", t.$tagName$), l = addStyle(o.getRootNode(), t);
 10 & n && (o["s-sc"] = l, 
 o.classList.add(l + "-h"), 2 & n && o.classList.add(l + "-s")), 
 s();
}, getScopeId = (e, t) => "sc-" + (e.$tagName$), setAccessor = (e, t, o, n, s, l) => {
 if (o !== n) {
  let a = isMemberInElement(e, t), r = t.toLowerCase();
  if ("class" === t) {
   const t = e.classList, s = parseClassList(o), l = parseClassList(n);
   t.remove(...s.filter((e => e && !l.includes(e)))), t.add(...l.filter((e => e && !s.includes(e))));
  } else if ("style" === t) {
   for (const t in o) n && null != n[t] || (e.style[t] = "");
   for (const t in n) o && n[t] === o[t] || (e.style[t] = n[t]);
  } else if ("key" === t) ; else if ("ref" === t) n && n(e); else if ((a ) || "o" !== t[0] || "n" !== t[1]) {
   {
    const i = isComplexType(n);
    if ((a || i && null !== n) && !s) try {
     if (e.tagName.includes("-")) e[t] = n; else {
      const s = null == n ? "" : n;
      "list" === t ? a = !1 : null != o && e[t] == s || (e[t] = s);
     }
    } catch (e) {}
    let d = !1;
    r !== (r = r.replace(/^xlink\:?/, "")) && (t = r, d = !0), null == n || !1 === n ? !1 === n && "" !== e.getAttribute(t) || (d ? e.removeAttributeNS(XLINK_NS, t) : e.removeAttribute(t)) : (!a || 4 & l || s) && !i && (n = !0 === n ? "" : n, 
    d ? e.setAttributeNS(XLINK_NS, t, n) : e.setAttribute(t, n));
   }
  } else t = "-" === t[2] ? t.slice(3) : isMemberInElement(win, r) ? r.slice(2) : r[2] + t.slice(3), 
  o && plt.rel(e, t, o, !1), n && plt.ael(e, t, n, !1);
 }
}, parseClassListRegex = /\s/, parseClassList = e => e ? e.split(parseClassListRegex) : [], updateElement = (e, t, o, n) => {
 const s = 11 === t.$elm$.nodeType && t.$elm$.host ? t.$elm$.host : t.$elm$, l = e && e.$attrs$ || EMPTY_OBJ, a = t.$attrs$ || EMPTY_OBJ;
 for (n in l) n in a || setAccessor(s, n, l[n], void 0, o, t.$flags$);
 for (n in a) setAccessor(s, n, l[n], a[n], o, t.$flags$);
};

let scopeId, contentRef, hostTagName, useNativeShadowDom = !1, checkSlotFallbackVisibility = !1, checkSlotRelocate = !1, isSvgMode = !1;

const createElm = (e, t, o, n) => {
 const s = t.$children$[o];
 let l, a, r, i = 0;
 if (!useNativeShadowDom && (checkSlotRelocate = !0, "slot" === s.$tag$ && (scopeId && n.classList.add(scopeId + "-s"), 
 s.$flags$ |= s.$children$ ? 2 : 1)), null !== s.$text$) l = s.$elm$ = doc.createTextNode(s.$text$); else if (1 & s.$flags$) l = s.$elm$ = slotReferenceDebugNode(s) ; else {
  if (!isSvgMode && (isSvgMode = "svg" === s.$tag$), l = s.$elm$ = doc.createElementNS(isSvgMode ? "http://www.w3.org/2000/svg" : "http://www.w3.org/1999/xhtml", 2 & s.$flags$ ? "slot-fb" : s.$tag$) , 
  isSvgMode && "foreignObject" === s.$tag$ && (isSvgMode = !1), updateElement(null, s, isSvgMode), 
  null != scopeId && l["s-si"] !== scopeId && l.classList.add(l["s-si"] = scopeId), 
  s.$children$) for (i = 0; i < s.$children$.length; ++i) a = createElm(e, s, i, l), 
  a && l.appendChild(a);
  ("svg" === s.$tag$ ? isSvgMode = !1 : "foreignObject" === l.tagName && (isSvgMode = !0));
 }
 return (l["s-hn"] = hostTagName, 3 & s.$flags$ && (l["s-sr"] = !0, 
 l["s-cr"] = contentRef, l["s-sn"] = s.$name$ || "", r = e && e.$children$ && e.$children$[o], 
 r && r.$tag$ === s.$tag$ && e.$elm$ && putBackInOriginalLocation(e.$elm$, !1))), 
 l;
}, putBackInOriginalLocation = (e, t) => {
 plt.$flags$ |= 1;
 const o = e.childNodes;
 for (let e = o.length - 1; e >= 0; e--) {
  const n = o[e];
  n["s-hn"] !== hostTagName && n["s-ol"] && (parentReferenceNode(n).insertBefore(n, referenceNode(n)), 
  n["s-ol"].remove(), n["s-ol"] = void 0, checkSlotRelocate = !0), t && putBackInOriginalLocation(n, t);
 }
 plt.$flags$ &= -2;
}, addVnodes = (e, t, o, n, s, l) => {
 let a, r = e["s-cr"] && e["s-cr"].parentNode || e;
 for (r.shadowRoot && r.tagName === hostTagName && (r = r.shadowRoot); s <= l; ++s) n[s] && (a = createElm(null, o, s, e), 
 a && (n[s].$elm$ = a, r.insertBefore(a, referenceNode(t) )));
}, removeVnodes = (e, t, o) => {
 for (let n = t; n <= o; ++n) {
  const t = e[n];
  if (t) {
   const e = t.$elm$;
   nullifyVNodeRefs(t), e && ((checkSlotFallbackVisibility = !0, 
   e["s-ol"] ? e["s-ol"].remove() : putBackInOriginalLocation(e, !0)), e.remove());
  }
 }
}, isSameVnode = (e, t) => e.$tag$ === t.$tag$ && ("slot" === e.$tag$ ? e.$name$ === t.$name$ : e.$key$ === t.$key$), referenceNode = e => e && e["s-ol"] || e, parentReferenceNode = e => (e["s-ol"] ? e["s-ol"] : e).parentNode, patch = (e, t) => {
 const o = t.$elm$ = e.$elm$, n = e.$children$, s = t.$children$, l = t.$tag$, a = t.$text$;
 let r;
 null !== a ? (r = o["s-cr"]) ? r.parentNode.textContent = a : e.$text$ !== a && (o.data = a) : ((isSvgMode = "svg" === l || "foreignObject" !== l && isSvgMode), 
 ("slot" === l || updateElement(e, t, isSvgMode)), 
 null !== n && null !== s ? ((e, t, o, n) => {
  let s, l, a = 0, r = 0, i = 0, d = 0, c = t.length - 1, $ = t[0], m = t[c], p = n.length - 1, h = n[0], u = n[p];
  for (;a <= c && r <= p; ) if (null == $) $ = t[++a]; else if (null == m) m = t[--c]; else if (null == h) h = n[++r]; else if (null == u) u = n[--p]; else if (isSameVnode($, h)) patch($, h), 
  $ = t[++a], h = n[++r]; else if (isSameVnode(m, u)) patch(m, u), m = t[--c], u = n[--p]; else if (isSameVnode($, u)) "slot" !== $.$tag$ && "slot" !== u.$tag$ || putBackInOriginalLocation($.$elm$.parentNode, !1), 
  patch($, u), e.insertBefore($.$elm$, m.$elm$.nextSibling), $ = t[++a], u = n[--p]; else if (isSameVnode(m, h)) "slot" !== $.$tag$ && "slot" !== u.$tag$ || putBackInOriginalLocation(m.$elm$.parentNode, !1), 
  patch(m, h), e.insertBefore(m.$elm$, $.$elm$), m = t[--c], h = n[++r]; else {
   if (i = -1, BUILD.vdomKey) for (d = a; d <= c; ++d) if (t[d] && null !== t[d].$key$ && t[d].$key$ === h.$key$) {
    i = d;
    break;
   }
   i >= 0 ? (l = t[i], l.$tag$ !== h.$tag$ ? s = createElm(t && t[r], o, i, e) : (patch(l, h), 
   t[i] = void 0, s = l.$elm$), h = n[++r]) : (s = createElm(t && t[r], o, r, e), h = n[++r]), 
   s && (parentReferenceNode($.$elm$).insertBefore(s, referenceNode($.$elm$)) );
  }
  a > c ? addVnodes(e, null == n[p + 1] ? null : n[p + 1].$elm$, o, n, r, p) : r > p && removeVnodes(t, a, c);
 })(o, n, t, s) : null !== s ? (null !== e.$text$ && (o.textContent = ""), 
 addVnodes(o, null, t, s, 0, s.length - 1)) : null !== n && removeVnodes(n, 0, n.length - 1), 
 isSvgMode && "svg" === l && (isSvgMode = !1));
}, updateFallbackSlotVisibility = e => {
 const t = e.childNodes;
 let o, n, s, l, a, r;
 for (n = 0, s = t.length; n < s; n++) if (o = t[n], 1 === o.nodeType) {
  if (o["s-sr"]) for (a = o["s-sn"], o.hidden = !1, l = 0; l < s; l++) if (r = t[l].nodeType, 
  t[l]["s-hn"] !== o["s-hn"] || "" !== a) {
   if (1 === r && a === t[l].getAttribute("slot")) {
    o.hidden = !0;
    break;
   }
  } else if (1 === r || 3 === r && "" !== t[l].textContent.trim()) {
   o.hidden = !0;
   break;
  }
  updateFallbackSlotVisibility(o);
 }
}, relocateNodes = [], relocateSlotContent = e => {
 let t, o, n, s, l, a, r = 0;
 const i = e.childNodes, d = i.length;
 for (;r < d; r++) {
  if (t = i[r], t["s-sr"] && (o = t["s-cr"]) && o.parentNode) for (n = o.parentNode.childNodes, 
  s = t["s-sn"], a = n.length - 1; a >= 0; a--) o = n[a], o["s-cn"] || o["s-nr"] || o["s-hn"] === t["s-hn"] || (isNodeLocatedInSlot(o, s) ? (l = relocateNodes.find((e => e.$nodeToRelocate$ === o)), 
  checkSlotFallbackVisibility = !0, o["s-sn"] = o["s-sn"] || s, l ? l.$slotRefNode$ = t : relocateNodes.push({
   $slotRefNode$: t,
   $nodeToRelocate$: o
  }), o["s-sr"] && relocateNodes.map((e => {
   isNodeLocatedInSlot(e.$nodeToRelocate$, o["s-sn"]) && (l = relocateNodes.find((e => e.$nodeToRelocate$ === o)), 
   l && !e.$slotRefNode$ && (e.$slotRefNode$ = l.$slotRefNode$));
  }))) : relocateNodes.some((e => e.$nodeToRelocate$ === o)) || relocateNodes.push({
   $nodeToRelocate$: o
  }));
  1 === t.nodeType && relocateSlotContent(t);
 }
}, isNodeLocatedInSlot = (e, t) => 1 === e.nodeType ? null === e.getAttribute("slot") && "" === t || e.getAttribute("slot") === t : e["s-sn"] === t || "" === t, nullifyVNodeRefs = e => {
 (e.$attrs$ && e.$attrs$.ref && e.$attrs$.ref(null), e.$children$ && e.$children$.map(nullifyVNodeRefs));
}, renderVdom = (e, t, o = !1) => {
 const n = e.$hostElement$, s = e.$cmpMeta$, l = e.$vnode$ || newVNode(null, null), a = isHost(t) ? t : h(null, null, t);
 if (hostTagName = n.tagName, BUILD.isDev  ) ;
 if (s.$attrsToReflect$ && (a.$attrs$ = a.$attrs$ || {}, s.$attrsToReflect$.map((([e, t]) => a.$attrs$[t] = n[e]))), 
 o && a.$attrs$) for (const e of Object.keys(a.$attrs$)) n.hasAttribute(e) && ![ "key", "ref", "style", "class" ].includes(e) && (a.$attrs$[e] = n[e]);
 if (a.$tag$ = null, a.$flags$ |= 4, e.$vnode$ = a, a.$elm$ = l.$elm$ = n.shadowRoot || n, 
 (scopeId = n["s-sc"]), (contentRef = n["s-cr"], 
 useNativeShadowDom = supportsShadow, checkSlotFallbackVisibility = !1), patch(l, a), 
 BUILD.slotRelocation) {
  if (plt.$flags$ |= 1, checkSlotRelocate) {
   let e, t, o, n, s, l;
   relocateSlotContent(a.$elm$);
   let r = 0;
   for (;r < relocateNodes.length; r++) e = relocateNodes[r], t = e.$nodeToRelocate$, 
   t["s-ol"] || (o = originalLocationDebugNode(t) , 
   o["s-nr"] = t, t.parentNode.insertBefore(t["s-ol"] = o, t));
   for (r = 0; r < relocateNodes.length; r++) if (e = relocateNodes[r], t = e.$nodeToRelocate$, 
   e.$slotRefNode$) {
    for (n = e.$slotRefNode$.parentNode, s = e.$slotRefNode$.nextSibling, o = t["s-ol"]; o = o.previousSibling; ) if (l = o["s-nr"], 
    l && l["s-sn"] === t["s-sn"] && n === l.parentNode && (l = l.nextSibling, !l || !l["s-nr"])) {
     s = l;
     break;
    }
    (!s && n !== t.parentNode || t.nextSibling !== s) && t !== s && (!t["s-hn"] && t["s-ol"] && (t["s-hn"] = t["s-ol"].parentNode.nodeName), 
    n.insertBefore(t, s));
   } else 1 === t.nodeType && (t.hidden = !0);
  }
  checkSlotFallbackVisibility && updateFallbackSlotVisibility(a.$elm$), plt.$flags$ &= -2, 
  relocateNodes.length = 0;
 }
}, slotReferenceDebugNode = e => doc.createComment(`<slot${e.$name$ ? ' name="' + e.$name$ + '"' : ""}> (host=${hostTagName.toLowerCase()})`), originalLocationDebugNode = e => doc.createComment("org-location for " + (e.localName ? `<${e.localName}> (host=${e["s-hn"]})` : `[${e.textContent}]`)), attachToAncestor = (e, t) => {
 t && !e.$onRenderResolve$ && t["s-p"] && t["s-p"].push(new Promise((t => e.$onRenderResolve$ = t)));
}, scheduleUpdate = (e, t) => {
 if ((e.$flags$ |= 16), 4 & e.$flags$) return void (e.$flags$ |= 512);
 attachToAncestor(e, e.$ancestorComponent$);
 const o = () => dispatchHooks(e, t);
 return writeTask(o) ;
}, dispatchHooks = (e, t) => {
 const n = createTime("scheduleUpdate", e.$cmpMeta$.$tagName$), s = e.$lazyInstance$ ;
 let l;
 return t ? ((e.$flags$ |= 256, e.$queuedListeners$ && (e.$queuedListeners$.map((([e, t]) => safeCall(s, e, t))), 
 e.$queuedListeners$ = void 0)), (l = safeCall(s, "componentWillLoad"))) : ((l = safeCall(s, "componentWillUpdate"))), (l = enqueue(l, (() => safeCall(s, "componentWillRender")))), 
 n(), enqueue(l, (() => updateComponent(e, s, t)));
}, enqueue = (e, t) => isPromisey(e) ? e.then(t) : t(), isPromisey = e => e instanceof Promise || e && e.then && "function" == typeof e.then, updateComponent = async (e, t, o) => {
 var n;
 const s = e.$hostElement$, l = createTime("update", e.$cmpMeta$.$tagName$), a = s["s-rc"];
 o && attachStyles(e);
 const r = createTime("render", e.$cmpMeta$.$tagName$);
 if (await callRender(e, t, s, o) , 
 BUILD.hydrateServerSide) try {
  serverSideConnected(s), o && (1 & e.$cmpMeta$.$flags$ ? s["s-en"] = "" : 2 & e.$cmpMeta$.$flags$ && (s["s-en"] = "c"));
 } catch (e) {
  consoleError(e, s);
 }
 if (a && (a.map((e => e())), s["s-rc"] = void 0), r(), l(), 
 BUILD.asyncLoading) {
  const t = null !== (n = s["s-p"]) && void 0 !== n ? n : [], o = () => postUpdateComponent(e);
  0 === t.length ? o() : (Promise.all(t).then(o), e.$flags$ |= 4, t.length = 0);
 }
};

const callRender = (e, t, o, n) => {
 try {
  if (t = t.render(), (e.$flags$ &= -17), 
  (e.$flags$ |= 2), BUILD.hasRenderFn ) {
   return Promise.resolve(t).then((t => renderVdom(e, t, n)));
  }
 } catch (t) {
  consoleError(t, e.$hostElement$);
 }
 return null;
}, postUpdateComponent = e => {
 const t = e.$cmpMeta$.$tagName$, o = e.$hostElement$, n = createTime("postUpdate", t), s = e.$lazyInstance$ , l = e.$ancestorComponent$;
 (safeCall(s, "componentDidRender"), 
 BUILD.isDev ), 64 & e.$flags$ ? ((safeCall(s, "componentDidUpdate"), 
 BUILD.isDev ), n()) : (e.$flags$ |= 64, addHydratedFlag(o), 
 (safeCall(s, "componentDidLoad"), 
 BUILD.isDev ), n(), (e.$onReadyResolve$(o), l || appDidLoad())), e.$onInstanceResolve$(o), (e.$onRenderResolve$ && (e.$onRenderResolve$(), 
 e.$onRenderResolve$ = void 0), 512 & e.$flags$ && nextTick((() => scheduleUpdate(e, !1))), 
 e.$flags$ &= -517);
}, appDidLoad = e => {
 addHydratedFlag(doc.documentElement), nextTick((() => emitEvent(win, "appload", {
  detail: {
   namespace: NAMESPACE
  }
 }))), BUILD.profile  ;
}, safeCall = (e, t, o) => {
 if (e && e[t]) try {
  return e[t](o);
 } catch (e) {
  consoleError(e);
 }
}, addHydratedFlag = e => e.classList.add("hydrated") , serverSideConnected = e => {
 const t = e.children;
 if (null != t) for (let e = 0, o = t.length; e < o; e++) {
  const o = t[e];
  "function" == typeof o.connectedCallback && o.connectedCallback(), serverSideConnected(o);
 }
}, getValue = (e, t) => getHostRef(e).$instanceValues$.get(t), setValue = (e, t, o, n) => {
 const s = getHostRef(e), l = s.$hostElement$ , a = s.$instanceValues$.get(t), r = s.$flags$, i = s.$lazyInstance$ ;
 o = parsePropertyValue(o, n.$members$[t][0]);
 const d = Number.isNaN(a) && Number.isNaN(o), c = o !== a && !d;
 if ((!(8 & r) || void 0 === a) && c && (s.$instanceValues$.set(t, o), 
 i)) {
  if (n.$watchers$ && 128 & r) {
   const e = n.$watchers$[t];
   e && e.map((e => {
    try {
     i[e](o, a, t);
    } catch (e) {
     consoleError(e, l);
    }
   }));
  }
  if (2 == (18 & r)) {
   scheduleUpdate(s, !1);
  }
 }
}, proxyComponent = (e, t, o) => {
 var n;
 if (t.$members$) {
  e.watchers && (t.$watchers$ = e.watchers);
  const s = Object.entries(t.$members$), l = e.prototype;
  if (s.map((([e, [n]]) => {
   (31 & n || (2 & o) && 32 & n) ? Object.defineProperty(l, e, {
    get() {
     return getValue(this, e);
    },
    set(s) {
     setValue(this, e, s, t);
    },
    configurable: !0,
    enumerable: !0
   }) : 1 & o && 64 & n && Object.defineProperty(l, e, {
    value(...t) {
     const o = getHostRef(this);
     return o.$onInstancePromise$.then((() => o.$lazyInstance$[e](...t)));
    }
   });
  })), (1 & o)) {
   const o = new Map;
   l.attributeChangedCallback = function(e, n, s) {
    plt.jmp((() => {
     const a = o.get(e);
     if (this.hasOwnProperty(a)) s = this[a], delete this[a]; else {
      if (l.hasOwnProperty(a) && "number" == typeof this[a] && this[a] == s) return;
      if (null == a) {
       const o = getHostRef(this), l = null == o ? void 0 : o.$flags$;
       if (!(8 & l) && 128 & l && s !== n) {
        const a = o.$lazyInstance$ , r = t.$watchers$[e];
        null == r || r.forEach((t => {
         null != a[t] && a[t].call(a, s, n, e);
        }));
       }
       return;
      }
     }
     this[a] = (null !== s || "boolean" != typeof this[a]) && s;
    }));
   }, e.observedAttributes = Array.from(new Set([ ...Object.keys(null !== (n = t.$watchers$) && void 0 !== n ? n : {}), ...s.filter((([e, t]) => 15 & t[0])).map((([e, n]) => {
    const s = n[1] || e;
    return o.set(s, e), 512 & n[0] && t.$attrsToReflect$.push([ e, s ]), 
    s;
   })) ]));
  }
 }
 return e;
}, initializeComponent = async (e, t, o, n, s) => {
 if (0 == (32 & t.$flags$)) {
  if (t.$flags$ |= 32, BUILD.lazyLoad ) {
   if ((s = loadModule(o)).then) {
    const e = (() => {});
    s = await s, e();
   }
   !s.isProxied && ((o.$watchers$ = s.watchers), 
   proxyComponent(s, o, 2), s.isProxied = !0);
   const e = createTime("createInstance", o.$tagName$);
   (t.$flags$ |= 8);
   try {
    new s(t);
   } catch (e) {
    consoleError(e);
   }
   (t.$flags$ &= -9), (t.$flags$ |= 128), e(), 
   fireConnectedCallback(t.$lazyInstance$);
  }
  if (s.style) {
   let n = s.style;
   const l = getScopeId(o);
   if (!styles.has(l)) {
    const e = createTime("registerStyles", o.$tagName$);
    registerStyle(l, n), e();
   }
  }
 }
 const r = t.$ancestorComponent$, i = () => scheduleUpdate(t, !0);
 r && r["s-rc"] ? r["s-rc"].push(i) : i();
}, fireConnectedCallback = e => {
 safeCall(e, "connectedCallback");
}, connectedCallback = e => {
 if (0 == (1 & plt.$flags$)) {
  const t = getHostRef(e), o = t.$cmpMeta$, n = createTime("connectedCallback", o.$tagName$);
  if (1 & t.$flags$) addHostEventListeners(e, t, o.$listeners$), (null == t ? void 0 : t.$lazyInstance$) ? fireConnectedCallback(t.$lazyInstance$) : (null == t ? void 0 : t.$onReadyPromise$) && t.$onReadyPromise$.then((() => fireConnectedCallback(t.$lazyInstance$))); else {
   let n;
   if (t.$flags$ |= 1, (n = e.getAttribute("s-id"), n)) {
    ((e, t, o, n) => {
     const s = createTime("hydrateClient", t), l = e.shadowRoot, a = [], r = l ? [] : null, i = n.$vnode$ = newVNode(t, null);
     plt.$orgLocNodes$ || initializeDocumentHydrate(doc.body, plt.$orgLocNodes$ = new Map), 
     e["s-id"] = o, e.removeAttribute("s-id"), clientHydrate(i, a, [], r, e, e, o), a.map((e => {
      const o = e.$hostId$ + "." + e.$nodeId$, n = plt.$orgLocNodes$.get(o), s = e.$elm$;
      n && supportsShadow && "" === n["s-en"] && n.parentNode.insertBefore(s, n.nextSibling), 
      l || (s["s-hn"] = t, n && (s["s-ol"] = n, s["s-ol"]["s-nr"] = s)), plt.$orgLocNodes$.delete(o);
     })), l && r.map((e => {
      e && l.appendChild(e);
     })), s();
    })(e, o.$tagName$, n, t);
   }
   if (!n && (BUILD.hydrateServerSide ) && setContentReference(e), 
   BUILD.asyncLoading) {
    let o = e;
    for (;o = o.parentNode || o.host; ) if (1 === o.nodeType && o.hasAttribute("s-id") && o["s-p"] || o["s-p"]) {
     attachToAncestor(t, t.$ancestorComponent$ = o);
     break;
    }
   }
   initializeComponent(e, t, o);
  }
  n();
 }
}, setContentReference = e => {
 const t = e["s-cr"] = doc.createComment("");
 t["s-cn"] = !0, e.insertBefore(t, e.firstChild);
}, Fragment = (e, t) => t, addHostEventListeners = (e, t, o, n) => {
 o && (o.map((([o, n, s]) => {
  const l = getHostListenerTarget(e, o) , a = hostListenerProxy(t, s), r = hostListenerOpts(o);
  plt.ael(l, n, a, r), (t.$rmListeners$ = t.$rmListeners$ || []).push((() => plt.rel(l, n, a, r)));
 })));
}, hostListenerProxy = (e, t) => o => {
 try {
  256 & e.$flags$ ? e.$lazyInstance$[t](o) : (e.$queuedListeners$ = e.$queuedListeners$ || []).push([ t, o ]) ;
 } catch (e) {
  consoleError(e);
 }
}, getHostListenerTarget = (e, t) => 4 & t ? doc : 8 & t ? win : e, hostListenerOpts = e => 0 != (2 & e), insertVdomAnnotations = (e, t) => {
 if (null != e) {
  const o = {
   hostIds: 0,
   rootLevelIds: 0,
   staticComponents: new Set(t)
  }, n = [];
  parseVNodeAnnotations(e, e.body, o, n), n.forEach((t => {
   if (null != t) {
    const n = t["s-nr"];
    let s = n["s-host-id"], l = n["s-node-id"], a = `${s}.${l}`;
    if (null == s) if (s = 0, o.rootLevelIds++, l = o.rootLevelIds, a = `${s}.${l}`, 
    1 === n.nodeType) n.setAttribute("c-id", a); else if (3 === n.nodeType) {
     if (0 === s && "" === n.nodeValue.trim()) return void t.remove();
     const o = e.createComment(a);
     o.nodeValue = `t.${a}`, n.parentNode.insertBefore(o, n);
    }
    let r = `o.${a}`;
    const i = t.parentElement;
    i && ("" === i["s-en"] ? r += "." : "c" === i["s-en"] && (r += ".c")), t.nodeValue = r;
   }
  }));
 }
}, parseVNodeAnnotations = (e, t, o, n) => {
 null != t && (null != t["s-nr"] && n.push(t), 1 === t.nodeType && t.childNodes.forEach((t => {
  const s = getHostRef(t);
  if (null != s && !o.staticComponents.has(t.nodeName.toLowerCase())) {
   const n = {
    nodeIds: 0
   };
   insertVNodeAnnotations(e, t, s.$vnode$, o, n);
  }
  parseVNodeAnnotations(e, t, o, n);
 })));
}, insertVNodeAnnotations = (e, t, o, n, s) => {
 if (null != o) {
  const l = ++n.hostIds;
  if (t.setAttribute("s-id", l), null != t["s-cr"] && (t["s-cr"].nodeValue = `r.${l}`), 
  null != o.$children$) {
   const t = 0;
   o.$children$.forEach(((o, n) => {
    insertChildVNodeAnnotations(e, o, s, l, t, n);
   }));
  }
  if (t && o && o.$elm$ && !t.hasAttribute("c-id")) {
   const e = t.parentElement;
   if (e && e.childNodes) {
    const n = Array.from(e.childNodes), s = n.find((e => 8 === e.nodeType && e["s-sr"]));
    if (s) {
     const e = n.indexOf(t) - 1;
     o.$elm$.setAttribute("c-id", `${s["s-host-id"]}.${s["s-node-id"]}.0.${e}`);
    }
   }
  }
 }
}, insertChildVNodeAnnotations = (e, t, o, n, s, l) => {
 const a = t.$elm$;
 if (null == a) return;
 const r = o.nodeIds++, i = `${n}.${r}.${s}.${l}`;
 if (a["s-host-id"] = n, a["s-node-id"] = r, 1 === a.nodeType) a.setAttribute("c-id", i); else if (3 === a.nodeType) {
  const t = a.parentNode, o = t.nodeName;
  if ("STYLE" !== o && "SCRIPT" !== o) {
   const o = `t.${i}`, n = e.createComment(o);
   t.insertBefore(n, a);
  }
 } else if (8 === a.nodeType && a["s-sr"]) {
  const e = `s.${i}.${a["s-sn"] || ""}`;
  a.nodeValue = e;
 }
 if (null != t.$children$) {
  const l = s + 1;
  t.$children$.forEach(((t, s) => {
   insertChildVNodeAnnotations(e, t, o, n, l, s);
  }));
 }
}, hAsync = (e, t, ...o) => {
 if (Array.isArray(o) && o.length > 0) {
  const n = o.flat(1 / 0);
  return n.some(isPromise) ? Promise.all(n).then((o => h(e, t, ...o))).catch((o => h(e, t))) : h(e, t, ...o);
 }
 return h(e, t);
}, NO_HYDRATE_TAGS = new Set([ "CODE", "HEAD", "IFRAME", "INPUT", "OBJECT", "OUTPUT", "NOSCRIPT", "PRE", "SCRIPT", "SELECT", "STYLE", "TEMPLATE", "TEXTAREA" ]);

const cmpModules = new Map, getModule = e => {
 if ("string" == typeof e) {
  e = e.toLowerCase();
  const t = cmpModules.get(e);
  if (null != t) return t[e];
 }
 return null;
}, loadModule = (e, t, o) => getModule(e.$tagName$), isMemberInElement = (e, t) => {
 if (null != e) {
  if (t in e) return !0;
  const o = getModule(e.nodeName);
  if (null != o) {
   const e = o;
   if (null != e && null != e.cmpMeta && null != e.cmpMeta.$members$) return t in e.cmpMeta.$members$;
  }
 }
 return !1;
}, registerComponents = e => {
 for (const t of e) {
  const e = t.cmpMeta.$tagName$;
  cmpModules.set(e, {
   [e]: t
  });
 }
}, win = window, doc = win.document, writeTask = e => {
 process.nextTick((() => {
  try {
   e();
  } catch (e) {
   consoleError(e);
  }
 }));
}, resolved = Promise.resolve(), nextTick = e => resolved.then(e), defaultConsoleError = e => {
 null != e && console.error(e.stack || e.message || e);
}, consoleError = (e, t) => (defaultConsoleError)(e, t), plt = {
 $flags$: 0,
 $resourcesUrl$: "",
 jmp: e => e(),
 raf: e => requestAnimationFrame(e),
 ael: (e, t, o, n) => e.addEventListener(t, o, n),
 rel: (e, t, o, n) => e.removeEventListener(t, o, n),
 ce: (e, t) => new win.CustomEvent(e, t)
}, supportsShadow = !1, hostRefs = new WeakMap, getHostRef = e => hostRefs.get(e), registerInstance = (e, t) => hostRefs.set(t.$lazyInstance$ = e, t), registerHost = (e, t) => {
 const o = {
  $flags$: 0,
  $cmpMeta$: t,
  $hostElement$: e,
  $instanceValues$: new Map,
  $renderCount$: 0
 };
 return o.$onInstancePromise$ = new Promise((e => o.$onInstanceResolve$ = e)), o.$onReadyPromise$ = new Promise((e => o.$onReadyResolve$ = e)), 
 e["s-p"] = [], e["s-rc"] = [], addHostEventListeners(e, o, t.$listeners$), hostRefs.set(e, o);
}, styles = new Map;

var IcInformationStatus;
(function (IcInformationStatus) {
  IcInformationStatus["Warning"] = "warning";
  IcInformationStatus["Error"] = "error";
  IcInformationStatus["Success"] = "success";
})(IcInformationStatus || (IcInformationStatus = {}));
var IcThemeForegroundEnum;
(function (IcThemeForegroundEnum) {
  IcThemeForegroundEnum["Default"] = "default";
  IcThemeForegroundEnum["Dark"] = "dark";
  IcThemeForegroundEnum["Light"] = "light";
})(IcThemeForegroundEnum || (IcThemeForegroundEnum = {}));

var errorIcon = `<svg aria-labelledby="error-title" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="#000000">
    <title id="error-title">Error</title>
    <g id="close-octagon">
        <path id="Vector" d="M8.77 3L3.5 8.27V15.73L8.77 21H16.23L21.5 15.73V8.27L16.23 3M8.91 7L12.5 10.59L16.09 7L17.5 8.41L13.91 12L17.5 15.59L16.09 17L12.5 13.41L8.91 17L7.5 15.59L11.09 12L7.5 8.41" />
    </g>
</svg>
`;

var infoIcon = `<svg aria-labelledby="info-title" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="#000000">
    <title id="info-title">For your information</title>
    <g id="info">
        <path id="Vector" d="M12 2C6.48 2 2 6.48 2 12C2 17.52 6.48 22 12 22C17.52 22 22 17.52 22 12C22 6.48 17.52 2 12 2ZM12 17C11.45 17 11 16.55 11 16V12C11 11.45 11.45 11 12 11C12.55 11 13 11.45 13 12V16C13 16.55 12.55 17 12 17ZM13 9H11V7H13V9Z" />
    </g>
</svg>
`;

var neutralIcon = `<svg aria-labelledby="neutral-title" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="#000000">
<title id="neutral-title">Neutral</title>
    <g id="Icon">
        <path id="Vector" d="M19.5 3H5.5C4.4 3 3.5 3.9 3.5 5V19C3.5 20.1 4.4 21 5.5 21H19.5C20.6 21 21.5 20.1 21.5 19V5C21.5 3.9 20.6 3 19.5 3ZM12.51 18C11.81 18 11.25 17.44 11.25 16.74C11.25 16.03 11.81 15.49 12.51 15.49C13.22 15.49 13.76 16.03 13.76 16.74C13.75 17.43 13.22 18 12.51 18ZM15.52 10.6C14.76 11.71 14.04 12.06 13.65 12.77C13.55 12.95 13.49 13.09 13.46 13.4C13.41 13.85 13.01 14.18 12.56 14.18H12.5C11.98 14.18 11.57 13.74 11.62 13.22C11.65 12.88 11.73 12.53 11.92 12.19C12.41 11.32 13.34 10.8 13.88 10.03C14.45 9.22 14.13 7.7 12.51 7.7C11.8 7.7 11.33 8.06 11.04 8.49C10.79 8.85 10.35 9.02 9.94 8.85C9.41 8.64 9.22 8 9.54 7.54C10.15 6.65 11.17 6 12.49 6C13.97 6 14.98 6.67 15.5 7.52C15.94 8.24 16.2 9.59 15.52 10.6Z" />
    </g>
</svg>
`;

var successIcon = `<svg aria-labelledby="success-title" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="#000000">
    <title id="success-title">Success</title>
    <g id="check_circle">
        <path id="Vector" d="M12.5 2C6.98 2 2.5 6.48 2.5 12C2.5 17.52 6.98 22 12.5 22C18.02 22 22.5 17.52 22.5 12C22.5 6.48 18.02 2 12.5 2ZM9.79 16.29L6.2 12.7C5.81 12.31 5.81 11.68 6.2 11.29C6.59 10.9 7.22 10.9 7.61 11.29L10.5 14.17L17.38 7.29C17.77 6.9 18.4 6.9 18.79 7.29C19.18 7.68 19.18 8.31 18.79 8.7L11.2 16.29C10.82 16.68 10.18 16.68 9.79 16.29Z" />
    </g>
</svg>
`;

var warningIcon$1 = `<svg aria-labelledby="warning-title" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="#000000">
    <title id="warning-title">Warning</title>
    <g id="warning">
        <path id="Vector" d="M4.47 20.5037H19.53C21.07 20.5037 22.03 18.8337 21.26 17.5037L13.73 4.49375C12.96 3.16375 11.04 3.16375 10.27 4.49375L2.74 17.5037C1.97 18.8337 2.93 20.5037 4.47 20.5037ZM12 13.5037C11.45 13.5037 11 13.0537 11 12.5037V10.5037C11 9.95375 11.45 9.50375 12 9.50375C12.55 9.50375 13 9.95375 13 10.5037V12.5037C13 13.0537 12.55 13.5037 12 13.5037ZM13 17.5037H11V15.5037H13V17.5037Z" />
    </g>
</svg>
`;

// Global status icons
const VARIANT_ICONS = {
  neutral: {
    icon: neutralIcon,
    ariaLabel: "Neutral",
  },
  info: {
    icon: infoIcon,
    ariaLabel: "For your information",
  },
  warning: {
    icon: warningIcon$1,
    ariaLabel: "Warning",
  },
  error: {
    icon: errorIcon,
    ariaLabel: "Error",
  },
  success: {
    icon: successIcon,
    ariaLabel: "Success",
  },
};
// Global ARIA attributes
const IC_INHERITED_ARIA = [
  "aria-atomic",
  "aria-autocomplete",
  "aria-busy",
  "aria-controls",
  "aria-current",
  "aria-describedby",
  "aria-description",
  "aria-details",
  "aria-disabled",
  "aria-dropeffect",
  "aria-errormessage",
  "aria-expanded",
  "aria-flowto",
  "aria-grabbed",
  "aria-haspopup",
  "aria-hidden",
  "aria-invalid",
  "aria-keyshortcuts",
  "aria-label",
  "aria-labelledby",
  "aria-live",
  "aria-owns",
  "aria-relevant",
  "aria-roledescription",
];
const IC_DEVICE_SIZES = {
  XS: 576,
  S: 768,
  M: 992,
  L: 1200,
  XL: 99999,
};
const IC_BLOCK_COLOR_COMPONENTS = [
  "ic-hero",
  "ic-top-navigation",
  "ic-footer",
  "ic-side-navigation",
  "ic-alert",
];
const IC_FIXED_COLOR_COMPONENTS = ["ic-alert"];
const IC_BLOCK_COLOR_EXCEPTIONS = {
  "ic-alert": ["ic-link"],
};
/* Range within which the chosen theme colour would not have a sufficient brightness difference with either of the black or white foreground colours
 * The brightness difference must be greater than 125 to provide good colour visibility
 * Calculated by:
 * - Using the brightness formula for both colours: https://www.w3.org/TR/AERT/#color-contrast
 * - Adding 125 to the brightness of the black foreground colour - RGB(11, 12, 12)
 * - Subtracting 125 from the brightness of the white foreground colour - RGB(255, 255, 255)
 */
const BLACK_MIN_COLOR_BRIGHTNESS = 136.701;
const WHITE_MAX_COLOR_BRIGHTNESS = 130;

const DARK_MODE_THRESHOLD = 133.3505;
/**
 * Used to inherit global attributes set on the host. Called in componentWillLoad and assigned
 * to a variable that is later used in the render function.
 *
 * This does not need to be reactive as changing attributes on the host element
 * does not trigger a re-render.
 */
const inheritAttributes = (element, attributes = []) => {
  const attributeObject = {};
  attributes.forEach((attr) => {
    if (element.hasAttribute(attr)) {
      const value = element.getAttribute(attr);
      if (value !== null) {
        attributeObject[attr] = element.getAttribute(attr);
      }
      element.removeAttribute(attr);
    }
  });
  return attributeObject;
};
const debounceEvent = (event, wait) => {
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  const original = event._original || event;
  return {
    _original: event,
    emit: debounce$1(original.emit.bind(original), wait),
  };
};
const debounce$1 = (func, wait = 0) => {
  let timer;
  return (...args) => {
    clearTimeout(timer);
    timer = setTimeout(func, wait, ...args);
  };
};
/**
 * This method is used to add a hidden input to a host element that contains
 * a Shadow DOM. It does not add the input inside of the Shadow root which
 * allows it to be picked up inside of forms. It should contain the same
 * values as the host element.
 *
 * @param always Add a hidden input even if the container does not use Shadow
 * @param container The element where the input will be added
 * @param name The name of the input
 * @param value The value of the input
 * @param disabled If true, the input is disabled
 */
const renderHiddenInput = (always, container, name, value, disabled) => {
  if (name !== undefined && (always || hasShadowDom(container))) {
    const inputs = container.querySelectorAll("input.ic-input");
    const inputEls = Array.from(inputs);
    const filtered = inputEls.filter((el) => container === el.parentElement);
    let input = filtered[0];
    if (input === null || input === undefined) {
      input = container.ownerDocument.createElement("input");
      input.type = "hidden";
      input.classList.add("ic-input");
      container.appendChild(input);
    }
    input.disabled = disabled;
    input.name = name;
    input.value = value || "";
  }
};
const removeHiddenInput = (container) => {
  const inputs = container.querySelectorAll("input.ic-input");
  const inputEls = Array.from(inputs);
  const filtered = inputEls.filter((el) => container === el.parentElement);
  const input = filtered[0];
  input === null || input === void 0 ? void 0 : input.remove();
};
const hasShadowDom = (el) => !!el.shadowRoot && !!el.attachShadow;
const getInputHelperTextID = (id) => id + "-helper-text";
const getInputValidationTextID = (id) => id + "-validation-text";
const getInputDescribedByText = (inputId, helperText, validationText) => `${helperText ? getInputHelperTextID(inputId) : ""} ${validationText ? getInputValidationTextID(inputId) : ""}`.trim();
/**
 * This method helps to understand the context in which a component exists,
 * to assist with choosing appropriate foreground colours to use. For example,
 * this method will help you use the 'white' version of a button if it's within
 * a block colour element using white foreground text.
 *
 * This only works for components/elements passed via <slot> and not if they
 * are part of an IC component.
 *
 * ""
 * @returns IcThemeForeground depending on the context
 */
const getThemeFromContext = (el, themeFromEvent = null) => {
  var _a;
  const parentElement = el.parentElement || el.getRootNode().host.parentElement;
  const blockColorParent = parentElement.closest(IC_BLOCK_COLOR_COMPONENTS.join(","));
  // If within a block color component
  if (blockColorParent !== null) {
    const parentTag = blockColorParent.tagName.toLowerCase();
    const currentTag = el.tagName.toLowerCase();
    if ((_a = IC_BLOCK_COLOR_EXCEPTIONS[parentTag]) === null || _a === void 0 ? void 0 : _a.includes(currentTag)) {
      return IcThemeForegroundEnum.Default;
    }
    else if (themeFromEvent !== null &&
      !IC_FIXED_COLOR_COMPONENTS.includes(parentTag)) {
      return themeFromEvent;
    }
    else if (blockColorParent.classList.contains(IcThemeForegroundEnum.Dark)) {
      return IcThemeForegroundEnum.Dark;
    }
    return IcThemeForegroundEnum.Light;
  }
  return IcThemeForegroundEnum.Default;
};
const isMobileOrTablet = () => "maxTouchPoints" in navigator ? navigator.maxTouchPoints > 0 : false;
/**
 * Will create a button within the lightDOM which interacts with the parent form.
 * This is required as buttons within the shadowDOM will not invoke a submit or reset
 *
 * @param form - parent form element which contains shadowDom button
 * @param button - shadowDOM button
 */
const handleHiddenFormButtonClick = (form, button) => {
  const hiddenFormButton = document.createElement("button");
  hiddenFormButton.setAttribute("type", button.type);
  hiddenFormButton.style.display = "none";
  form.appendChild(hiddenFormButton);
  hiddenFormButton.click();
  hiddenFormButton.remove();
};
const isEmptyString = (value) => value ? value.trim().length === 0 : true;
// A helper function that checks if a prop has been defined
const isPropDefined = (prop) => prop !== undefined ? prop : null;
/**
 * Extracts the label using the value from an object. Requires the object to have a label and value property.
 * @param value - value from object
 * @param options - list of menu items
 * @returns - label corresponding to value
 */
const getLabelFromValue = (value, options, valueField = "value", labelField = "label") => {
  const ungroupedOptions = [];
  if (options.length > 0 && options.map) {
    options.map((option) => {
      if (option.children) {
        option.children.map((option) => ungroupedOptions.push(option));
      }
      else {
        ungroupedOptions.push(option);
      }
    });
    const matchingValue = ungroupedOptions.find((option) => option[valueField] === value);
    if (matchingValue !== undefined)
      return matchingValue[labelField];
  }
  return undefined;
};
/**
 * Filters the options based on the search string.
 * @param options - array of options
 * @param includeDescriptions - determines whether option descriptions are included when filtering options
 * @param searchString - string used to filter the options
 * @param position - whether the search string matches the start of or anywhere in the options
 * @returns filtered array of options
 */
const getFilteredMenuOptions = (options, includeDescriptions, searchString, position, labelField = "label") => options.filter((option) => {
  var _a;
  const label = option[labelField].toLowerCase();
  const description = (_a = option.description) === null || _a === void 0 ? void 0 : _a.toLowerCase();
  const lowerSearchString = searchString.toLowerCase();
  return position === "anywhere"
    ? includeDescriptions
      ? label.includes(lowerSearchString) ||
        (description === null || description === void 0 ? void 0 : description.includes(lowerSearchString))
      : label.includes(lowerSearchString)
    : includeDescriptions
      ? label.startsWith(lowerSearchString) ||
        (description === null || description === void 0 ? void 0 : description.startsWith(lowerSearchString))
      : label.startsWith(lowerSearchString);
});
const deviceSizeMatches = (size) => window.matchMedia(`(max-width: ${size}px)`).matches;
const getCurrentDeviceSize = () => {
  if (deviceSizeMatches(DEVICE_SIZES.S)) {
    return DEVICE_SIZES.S;
  }
  if (deviceSizeMatches(DEVICE_SIZES.M)) {
    return DEVICE_SIZES.M;
  }
  if (deviceSizeMatches(DEVICE_SIZES.L)) {
    return DEVICE_SIZES.L;
  }
  if (deviceSizeMatches(DEVICE_SIZES.XL)) {
    return DEVICE_SIZES.XL;
  }
  //fallback needed as all of above get initialised to 0 in jest tests
  return DEVICE_SIZES.UNDEFINED;
};
const getCssProperty$1 = (cssVar) => getComputedStyle(document.documentElement).getPropertyValue(cssVar);
/**
 * Returns the brightness of the theme colour, calculated by using the theme RGB CSS values by:
 * - Multiplying each RGB value by a set number: https://www.w3.org/TR/AERT/#color-contrast
 * - Adding them together and dividing by 1000
 * This is a similar calculation to its CSS counterpart: "--ic-theme-text"
 * @returns number representing the brightness of the theme colour
 */
const getThemeColorBrightness = () => {
  const themeRed = getCssProperty$1("--ic-theme-primary-r");
  const themeGreen = getCssProperty$1("--ic-theme-primary-g");
  const themeBlue = getCssProperty$1("--ic-theme-primary-b");
  return ((parseInt(themeRed) * 299 +
    parseInt(themeGreen) * 587 +
    parseInt(themeBlue) * 114) /
    1000);
};
/**
 * Returns if dark or light foreground colors should be used for color contrast reasons
 * @returns "dark" or "light"
 */
const getThemeForegroundColor = () => getThemeColorBrightness() > DARK_MODE_THRESHOLD
  ? IcThemeForegroundEnum.Dark
  : IcThemeForegroundEnum.Light;
const getSlot$1 = (element, name) => {
  if (element && element.querySelector) {
    return element.querySelector(`[slot="${name}"]`);
  }
  return null;
};
const slotHasContent = (element, name) => getSlot$1(element, name) !== null;
const getSlotContent$1 = (element, name) => {
  const slot = getSlot$1(element, name);
  if (slot) {
    return getSlotElements$1(slot);
  }
  return null;
};
const getSlotElements$1 = (slot) => {
  const slotContent = slot.firstElementChild;
  if (slotContent !== null) {
    const elements = slotContent.assignedElements
      ? slotContent.assignedElements()
      : slotContent.childNodes;
    return elements.length ? elements : null;
  }
  else {
    //check for single element
    return slot === null ? null : [slot];
  }
};
const getNavItemParentDetails = (el) => {
  let navType = { navType: "", parent: null };
  switch (getParentElementType(el)) {
    case "IC-NAVIGATION-GROUP":
      navType = getNavItemParentDetails(el.parentElement);
      break;
    case "IC-TOP-NAVIGATION":
      navType = { navType: "top", parent: getParentElement(el) };
      break;
    case "IC-SIDE-NAVIGATION":
      navType = { navType: "side", parent: getParentElement(el) };
      break;
    case "IC-PAGE-HEADER":
      navType = { navType: "page-header", parent: null };
      break;
  }
  return navType;
};
const DEVICE_SIZES = {
  XS: Number(getCssProperty$1("--ic-breakpoint-xs").replace("px", "")),
  S: Number(getCssProperty$1("--ic-breakpoint-sm").replace("px", "")),
  M: Number(getCssProperty$1("--ic-breakpoint-md").replace("px", "")),
  L: Number(getCssProperty$1("--ic-breakpoint-lg").replace("px", "")),
  XL: Number(getCssProperty$1("--ic-breakpoint-xl").replace("px", "")),
  UNDEFINED: 1200,
};
const hasValidationStatus = (status, disabled) => {
  return status !== "" && !disabled;
};
const isSlotUsed$1 = (element, slotName) => Array.from(element.children).some((child) => child.getAttribute("slot") === slotName);
// added as a common method to allow detection of gatsby hydration issue, where (camelCase) props are initially undefined & then update
// with a value. Allows a callback function to be executed when this is the case
const onComponentPropUndefinedChange = (oldValue, newValue, callback) => {
  if (oldValue === undefined && newValue !== oldValue) {
    callback();
  }
};
const onComponentRequiredPropUndefined = (props, component) => {
  for (let i = 0; i < props.length; i++) {
    const { prop, propName } = props[i];
    if (prop === null || prop === undefined) {
      console.error(`No ${propName} specified for ${component} component - prop '${propName}' (web components) / '${kebabToCamelCase(propName)}' (react) required`);
    }
  }
};
const kebabToCamelCase = (kebabCase) => {
  kebabCase = kebabCase.toLowerCase();
  const individualWords = kebabCase.split("-");
  let camelCase = individualWords[0];
  for (let i = 1; i < individualWords.length; i++) {
    camelCase +=
      individualWords[i].substring(0, 1).toUpperCase() +
        individualWords[i].substring(1);
  }
  return camelCase;
};
const checkResizeObserver$1 = (callbackFn) => {
  if (typeof window !== "undefined" &&
    typeof window.ResizeObserver !== "undefined") {
    callbackFn();
  }
};
const hex2dec = function (v) {
  return parseInt(v, 16);
};
const hexToRgba = (hex) => {
  let c;
  if (hex.length === 4) {
    c = hex.replace("#", "").split("");
    return {
      r: hex2dec(c[0] + c[0]),
      g: hex2dec(c[1] + c[1]),
      b: hex2dec(c[2] + c[2]),
      a: 1,
    };
  }
  else {
    return {
      r: hex2dec(hex.slice(1, 3)),
      g: hex2dec(hex.slice(3, 5)),
      b: hex2dec(hex.slice(5)),
      a: 1,
    };
  }
};
const rgbaStrToObj = (rgbaStr) => {
  const fourthChar = rgbaStr.slice(3, 4);
  let colorRGBA;
  if (fourthChar.toLowerCase() === "a") {
    colorRGBA = { r: null, g: null, b: null, a: null };
    const rgba = rgbaStr
      .substring(5, rgbaStr.length - 1)
      .replace(/ /g, "")
      .split(",");
    colorRGBA.r = Number(rgba[0]);
    colorRGBA.g = Number(rgba[1]);
    colorRGBA.b = Number(rgba[2]);
    colorRGBA.a = Number(rgba[3]);
  }
  else {
    colorRGBA = { r: null, g: null, b: null, a: 1 };
    const rgb = rgbaStr
      .substring(4, rgbaStr.length - 1)
      .replace(/ /g, "")
      .split(",");
    colorRGBA.r = Number(rgb[0]);
    colorRGBA.g = Number(rgb[1]);
    colorRGBA.b = Number(rgb[2]);
  }
  return colorRGBA;
};
const elementOverflowsX = (element) => element.scrollWidth > element.clientWidth;
/**
 *
 * @param child - The child element
 * @returns string
 */
const getParentElementType = (child) => child.parentElement.tagName;
const getParentElement = (child) => child.parentElement;
const hasClassificationBanner = () => !!document.querySelector("ic-classification-banner:not([inline='true'])");
const getForm = (el) => el.closest("FORM");
const addFormResetListener = (el, callbackFn) => {
  const form = getForm(el);
  if (form !== null) {
    form.addEventListener("reset", callbackFn);
  }
};
const removeFormResetListener = (el, callbackFn) => {
  const form = getForm(el);
  if (form !== null) {
    form.removeEventListener("reset", callbackFn);
  }
};
const pxToRem = (px, base = 16) => `${(1 / base) * parseInt(px)}rem`;
const removeDisabledFalse = (disabled, element) => {
  if (!disabled) {
    element.removeAttribute("disabled");
  }
};

var chevronIcon = `<svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M9.70687 6L8.29688 7.41L12.8769 12L8.29688 16.59L9.70687 18L15.7069 12L9.70687 6Z" fill="currentColor"/>
</svg>
`;

const icAccordionCss = "/*!@html*/html.sc-ic-accordion{line-height:1.15;-webkit-text-size-adjust:100%}/*!@body*/body.sc-ic-accordion{margin:0}/*!@main*/main.sc-ic-accordion{display:block}/*!@h1*/h1.sc-ic-accordion{font-size:2em;margin:0.67em 0}/*!@hr*/hr.sc-ic-accordion{box-sizing:content-box;height:0;overflow:visible}/*!@pre*/pre.sc-ic-accordion{font-family:monospace, monospace;font-size:1em}/*!@a*/a.sc-ic-accordion{background-color:transparent}/*!@abbr[title]*/abbr[title].sc-ic-accordion{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}/*!@b,\nstrong*/b.sc-ic-accordion,strong.sc-ic-accordion{font-weight:bolder}/*!@code,\nkbd,\nsamp*/code.sc-ic-accordion,kbd.sc-ic-accordion,samp.sc-ic-accordion{font-family:monospace, monospace;font-size:1em}/*!@small*/small.sc-ic-accordion{font-size:80%}/*!@sub,\nsup*/sub.sc-ic-accordion,sup.sc-ic-accordion{font-size:75%;line-height:0;position:relative;vertical-align:baseline}/*!@sub*/sub.sc-ic-accordion{bottom:-0.25em}/*!@sup*/sup.sc-ic-accordion{top:-0.5em}/*!@img*/img.sc-ic-accordion{border-style:none}/*!@button,\ninput,\noptgroup,\nselect,\ntextarea*/button.sc-ic-accordion,input.sc-ic-accordion,optgroup.sc-ic-accordion,select.sc-ic-accordion,textarea.sc-ic-accordion{font-family:inherit;font-size:100%;line-height:1.15;margin:0}/*!@button,\ninput*/button.sc-ic-accordion,input.sc-ic-accordion{overflow:visible}/*!@button,\nselect*/button.sc-ic-accordion,select.sc-ic-accordion{text-transform:none}/*!@button,\n[type=\"button\"],\n[type=\"reset\"],\n[type=\"submit\"]*/button.sc-ic-accordion,[type=\"button\"].sc-ic-accordion,[type=\"reset\"].sc-ic-accordion,[type=\"submit\"].sc-ic-accordion{-webkit-appearance:button}/*!@button::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner*/button.sc-ic-accordion::-moz-focus-inner,[type=\"button\"].sc-ic-accordion::-moz-focus-inner,[type=\"reset\"].sc-ic-accordion::-moz-focus-inner,[type=\"submit\"].sc-ic-accordion::-moz-focus-inner{border-style:none;padding:0}/*!@button:-moz-focusring,\n[type=\"button\"]:-moz-focusring,\n[type=\"reset\"]:-moz-focusring,\n[type=\"submit\"]:-moz-focusring*/button.sc-ic-accordion:-moz-focusring,[type=\"button\"].sc-ic-accordion:-moz-focusring,[type=\"reset\"].sc-ic-accordion:-moz-focusring,[type=\"submit\"].sc-ic-accordion:-moz-focusring{outline:1px dotted ButtonText}/*!@fieldset*/fieldset.sc-ic-accordion{padding:0.35em 0.75em 0.625em}/*!@legend*/legend.sc-ic-accordion{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}/*!@progress*/progress.sc-ic-accordion{vertical-align:baseline}/*!@textarea*/textarea.sc-ic-accordion{overflow:auto}/*!@[type=\"checkbox\"],\n[type=\"radio\"]*/[type=\"checkbox\"].sc-ic-accordion,[type=\"radio\"].sc-ic-accordion{box-sizing:border-box;padding:0}/*!@[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button*/[type=\"number\"].sc-ic-accordion::-webkit-inner-spin-button,[type=\"number\"].sc-ic-accordion::-webkit-outer-spin-button{height:auto}/*!@[type=\"search\"]*/[type=\"search\"].sc-ic-accordion{-webkit-appearance:textfield;outline-offset:-2px}/*!@[type=\"search\"]::-webkit-search-decoration*/[type=\"search\"].sc-ic-accordion::-webkit-search-decoration{-webkit-appearance:none}/*!@::-webkit-file-upload-button*/.sc-ic-accordion::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}/*!@details*/details.sc-ic-accordion{display:block}/*!@summary*/summary.sc-ic-accordion{display:list-item}/*!@template*/template.sc-ic-accordion{display:none}/*!@[hidden]*/[hidden].sc-ic-accordion{display:none}/*!@html,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo*/html.sc-ic-accordion,body.sc-ic-accordion,div.sc-ic-accordion,span.sc-ic-accordion,applet.sc-ic-accordion,object.sc-ic-accordion,iframe.sc-ic-accordion,h1.sc-ic-accordion,h2.sc-ic-accordion,h3.sc-ic-accordion,h4.sc-ic-accordion,h5.sc-ic-accordion,h6.sc-ic-accordion,p.sc-ic-accordion,blockquote.sc-ic-accordion,pre.sc-ic-accordion,a.sc-ic-accordion,abbr.sc-ic-accordion,acronym.sc-ic-accordion,address.sc-ic-accordion,big.sc-ic-accordion,cite.sc-ic-accordion,code.sc-ic-accordion,del.sc-ic-accordion,dfn.sc-ic-accordion,em.sc-ic-accordion,img.sc-ic-accordion,ins.sc-ic-accordion,kbd.sc-ic-accordion,q.sc-ic-accordion,s.sc-ic-accordion,samp.sc-ic-accordion,small.sc-ic-accordion,strike.sc-ic-accordion,strong.sc-ic-accordion,sub.sc-ic-accordion,sup.sc-ic-accordion,tt.sc-ic-accordion,var.sc-ic-accordion,b.sc-ic-accordion,u.sc-ic-accordion,i.sc-ic-accordion,center.sc-ic-accordion,dl.sc-ic-accordion,dt.sc-ic-accordion,dd.sc-ic-accordion,ol.sc-ic-accordion,ul.sc-ic-accordion,li.sc-ic-accordion,fieldset.sc-ic-accordion,form.sc-ic-accordion,label.sc-ic-accordion,legend.sc-ic-accordion,table.sc-ic-accordion,caption.sc-ic-accordion,tbody.sc-ic-accordion,tfoot.sc-ic-accordion,thead.sc-ic-accordion,tr.sc-ic-accordion,th.sc-ic-accordion,td.sc-ic-accordion,article.sc-ic-accordion,aside.sc-ic-accordion,canvas.sc-ic-accordion,details.sc-ic-accordion,embed.sc-ic-accordion,figure.sc-ic-accordion,figcaption.sc-ic-accordion,footer.sc-ic-accordion,header.sc-ic-accordion,hgroup.sc-ic-accordion,menu.sc-ic-accordion,nav.sc-ic-accordion,output.sc-ic-accordion,ruby.sc-ic-accordion,section.sc-ic-accordion,summary.sc-ic-accordion,time.sc-ic-accordion,mark.sc-ic-accordion,audio.sc-ic-accordion,video.sc-ic-accordion{margin:0;padding:0;border:0;font-size:100%;font-style:inherit;vertical-align:baseline}/*!@:host*/.sc-ic-accordion-h{display:block;border-bottom:var(--ic-border-default)}/*!@:host(.light) ic-typography,\n:host(.light) .expanded-content,\n:host(.light) .icon-container,\n:host(.light) .expand-chevron*/.light.sc-ic-accordion-h ic-typography.sc-ic-accordion,.light.sc-ic-accordion-h .expanded-content.sc-ic-accordion,.light.sc-ic-accordion-h .icon-container.sc-ic-accordion,.light.sc-ic-accordion-h .expand-chevron.sc-ic-accordion{color:var(--ic-architectural-white)}/*!@:host(.disabled) ic-typography,\n:host(.disabled) .icon-container,\n:host(.disabled) .expand-chevron*/.disabled.sc-ic-accordion-h ic-typography.sc-ic-accordion,.disabled.sc-ic-accordion-h .icon-container.sc-ic-accordion,.disabled.sc-ic-accordion-h .expand-chevron.sc-ic-accordion{color:var(--ic-architectural-500)}/*!@.section-button.small*/.section-button.small.sc-ic-accordion{padding:var(--ic-space-xxs) var(--ic-space-xs)}/*!@.section-button.large*/.section-button.large.sc-ic-accordion{padding:var(--ic-space-sm) var(--ic-space-xs)}/*!@:host(:first-of-type)*/.sc-ic-accordion-h:first-of-type{border-top:var(--ic-border-default)}/*!@:focus*/.sc-ic-accordion:focus{outline:none}/*!@.section-button*/.section-button.sc-ic-accordion{background-color:transparent;display:flex;align-items:center;width:100%;padding:var(--ic-space-xs);font-weight:var(--ic-font-weight-bold);border:none}/*!@.section-header*/.section-header.sc-ic-accordion{text-align:left;flex:1 0}/*!@button:hover:enabled*/button.sc-ic-accordion:hover:enabled{background-color:var(--ic-action-dark-bg-hover);cursor:pointer}/*!@button:active*/button.sc-ic-accordion:active{background-color:var(--ic-action-dark-bg-active)}/*!@button:focus*/button.sc-ic-accordion:focus{box-shadow:var(--ic-border-focus);border-radius:var(--ic-border-radius);transition:var(--ic-transition-duration-fast)}/*!@button:disabled*/button.sc-ic-accordion:disabled{pointer-events:none}/*!@.icon-container*/.icon-container.sc-ic-accordion{margin:0 var(--ic-space-xs) 0 0;display:flex;align-items:center;width:var(--ic-space-lg);height:var(--ic-space-lg)}/*!@::slotted(svg)*/.sc-ic-accordion-s>svg{width:var(--ic-space-md);height:var(--ic-space-md)}/*!@.expand-chevron*/.expand-chevron.sc-ic-accordion{width:var(--ic-space-lg);height:var(--ic-space-lg);margin-left:calc(var(--ic-space-xl) + var(--ic-space-xs));transform:rotate(90deg);justify-self:end}/*!@.content-expanded-chevron*/.content-expanded-chevron.sc-ic-accordion{transform:rotate(-90deg)}/*!@.expanded-content*/.expanded-content.sc-ic-accordion{height:0;overflow:hidden;display:flex;flex-direction:column;visibility:var(--ic-expanded-content-visiblity, hidden)}/*!@.expanded-content-inner*/.expanded-content-inner.sc-ic-accordion{padding:var(--ic-space-xs)}/*!@.expanded-content-opened*/.expanded-content-opened.sc-ic-accordion{overflow:visible}";

let accordionIds = 0;
/**
 * @slot heading - Content is placed as the accordion heading.
 * @slot icon - Content is placed to the left of the heading.
 */
class Accordion {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.accordionClicked = createEvent(this, "accordionClicked", 7);
    this.accordionId = `ic-accordion-${accordionIds++}`;
    this.CONTENT_VISIBILITY_PROPERTY = "--ic-expanded-content-visiblity";
    this.toggleExpanded = () => {
      this.expanded = !this.expanded;
      this.accordionClicked.emit({ id: this.accordionId });
    };
    // Set accordion animation
    this.setAccordionAnimation = (el, duration, property, delay) => {
      el.style.transitionDuration = `${duration}ms`;
      el.style.transitionProperty = property;
      el.style.transitionDelay = delay;
    };
    this.setExpandedContentStyle = (ev, expandedContent) => {
      if (ev.propertyName === "height" && expandedContent.clientHeight > 0) {
        expandedContent.classList.add("expanded-content-opened");
        expandedContent.style.height = "auto";
      }
    };
    this.hideExpandedContent = (ev, expandedContent) => {
      if (ev.propertyName === "height" && expandedContent.clientHeight === 0) {
        expandedContent.style.setProperty(this.CONTENT_VISIBILITY_PROPERTY, "hidden");
      }
    };
    this.animateExpandedContent = () => {
      const elementHeight = this.expandedContentEl.scrollHeight;
      if (elementHeight > 0 && this.expanded) {
        this.expandedContentEl.style.setProperty(this.CONTENT_VISIBILITY_PROPERTY, "visible");
        this.expandedContentEl.style.height = `${elementHeight}px`;
        this.setAccordionAnimation(this.expandedContentEl, "300", "height", "ease-out");
        this.expandedContentEl.addEventListener("transitionend", (e) => {
          this.setExpandedContentStyle(e, this.expandedContentEl);
        });
      }
      else if (!this.expanded) {
        this.expandedContentEl.style.height = `${this.expandedContentEl.scrollHeight}px`;
        if (this.expandedContentEl.scrollHeight > 0 && !this.expanded) {
          this.expandedContentEl.style.height = "0";
          this.setAccordionAnimation(this.expandedContentEl, "300", "height", "ease-in");
          this.expandedContentEl.classList.remove("expanded-content-opened");
        }
        this.expandedContentEl.addEventListener("transitionend", (e) => {
          this.hideExpandedContent(e, this.expandedContentEl);
        });
      }
    };
    this.appearance = "default";
    this.disabled = false;
    this.expanded = false;
    this.heading = "";
    this.message = "";
    this.size = "default";
  }
  // Every time expanded is set via toggleExpanded or accordionGroup, animate to open or close
  handleExpandedWatch() {
    this.animateExpandedContent();
  }
  /**
   * Sets focus on accordion heading.
   */
  async setFocus() {
    if (this.accordionBtnHeading) {
      this.accordionBtnHeading.focus();
    }
  }
  disconnectedCallback() {
    if (this.expandedContentEl) {
      this.expandedContentEl.removeEventListener("transitionend", (e) => this.setExpandedContentStyle(e, this.expandedContentEl), true);
      this.expandedContentEl.removeEventListener("transitionend", (e) => this.hideExpandedContent(e, this.expandedContentEl), true);
    }
  }
  componentDidLoad() {
    // So accordion opens by default if expanded set to true
    if (this.expanded) {
      this.expandedContentEl.style.height = "auto";
      this.expandedContentEl.style.setProperty(this.CONTENT_VISIBILITY_PROPERTY, "visible");
    }
  }
  render() {
    const { appearance, size, disabled, expanded } = this;
    return (hAsync(Host, { id: this.accordionId, class: {
        [`${appearance}`]: true,
        ["disabled"]: disabled,
      }, "aria-disabled": disabled ? "true" : "false" }, hAsync("button", { ref: (el) => (this.accordionBtnHeading = el), id: `${this.accordionId}-button`, disabled: disabled, tabindex: disabled ? -1 : 0, class: {
        [`${size}`]: true,
        ["section-button"]: true,
        ["section-button-open"]: expanded && !disabled,
      }, "aria-expanded": `${expanded}`, "aria-controls": "expanded-content-area", onClick: this.toggleExpanded }, isSlotUsed$1(this.el, "icon") && (hAsync("div", { class: "icon-container" }, hAsync("slot", { name: "icon" }))), hAsync("ic-typography", { variant: "subtitle-large", class: "section-header" }, isSlotUsed$1(this.el, "heading") ? (hAsync("slot", { name: "heading" })) : (this.heading)), hAsync("span", { class: {
        ["expand-chevron"]: true,
        ["content-expanded-chevron"]: expanded && !disabled,
      }, "aria-hidden": "true", innerHTML: chevronIcon })), hAsync("div", { class: {
        ["expanded-content"]: true,
      }, "aria-labelledby": `${this.accordionId}-button`, role: "region", "aria-hidden": `${!expanded}`, id: "expanded-content-area", ref: (el) => (this.expandedContentEl = el) }, hAsync("div", { class: "expanded-content-inner" }, hAsync("slot", null)))));
  }
  get el() { return getElement(this); }
  static get watchers() { return {
    "expanded": ["handleExpandedWatch"]
  }; }
  static get style() { return icAccordionCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "ic-accordion",
    "$members$": {
      "appearance": [1],
      "disabled": [4],
      "expanded": [1028],
      "heading": [1],
      "message": [1],
      "size": [1],
      "setFocus": [64]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": []
  }; }
}

const icAccordionGroupCss = "/*!@html*/html.sc-ic-accordion-group{line-height:1.15;-webkit-text-size-adjust:100%}/*!@body*/body.sc-ic-accordion-group{margin:0}/*!@main*/main.sc-ic-accordion-group{display:block}/*!@h1*/h1.sc-ic-accordion-group{font-size:2em;margin:0.67em 0}/*!@hr*/hr.sc-ic-accordion-group{box-sizing:content-box;height:0;overflow:visible}/*!@pre*/pre.sc-ic-accordion-group{font-family:monospace, monospace;font-size:1em}/*!@a*/a.sc-ic-accordion-group{background-color:transparent}/*!@abbr[title]*/abbr[title].sc-ic-accordion-group{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}/*!@b,\nstrong*/b.sc-ic-accordion-group,strong.sc-ic-accordion-group{font-weight:bolder}/*!@code,\nkbd,\nsamp*/code.sc-ic-accordion-group,kbd.sc-ic-accordion-group,samp.sc-ic-accordion-group{font-family:monospace, monospace;font-size:1em}/*!@small*/small.sc-ic-accordion-group{font-size:80%}/*!@sub,\nsup*/sub.sc-ic-accordion-group,sup.sc-ic-accordion-group{font-size:75%;line-height:0;position:relative;vertical-align:baseline}/*!@sub*/sub.sc-ic-accordion-group{bottom:-0.25em}/*!@sup*/sup.sc-ic-accordion-group{top:-0.5em}/*!@img*/img.sc-ic-accordion-group{border-style:none}/*!@button,\ninput,\noptgroup,\nselect,\ntextarea*/button.sc-ic-accordion-group,input.sc-ic-accordion-group,optgroup.sc-ic-accordion-group,select.sc-ic-accordion-group,textarea.sc-ic-accordion-group{font-family:inherit;font-size:100%;line-height:1.15;margin:0}/*!@button,\ninput*/button.sc-ic-accordion-group,input.sc-ic-accordion-group{overflow:visible}/*!@button,\nselect*/button.sc-ic-accordion-group,select.sc-ic-accordion-group{text-transform:none}/*!@button,\n[type=\"button\"],\n[type=\"reset\"],\n[type=\"submit\"]*/button.sc-ic-accordion-group,[type=\"button\"].sc-ic-accordion-group,[type=\"reset\"].sc-ic-accordion-group,[type=\"submit\"].sc-ic-accordion-group{-webkit-appearance:button}/*!@button::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner*/button.sc-ic-accordion-group::-moz-focus-inner,[type=\"button\"].sc-ic-accordion-group::-moz-focus-inner,[type=\"reset\"].sc-ic-accordion-group::-moz-focus-inner,[type=\"submit\"].sc-ic-accordion-group::-moz-focus-inner{border-style:none;padding:0}/*!@button:-moz-focusring,\n[type=\"button\"]:-moz-focusring,\n[type=\"reset\"]:-moz-focusring,\n[type=\"submit\"]:-moz-focusring*/button.sc-ic-accordion-group:-moz-focusring,[type=\"button\"].sc-ic-accordion-group:-moz-focusring,[type=\"reset\"].sc-ic-accordion-group:-moz-focusring,[type=\"submit\"].sc-ic-accordion-group:-moz-focusring{outline:1px dotted ButtonText}/*!@fieldset*/fieldset.sc-ic-accordion-group{padding:0.35em 0.75em 0.625em}/*!@legend*/legend.sc-ic-accordion-group{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}/*!@progress*/progress.sc-ic-accordion-group{vertical-align:baseline}/*!@textarea*/textarea.sc-ic-accordion-group{overflow:auto}/*!@[type=\"checkbox\"],\n[type=\"radio\"]*/[type=\"checkbox\"].sc-ic-accordion-group,[type=\"radio\"].sc-ic-accordion-group{box-sizing:border-box;padding:0}/*!@[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button*/[type=\"number\"].sc-ic-accordion-group::-webkit-inner-spin-button,[type=\"number\"].sc-ic-accordion-group::-webkit-outer-spin-button{height:auto}/*!@[type=\"search\"]*/[type=\"search\"].sc-ic-accordion-group{-webkit-appearance:textfield;outline-offset:-2px}/*!@[type=\"search\"]::-webkit-search-decoration*/[type=\"search\"].sc-ic-accordion-group::-webkit-search-decoration{-webkit-appearance:none}/*!@::-webkit-file-upload-button*/.sc-ic-accordion-group::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}/*!@details*/details.sc-ic-accordion-group{display:block}/*!@summary*/summary.sc-ic-accordion-group{display:list-item}/*!@template*/template.sc-ic-accordion-group{display:none}/*!@[hidden]*/[hidden].sc-ic-accordion-group{display:none}/*!@html,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo*/html.sc-ic-accordion-group,body.sc-ic-accordion-group,div.sc-ic-accordion-group,span.sc-ic-accordion-group,applet.sc-ic-accordion-group,object.sc-ic-accordion-group,iframe.sc-ic-accordion-group,h1.sc-ic-accordion-group,h2.sc-ic-accordion-group,h3.sc-ic-accordion-group,h4.sc-ic-accordion-group,h5.sc-ic-accordion-group,h6.sc-ic-accordion-group,p.sc-ic-accordion-group,blockquote.sc-ic-accordion-group,pre.sc-ic-accordion-group,a.sc-ic-accordion-group,abbr.sc-ic-accordion-group,acronym.sc-ic-accordion-group,address.sc-ic-accordion-group,big.sc-ic-accordion-group,cite.sc-ic-accordion-group,code.sc-ic-accordion-group,del.sc-ic-accordion-group,dfn.sc-ic-accordion-group,em.sc-ic-accordion-group,img.sc-ic-accordion-group,ins.sc-ic-accordion-group,kbd.sc-ic-accordion-group,q.sc-ic-accordion-group,s.sc-ic-accordion-group,samp.sc-ic-accordion-group,small.sc-ic-accordion-group,strike.sc-ic-accordion-group,strong.sc-ic-accordion-group,sub.sc-ic-accordion-group,sup.sc-ic-accordion-group,tt.sc-ic-accordion-group,var.sc-ic-accordion-group,b.sc-ic-accordion-group,u.sc-ic-accordion-group,i.sc-ic-accordion-group,center.sc-ic-accordion-group,dl.sc-ic-accordion-group,dt.sc-ic-accordion-group,dd.sc-ic-accordion-group,ol.sc-ic-accordion-group,ul.sc-ic-accordion-group,li.sc-ic-accordion-group,fieldset.sc-ic-accordion-group,form.sc-ic-accordion-group,label.sc-ic-accordion-group,legend.sc-ic-accordion-group,table.sc-ic-accordion-group,caption.sc-ic-accordion-group,tbody.sc-ic-accordion-group,tfoot.sc-ic-accordion-group,thead.sc-ic-accordion-group,tr.sc-ic-accordion-group,th.sc-ic-accordion-group,td.sc-ic-accordion-group,article.sc-ic-accordion-group,aside.sc-ic-accordion-group,canvas.sc-ic-accordion-group,details.sc-ic-accordion-group,embed.sc-ic-accordion-group,figure.sc-ic-accordion-group,figcaption.sc-ic-accordion-group,footer.sc-ic-accordion-group,header.sc-ic-accordion-group,hgroup.sc-ic-accordion-group,menu.sc-ic-accordion-group,nav.sc-ic-accordion-group,output.sc-ic-accordion-group,ruby.sc-ic-accordion-group,section.sc-ic-accordion-group,summary.sc-ic-accordion-group,time.sc-ic-accordion-group,mark.sc-ic-accordion-group,audio.sc-ic-accordion-group,video.sc-ic-accordion-group{margin:0;padding:0;border:0;font-size:100%;font-style:inherit;vertical-align:baseline}/*!@.group-title-container*/.group-title-container.sc-ic-accordion-group{padding:var(--ic-space-xs);display:flex;justify-content:space-between;align-items:center}/*!@:host(.small) .group-title-container*/.small.sc-ic-accordion-group-h .group-title-container.sc-ic-accordion-group{padding:var(--ic-space-xxs) var(--ic-space-xs)}/*!@:host(.large) .group-title-container*/.large.sc-ic-accordion-group-h .group-title-container.sc-ic-accordion-group{padding:var(--ic-space-sm) var(--ic-space-xs)}/*!@:host(.light)*/.light.sc-ic-accordion-group-h{color:var(--ic-architectural-white)}/*!@:host(.accordion-group.dark) ::slotted(ic-accordion)*/.sc-ic-accordion-group-h.accordion-group.dark .sc-ic-accordion-group-s>ic-accordion{color:var(--ic-architectural-white)}";

let accordionGroupIds = 0;
class AccordionGroup {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.accordionGroupId = `ic-accordion-group-${accordionGroupIds++}`;
    this.handleExpanded = () => {
      if (this.areAllAccordionsOpen) {
        this.expanded = false;
        this.accordions.forEach((acc) => {
          acc.expanded = this.expanded;
        });
      }
      else {
        this.expanded = true;
        this.accordions.forEach((acc) => {
          acc.expanded = this.expanded;
        });
      }
      this.setExpandedToAreAllAccordionsOpen();
    };
    this.linkAccordions = () => {
      this.accordions.forEach((accordion) => {
        accordion.setAttribute("context-id", this.accordionGroupId);
      });
    };
    this.setExpandedToAreAllAccordionsOpen = () => {
      this.areAllAccordionsOpen = this.accordions.every((accordion) => !!accordion.expanded);
    };
    this.accordions = undefined;
    this.areAllAccordionsOpen = undefined;
    this.appearance = "default";
    this.expanded = false;
    this.groupTitle = "";
    this.singleExpansion = false;
    this.size = "default";
  }
  componentDidLoad() {
    const accordionDirectChildren = this.el.children;
    this.accordions = Array.from(accordionDirectChildren).filter((child) => child.tagName === "IC-ACCORDION");
    this.linkAccordions();
    this.accordions.forEach((acc) => {
      acc.appearance = this.appearance;
    });
    this.accordions.forEach((acc) => {
      acc.size = this.size;
    });
    if (this.expanded) {
      this.accordions.forEach((acc) => {
        acc.expanded = true;
      });
      this.setExpandedToAreAllAccordionsOpen();
    }
    else {
      this.setExpandedToAreAllAccordionsOpen();
      this.expanded = this.areAllAccordionsOpen;
    }
  }
  handleAccordionClicked(event) {
    if (!this.singleExpansion) {
      // 'See all' should be visible until all accordions are open, then 'Hide all' should be visible
      this.setExpandedToAreAllAccordionsOpen();
    }
    else {
      this.accordions.forEach((acc) => {
        if (acc.expanded && event.detail.id !== acc.id) {
          acc.expanded = false;
        }
      });
    }
  }
  render() {
    const { appearance, size, groupTitle, singleExpansion } = this;
    return (hAsync(Host, { "context-id": this.accordionGroupId, class: {
        [`${appearance}`]: true,
        [`${size}`]: true,
        ["accordion-group"]: true,
      } }, hAsync("div", { class: "group-title-container" }, hAsync("ic-typography", { variant: "h4" }, hAsync("h3", null, groupTitle)), !singleExpansion && (hAsync("ic-button", { appearance: appearance === "light" ? "light" : "default", onClick: this.handleExpanded, variant: "tertiary" }, !this.areAllAccordionsOpen ? "See all" : "Hide all"))), hAsync("slot", null)));
  }
  static get delegatesFocus() { return true; }
  get el() { return getElement(this); }
  static get style() { return icAccordionGroupCss; }
  static get cmpMeta() { return {
    "$flags$": 25,
    "$tagName$": "ic-accordion-group",
    "$members$": {
      "appearance": [1],
      "expanded": [1028],
      "groupTitle": [1, "group-title"],
      "singleExpansion": [4, "single-expansion"],
      "size": [1],
      "accordions": [32],
      "areAllAccordionsOpen": [32]
    },
    "$listeners$": [[0, "accordionClicked", "handleAccordionClicked"]],
    "$lazyBundleId$": "-",
    "$attrsToReflect$": []
  }; }
}

var closeIcon = `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
    <path d="M0 0h24v24H0z" fill="none"/>
    <path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"/>
    <title>close icon</title>
</svg>
`;

const icAlertCss = "/*!@html*/html.sc-ic-alert{line-height:1.15;-webkit-text-size-adjust:100%}/*!@body*/body.sc-ic-alert{margin:0}/*!@main*/main.sc-ic-alert{display:block}/*!@h1*/h1.sc-ic-alert{font-size:2em;margin:0.67em 0}/*!@hr*/hr.sc-ic-alert{box-sizing:content-box;height:0;overflow:visible}/*!@pre*/pre.sc-ic-alert{font-family:monospace, monospace;font-size:1em}/*!@a*/a.sc-ic-alert{background-color:transparent}/*!@abbr[title]*/abbr[title].sc-ic-alert{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}/*!@b,\nstrong*/b.sc-ic-alert,strong.sc-ic-alert{font-weight:bolder}/*!@code,\nkbd,\nsamp*/code.sc-ic-alert,kbd.sc-ic-alert,samp.sc-ic-alert{font-family:monospace, monospace;font-size:1em}/*!@small*/small.sc-ic-alert{font-size:80%}/*!@sub,\nsup*/sub.sc-ic-alert,sup.sc-ic-alert{font-size:75%;line-height:0;position:relative;vertical-align:baseline}/*!@sub*/sub.sc-ic-alert{bottom:-0.25em}/*!@sup*/sup.sc-ic-alert{top:-0.5em}/*!@img*/img.sc-ic-alert{border-style:none}/*!@button,\ninput,\noptgroup,\nselect,\ntextarea*/button.sc-ic-alert,input.sc-ic-alert,optgroup.sc-ic-alert,select.sc-ic-alert,textarea.sc-ic-alert{font-family:inherit;font-size:100%;line-height:1.15;margin:0}/*!@button,\ninput*/button.sc-ic-alert,input.sc-ic-alert{overflow:visible}/*!@button,\nselect*/button.sc-ic-alert,select.sc-ic-alert{text-transform:none}/*!@button,\n[type=\"button\"],\n[type=\"reset\"],\n[type=\"submit\"]*/button.sc-ic-alert,[type=\"button\"].sc-ic-alert,[type=\"reset\"].sc-ic-alert,[type=\"submit\"].sc-ic-alert{-webkit-appearance:button}/*!@button::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner*/button.sc-ic-alert::-moz-focus-inner,[type=\"button\"].sc-ic-alert::-moz-focus-inner,[type=\"reset\"].sc-ic-alert::-moz-focus-inner,[type=\"submit\"].sc-ic-alert::-moz-focus-inner{border-style:none;padding:0}/*!@button:-moz-focusring,\n[type=\"button\"]:-moz-focusring,\n[type=\"reset\"]:-moz-focusring,\n[type=\"submit\"]:-moz-focusring*/button.sc-ic-alert:-moz-focusring,[type=\"button\"].sc-ic-alert:-moz-focusring,[type=\"reset\"].sc-ic-alert:-moz-focusring,[type=\"submit\"].sc-ic-alert:-moz-focusring{outline:1px dotted ButtonText}/*!@fieldset*/fieldset.sc-ic-alert{padding:0.35em 0.75em 0.625em}/*!@legend*/legend.sc-ic-alert{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}/*!@progress*/progress.sc-ic-alert{vertical-align:baseline}/*!@textarea*/textarea.sc-ic-alert{overflow:auto}/*!@[type=\"checkbox\"],\n[type=\"radio\"]*/[type=\"checkbox\"].sc-ic-alert,[type=\"radio\"].sc-ic-alert{box-sizing:border-box;padding:0}/*!@[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button*/[type=\"number\"].sc-ic-alert::-webkit-inner-spin-button,[type=\"number\"].sc-ic-alert::-webkit-outer-spin-button{height:auto}/*!@[type=\"search\"]*/[type=\"search\"].sc-ic-alert{-webkit-appearance:textfield;outline-offset:-2px}/*!@[type=\"search\"]::-webkit-search-decoration*/[type=\"search\"].sc-ic-alert::-webkit-search-decoration{-webkit-appearance:none}/*!@::-webkit-file-upload-button*/.sc-ic-alert::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}/*!@details*/details.sc-ic-alert{display:block}/*!@summary*/summary.sc-ic-alert{display:list-item}/*!@template*/template.sc-ic-alert{display:none}/*!@[hidden]*/[hidden].sc-ic-alert{display:none}/*!@html,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo*/html.sc-ic-alert,body.sc-ic-alert,div.sc-ic-alert,span.sc-ic-alert,applet.sc-ic-alert,object.sc-ic-alert,iframe.sc-ic-alert,h1.sc-ic-alert,h2.sc-ic-alert,h3.sc-ic-alert,h4.sc-ic-alert,h5.sc-ic-alert,h6.sc-ic-alert,p.sc-ic-alert,blockquote.sc-ic-alert,pre.sc-ic-alert,a.sc-ic-alert,abbr.sc-ic-alert,acronym.sc-ic-alert,address.sc-ic-alert,big.sc-ic-alert,cite.sc-ic-alert,code.sc-ic-alert,del.sc-ic-alert,dfn.sc-ic-alert,em.sc-ic-alert,img.sc-ic-alert,ins.sc-ic-alert,kbd.sc-ic-alert,q.sc-ic-alert,s.sc-ic-alert,samp.sc-ic-alert,small.sc-ic-alert,strike.sc-ic-alert,strong.sc-ic-alert,sub.sc-ic-alert,sup.sc-ic-alert,tt.sc-ic-alert,var.sc-ic-alert,b.sc-ic-alert,u.sc-ic-alert,i.sc-ic-alert,center.sc-ic-alert,dl.sc-ic-alert,dt.sc-ic-alert,dd.sc-ic-alert,ol.sc-ic-alert,ul.sc-ic-alert,li.sc-ic-alert,fieldset.sc-ic-alert,form.sc-ic-alert,label.sc-ic-alert,legend.sc-ic-alert,table.sc-ic-alert,caption.sc-ic-alert,tbody.sc-ic-alert,tfoot.sc-ic-alert,thead.sc-ic-alert,tr.sc-ic-alert,th.sc-ic-alert,td.sc-ic-alert,article.sc-ic-alert,aside.sc-ic-alert,canvas.sc-ic-alert,details.sc-ic-alert,embed.sc-ic-alert,figure.sc-ic-alert,figcaption.sc-ic-alert,footer.sc-ic-alert,header.sc-ic-alert,hgroup.sc-ic-alert,menu.sc-ic-alert,nav.sc-ic-alert,output.sc-ic-alert,ruby.sc-ic-alert,section.sc-ic-alert,summary.sc-ic-alert,time.sc-ic-alert,mark.sc-ic-alert,audio.sc-ic-alert,video.sc-ic-alert{margin:0;padding:0;border:0;font-size:100%;font-style:inherit;vertical-align:baseline}/*!@:host*/.sc-ic-alert-h{display:block}/*!@.container*/.container.sc-ic-alert{min-height:3.5rem;border-radius:var(--ic-border-radius);position:relative;display:flex;align-items:center}/*!@.container-neutral*/.container-neutral.sc-ic-alert{background-color:var(--ic-status-unknown-light)}/*!@.container-info*/.container-info.sc-ic-alert{background-color:var(--ic-status-info-light)}/*!@.container-warning*/.container-warning.sc-ic-alert{background-color:var(--ic-status-warning-light)}/*!@.container-error*/.container-error.sc-ic-alert{background-color:var(--ic-status-error-light)}/*!@.container-success*/.container-success.sc-ic-alert{background-color:var(--ic-status-success-light)}/*!@.alert-icon-container*/.alert-icon-container.sc-ic-alert{height:100%;display:flex;align-items:center}/*!@.divider*/.divider.sc-ic-alert{height:100%;width:var(--ic-space-xs);border-radius:var(--ic-space-xxxs) 0 0 var(--ic-space-xxxs);position:absolute}/*!@.divider-neutral*/.divider-neutral.sc-ic-alert{background-color:var(--ic-status-unknown)}/*!@.divider-info*/.divider-info.sc-ic-alert{background-color:var(--ic-status-info)}/*!@.divider-warning*/.divider-warning.sc-ic-alert{background-color:var(--ic-status-warning)}/*!@.divider-error*/.divider-error.sc-ic-alert{background-color:var(--ic-status-error)}/*!@.divider-success*/.divider-success.sc-ic-alert{background-color:var(--ic-status-success)}/*!@.alert-icon*/.alert-icon.sc-ic-alert{height:var(--ic-space-lg);width:1.375rem;margin-left:1.125rem}/*!@.alert-icon > svg*/.alert-icon.sc-ic-alert>svg.sc-ic-alert{height:var(--ic-space-lg);width:var(--ic-space-lg);display:inline-block}/*!@.icon-neutral > svg*/.icon-neutral.sc-ic-alert>svg.sc-ic-alert{fill:var(--ic-status-unknown)}/*!@:host([variant=\"info\"]) .alert-icon svg*/[variant=\"info\"].sc-ic-alert-h .alert-icon.sc-ic-alert svg.sc-ic-alert{fill:var(--ic-status-info)}/*!@:host([variant=\"warning\"]) .alert-icon svg*/[variant=\"warning\"].sc-ic-alert-h .alert-icon.sc-ic-alert svg.sc-ic-alert{fill:var(--ic-status-warning)}/*!@:host([variant=\"error\"]) .alert-icon svg*/[variant=\"error\"].sc-ic-alert-h .alert-icon.sc-ic-alert svg.sc-ic-alert{fill:var(--ic-status-error)}/*!@:host([variant=\"success\"]) .alert-icon svg*/[variant=\"success\"].sc-ic-alert-h .alert-icon.sc-ic-alert svg.sc-ic-alert{fill:var(--ic-status-success)}/*!@.alert-content*/.alert-content.sc-ic-alert{display:flex;align-items:center;margin-left:0.625rem;width:100%}/*!@.alert-message*/.alert-message.sc-ic-alert{display:flex;align-items:center;padding:var(--ic-space-xs) var(--ic-space-xs) var(--ic-space-xs) 0;flex:1}/*!@.alert-message-title-above*/.alert-message-title-above.sc-ic-alert{display:inline;font-size:0}/*!@.alert-title*/.alert-title.sc-ic-alert{margin-right:var(--ic-space-xs)}/*!@.alert-title-above*/.alert-title-above.sc-ic-alert{white-space:normal}/*!@.alert-action-container*/.alert-action-container.sc-ic-alert{margin-right:var(--ic-space-xs);display:flex;align-items:center}/*!@.dismiss-icon*/.dismiss-icon.sc-ic-alert{margin-right:var(--ic-space-xxxs);margin-left:-0.375rem;padding:0.375rem;border:none;border-radius:50%;background-color:inherit;display:flex;align-items:center;justify-content:center}/*!@.dismiss-icon:hover*/.dismiss-icon.sc-ic-alert:hover{cursor:pointer}@media (max-width: 628px){/*!@.alert-content*/.alert-content.sc-ic-alert{display:flex;flex-direction:column;align-items:flex-start}/*!@.alert-message*/.alert-message.sc-ic-alert{display:flex;flex-direction:column;align-items:flex-start}/*!@.alert-title*/.alert-title.sc-ic-alert{white-space:normal}/*!@.alert-action-container*/.alert-action-container.sc-ic-alert{margin-bottom:var(--ic-space-xs)}}@media (forced-colors: active){/*!@.container*/.container.sc-ic-alert{border:var(--ic-hc-border)}}";

/**
 * @slot message - Content is placed to the right of the title.
 * @slot action - Content is placed to the right of the message.
 */
class Alert {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.dismiss = createEvent(this, "dismiss", 7);
    this.icDismiss = createEvent(this, "icDismiss", 7);
    this.dismissAction = () => {
      this.dismiss.emit();
      this.icDismiss.emit();
    };
    this.alertTitleWrap = false;
    this.visible = true;
    this.announced = true;
    this.dismissible = false;
    this.heading = "";
    this.message = undefined;
    this.titleAbove = false;
    this.variant = "neutral";
  }
  componentDidLoad() {
    this.alertTitleShouldWrap();
  }
  handleClick() {
    this.visible = !this.visible;
  }
  alertTitleShouldWrap() {
    var _a;
    const titleHeight = (_a = this.el.shadowRoot.querySelector(".alert-title")) === null || _a === void 0 ? void 0 : _a.clientHeight;
    if (titleHeight > 24)
      this.alertTitleWrap = true;
  }
  render() {
    const { variant, heading, message, titleAbove, dismissible, announced, visible, } = this;
    return (visible && (hAsync(Host, { role: announced && "alert", class: {
        [IcThemeForegroundEnum.Dark]: true,
      } }, hAsync("div", { class: {
        ["container"]: true,
        [`container-${variant}`]: true,
      } }, hAsync("div", { class: "alert-icon-container" }, hAsync("div", { class: {
        ["divider"]: true,
        [`divider-${variant}`]: true,
      } }), hAsync("span", { class: {
        ["alert-icon"]: true,
        ["svg-container"]: true,
        [`icon-${variant}`]: true,
      }, innerHTML: VARIANT_ICONS[variant].icon })), hAsync("div", { class: "alert-content" }, hAsync("div", { class: {
        ["alert-message"]: true,
        ["alert-message-title-above"]: titleAbove || this.alertTitleWrap,
      } }, heading && (hAsync("ic-typography", { class: {
        ["alert-title"]: true,
        ["alert-title-above"]: titleAbove || this.alertTitleWrap,
      }, variant: "subtitle-large" }, hAsync("p", null, heading))), hAsync("slot", { name: "message" }, hAsync("ic-typography", { variant: "body" }, message))), isSlotUsed$1(this.el, "action") && (hAsync("div", { class: "alert-action-container" }, hAsync("slot", { name: "action" })))), hAsync("div", { class: "dismiss-icon-container" }, dismissible && (hAsync("ic-button", { class: {
        ["svg-container"]: true,
        ["dismiss-icon"]: true,
      }, innerHTML: closeIcon, onClick: this.dismissAction, variant: "icon", appearance: IcThemeForegroundEnum.Dark, title: "dismiss" })))))));
  }
  get el() { return getElement(this); }
  static get style() { return icAlertCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "ic-alert",
    "$members$": {
      "announced": [4],
      "dismissible": [4],
      "heading": [1],
      "message": [1],
      "titleAbove": [4, "title-above"],
      "variant": [1],
      "alertTitleWrap": [32],
      "visible": [32]
    },
    "$listeners$": [[2, "icDismiss", "handleClick"]],
    "$lazyBundleId$": "-",
    "$attrsToReflect$": []
  }; }
}

var ArrowUpward = `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" aria-hidden="true">
    <path d="M0 8L1.41 9.41L7 3.83V16H9V3.83L14.58 9.42L16 8L8 0L0 8Z"/>
</svg>
`;

const icBackToTopCss = "/*!@html*/html.sc-ic-back-to-top{line-height:1.15;-webkit-text-size-adjust:100%}/*!@body*/body.sc-ic-back-to-top{margin:0}/*!@main*/main.sc-ic-back-to-top{display:block}/*!@h1*/h1.sc-ic-back-to-top{font-size:2em;margin:0.67em 0}/*!@hr*/hr.sc-ic-back-to-top{box-sizing:content-box;height:0;overflow:visible}/*!@pre*/pre.sc-ic-back-to-top{font-family:monospace, monospace;font-size:1em}/*!@a*/a.sc-ic-back-to-top{background-color:transparent}/*!@abbr[title]*/abbr[title].sc-ic-back-to-top{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}/*!@b,\nstrong*/b.sc-ic-back-to-top,strong.sc-ic-back-to-top{font-weight:bolder}/*!@code,\nkbd,\nsamp*/code.sc-ic-back-to-top,kbd.sc-ic-back-to-top,samp.sc-ic-back-to-top{font-family:monospace, monospace;font-size:1em}/*!@small*/small.sc-ic-back-to-top{font-size:80%}/*!@sub,\nsup*/sub.sc-ic-back-to-top,sup.sc-ic-back-to-top{font-size:75%;line-height:0;position:relative;vertical-align:baseline}/*!@sub*/sub.sc-ic-back-to-top{bottom:-0.25em}/*!@sup*/sup.sc-ic-back-to-top{top:-0.5em}/*!@img*/img.sc-ic-back-to-top{border-style:none}/*!@button,\ninput,\noptgroup,\nselect,\ntextarea*/button.sc-ic-back-to-top,input.sc-ic-back-to-top,optgroup.sc-ic-back-to-top,select.sc-ic-back-to-top,textarea.sc-ic-back-to-top{font-family:inherit;font-size:100%;line-height:1.15;margin:0}/*!@button,\ninput*/button.sc-ic-back-to-top,input.sc-ic-back-to-top{overflow:visible}/*!@button,\nselect*/button.sc-ic-back-to-top,select.sc-ic-back-to-top{text-transform:none}/*!@button,\n[type=\"button\"],\n[type=\"reset\"],\n[type=\"submit\"]*/button.sc-ic-back-to-top,[type=\"button\"].sc-ic-back-to-top,[type=\"reset\"].sc-ic-back-to-top,[type=\"submit\"].sc-ic-back-to-top{-webkit-appearance:button}/*!@button::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner*/button.sc-ic-back-to-top::-moz-focus-inner,[type=\"button\"].sc-ic-back-to-top::-moz-focus-inner,[type=\"reset\"].sc-ic-back-to-top::-moz-focus-inner,[type=\"submit\"].sc-ic-back-to-top::-moz-focus-inner{border-style:none;padding:0}/*!@button:-moz-focusring,\n[type=\"button\"]:-moz-focusring,\n[type=\"reset\"]:-moz-focusring,\n[type=\"submit\"]:-moz-focusring*/button.sc-ic-back-to-top:-moz-focusring,[type=\"button\"].sc-ic-back-to-top:-moz-focusring,[type=\"reset\"].sc-ic-back-to-top:-moz-focusring,[type=\"submit\"].sc-ic-back-to-top:-moz-focusring{outline:1px dotted ButtonText}/*!@fieldset*/fieldset.sc-ic-back-to-top{padding:0.35em 0.75em 0.625em}/*!@legend*/legend.sc-ic-back-to-top{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}/*!@progress*/progress.sc-ic-back-to-top{vertical-align:baseline}/*!@textarea*/textarea.sc-ic-back-to-top{overflow:auto}/*!@[type=\"checkbox\"],\n[type=\"radio\"]*/[type=\"checkbox\"].sc-ic-back-to-top,[type=\"radio\"].sc-ic-back-to-top{box-sizing:border-box;padding:0}/*!@[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button*/[type=\"number\"].sc-ic-back-to-top::-webkit-inner-spin-button,[type=\"number\"].sc-ic-back-to-top::-webkit-outer-spin-button{height:auto}/*!@[type=\"search\"]*/[type=\"search\"].sc-ic-back-to-top{-webkit-appearance:textfield;outline-offset:-2px}/*!@[type=\"search\"]::-webkit-search-decoration*/[type=\"search\"].sc-ic-back-to-top::-webkit-search-decoration{-webkit-appearance:none}/*!@::-webkit-file-upload-button*/.sc-ic-back-to-top::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}/*!@details*/details.sc-ic-back-to-top{display:block}/*!@summary*/summary.sc-ic-back-to-top{display:list-item}/*!@template*/template.sc-ic-back-to-top{display:none}/*!@[hidden]*/[hidden].sc-ic-back-to-top{display:none}/*!@html,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo*/html.sc-ic-back-to-top,body.sc-ic-back-to-top,div.sc-ic-back-to-top,span.sc-ic-back-to-top,applet.sc-ic-back-to-top,object.sc-ic-back-to-top,iframe.sc-ic-back-to-top,h1.sc-ic-back-to-top,h2.sc-ic-back-to-top,h3.sc-ic-back-to-top,h4.sc-ic-back-to-top,h5.sc-ic-back-to-top,h6.sc-ic-back-to-top,p.sc-ic-back-to-top,blockquote.sc-ic-back-to-top,pre.sc-ic-back-to-top,a.sc-ic-back-to-top,abbr.sc-ic-back-to-top,acronym.sc-ic-back-to-top,address.sc-ic-back-to-top,big.sc-ic-back-to-top,cite.sc-ic-back-to-top,code.sc-ic-back-to-top,del.sc-ic-back-to-top,dfn.sc-ic-back-to-top,em.sc-ic-back-to-top,img.sc-ic-back-to-top,ins.sc-ic-back-to-top,kbd.sc-ic-back-to-top,q.sc-ic-back-to-top,s.sc-ic-back-to-top,samp.sc-ic-back-to-top,small.sc-ic-back-to-top,strike.sc-ic-back-to-top,strong.sc-ic-back-to-top,sub.sc-ic-back-to-top,sup.sc-ic-back-to-top,tt.sc-ic-back-to-top,var.sc-ic-back-to-top,b.sc-ic-back-to-top,u.sc-ic-back-to-top,i.sc-ic-back-to-top,center.sc-ic-back-to-top,dl.sc-ic-back-to-top,dt.sc-ic-back-to-top,dd.sc-ic-back-to-top,ol.sc-ic-back-to-top,ul.sc-ic-back-to-top,li.sc-ic-back-to-top,fieldset.sc-ic-back-to-top,form.sc-ic-back-to-top,label.sc-ic-back-to-top,legend.sc-ic-back-to-top,table.sc-ic-back-to-top,caption.sc-ic-back-to-top,tbody.sc-ic-back-to-top,tfoot.sc-ic-back-to-top,thead.sc-ic-back-to-top,tr.sc-ic-back-to-top,th.sc-ic-back-to-top,td.sc-ic-back-to-top,article.sc-ic-back-to-top,aside.sc-ic-back-to-top,canvas.sc-ic-back-to-top,details.sc-ic-back-to-top,embed.sc-ic-back-to-top,figure.sc-ic-back-to-top,figcaption.sc-ic-back-to-top,footer.sc-ic-back-to-top,header.sc-ic-back-to-top,hgroup.sc-ic-back-to-top,menu.sc-ic-back-to-top,nav.sc-ic-back-to-top,output.sc-ic-back-to-top,ruby.sc-ic-back-to-top,section.sc-ic-back-to-top,summary.sc-ic-back-to-top,time.sc-ic-back-to-top,mark.sc-ic-back-to-top,audio.sc-ic-back-to-top,video.sc-ic-back-to-top{margin:0;padding:0;border:0;font-size:100%;font-style:inherit;vertical-align:baseline}/*!@:host*/.sc-ic-back-to-top-h{display:block;position:absolute;right:0}/*!@button*/button.sc-ic-back-to-top{position:fixed;right:var(--ic-space-md);bottom:var(--ic-space-md);height:2.5rem;align-items:center;padding:var(--ic-space-xs) var(--ic-space-md) var(--ic-space-xs)\n    var(--ic-space-sm);margin:0;gap:var(--ic-space-xs);display:flex;background-color:var(--ic-architectural-white);border:var(--ic-border-width) solid var(--ic-action-default);outline-width:inherit;box-sizing:border-box;box-shadow:var(--ic-elevation-overlay);border-radius:5rem;text-decoration:none;visibility:hidden;opacity:0;transition:visibility 0s linear var(--ic-transition-duration-slow),\n    opacity var(--ic-transition-duration-slow);cursor:pointer;z-index:var(--ic-z-index-back-to-top)}/*!@button:hover*/button.sc-ic-back-to-top:hover{text-decoration:none;background-color:var(--ic-action-default-bg-hover-no-alpha);border:var(--ic-border-width) solid var(--ic-action-default-hover)}/*!@button:active*/button.sc-ic-back-to-top:active{text-decoration:none;background-color:var(--ic-action-default-bg-active-no-alpha);border:var(--ic-border-width) solid var(--ic-action-default-active)}/*!@button:focus*/button.sc-ic-back-to-top:focus{box-shadow:var(--ic-border-focus)}/*!@.ic-back-to-top-link.show*/.ic-back-to-top-link.show.sc-ic-back-to-top{visibility:visible;opacity:1;transition:visibility 0s linear 0s,\n    opacity var(--ic-transition-duration-slow),\n    box-shadow var(--ic-easing-transition-fast)}/*!@.ic-back-to-top-link.by-footer*/.ic-back-to-top-link.by-footer.sc-ic-back-to-top{position:relative;right:var(--ic-space-md);bottom:3.5rem}/*!@.ic-back-to-top-link.offset-banner*/.ic-back-to-top-link.offset-banner.sc-ic-back-to-top{margin-bottom:var(--ic-space-lg)}/*!@.ic-back-to-top-icon*/.ic-back-to-top-icon.sc-ic-back-to-top{fill:var(--ic-action-default);padding-left:var(--ic-space-xxs);padding-top:var(--ic-space-xxxs)}/*!@.ic-back-to-top-icon > svg*/.ic-back-to-top-icon.sc-ic-back-to-top>svg.sc-ic-back-to-top{height:var(--ic-space-md);width:var(--ic-space-md);display:inline-block}/*!@.ic-back-to-top-link span*/.ic-back-to-top-link.sc-ic-back-to-top span.sc-ic-back-to-top{color:var(--ic-action-default)}/*!@.ic-back-to-top-link:hover .ic-back-to-top-icon*/.ic-back-to-top-link.sc-ic-back-to-top:hover .ic-back-to-top-icon.sc-ic-back-to-top{fill:var(--ic-action-default-hover)}/*!@.ic-back-to-top-link:hover span*/.ic-back-to-top-link.sc-ic-back-to-top:hover span.sc-ic-back-to-top{color:var(--ic-action-default-hover)}@media (forced-colors: active){/*!@.ic-back-to-top-icon*/.ic-back-to-top-icon.sc-ic-back-to-top{fill:currentcolor}}";

const backToTopLabel = "Back to top";
class BackToTop {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.topObserver = null;
    this.setTargetElVisible = (visible) => {
      this.targetElVisible = visible;
    };
    this.setFooterVisible = (visible) => {
      this.checkForClassificationBanner();
      if (typeof window !== "undefined" && window.scrollY === 0) {
        this.footerVisible = false;
      }
      else {
        this.footerVisible = visible;
      }
    };
    this.targetElObserverCallback = (entries) => {
      this.setTargetElVisible(entries[0].isIntersecting);
    };
    this.footerObserverCallback = (entries) => {
      this.setFooterVisible(entries[0].isIntersecting);
    };
    this.findTargetEl = (target) => {
      let targetElement = null;
      if (target === null || target === undefined) {
        console.log("Error: No target ID specified for back to top component - defaulting to top of page");
      }
      else {
        targetElement = document.querySelector(target.indexOf("#") === 0 ? target : "#" + target);
        if (targetElement === null) {
          console.log(`Error: Back to top target element '${target}' not found - defaulting to top of page`);
        }
      }
      return targetElement;
    };
    this.createTopObserver = (target) => {
      this.targetEl = this.findTargetEl(target);
      let objParent;
      //remove old element & observer
      if (this.topObserver !== null) {
        const observedEl = document.querySelector("#ic-back-to-top-target");
        if (observedEl !== null) {
          this.topObserver.unobserve(observedEl);
          observedEl.remove();
        }
      }
      if (this.targetEl === null) {
        objParent = document.body;
        this.targetEl = objParent.firstElementChild;
        this.isTargetElNull = true;
      }
      else {
        objParent = this.targetEl.parentNode;
        this.isTargetElNull = false;
      }
      //insert a new 0px height element before specified target that can be used to determine when page is scrolled
      const objBackToTopTargetEl = document.createElement("div");
      objBackToTopTargetEl.setAttribute("id", "ic-back-to-top-target");
      objParent.insertBefore(objBackToTopTargetEl, this.targetEl);
      // resize observer needs to factor in any top margin on the target el
      const marginTop = getComputedStyle(this.targetEl).marginTop;
      this.topObserver = new IntersectionObserver(this.targetElObserverCallback, {
        threshold: [0],
        rootMargin: `${marginTop} 0px 0px 0px`,
      });
      this.topObserver.observe(objBackToTopTargetEl);
    };
    this.handleClick = () => {
      if (this.isTargetElNull) {
        window.scrollTo(0, 0);
      }
      else {
        this.targetEl.scrollIntoView();
      }
    };
    this.checkForClassificationBanner = () => {
      //adjust position for classification banner at bottom
      const banners = document.querySelectorAll("ic-classification-banner:not([inline='true'])");
      this.bannerOffset = banners.length > 0;
    };
    this.bannerOffset = false;
    this.footerVisible = false;
    this.targetElVisible = true;
    this.target = undefined;
  }
  watchPropHandler(newValue, oldValue) {
    //added for gatsby rehydration issue where prop is initially undefined but then changes to actual value
    onComponentPropUndefinedChange(oldValue, newValue, () => {
      this.createTopObserver(newValue);
    });
  }
  componentWillLoad() {
    this.createTopObserver(this.target);
    this.checkForClassificationBanner();
    //observer for when footer scrolls into view
    let footers = document.querySelectorAll("ic-footer");
    if (footers.length === 0) {
      footers = document.querySelectorAll("footer");
    }
    if (footers.length) {
      const footerEl = footers[footers.length - 1];
      const threshold = this.bannerOffset ? 0.15 : 0;
      const footerObserver = new IntersectionObserver(this.footerObserverCallback, { threshold: [threshold] });
      footerObserver.observe(footerEl);
    }
  }
  componentDidLoad() {
    onComponentRequiredPropUndefined([{ prop: this.target, propName: "target" }], "Back to Top");
  }
  render() {
    const { bannerOffset, targetElVisible, footerVisible } = this;
    return (hAsync("button", { class: {
        ["ic-back-to-top-link"]: true,
        ["offset-banner"]: bannerOffset,
        ["show"]: !targetElVisible,
        ["by-footer"]: footerVisible,
      }, "aria-label": backToTopLabel, onClick: this.handleClick }, hAsync("span", { class: "ic-back-to-top-icon", innerHTML: ArrowUpward }), hAsync("ic-typography", { variant: "subtitle-small" }, hAsync("span", null, backToTopLabel))));
  }
  static get delegatesFocus() { return true; }
  get el() { return getElement(this); }
  static get watchers() { return {
    "target": ["watchPropHandler"]
  }; }
  static get style() { return icBackToTopCss; }
  static get cmpMeta() { return {
    "$flags$": 25,
    "$tagName$": "ic-back-to-top",
    "$members$": {
      "target": [1],
      "bannerOffset": [32],
      "footerVisible": [32],
      "targetElVisible": [32]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": []
  }; }
}

const icBadgeCss = "@media (prefers-reduced-motion: no-preference){/*!@:host(.show)*/.show.sc-ic-badge-h{animation:expand var(--ic-transition-duration-slow)}/*!@:host(.hide)*/.hide.sc-ic-badge-h{animation:shrink var(--ic-transition-duration-slow)}}/*!@:host*/.sc-ic-badge-h{display:flex;height:var(--ic-space-md);min-width:var(--ic-space-md);width:-moz-fit-content;width:fit-content;border-radius:calc(2 * var(--ic-space-xxl));position:absolute}/*!@:host(.neutral)*/.neutral.sc-ic-badge-h{background-color:var(--ic-architectural-500)}/*!@:host(.light)*/.light.sc-ic-badge-h{background-color:var(--ic-architectural-40)}/*!@:host(.info)*/.info.sc-ic-badge-h{background-color:var(--ic-status-info)}/*!@:host(.warning)*/.warning.sc-ic-badge-h{background-color:var(--ic-status-warning-mid)}/*!@:host(.error)*/.error.sc-ic-badge-h{background-color:var(--ic-status-error)}/*!@:host(.success)*/.success.sc-ic-badge-h{background-color:var(--ic-status-success)}/*!@:host(.small)*/.small.sc-ic-badge-h{height:var(--ic-space-sm);min-width:var(--ic-space-sm)}/*!@:host(.large)*/.large.sc-ic-badge-h{height:calc(var(--ic-space-md) + var(--ic-space-xxs));min-width:calc(var(--ic-space-md) + var(--ic-space-xxs))}/*!@:host(.dot.default)*/.dot.default.sc-ic-badge-h{height:var(--ic-space-xs);width:var(--ic-space-xs);min-width:var(--ic-space-xs)}/*!@:host(.dot.small)*/.dot.small.sc-ic-badge-h{height:calc(var(--ic-space-xxs) + var(--ic-space-xxxs));width:calc(var(--ic-space-xxs) + var(--ic-space-xxxs));min-width:calc(var(--ic-space-xxs) + var(--ic-space-xxxs))}/*!@:host(.dot.large)*/.dot.large.sc-ic-badge-h{height:var(--ic-space-sm);width:var(--ic-space-sm);min-width:var(--ic-space-sm)}/*!@:host(.foreground-dark) ::slotted(*)*/.sc-ic-badge-h.foreground-dark .sc-ic-badge-s>*{fill:var(--ic-color-primary-text)}/*!@:host(.foreground-light) ::slotted(*)*/.sc-ic-badge-h.foreground-light .sc-ic-badge-s>*{fill:white}/*!@:host(.foreground-dark) ic-typography*/.foreground-dark.sc-ic-badge-h ic-typography.sc-ic-badge{color:var(--ic-color-primary-text)}/*!@:host(.foreground-light) ic-typography*/.foreground-light.sc-ic-badge-h ic-typography.sc-ic-badge{color:white}/*!@:host(.text) ic-typography*/.text.sc-ic-badge-h ic-typography.sc-ic-badge{align-self:center;padding:0 calc((var(--ic-space-xs) + var(--ic-space-1px)) / 2)\n    var(--ic-space-1px)}/*!@:host(.text.small) ic-typography*/.text.small.sc-ic-badge-h ic-typography.sc-ic-badge{padding:0 0.2132rem}/*!@:host(.text.large) ic-typography*/.text.large.sc-ic-badge-h ic-typography.sc-ic-badge{padding:0 calc((var(--ic-space-sm) + var(--ic-space-1px)) / 2)\n    var(--ic-space-1px)}/*!@:host(.icon) ::slotted(svg)*/.sc-ic-badge-h.icon .sc-ic-badge-s>svg{width:var(--ic-space-sm);height:var(--ic-space-sm);padding:var(--ic-space-xxxs)}/*!@:host(.icon.small) ::slotted(svg)*/.sc-ic-badge-h.icon.small .sc-ic-badge-s>svg{width:var(--ic-space-xs);height:var(--ic-space-xs)}/*!@:host(.icon.large) ::slotted(svg)*/.sc-ic-badge-h.icon.large .sc-ic-badge-s>svg{width:calc(var(--ic-space-sm) + var(--ic-space-xxxs));height:calc(var(--ic-space-sm) + var(--ic-space-xxxs));padding:calc(var(--ic-space-xxxs) + var(--ic-space-1px))}/*!@:host(.far)*/.far.sc-ic-badge-h{top:calc(-1 * var(--ic-space-xs));right:calc(-1 * var(--ic-space-xs))}/*!@:host(.far.small),\n:host(.dot.far.large)*/.far.small.sc-ic-badge-h,.dot.far.large.sc-ic-badge-h{top:calc(-1 * var(--ic-space-xxs));right:calc(-1 * var(--ic-space-xxs))}/*!@:host(.dot.far),\n:host(.dot.far.small)*/.dot.far.sc-ic-badge-h,.dot.far.small.sc-ic-badge-h{top:calc(-1 * var(--ic-space-xxxs));right:calc(-1 * var(--ic-space-xxxs))}/*!@:host(.near)*/.near.sc-ic-badge-h{top:calc(-1 * calc(var(--ic-space-xxs) + var(--ic-space-1px)));right:calc(-1 * calc(var(--ic-space-xxs) + var(--ic-space-1px)))}/*!@:host(.dot.near)*/.dot.near.sc-ic-badge-h{top:calc(-1 * var(--ic-space-1px));right:calc(-1 * var(--ic-space-1px))}/*!@:host(.inline)*/.inline.sc-ic-badge-h{position:static}/*!@:host(.hide)*/.hide.sc-ic-badge-h{visibility:hidden !important;transition:visibility var(--ic-transition-duration-slow)}@keyframes expand{from{opacity:0;transform:scale(0)}to{opacity:1;transform:scale(1)}}@keyframes shrink{from{opacity:1;transform:scale(1)}to{opacity:0;transform:scale(0)}}";

/**
 * @slot badge-icon - Icon will be rendered inside the badge if type is set to icon.
 */
class Badge {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.setBadgeColour = () => {
      let colorRGBA = null;
      if (this.customColor !== null) {
        const firstChar = this.customColor.slice(0, 1);
        if (firstChar === "#") {
          colorRGBA = hexToRgba(this.customColor);
        }
        else if (firstChar.toLowerCase() === "r") {
          colorRGBA = rgbaStrToObj(this.customColor);
        }
        this.customColorRGBA = colorRGBA;
        this.el.style.backgroundColor = `rgba(${colorRGBA.r.toString()}, ${colorRGBA.g.toString()}, ${colorRGBA.b.toString()}, ${colorRGBA.a.toString()})`;
      }
    };
    this.getBadgeForeground = () => {
      let red;
      let green;
      let blue;
      switch (this.variant) {
        case "custom":
          red = this.customColorRGBA.r;
          green = this.customColorRGBA.g;
          blue = this.customColorRGBA.b;
          break;
        case "error":
          red = parseInt(getCssProperty$1("--ic-status-error-r"));
          green = parseInt(getCssProperty$1("--ic-status-error-g"));
          blue = parseInt(getCssProperty$1("--ic-status-error-b"));
          break;
        case "success":
          red = parseInt(getCssProperty$1("--ic-status-success-r"));
          green = parseInt(getCssProperty$1("--ic-status-success-g"));
          blue = parseInt(getCssProperty$1("--ic-status-success-b"));
          break;
        case "warning":
          red = parseInt(getCssProperty$1("--ic-status-warning-r"));
          green = parseInt(getCssProperty$1("--ic-status-warning-g"));
          blue = parseInt(getCssProperty$1("--ic-status-warning-b"));
          break;
        case "info": {
          const info = hexToRgba(getCssProperty$1("--ic-status-info"));
          red = info.r;
          green = info.g;
          blue = info.b;
          break;
        }
        case "neutral": {
          const neutral = hexToRgba(getCssProperty$1("--ic-architectural-500"));
          red = neutral.r;
          green = neutral.g;
          blue = neutral.b;
          break;
        }
        case "light": {
          const light = hexToRgba(getCssProperty$1("--ic-architectural-40"));
          red = light.r;
          green = light.g;
          blue = light.b;
          break;
        }
      }
      const brightness = (red * 299 + green * 587 + blue * 114) / 1000;
      this.foregroundColour =
        brightness > 133.3505
          ? IcThemeForegroundEnum.Dark
          : IcThemeForegroundEnum.Light;
    };
    this.getTextLabel = () => {
      let label;
      if (this.textLabel !== null) {
        if (this.maxNumber !== null) {
          label =
            Number(this.textLabel) > this.maxNumber
              ? `${this.maxNumber}+`
              : this.textLabel;
        }
        else {
          label = this.textLabel;
        }
      }
      return label;
    };
    this.setAccessibleLabel = () => {
      if (getParentElement(this.el) !== null) {
        if (getParentElementType(this.el) === "IC-TAB") {
          getParentElement(this.el).setAttribute("aria-describedby", "badge");
        }
        else {
          getParentElement(this.el).ariaLabel = `badge displaying ${this.accessibleLabel}`;
        }
      }
    };
    this.isAccessibleLabelDefined = () => {
      return isPropDefined(this.accessibleLabel) && this.accessibleLabel !== null;
    };
    this.accessibleLabel = undefined;
    this.customColor = null;
    this.maxNumber = undefined;
    this.position = "far";
    this.size = "default";
    this.textLabel = undefined;
    this.type = "text";
    this.variant = "neutral";
    this.visible = true;
  }
  componentWillLoad() {
    this.variant === "custom" && this.setBadgeColour();
    this.getBadgeForeground();
    this.isAccessibleLabelDefined() && this.setAccessibleLabel();
  }
  componentDidLoad() {
    this.type === "text" &&
      onComponentRequiredPropUndefined([{ prop: this.textLabel, propName: "text-label" }], "Badge");
  }
  /**
   * @deprecated This method should not be used anymore. Use visible prop to set badge visibility.
   */
  async showBadge() {
    this.visible = true;
  }
  /**
   * @deprecated This method should not be used anymore. Use visible prop to set badge visibility.
   */
  async hideBadge() {
    this.visible = false;
  }
  render() {
    const { position, size, type, variant, foregroundColour, visible } = this;
    return (hAsync(Host, { class: {
        [`${position}`]: true,
        [`${size}`]: true,
        [`${variant}`]: true,
        [`${type}`]: true,
        [`foreground-${foregroundColour}`]: foregroundColour !== null,
        ["show"]: visible,
        ["hide"]: !visible,
      }, id: "badge", "aria-label": this.isAccessibleLabelDefined() &&
        `badge displaying ${this.accessibleLabel}` }, type === "icon" && hAsync("slot", { name: "badge-icon" }), type === "text" && (hAsync("ic-typography", { variant: size === "small" ? "badge-small" : "badge" }, this.getTextLabel()))));
  }
  static get delegatesFocus() { return true; }
  get el() { return getElement(this); }
  static get style() { return icBadgeCss; }
  static get cmpMeta() { return {
    "$flags$": 25,
    "$tagName$": "ic-badge",
    "$members$": {
      "accessibleLabel": [1, "accessible-label"],
      "customColor": [1, "custom-color"],
      "maxNumber": [2, "max-number"],
      "position": [1],
      "size": [1],
      "textLabel": [1, "text-label"],
      "type": [1],
      "variant": [1],
      "visible": [1028],
      "showBadge": [64],
      "hideBadge": [64]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": []
  }; }
}

var backIcon = `<svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M20 11H7.83L13.42 5.41L12 4L4 12L12 20L13.41 18.59L7.83 13H20V11Z" fill="currentColor"/>
</svg>
`;

const icBreadcrumbCss = "/*!@:host*/.sc-ic-breadcrumb-h{display:block;margin:var(--ic-space-xs) var(--ic-space-xs) var(--ic-space-xs) 0}/*!@:host .breadcrumb*/.sc-ic-breadcrumb-h .breadcrumb.sc-ic-breadcrumb{display:flex;align-items:center;white-space:nowrap;gap:var(--ic-space-xs);min-height:var(--ic-space-lg)}/*!@:host .chevron*/.sc-ic-breadcrumb-h .chevron.sc-ic-breadcrumb{width:var(--ic-space-lg);height:var(--ic-space-lg)}/*!@:host .chevron svg*/.sc-ic-breadcrumb-h .chevron.sc-ic-breadcrumb svg.sc-ic-breadcrumb{color:var(--ic-architectural-400)}/*!@:host(:first-child) .chevron*/.sc-ic-breadcrumb-h:first-child .chevron.sc-ic-breadcrumb{display:none}/*!@.back-icon svg*/.back-icon.sc-ic-breadcrumb svg.sc-ic-breadcrumb{color:var(--ic-hyperlink)}/*!@:host(.back)*/.back.sc-ic-breadcrumb-h{display:flex;align-items:center}/*!@:host(.back) .chevron*/.back.sc-ic-breadcrumb-h .chevron.sc-ic-breadcrumb{display:none}/*!@ic-link*/ic-link.sc-ic-breadcrumb{--breadcrumb-link-display:inline-flex;--breadcrumb-link-align-items:center;--breadcrumb-link-gap:var(--ic-space-xs)}/*!@:host([aria-current=\"page\"]) .current-page-container*/[aria-current=\"page\"].sc-ic-breadcrumb-h .current-page-container.sc-ic-breadcrumb{display:flex;align-items:center;gap:var(--ic-space-xs)}/*!@:host(.collapsed-breadcrumb-wrapper)*/.collapsed-breadcrumb-wrapper.sc-ic-breadcrumb-h{margin-right:var(--ic-space-xs) !important;display:flex;align-items:center;gap:var(--ic-space-xs)}/*!@:host(.collapsed-breadcrumb-wrapper) ::slotted(.collapsed-breadcrumb)*/.sc-ic-breadcrumb-h.collapsed-breadcrumb-wrapper .sc-ic-breadcrumb-s>.collapsed-breadcrumb{border:none;background-color:transparent;color:var(--ic-hyperlink);text-decoration:underline;font-weight:var(--ic-font-weight-bold);cursor:pointer}/*!@:host(.collapsed-breadcrumb-wrapper) ::slotted(.collapsed-breadcrumb:hover),\n:host(.collapsed-breadcrumb-wrapper) ::slotted(.collapsed-breadcrumb:focus)*/.sc-ic-breadcrumb-h.collapsed-breadcrumb-wrapper .sc-ic-breadcrumb-s>.collapsed-breadcrumb:hover,.sc-ic-breadcrumb-h.collapsed-breadcrumb-wrapper .sc-ic-breadcrumb-s>.collapsed-breadcrumb:focus{outline:var(--ic-hc-focus-outline);border-bottom:0.25rem solid !important;margin-bottom:-0.25rem !important;text-decoration:none}/*!@.hide,\n:host(.collapsed-breadcrumb-wrapper) ::slotted(.hide)*/.hide.sc-ic-breadcrumb,.sc-ic-breadcrumb-h.collapsed-breadcrumb-wrapper .sc-ic-breadcrumb-s>.hide{display:none}@media (forced-colors: active){/*!@.back-icon svg*/.back-icon.sc-ic-breadcrumb svg.sc-ic-breadcrumb{color:currentcolor}}@supports (text-decoration-thickness: 25%){/*!@ic-link*/ic-link.sc-ic-breadcrumb{--breadcrumb-link-display:flex}/*!@:host(.collapsed-breadcrumb-wrapper) ::slotted(.collapsed-breadcrumb:hover),\n  :host(.collapsed-breadcrumb-wrapper) ::slotted(.collapsed-breadcrumb:focus)*/.sc-ic-breadcrumb-h.collapsed-breadcrumb-wrapper .sc-ic-breadcrumb-s>.collapsed-breadcrumb:hover,.sc-ic-breadcrumb-h.collapsed-breadcrumb-wrapper .sc-ic-breadcrumb-s>.collapsed-breadcrumb:focus{text-decoration-line:underline;text-decoration-thickness:25%;text-underline-offset:25%;border-bottom:0 !important;margin-bottom:0 !important}}";

/**
 * @slot icon - Content will be rendered to the left of the breadcrumb page title.
 */
class Breadcrumb {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.renderDefaultBreadcrumb = (current, pageTitle, describedById, href) => {
      const hasPageTitle = pageTitle !== null && isPropDefined(pageTitle) && pageTitle !== "";
      if (current && hasPageTitle) {
        return (hAsync("span", { class: {
            "current-page-container": current,
          } }, isSlotUsed$1(this.el, "icon") && hAsync("slot", { name: "icon" }), pageTitle));
      }
      return (hAsync("ic-link", { href: href, class: "breadcrumb-link", "aria-describedby": this.showBackIcon && describedById && describedById }, this.showBackIcon && (hAsync("div", { class: "back-icon", innerHTML: backIcon })), isSlotUsed$1(this.el, "icon") && hAsync("slot", { name: "icon" }), pageTitle));
    };
    this.setSlottedCurrentPageClass = () => {
      const icLink = this.el.querySelector("ic-link");
      const currentPage = "current-page";
      if (icLink) {
        icLink.classList.remove(currentPage);
        if (this.current) {
          const hasCurrentPageClass = icLink.classList.contains(currentPage);
          if (!hasCurrentPageClass) {
            icLink.classList.add("breadcrumb-link", currentPage);
          }
        }
      }
    };
    this.current = false;
    this.href = undefined;
    this.pageTitle = undefined;
    this.showBackIcon = false;
  }
  componentWillRender() {
    this.setSlottedCurrentPageClass();
  }
  /**
   * Sets focus on the breadcrumb.
   */
  async setFocus() {
    if (this.el.shadowRoot.querySelector("ic-link")) {
      this.el.shadowRoot.querySelector("ic-link").focus();
    }
  }
  render() {
    const { current, href, pageTitle } = this;
    const describedById = `${pageTitle && pageTitle.toLowerCase().replace(" ", "-")}-describedby`;
    const hasPageTitle = pageTitle !== null && isPropDefined(pageTitle) && pageTitle !== "";
    const hasHref = href !== null && isPropDefined(href) && href !== "";
    return (hAsync(Host, { class: {
        back: this.showBackIcon,
      }, "aria-current": current && "page", role: "listitem" }, hAsync("div", { class: "breadcrumb" }, hAsync("span", { innerHTML: chevronIcon, class: "chevron", "aria-hidden": "true" }), this.showBackIcon && describedById && (hAsync("span", { id: describedById, class: "hide" }, `Back to ${pageTitle}`)), hasPageTitle && hasHref ? (this.renderDefaultBreadcrumb(current, pageTitle, describedById, href)) : (hAsync("slot", null)))));
  }
  static get delegatesFocus() { return true; }
  get el() { return getElement(this); }
  static get style() { return icBreadcrumbCss; }
  static get cmpMeta() { return {
    "$flags$": 25,
    "$tagName$": "ic-breadcrumb",
    "$members$": {
      "current": [4],
      "href": [1],
      "pageTitle": [1, "page-title"],
      "showBackIcon": [516, "show-back-icon"],
      "setFocus": [64]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["showBackIcon", "show-back-icon"]]
  }; }
}

const icBreadcrumbGroupCss = "/*!@:host*/.sc-ic-breadcrumb-group-h{display:block}/*!@:host ol*/.sc-ic-breadcrumb-group-h ol.sc-ic-breadcrumb-group{display:flex;list-style-type:none;align-items:center;flex-wrap:wrap;padding:0;margin:0}/*!@:host(.back) ol ::slotted(ic-breadcrumb)*/.sc-ic-breadcrumb-group-h.back ol .sc-ic-breadcrumb-group-s>ic-breadcrumb{display:none}/*!@:host(.back) ol ::slotted(ic-breadcrumb.show)*/.sc-ic-breadcrumb-group-h.back ol .sc-ic-breadcrumb-group-s>ic-breadcrumb.show{display:flex}/*!@:host(.collapsed) ol ::slotted(ic-breadcrumb.hide)*/.sc-ic-breadcrumb-group-h.collapsed ol .sc-ic-breadcrumb-group-s>ic-breadcrumb.hide{display:none;opacity:0;visibility:hidden}/*!@:host(.collapsed) ol ::slotted(ic-breadcrumb.visuallyhidden)*/.sc-ic-breadcrumb-group-h.collapsed ol .sc-ic-breadcrumb-group-s>ic-breadcrumb.visuallyhidden{display:block;opacity:0;transition:all var(--ic-easing-transition-slow)}/*!@:host(.collapsed) ol ::slotted(ic-breadcrumb.fade)*/.sc-ic-breadcrumb-group-h.collapsed ol .sc-ic-breadcrumb-group-s>ic-breadcrumb.fade{opacity:1}";

// Added ResizeObserver to find out width of breadcrumbs and parents. Use side navigation long title for ref.
class BreadcrumbGroup {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.ADD_CLASS_DELAY = 50;
    this.IC_BREADCRUMB = "ic-breadcrumb";
    this.resizeObserver = null;
    this.SHOW_BACK_ICON = "show-back-icon";
    this.setBackBreadcrumb = () => {
      if (this.backBreadcrumbOnly) {
        this.setBackBreadcrumbAttr();
      }
    };
    this.setBackBreadcrumbAttr = () => {
      if (this.lastParentBreadcrumb) {
        this.lastParentBreadcrumb.classList.add("show");
        this.lastParentBreadcrumb.setAttribute(this.SHOW_BACK_ICON, "true");
      }
    };
    this.getLastParentBreadcrumb = () => {
      const allBreadcrumbs = Array.from(this.el.querySelectorAll(this.IC_BREADCRUMB));
      if (allBreadcrumbs.length === 1) {
        return null;
      }
      this.breadcrumbs = allBreadcrumbs.filter((breadcrumb) => !breadcrumb.getAttribute("current"));
      this.breadcrumb = this.breadcrumbs[this.breadcrumbs.length - 1];
      return this.breadcrumb;
    };
    this.lastParentBreadcrumb = this.getLastParentBreadcrumb();
    this.setDefaultBreadcrumbs = () => {
      const allBreadcrumbs = Array.from(this.el.querySelectorAll(this.IC_BREADCRUMB));
      allBreadcrumbs.forEach((breadcrumb) => {
        breadcrumb.setAttribute(this.SHOW_BACK_ICON, "false");
      });
    };
    this.setCollapsed = () => {
      if (this.collapsed) {
        const allBreadcrumbs = Array.from(this.el.querySelectorAll(this.IC_BREADCRUMB));
        this.collapsedBreadcrumbs = allBreadcrumbs
          .splice(1, allBreadcrumbs.length - 2)
          .filter((breadcrumb) => !breadcrumb.classList.contains("collapsed-breadcrumb-wrapper"));
        this.collapsedBreadcrumbs.forEach((breadcrumb) => breadcrumb.classList.add("hide"));
        const firstBreadcrumb = allBreadcrumbs[0];
        if (firstBreadcrumb) {
          firstBreadcrumb.insertAdjacentElement("afterend", this.collapsedBreadcrumbWrapper);
        }
      }
    };
    this.clickHandler = () => {
      this.handleHiddenCollapsedBreadcrumbs(this.collapsedBreadcrumbWrapper);
    };
    this.renderCollapsedBreadcrumb = () => {
      this.collapsedBreadcrumbWrapper = document.createElement("ic-breadcrumb");
      this.collapsedBreadcrumbWrapper.classList.add("collapsed-breadcrumb-wrapper");
      this.collapsedBreadcrumbEl = document.createElement("button");
      const ariaLabel = document.createElement("span");
      ariaLabel.id = "collapsed-button-label";
      ariaLabel.innerText = "Collapsed breadcrumbs";
      ariaLabel.className = "hide";
      this.collapsedBreadcrumbEl.setAttribute("aria-labelledby", "collapsed-button-label");
      const ariaDescribed = document.createElement("span");
      ariaDescribed.id = "collapsed-button-described";
      ariaDescribed.innerText = "Select to view collapsed breadcrumbs";
      ariaDescribed.className = "hide";
      this.collapsedBreadcrumbEl.setAttribute("aria-describedby", "collapsed-button-described");
      this.collapsedBreadcrumbEl.id = "collapsed-ellipsis";
      this.collapsedBreadcrumbEl.innerText = "...";
      this.collapsedBreadcrumbEl.classList.add("collapsed-breadcrumb");
      this.collapsedBreadcrumbEl.addEventListener("click", this.clickHandler);
      this.collapsedBreadcrumbWrapper.append(ariaDescribed);
      this.collapsedBreadcrumbWrapper.append(ariaLabel);
      this.collapsedBreadcrumbWrapper.append(this.collapsedBreadcrumbEl);
      return this.collapsedBreadcrumbWrapper;
    };
    this.handleHiddenCollapsedBreadcrumbs = (collapsedBreadcrumbWrapper) => {
      collapsedBreadcrumbWrapper.remove();
      this.collapsedBreadcrumbs.forEach((breadcrumb) => {
        breadcrumb.classList.add("visuallyhidden");
        breadcrumb.classList.remove("hide");
        setTimeout(() => {
          breadcrumb.classList.add("fade");
        }, this.ADD_CLASS_DELAY);
        this.removeVisuallyHiddenClass(breadcrumb);
      });
      this.expandedBreadcrumbs = true;
    };
    this.transitionendHandler = (event) => {
      if (event.propertyName === "opacity") {
        event.target.classList.remove("visuallyhidden");
      }
    };
    this.removeVisuallyHiddenClass = (breadcrumb) => {
      breadcrumb.addEventListener("transitionend", this.transitionendHandler);
    };
    this.setLastParentCollapsedBackBreadcrumb = () => {
      this.setBackBreadcrumbAttr();
      this.lastParentBreadcrumb.classList.remove("hide");
    };
    this.revertLastParentCollapsedBreadcrumb = () => {
      this.lastParentBreadcrumb.setAttribute(this.SHOW_BACK_ICON, "false");
    };
    this.resizeObserverCallback = (currSize) => {
      if (currSize !== this.deviceSize) {
        this.deviceSize = currSize;
        if (this.deviceSize <= DEVICE_SIZES.S) {
          this.el.setAttribute("back-breadcrumb-only", "true");
          if (this.collapsed) {
            this.setLastParentCollapsedBackBreadcrumb();
          }
          else {
            this.setBackBreadcrumb();
          }
        }
        else {
          this.el.setAttribute("back-breadcrumb-only", "false");
          if (this.collapsed && this.breadcrumbs && this.breadcrumbs.length > 2) {
            this.revertLastParentCollapsedBreadcrumb();
            if (this.expandedBreadcrumbs) {
              this.setDefaultBreadcrumbs();
            }
            else {
              this.setCollapsed();
            }
          }
          else {
            this.setDefaultBreadcrumbs();
          }
        }
      }
    };
    this.runResizeObserver = () => {
      this.resizeObserver = new ResizeObserver(() => {
        const currSize = getCurrentDeviceSize();
        this.resizeObserverCallback(currSize);
      });
      this.resizeObserver.observe(this.el);
    };
    this.deviceSize = DEVICE_SIZES.XL;
    this.expandedBreadcrumbs = false;
    this.backBreadcrumbOnly = false;
    this.collapsed = false;
  }
  componentWillLoad() {
    const allBreadcrumbs = Array.from(this.el.querySelectorAll(this.IC_BREADCRUMB));
    if (this.backBreadcrumbOnly) {
      this.setBackBreadcrumb();
    }
    else {
      checkResizeObserver$1(this.runResizeObserver);
    }
    if (this.collapsed) {
      this.collapsedBreadcrumbWrapper = this.renderCollapsedBreadcrumb();
      if (allBreadcrumbs.length > 2) {
        if (getCurrentDeviceSize() === DEVICE_SIZES.S) {
          this.setLastParentCollapsedBackBreadcrumb();
        }
        else {
          this.setCollapsed();
        }
      }
    }
  }
  disconnectedCallback() {
    this.breadcrumb &&
      this.breadcrumb.removeEventListener("transitionend", this.transitionendHandler);
    this.collapsedBreadcrumbEl &&
      this.collapsedBreadcrumbEl.removeEventListener("click", this.clickHandler);
  }
  render() {
    return (hAsync(Host, { class: {
        back: this.backBreadcrumbOnly,
        collapsed: this.collapsed,
      } }, hAsync("nav", { "aria-label": "breadcrumbs" }, hAsync("ol", null, hAsync("slot", null)))));
  }
  get el() { return getElement(this); }
  static get style() { return icBreadcrumbGroupCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "ic-breadcrumb-group",
    "$members$": {
      "backBreadcrumbOnly": [4, "back-breadcrumb-only"],
      "collapsed": [4],
      "deviceSize": [32],
      "expandedBreadcrumbs": [32]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": []
  }; }
}

const icButtonCss = "/*!@html*/html.sc-ic-button{line-height:1.15;-webkit-text-size-adjust:100%}/*!@body*/body.sc-ic-button{margin:0}/*!@main*/main.sc-ic-button{display:block}/*!@h1*/h1.sc-ic-button{font-size:2em;margin:0.67em 0}/*!@hr*/hr.sc-ic-button{box-sizing:content-box;height:0;overflow:visible}/*!@pre*/pre.sc-ic-button{font-family:monospace, monospace;font-size:1em}/*!@a*/a.sc-ic-button{background-color:transparent}/*!@abbr[title]*/abbr[title].sc-ic-button{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}/*!@b,\nstrong*/b.sc-ic-button,strong.sc-ic-button{font-weight:bolder}/*!@code,\nkbd,\nsamp*/code.sc-ic-button,kbd.sc-ic-button,samp.sc-ic-button{font-family:monospace, monospace;font-size:1em}/*!@small*/small.sc-ic-button{font-size:80%}/*!@sub,\nsup*/sub.sc-ic-button,sup.sc-ic-button{font-size:75%;line-height:0;position:relative;vertical-align:baseline}/*!@sub*/sub.sc-ic-button{bottom:-0.25em}/*!@sup*/sup.sc-ic-button{top:-0.5em}/*!@img*/img.sc-ic-button{border-style:none}/*!@button,\ninput,\noptgroup,\nselect,\ntextarea*/button.sc-ic-button,input.sc-ic-button,optgroup.sc-ic-button,select.sc-ic-button,textarea.sc-ic-button{font-family:inherit;font-size:100%;line-height:1.15;margin:0}/*!@button,\ninput*/button.sc-ic-button,input.sc-ic-button{overflow:visible}/*!@button,\nselect*/button.sc-ic-button,select.sc-ic-button{text-transform:none}/*!@button,\n[type=\"button\"],\n[type=\"reset\"],\n[type=\"submit\"]*/button.sc-ic-button,[type=\"button\"].sc-ic-button,[type=\"reset\"].sc-ic-button,[type=\"submit\"].sc-ic-button{-webkit-appearance:button}/*!@button::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner*/button.sc-ic-button::-moz-focus-inner,[type=\"button\"].sc-ic-button::-moz-focus-inner,[type=\"reset\"].sc-ic-button::-moz-focus-inner,[type=\"submit\"].sc-ic-button::-moz-focus-inner{border-style:none;padding:0}/*!@button:-moz-focusring,\n[type=\"button\"]:-moz-focusring,\n[type=\"reset\"]:-moz-focusring,\n[type=\"submit\"]:-moz-focusring*/button.sc-ic-button:-moz-focusring,[type=\"button\"].sc-ic-button:-moz-focusring,[type=\"reset\"].sc-ic-button:-moz-focusring,[type=\"submit\"].sc-ic-button:-moz-focusring{outline:1px dotted ButtonText}/*!@fieldset*/fieldset.sc-ic-button{padding:0.35em 0.75em 0.625em}/*!@legend*/legend.sc-ic-button{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}/*!@progress*/progress.sc-ic-button{vertical-align:baseline}/*!@textarea*/textarea.sc-ic-button{overflow:auto}/*!@[type=\"checkbox\"],\n[type=\"radio\"]*/[type=\"checkbox\"].sc-ic-button,[type=\"radio\"].sc-ic-button{box-sizing:border-box;padding:0}/*!@[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button*/[type=\"number\"].sc-ic-button::-webkit-inner-spin-button,[type=\"number\"].sc-ic-button::-webkit-outer-spin-button{height:auto}/*!@[type=\"search\"]*/[type=\"search\"].sc-ic-button{-webkit-appearance:textfield;outline-offset:-2px}/*!@[type=\"search\"]::-webkit-search-decoration*/[type=\"search\"].sc-ic-button::-webkit-search-decoration{-webkit-appearance:none}/*!@::-webkit-file-upload-button*/.sc-ic-button::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}/*!@details*/details.sc-ic-button{display:block}/*!@summary*/summary.sc-ic-button{display:list-item}/*!@template*/template.sc-ic-button{display:none}/*!@[hidden]*/[hidden].sc-ic-button{display:none}/*!@html,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo*/html.sc-ic-button,body.sc-ic-button,div.sc-ic-button,span.sc-ic-button,applet.sc-ic-button,object.sc-ic-button,iframe.sc-ic-button,h1.sc-ic-button,h2.sc-ic-button,h3.sc-ic-button,h4.sc-ic-button,h5.sc-ic-button,h6.sc-ic-button,p.sc-ic-button,blockquote.sc-ic-button,pre.sc-ic-button,a.sc-ic-button,abbr.sc-ic-button,acronym.sc-ic-button,address.sc-ic-button,big.sc-ic-button,cite.sc-ic-button,code.sc-ic-button,del.sc-ic-button,dfn.sc-ic-button,em.sc-ic-button,img.sc-ic-button,ins.sc-ic-button,kbd.sc-ic-button,q.sc-ic-button,s.sc-ic-button,samp.sc-ic-button,small.sc-ic-button,strike.sc-ic-button,strong.sc-ic-button,sub.sc-ic-button,sup.sc-ic-button,tt.sc-ic-button,var.sc-ic-button,b.sc-ic-button,u.sc-ic-button,i.sc-ic-button,center.sc-ic-button,dl.sc-ic-button,dt.sc-ic-button,dd.sc-ic-button,ol.sc-ic-button,ul.sc-ic-button,li.sc-ic-button,fieldset.sc-ic-button,form.sc-ic-button,label.sc-ic-button,legend.sc-ic-button,table.sc-ic-button,caption.sc-ic-button,tbody.sc-ic-button,tfoot.sc-ic-button,thead.sc-ic-button,tr.sc-ic-button,th.sc-ic-button,td.sc-ic-button,article.sc-ic-button,aside.sc-ic-button,canvas.sc-ic-button,details.sc-ic-button,embed.sc-ic-button,figure.sc-ic-button,figcaption.sc-ic-button,footer.sc-ic-button,header.sc-ic-button,hgroup.sc-ic-button,menu.sc-ic-button,nav.sc-ic-button,output.sc-ic-button,ruby.sc-ic-button,section.sc-ic-button,summary.sc-ic-button,time.sc-ic-button,mark.sc-ic-button,audio.sc-ic-button,video.sc-ic-button{margin:0;padding:0;border:0;font-size:100%;font-style:inherit;vertical-align:baseline}/*!@:host*/.sc-ic-button-h{display:inline-block;position:relative;--button-default:var(--ic-action-default);--button-default-hover:var(--ic-action-default-hover);--button-default-active:var(--ic-action-default-active);--button-default-background-hover:var(--ic-action-default-bg-hover);--button-default-background-active:var(--ic-action-default-bg-active);--icon-width:100%;--icon-height:100%}/*!@.button*/.button.sc-ic-button{font-family:var(--ic-font-body-family);text-decoration:none;font-weight:600;font-size:0.875rem;transition:var(--ic-easing-transition-fast);border-radius:var(--ic-border-radius);min-width:var(--min-width, 6.25rem);display:inline-flex;gap:var(--ic-space-xs);flex-direction:row;justify-content:center;align-items:center;background:none;border:none;box-sizing:border-box;white-space:nowrap;vertical-align:middle}/*!@:host(.with-badge) .button*/.with-badge.sc-ic-button-h .button.sc-ic-button{border-radius:0.2188rem}/*!@.button:hover*/.button.sc-ic-button:hover{cursor:pointer}/*!@.button:focus,\n:host .button:focus,\n:host(.light) .button:focus*/.button.sc-ic-button:focus,.sc-ic-button-h .button.sc-ic-button:focus,.light.sc-ic-button-h .button.sc-ic-button:focus{box-shadow:var(--ic-border-focus)}/*!@.button:focus-visible*/.button.sc-ic-button:focus-visible{outline:var(--ic-hc-focus-outline)}/*!@:host(.dark) .button*/.dark.sc-ic-button-h .button.sc-ic-button{--button-default:var(--ic-action-dark);--button-default-hover:var(--ic-action-dark);--button-default-active:var(--ic-action-dark);--button-default-background-hover:var(--ic-action-dark-bg-hover);--button-default-background-active:var(--ic-action-dark-bg-active)}/*!@:host(.light) .button*/.light.sc-ic-button-h .button.sc-ic-button{--button-default:var(--ic-action-light);--button-default-hover:var(--ic-action-light);--button-default-active:var(--ic-action-light);--button-default-background-hover:var(--ic-action-light-bg-hover);--button-default-background-active:var(--ic-action-light-bg-active)}/*!@:host(.button-variant-primary.light) .button*/.button-variant-primary.light.sc-ic-button-h .button.sc-ic-button{color:var(--ic-color-primary-text);--button-default-hover:var(--ic-action-light-hover);--button-default-active:var(--ic-action-light-active)}/*!@:host(.button-variant-primary.dark) .button*/.button-variant-primary.dark.sc-ic-button-h .button.sc-ic-button{--button-default-hover:var(--ic-action-dark-hover);--button-default-active:var(--ic-action-dark-active)}/*!@:host(.disabled),\n:host(.disabled) .button,\n:host(.loading),\n:host(.loading) .button*/.disabled.sc-ic-button-h,.disabled.sc-ic-button-h .button.sc-ic-button,.loading.sc-ic-button-h,.loading.sc-ic-button-h .button.sc-ic-button{pointer-events:none}/*!@:host(.button-variant-primary) .button*/.button-variant-primary.sc-ic-button-h .button.sc-ic-button{color:var(--ic-architectural-white);background-color:var(--button-default)}/*!@:host(.button-variant-primary) .button:hover:not(:focus)*/.button-variant-primary.sc-ic-button-h .button.sc-ic-button:hover:not(:focus){background-color:var(--button-default-hover)}/*!@:host(.button-variant-primary) .button:hover:focus*/.button-variant-primary.sc-ic-button-h .button.sc-ic-button:hover:focus{background-color:var(--button-default-hover);border-color:var(--button-default-hover)}/*!@:host(.button-variant-primary:not(.light)) .button:hover:focus*/.button-variant-primary.sc-ic-button-h:not(.light) .button.sc-ic-button:hover:focus{color:var(--ic-architectural-white)}/*!@:host(.button-variant-primary) .button:active:not(:focus),\n:host(.button-variant-primary.loading) .button*/.button-variant-primary.sc-ic-button-h .button.sc-ic-button:active:not(:focus),.button-variant-primary.loading.sc-ic-button-h .button.sc-ic-button{background-color:var(--button-default-active)}/*!@:host(.button-variant-primary) .button:active:focus*/.button-variant-primary.sc-ic-button-h .button.sc-ic-button:active:focus{background-color:var(--button-default-active)}/*!@:host(.button-variant-primary) .button:active*/.button-variant-primary.sc-ic-button-h .button.sc-ic-button:active{background-color:var(--button-default-active)}/*!@:host(.button-variant-primary:not(.light)) .button:active*/.button-variant-primary.sc-ic-button-h:not(.light) .button.sc-ic-button:active{color:var(--ic-architectural-white)}/*!@:host(.button-variant-primary.disabled) .button*/.button-variant-primary.disabled.sc-ic-button-h .button.sc-ic-button{background:var(--ic-architectural-200);color:var(--ic-architectural-300)}/*!@:host(.button-variant-primary.light.disabled) .button*/.button-variant-primary.light.disabled.sc-ic-button-h .button.sc-ic-button{background:var(--ic-architectural-600);color:var(--ic-architectural-500)}/*!@:host(.button-variant-secondary) .button*/.button-variant-secondary.sc-ic-button-h .button.sc-ic-button{border:var(--ic-border-width) solid var(--button-default);color:var(--button-default)}/*!@:host(.button-variant-secondary) .button:hover:not(:focus),\n:host(.button-variant-secondary) .button:hover:focus*/.button-variant-secondary.sc-ic-button-h .button.sc-ic-button:hover:not(:focus),.button-variant-secondary.sc-ic-button-h .button.sc-ic-button:hover:focus{background-color:var(--button-default-background-hover);border-color:var(--button-default-hover);color:var(--button-default-hover)}/*!@:host(.button-variant-secondary) .button:active:not(:focus),\n:host(.button-variant-secondary) .button:active:focus,\n:host(.button-variant-secondary) .button:active*/.button-variant-secondary.sc-ic-button-h .button.sc-ic-button:active:not(:focus),.button-variant-secondary.sc-ic-button-h .button.sc-ic-button:active:focus,.button-variant-secondary.sc-ic-button-h .button.sc-ic-button:active{border-color:var(--button-default-active);background-color:var(--button-default-background-active);color:var(--button-default-active)}/*!@:host(.button-variant-secondary.loading) .button*/.button-variant-secondary.loading.sc-ic-button-h .button.sc-ic-button{border-color:var(--button-default-active);background-color:var(--button-default-background-active);color:var(--button-default-active)}/*!@:host(.button-variant-secondary.disabled) .button,\n:host(.button-variant-secondary.disabled) .button:hover,\n:host(.button-variant-secondary.disabled) .button:active*/.button-variant-secondary.disabled.sc-ic-button-h .button.sc-ic-button,.button-variant-secondary.disabled.sc-ic-button-h .button.sc-ic-button:hover,.button-variant-secondary.disabled.sc-ic-button-h .button.sc-ic-button:active{border-color:var(--ic-architectural-300);color:var(--ic-architectural-300);background:none}/*!@:host(.button-variant-secondary.light.disabled) .button,\n:host(.button-variant-secondary.light.disabled) .button:hover,\n:host(.button-variant-secondary.light.disabled) .button:active*/.button-variant-secondary.light.disabled.sc-ic-button-h .button.sc-ic-button,.button-variant-secondary.light.disabled.sc-ic-button-h .button.sc-ic-button:hover,.button-variant-secondary.light.disabled.sc-ic-button-h .button.sc-ic-button:active{border-color:var(--ic-architectural-500);color:var(--ic-architectural-500);background:none}/*!@:host(.button-variant-tertiary) .button*/.button-variant-tertiary.sc-ic-button-h .button.sc-ic-button{color:var(--button-default)}/*!@:host(.button-variant-tertiary) .button:hover:not(:focus),\n:host(.button-variant-tertiary) .button:hover:focus*/.button-variant-tertiary.sc-ic-button-h .button.sc-ic-button:hover:not(:focus),.button-variant-tertiary.sc-ic-button-h .button.sc-ic-button:hover:focus{background-color:var(--button-default-background-hover);color:var(--button-default-hover)}/*!@:host(.button-variant-tertiary) .button:active:not(:focus),\n:host(.button-variant-tertiary) .button:active:focus,\n:host(.button-variant-tertiary) .button:active,\n:host(.button-variant-tertiary.loading) .button*/.button-variant-tertiary.sc-ic-button-h .button.sc-ic-button:active:not(:focus),.button-variant-tertiary.sc-ic-button-h .button.sc-ic-button:active:focus,.button-variant-tertiary.sc-ic-button-h .button.sc-ic-button:active,.button-variant-tertiary.loading.sc-ic-button-h .button.sc-ic-button{background-color:var(--button-default-background-active);color:var(--button-default-active)}/*!@:host(.button-variant-tertiary.disabled) .button,\n:host(.button-variant-tertiary.disabled) .button:hover,\n:host(.button-variant-tertiary.disabled) .button:active*/.button-variant-tertiary.disabled.sc-ic-button-h .button.sc-ic-button,.button-variant-tertiary.disabled.sc-ic-button-h .button.sc-ic-button:hover,.button-variant-tertiary.disabled.sc-ic-button-h .button.sc-ic-button:active{border-color:var(--ic-architectural-300);color:var(--ic-architectural-300);background:none}/*!@:host(.button-variant-tertiary.light.disabled) .button,\n:host(.button-variant-tertiary.light.disabled) .button:hover,\n:host(.button-variant-tertiary.light.disabled) .button:active*/.button-variant-tertiary.light.disabled.sc-ic-button-h .button.sc-ic-button,.button-variant-tertiary.light.disabled.sc-ic-button-h .button.sc-ic-button:hover,.button-variant-tertiary.light.disabled.sc-ic-button-h .button.sc-ic-button:active{border-color:var(--ic-architectural-500);color:var(--ic-architectural-500);background:none}/*!@:host(.button-variant-icon) .button*/.button-variant-icon.sc-ic-button-h .button.sc-ic-button{color:var(--button-default);min-width:0;gap:var(--ic-space-xs);margin:var(--ic-space-1px) 0}/*!@:host(.button-variant-icon) .icon-container*/.button-variant-icon.sc-ic-button-h .icon-container.sc-ic-button{width:var(--ic-space-lg) !important;height:var(--ic-space-lg) !important}/*!@:host(.button-variant-icon) .button:hover:not(:focus)*/.button-variant-icon.sc-ic-button-h .button.sc-ic-button:hover:not(:focus){background-color:var(--button-default-background-hover);color:var(--button-default-hover)}/*!@:host(.button-variant-icon) .button:active:not(:focus),\n:host(.button-variant-icon.loading) .button*/.button-variant-icon.sc-ic-button-h .button.sc-ic-button:active:not(:focus),.button-variant-icon.loading.sc-ic-button-h .button.sc-ic-button{background-color:var(--button-default-background-active);color:var(--button-default-active)}/*!@:host(.button-variant-icon.disabled) .button,\n:host(.button-variant-icon.disabled) .button:hover,\n:host(.button-variant-icon.disabled) .button:active*/.button-variant-icon.disabled.sc-ic-button-h .button.sc-ic-button,.button-variant-icon.disabled.sc-ic-button-h .button.sc-ic-button:hover,.button-variant-icon.disabled.sc-ic-button-h .button.sc-ic-button:active{color:var(--ic-architectural-300);background:none}/*!@:host(.button-variant-destructive) .button*/.button-variant-destructive.sc-ic-button-h .button.sc-ic-button{color:var(--ic-architectural-white);background-color:var(--ic-action-destructive);text-transform:uppercase}/*!@:host(.button-variant-destructive) .button:hover:not(:focus),\n:host(.button-variant-destructive) .button:hover:focus*/.button-variant-destructive.sc-ic-button-h .button.sc-ic-button:hover:not(:focus),.button-variant-destructive.sc-ic-button-h .button.sc-ic-button:hover:focus{background-color:var(--ic-action-destructive-hover)}/*!@:host(.button-variant-destructive) .button:active:not(:focus),\n:host(.button-variant-destructive) .button:active:focus,\n:host(.button-variant-destructive.loading) .button*/.button-variant-destructive.sc-ic-button-h .button.sc-ic-button:active:not(:focus),.button-variant-destructive.sc-ic-button-h .button.sc-ic-button:active:focus,.button-variant-destructive.loading.sc-ic-button-h .button.sc-ic-button{background-color:var(--ic-action-destructive-active)}/*!@:host(.button-variant-destructive.disabled) .button*/.button-variant-destructive.disabled.sc-ic-button-h .button.sc-ic-button{background:var(--ic-architectural-200);color:var(--ic-architectural-300)}/*!@:host(.button-size-default) .button*/.button-size-default.sc-ic-button-h .button.sc-ic-button{height:var(--height, 2.5rem);padding:var(--ic-space-xs) var(--ic-space-md)}/*!@:host(.button-size-small) .button*/.button-size-small.sc-ic-button-h .button.sc-ic-button{height:var(--height, var(--ic-space-xl));padding:var(--ic-space-xxs) var(--ic-space-md)}/*!@:host(.button-size-large) .button*/.button-size-large.sc-ic-button-h .button.sc-ic-button{height:var(--height, var(--ic-space-xxl));padding:var(--ic-space-sm) var(--ic-space-md)}/*!@:host(.button-size-default.button-variant-icon) .button*/.button-size-default.button-variant-icon.sc-ic-button-h .button.sc-ic-button{height:var(--height, var(--ic-space-xl));width:var(--ic-space-xl);padding:0.375rem}/*!@:host(.button-size-small.button-variant-icon) .button*/.button-size-small.button-variant-icon.sc-ic-button-h .button.sc-ic-button{height:var(--height, var(--ic-space-lg));width:var(--ic-space-lg);padding:var(--ic-space-xxs)}/*!@:host(.button-size-large.button-variant-icon) .button*/.button-size-large.button-variant-icon.sc-ic-button-h .button.sc-ic-button{height:var(--height, 2.5rem);width:2.5rem;padding:var(--ic-space-xs)}/*!@:host(.full-width),\n:host(.full-width) .button*/.full-width.sc-ic-button-h,.full-width.sc-ic-button-h .button.sc-ic-button{width:100%}/*!@div.loading-container*/div.loading-container.sc-ic-button{position:relative;align-items:center;width:100%}/*!@ic-loading-indicator*/ic-loading-indicator.sc-ic-button{--outer-color:transparent}@keyframes loading-animation{0%{width:0%;left:0%}25%{width:0%;left:0%;opacity:0}50%{width:100%;left:0%;opacity:1}75%{width:0%;left:100%}100%{width:0%;left:100%;opacity:0}}/*!@div.icon-container*/div.icon-container.sc-ic-button{box-sizing:border-box;width:var(--ic-space-lg);height:var(--ic-space-lg);display:flex;justify-content:center;align-items:center}/*!@::slotted(:not(ic-badge))*/.sc-ic-button-s>:not(ic-badge){width:var(--icon-width) !important;height:var(--icon-height) !important;fill:currentcolor !important;pointer-events:none}/*!@:host(.button-variant-icon) .button .icon-container*/.button-variant-icon.sc-ic-button-h .button.sc-ic-button .icon-container.sc-ic-button{margin:0;pointer-events:none}/*!@:host(.search-submit-button) ::slotted(svg)*/.sc-ic-button-h.search-submit-button .sc-ic-button-s>svg{--icon-height:1.25rem;--icon-width:1.25rem}/*!@:host(.search-submit-button-small) ::slotted(svg)*/.sc-ic-button-h.search-submit-button-small .sc-ic-button-s>svg{--icon-height:1rem;--icon-width:1rem}/*!@:host(.clear-button)*/.clear-button.sc-ic-button-h{margin:0 var(--ic-space-xxs)}/*!@:host(.clear-button) .button:focus*/.clear-button.sc-ic-button-h .button.sc-ic-button:focus{box-shadow:none}/*!@:host(.search-submit-button) .button:focus*/.search-submit-button.sc-ic-button-h .button.sc-ic-button:focus{box-shadow:none}/*!@:host(.search-submit-button) .button:not(:active):focus*/.search-submit-button.sc-ic-button-h .button.sc-ic-button:not(:active):focus{box-shadow:none;background-color:var(--ic-action-default-bg-hover)}/*!@:host(.search-submit-button)*/.search-submit-button.sc-ic-button-h{display:flex;align-items:center;margin:0 var(--ic-space-xxs)}/*!@:host(.menu-close-button) ::slotted(svg)*/.sc-ic-button-h.menu-close-button .sc-ic-button-s>svg{--icon-height:0.875rem;--icon-width:0.875rem}/*!@:host(.popout-menu-button) .button*/.popout-menu-button.sc-ic-button-h .button.sc-ic-button{height:var(--height);justify-content:left;border-radius:0;white-space:pre-line;text-align:start}/*!@:host(.popout-menu-button) div.icon-container*/.popout-menu-button.sc-ic-button-h div.icon-container.sc-ic-button{flex:none}/*!@:host(.popout-menu-button) .button:focus*/.popout-menu-button.sc-ic-button-h .button.sc-ic-button:focus{box-shadow:var(--ic-border-focus-inset);border-radius:var(--ic-border-radius-inset)}/*!@.ic-button-describedby*/.ic-button-describedby.sc-ic-button{display:none}/*!@:host .ic-tooltip*/.sc-ic-button-h .ic-tooltip.sc-ic-button{display:block}@media (forced-colors: active){/*!@.button*/.button.sc-ic-button{border:0.125rem solid transparent}}/*!@:host(.flip) ::slotted(svg)*/.sc-ic-button-h.flip .sc-ic-button-s>svg{transform:scaleX(-1)}";

var __rest = (undefined && undefined.__rest) || function (s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
let buttonIds = 0;
/**
 * @slot icon - Deprecated. This slot should not be used anymore. Use left-icon or right-icon slot instead.
 * @slot left-icon - Content will be placed to the left of the button label.
 * @slot right-icon - Content will be placed to the right of the button label.
 * @slot badge - Badge component overlaying the top right of the button.
 */
class Button {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.icBlur = createEvent(this, "icBlur", 7);
    this.icFocus = createEvent(this, "icFocus", 7);
    this.buttonIdNum = buttonIds++;
    this.hasTooltip = false;
    this.inheritedAttributes = {};
    this.describedByEl = null;
    this.describedById = null;
    this.mutationObserver = null;
    this.hostMutationObserver = null;
    this.setViewBox = () => {
      let iconEl;
      if (this.hasLeftIconSlot()) {
        iconEl = this.el.querySelector(`[slot="left-icon"]`);
      }
      else if (this.hasRightIconSlot()) {
        iconEl = this.el.querySelector(`[slot="right-icon"]`);
      }
      else {
        iconEl = null;
      }
      return iconEl;
    };
    this.handleClick = () => {
      if ((this.el.type === "submit" || this.el.type === "reset") &&
        !!this.el.closest("FORM")) {
        this.handleHiddenFormButtonClick(this.el.closest("FORM"));
      }
    };
    this.onFocus = () => {
      this.icFocus.emit();
    };
    this.onBlur = () => {
      this.icBlur.emit();
    };
    this.loadingWidth = () => {
      if (this.loading) {
        this.el.style.setProperty("--min-width", `${this.el.getBoundingClientRect().width}px`);
      }
    };
    // triggered when text content of sibling element in light DOM changes
    this.mutationCallback = () => {
      this.describedByContent = this.describedByEl.innerText;
    };
    // triggered when attributes of host element change
    this.hostMutationCallback = (mutationList) => {
      mutationList.forEach((item) => {
        if (item.attributeName === "title") {
          this.title = this.el.getAttribute(item.attributeName);
        }
        if (item.attributeName === "aria-label") {
          this.ariaLabel = this.el.getAttribute(item.attributeName);
        }
        if (IC_INHERITED_ARIA.includes(item.attributeName)) {
          this.inheritedAttributes[item.attributeName] = this.el.getAttribute(item.attributeName);
        }
      });
    };
    this.ariaLabel = null;
    this.describedByContent = null;
    this.title = null;
    this.appearance = "default";
    this.ariaControlsId = undefined;
    this.ariaOwnsId = undefined;
    this.disabled = false;
    this.disableTooltip = false;
    this.download = false;
    this.form = undefined;
    this.formaction = undefined;
    this.formenctype = undefined;
    this.formmethod = undefined;
    this.formnovalidate = undefined;
    this.formtarget = undefined;
    this.fullWidth = false;
    this.href = undefined;
    this.hreflang = undefined;
    this.loading = false;
    this.referrerpolicy = undefined;
    this.rel = undefined;
    this.size = "default";
    this.target = undefined;
    this.tooltipPlacement = "bottom";
    this.type = "button";
    this.variant = "primary";
  }
  disconnectedCallback() {
    if (this.mutationObserver !== null && this.mutationObserver !== undefined) {
      this.mutationObserver.disconnect();
    }
    if (this.hostMutationObserver !== null &&
      this.hostMutationObserver !== undefined) {
      this.hostMutationObserver.disconnect();
    }
  }
  componentWillUpdate() {
    this.loadingWidth();
  }
  componentWillLoad() {
    const allInheritedAttributes = inheritAttributes(this.el, [
      ...IC_INHERITED_ARIA,
      "title",
    ]);
    const { title, "aria-label": ariaLabel } = allInheritedAttributes, restInheritedAttributes = __rest(allInheritedAttributes, ["title", "aria-label"]);
    this.title = title;
    this.ariaLabel = ariaLabel;
    this.inheritedAttributes = restInheritedAttributes;
    removeDisabledFalse(this.disabled, this.el);
    this.el.setAttribute("exportparts", "button");
    const id = this.el.id;
    this.id = id !== undefined ? id : null;
    this.hasTooltip =
      !this.disableTooltip && (!!this.title || this.variant === "icon");
    if (!this.hasTooltip) {
      const describedById = this.inheritedAttributes["aria-describedby"];
      if (describedById !== undefined) {
        this.describedById = describedById;
        const el = this.el.parentElement.querySelector(`#${describedById}`);
        if (el !== undefined && el !== null) {
          this.describedByContent = el.innerText;
          this.describedByEl = el;
        }
      }
    }
  }
  componentDidLoad() {
    this.updateTheme();
    if (typeof MutationObserver !== "undefined") {
      if (this.describedById) {
        this.mutationObserver = new MutationObserver(this.mutationCallback);
        this.mutationObserver.observe(this.describedByEl, {
          characterData: true,
          childList: true,
          subtree: true,
        });
      }
      this.hostMutationObserver = new MutationObserver(this.hostMutationCallback);
      this.hostMutationObserver.observe(this.el, {
        attributes: true,
      });
    }
  }
  componentWillRender() {
    var _a;
    (_a = this.setViewBox()) === null || _a === void 0 ? void 0 : _a.setAttribute("viewBox", "0 0 24 24");
  }
  handleHostClick(event) {
    if (this.disabled || this.loading) {
      event.stopImmediatePropagation();
    }
  }
  themeChangeHandler(ev) {
    const theme = ev.detail;
    this.updateTheme(theme.mode);
  }
  /**
   * Sets focus on the native `button`.
   */
  async setFocus() {
    if (this.buttonEl) {
      this.buttonEl.focus();
    }
  }
  hasIconSlot() {
    const iconEl = this.el.querySelector(`[slot="icon"]`);
    return iconEl !== null;
  }
  hasLeftIconSlot() {
    const iconEl = this.el.querySelector(`[slot="left-icon"]`);
    return iconEl !== null;
  }
  hasRightIconSlot() {
    const iconEl = this.el.querySelector(`[slot="right-icon"]`);
    return iconEl !== null;
  }
  handleHiddenFormButtonClick(form) {
    const hiddenFormButton = document.createElement("button");
    hiddenFormButton.setAttribute("type", this.el.type);
    hiddenFormButton.style.display = "none";
    form.appendChild(hiddenFormButton);
    hiddenFormButton.click();
    hiddenFormButton.remove();
  }
  updateTheme(newTheme = null) {
    const foregroundColor = getThemeFromContext(this.el, newTheme || null);
    if (foregroundColor !== IcThemeForegroundEnum.Default) {
      this.appearance = foregroundColor;
    }
  }
  render() {
    const TagType = (this.href && "a") || "button";
    const { title, ariaLabel, inheritedAttributes } = this;
    const buttonAttrs = TagType === "button"
      ? {
        type: this.type,
        disabled: this.disabled,
        form: this.form,
        formaction: this.formaction,
        formenctype: this.formenctype,
        formmethod: this.formmethod,
        formnovalidate: this.formnovalidate,
        formtarget: this.formtarget,
      }
      : {
        download: this.download !== false ? this.download : null,
        href: this.href,
        rel: this.rel,
        target: this.target,
        referrerpolicy: this.referrerpolicy,
        hreflang: this.hreflang,
      };
    let describedBy = null;
    let buttonId = null;
    if (this.hasTooltip) {
      buttonId =
        this.id !== null
          ? `ic-button-with-tooltip-${this.id}`
          : `ic-button-with-tooltip-${this.buttonIdNum}`;
      describedBy = `ic-tooltip-${buttonId}`;
    }
    else {
      describedBy = this.describedById;
    }
    const ButtonContent = () => {
      return (hAsync(TagType, Object.assign({ class: "button", "aria-disabled": this.loading || this.disabled ? "true" : null, "aria-label": this.loading ? "Loading" : ariaLabel }, buttonAttrs, inheritedAttributes, { onFocus: this.onFocus, onBlur: this.onBlur, ref: (el) => (this.buttonEl = el), "aria-describedby": describedBy, part: "button" }), this.hasIconSlot() && !this.loading && (hAsync("div", { class: "icon-container" }, hAsync("slot", { name: "icon" }))), this.hasLeftIconSlot() && !this.loading && (hAsync("div", { class: "icon-container" }, hAsync("slot", { name: "left-icon" }))), this.loading ? (hAsync("div", { class: "loading-container" }, hAsync("ic-loading-indicator", { type: "linear", appearance: this.variant === "primary" ||
          this.variant === "destructive" ||
          this.appearance === IcThemeForegroundEnum.Dark ||
          this.appearance === IcThemeForegroundEnum.Light
          ? "light"
          : "dark" }))) : (hAsync("slot", null)), this.hasRightIconSlot() && !this.loading && (hAsync("div", { class: "icon-container" }, hAsync("slot", { name: "right-icon" })))));
    };
    return (hAsync(Host, { class: {
        ["disabled"]: this.disabled && !this.loading,
        [`button-variant-${this.variant}`]: true,
        [`button-size-${this.size}`]: true,
        ["loading"]: this.loading,
        ["dark"]: this.appearance === IcThemeForegroundEnum.Dark,
        ["light"]: this.appearance === IcThemeForegroundEnum.Light,
        ["full-width"]: this.fullWidth,
        ["with-badge"]: isSlotUsed$1(this.el, "badge"),
      }, onClick: this.handleClick, "aria-owns": this.ariaOwnsId, "aria-controls": this.ariaControlsId }, this.hasTooltip && (hAsync("ic-tooltip", { id: describedBy, label: title ? title : ariaLabel, target: buttonId, placement: this.tooltipPlacement }, hAsync(ButtonContent, null))), isSlotUsed$1(this.el, "badge") && hAsync("slot", { name: "badge" }), !this.hasTooltip && hAsync(ButtonContent, null), this.describedByContent && (hAsync("span", { id: describedBy, class: "ic-button-describedby" }, this.describedByContent))));
  }
  static get delegatesFocus() { return true; }
  get el() { return getElement(this); }
  static get style() { return icButtonCss; }
  static get cmpMeta() { return {
    "$flags$": 25,
    "$tagName$": "ic-button",
    "$members$": {
      "appearance": [1025],
      "ariaControlsId": [8, "aria-controls-id"],
      "ariaOwnsId": [8, "aria-owns-id"],
      "disabled": [4],
      "disableTooltip": [4, "disable-tooltip"],
      "download": [8],
      "form": [1],
      "formaction": [1],
      "formenctype": [1],
      "formmethod": [1],
      "formnovalidate": [4],
      "formtarget": [1],
      "fullWidth": [4, "full-width"],
      "href": [1],
      "hreflang": [1],
      "loading": [4],
      "referrerpolicy": [1],
      "rel": [1],
      "size": [1],
      "target": [1],
      "tooltipPlacement": [1, "tooltip-placement"],
      "type": [1],
      "variant": [1],
      "ariaLabel": [32],
      "describedByContent": [32],
      "title": [32],
      "setFocus": [64]
    },
    "$listeners$": [[2, "click", "handleHostClick"], [4, "themeChange", "themeChangeHandler"]],
    "$lazyBundleId$": "-",
    "$attrsToReflect$": []
  }; }
}

const icCardCss = "/*!@html*/html.sc-ic-card{line-height:1.15;-webkit-text-size-adjust:100%}/*!@body*/body.sc-ic-card{margin:0}/*!@main*/main.sc-ic-card{display:block}/*!@h1*/h1.sc-ic-card{font-size:2em;margin:0.67em 0}/*!@hr*/hr.sc-ic-card{box-sizing:content-box;height:0;overflow:visible}/*!@pre*/pre.sc-ic-card{font-family:monospace, monospace;font-size:1em}/*!@a*/a.sc-ic-card{background-color:transparent}/*!@abbr[title]*/abbr[title].sc-ic-card{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}/*!@b,\nstrong*/b.sc-ic-card,strong.sc-ic-card{font-weight:bolder}/*!@code,\nkbd,\nsamp*/code.sc-ic-card,kbd.sc-ic-card,samp.sc-ic-card{font-family:monospace, monospace;font-size:1em}/*!@small*/small.sc-ic-card{font-size:80%}/*!@sub,\nsup*/sub.sc-ic-card,sup.sc-ic-card{font-size:75%;line-height:0;position:relative;vertical-align:baseline}/*!@sub*/sub.sc-ic-card{bottom:-0.25em}/*!@sup*/sup.sc-ic-card{top:-0.5em}/*!@img*/img.sc-ic-card{border-style:none}/*!@button,\ninput,\noptgroup,\nselect,\ntextarea*/button.sc-ic-card,input.sc-ic-card,optgroup.sc-ic-card,select.sc-ic-card,textarea.sc-ic-card{font-family:inherit;font-size:100%;line-height:1.15;margin:0}/*!@button,\ninput*/button.sc-ic-card,input.sc-ic-card{overflow:visible}/*!@button,\nselect*/button.sc-ic-card,select.sc-ic-card{text-transform:none}/*!@button,\n[type=\"button\"],\n[type=\"reset\"],\n[type=\"submit\"]*/button.sc-ic-card,[type=\"button\"].sc-ic-card,[type=\"reset\"].sc-ic-card,[type=\"submit\"].sc-ic-card{-webkit-appearance:button}/*!@button::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner*/button.sc-ic-card::-moz-focus-inner,[type=\"button\"].sc-ic-card::-moz-focus-inner,[type=\"reset\"].sc-ic-card::-moz-focus-inner,[type=\"submit\"].sc-ic-card::-moz-focus-inner{border-style:none;padding:0}/*!@button:-moz-focusring,\n[type=\"button\"]:-moz-focusring,\n[type=\"reset\"]:-moz-focusring,\n[type=\"submit\"]:-moz-focusring*/button.sc-ic-card:-moz-focusring,[type=\"button\"].sc-ic-card:-moz-focusring,[type=\"reset\"].sc-ic-card:-moz-focusring,[type=\"submit\"].sc-ic-card:-moz-focusring{outline:1px dotted ButtonText}/*!@fieldset*/fieldset.sc-ic-card{padding:0.35em 0.75em 0.625em}/*!@legend*/legend.sc-ic-card{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}/*!@progress*/progress.sc-ic-card{vertical-align:baseline}/*!@textarea*/textarea.sc-ic-card{overflow:auto}/*!@[type=\"checkbox\"],\n[type=\"radio\"]*/[type=\"checkbox\"].sc-ic-card,[type=\"radio\"].sc-ic-card{box-sizing:border-box;padding:0}/*!@[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button*/[type=\"number\"].sc-ic-card::-webkit-inner-spin-button,[type=\"number\"].sc-ic-card::-webkit-outer-spin-button{height:auto}/*!@[type=\"search\"]*/[type=\"search\"].sc-ic-card{-webkit-appearance:textfield;outline-offset:-2px}/*!@[type=\"search\"]::-webkit-search-decoration*/[type=\"search\"].sc-ic-card::-webkit-search-decoration{-webkit-appearance:none}/*!@::-webkit-file-upload-button*/.sc-ic-card::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}/*!@details*/details.sc-ic-card{display:block}/*!@summary*/summary.sc-ic-card{display:list-item}/*!@template*/template.sc-ic-card{display:none}/*!@[hidden]*/[hidden].sc-ic-card{display:none}/*!@html,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo*/html.sc-ic-card,body.sc-ic-card,div.sc-ic-card,span.sc-ic-card,applet.sc-ic-card,object.sc-ic-card,iframe.sc-ic-card,h1.sc-ic-card,h2.sc-ic-card,h3.sc-ic-card,h4.sc-ic-card,h5.sc-ic-card,h6.sc-ic-card,p.sc-ic-card,blockquote.sc-ic-card,pre.sc-ic-card,a.sc-ic-card,abbr.sc-ic-card,acronym.sc-ic-card,address.sc-ic-card,big.sc-ic-card,cite.sc-ic-card,code.sc-ic-card,del.sc-ic-card,dfn.sc-ic-card,em.sc-ic-card,img.sc-ic-card,ins.sc-ic-card,kbd.sc-ic-card,q.sc-ic-card,s.sc-ic-card,samp.sc-ic-card,small.sc-ic-card,strike.sc-ic-card,strong.sc-ic-card,sub.sc-ic-card,sup.sc-ic-card,tt.sc-ic-card,var.sc-ic-card,b.sc-ic-card,u.sc-ic-card,i.sc-ic-card,center.sc-ic-card,dl.sc-ic-card,dt.sc-ic-card,dd.sc-ic-card,ol.sc-ic-card,ul.sc-ic-card,li.sc-ic-card,fieldset.sc-ic-card,form.sc-ic-card,label.sc-ic-card,legend.sc-ic-card,table.sc-ic-card,caption.sc-ic-card,tbody.sc-ic-card,tfoot.sc-ic-card,thead.sc-ic-card,tr.sc-ic-card,th.sc-ic-card,td.sc-ic-card,article.sc-ic-card,aside.sc-ic-card,canvas.sc-ic-card,details.sc-ic-card,embed.sc-ic-card,figure.sc-ic-card,figcaption.sc-ic-card,footer.sc-ic-card,header.sc-ic-card,hgroup.sc-ic-card,menu.sc-ic-card,nav.sc-ic-card,output.sc-ic-card,ruby.sc-ic-card,section.sc-ic-card,summary.sc-ic-card,time.sc-ic-card,mark.sc-ic-card,audio.sc-ic-card,video.sc-ic-card{margin:0;padding:0;border:0;font-size:100%;font-style:inherit;vertical-align:baseline}/*!@:host*/.sc-ic-card-h{display:flex}/*!@a*/a.sc-ic-card{text-decoration:none !important;color:var(--ic-architechtural-black) !important}/*!@button*/button.sc-ic-card{border:none;background-color:transparent;outline:var(--ic-hc-focus-outline)}/*!@.card,\n.card.clickable*/.card.sc-ic-card,.card.clickable.sc-ic-card{display:flex;flex-direction:column;border:var(--ic-border-default);border-radius:var(--ic-border-radius);box-sizing:border-box;padding:var(--ic-space-md);text-align:left;color:var(--ic-architechtural-black);transition:var(--ic-easing-transition-fast);width:inherit;position:relative}/*!@.dark.card,\n.dark.card.clickable*/.dark.card.sc-ic-card,.dark.card.clickable.sc-ic-card{border:var(--ic-border-width) solid var(--ic-architectural-700)}/*!@.card.clickable:hover*/.card.clickable.sc-ic-card:hover{background-color:var(--ic-action-default-bg-hover);border:var(--ic-border-hover);cursor:pointer}/*!@.card.clickable:focus,\n.card.clickable.focussed*/.card.clickable.sc-ic-card:focus,.card.clickable.focussed.sc-ic-card{background-color:var(--ic-action-default-bg-hover);box-shadow:var(--ic-border-focus);outline:var(--ic-hc-focus-outline);border:var(--ic-border-pressed)}/*!@.card.clickable:active*/.card.clickable.sc-ic-card:active{background-color:var(--ic-action-default-bg-active);box-shadow:var(--ic-border-focus)}/*!@.card.disabled*/.card.disabled.sc-ic-card{border:var(--ic-border-disabled)}/*!@.card.fullwidth*/.card.fullwidth.sc-ic-card{width:100%}/*!@.card-header*/.card-header.sc-ic-card{display:flex;align-items:center}/*!@.icon*/.icon.sc-ic-card{display:flex;align-items:center;padding-right:var(--ic-space-xs)}/*!@.card.disabled ::slotted(svg)*/.card.disabled .sc-ic-card-s>svg{fill:var(--ic-color-tertiary-text)}/*!@.card.clickable .card-title*/.card.clickable.sc-ic-card .card-title.sc-ic-card{color:var(--ic-hyperlink);text-decoration:underline;text-decoration-thickness:var(--ic-space-1px)}/*!@.card.clickable:hover .card-title,\n.card.clickable:focus .card-title,\n.card.clickable.focussed .card-title*/.card.clickable.sc-ic-card:hover .card-title.sc-ic-card,.card.clickable.sc-ic-card:focus .card-title.sc-ic-card,.card.clickable.focussed.sc-ic-card .card-title.sc-ic-card{display:inline-block;border-bottom:0.25rem solid !important;margin-bottom:-0.25rem !important;text-decoration:none}@supports (text-decoration-thickness: 25%){/*!@.card.clickable:hover .card-title,\n  .card.clickable:focus .card-title,\n  .card.clickable.focussed .card-title*/.card.clickable.sc-ic-card:hover .card-title.sc-ic-card,.card.clickable.sc-ic-card:focus .card-title.sc-ic-card,.card.clickable.focussed.sc-ic-card .card-title.sc-ic-card{text-decoration-line:underline;text-decoration-thickness:25%;text-underline-offset:25%;border-bottom:0 !important;margin-bottom:0 !important}}/*!@.card.clickable:active .card-title*/.card.clickable.sc-ic-card:active .card-title.sc-ic-card{text-decoration:none}/*!@.card.disabled .card-title*/.card.disabled.sc-ic-card .card-title.sc-ic-card{text-decoration:underline;text-decoration-thickness:var(--ic-space-1px);text-decoration-color:var(--ic-color-tertiary-text);color:var(--ic-color-tertiary-text)}/*!@.subheading*/.subheading.sc-ic-card{margin-top:var(--ic-space-xxs)}/*!@.adornment*/.adornment.sc-ic-card{margin-top:var(--ic-space-xxs)}/*!@.card-message*/.card-message.sc-ic-card{margin-top:var(--ic-space-md);align-items:left}/*!@.card.disabled .card-message,\n.card.disabled .subheading*/.card.disabled.sc-ic-card .card-message.sc-ic-card,.card.disabled.sc-ic-card .subheading.sc-ic-card{color:var(--ic-color-tertiary-text)}/*!@.interaction-button*/.interaction-button.sc-ic-card{margin-left:auto}/*!@.image-top*/.image-top.sc-ic-card{margin-bottom:var(--ic-space-md);display:flex;justify-content:center}/*!@.image-mid*/.image-mid.sc-ic-card{margin-top:var(--ic-space-md);display:flex;justify-content:center}/*!@.interaction-area*/.interaction-area.sc-ic-card{display:flex;flex-grow:1;gap:var(--ic-space-md);margin-top:var(--ic-space-md);align-items:flex-end}/*!@.interaction-controls*/.interaction-controls.sc-ic-card{display:flex;align-items:center;flex-wrap:wrap;gap:var(--ic-space-sm)}/*!@.toggle-button*/.toggle-button.sc-ic-card{margin-left:auto}/*!@.toggle-button-closed svg*/.toggle-button-closed.sc-ic-card svg.sc-ic-card{transform:rotate(90deg)}/*!@.toggle-button-expanded svg*/.toggle-button-expanded.sc-ic-card svg.sc-ic-card{transform:rotate(-90deg)}/*!@.expanded-content*/.expanded-content.sc-ic-card{margin-top:var(--ic-space-md)}@media (forced-colors: active){/*!@.card ::slotted(svg)*/.card .sc-ic-card-s>svg{fill:currentcolor}/*!@.card.disabled ::slotted(svg)*/.card.disabled .sc-ic-card-s>svg{fill:GrayText !important}/*!@.card.disabled*/.card.disabled.sc-ic-card{border-color:GrayText !important}/*!@.card.disabled .card-message,\n  .card.disabled .subheading,\n  .card.disabled .card-title*/.card.disabled.sc-ic-card .card-message.sc-ic-card,.card.disabled.sc-ic-card .subheading.sc-ic-card,.card.disabled.sc-ic-card .card-title.sc-ic-card{color:GrayText}}";

/**
 * @slot heading - Content will be placed at the top of the card to the right of the icon.
 * @slot message - Content will be placed in the main body of the card.
 * @slot subheading - Content will be placed below the card heading.
 * @slot adornment - Content will be placed below the card subheading.
 * @slot image-top - Content will be placed at the top of the card above all other content.
 * @slot image-mid - Content will be placed below the card heading section.
 * @slot icon - Content will be placed to the left of the card heading.
 * @slot interaction-button - Content will be placed in the top right corner of the heading section.
 * @slot interaction-controls - Content will be placed below the card message.
 * @slot expanded-content - Content will be placed below the interaction controls but will not initially be rendered.
 * @slot badge - Badge component overlaying the top right of the card.
 */
class Card {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.parentFocussed = () => {
      this.isFocussed = true;
    };
    this.parentBlurred = () => {
      this.isFocussed = false;
    };
    this.toggleExpanded = () => {
      this.areaExpanded = !this.areaExpanded;
    };
    this.appearance = "default";
    this.areaExpanded = false;
    this.isFocussed = false;
    this.parentEl = null;
    this.parentIsAnchorTag = false;
    this.clickable = false;
    this.disabled = false;
    this.expandable = false;
    this.fullWidth = false;
    this.heading = undefined;
    this.href = undefined;
    this.hreflang = "";
    this.message = "";
    this.referrerpolicy = undefined;
    this.rel = undefined;
    this.subheading = undefined;
    this.target = undefined;
  }
  disconnectedCallback() {
    if (this.parentIsAnchorTag) {
      this.parentEl.removeEventListener("focus", this.parentFocussed);
      this.parentEl.removeEventListener("blur", this.parentBlurred);
    }
  }
  componentWillLoad() {
    this.parentEl = this.el.parentElement;
    if (this.parentEl.tagName === "A") {
      this.clickable = true;
      this.parentIsAnchorTag = true;
      this.parentEl.classList.add("ic-card-wrapper-link");
      this.parentEl.addEventListener("focus", this.parentFocussed);
      this.parentEl.addEventListener("blur", this.parentBlurred);
    }
    removeDisabledFalse(this.disabled, this.el);
  }
  componentDidLoad() {
    onComponentRequiredPropUndefined([{ prop: this.heading, propName: "heading" }], "Card");
    this.updateTheme();
  }
  handleHostClick(event) {
    if (this.disabled) {
      event.stopImmediatePropagation();
    }
  }
  themeChangeHandler(ev) {
    const theme = ev.detail;
    this.updateTheme(theme.mode);
  }
  /**
   * Sets focus on the card.
   */
  async setFocus() {
    if (this.el.shadowRoot.querySelector("a")) {
      this.el.shadowRoot.querySelector("a").focus();
    }
    else if (this.el.shadowRoot.querySelector("button")) {
      this.el.shadowRoot.querySelector("button").focus();
    }
  }
  updateTheme(newTheme = null) {
    const foregroundColor = getThemeFromContext(this.el, newTheme || null);
    if (foregroundColor !== IcThemeForegroundEnum.Default) {
      this.appearance = foregroundColor;
    }
  }
  render() {
    const { clickable, disabled, expandable, heading, message, href, hreflang, referrerpolicy, rel, subheading, target, fullWidth, parentIsAnchorTag, isFocussed, } = this;
    const Component = parentIsAnchorTag
      ? "div"
      : clickable
        ? this.href === undefined
          ? "button"
          : "a"
        : "div";
    const attrs = Component == "a" && {
      href: href,
      hrefLang: hreflang,
      referrerPolicy: referrerpolicy,
      rel: rel,
      target: target,
    };
    return (hAsync(Component, Object.assign({ class: {
        ["card"]: true,
        ["clickable"]: clickable && !disabled,
        ["disabled"]: disabled,
        ["fullwidth"]: fullWidth,
        ["focussed"]: isFocussed,
        ["dark"]: this.appearance === IcThemeForegroundEnum.Dark,
      }, tabindex: clickable && !parentIsAnchorTag ? 0 : null, "aria-disabled": disabled ? "true" : null, disabled: disabled ? true : null }, attrs), isSlotUsed$1(this.el, "image-top") && (hAsync("div", { class: "image-top" }, hAsync("slot", { name: "image-top" }))), hAsync("div", { class: "card-header" }, isSlotUsed$1(this.el, "icon") && (hAsync("div", { class: "icon" }, hAsync("slot", { name: "icon" }))), hAsync("div", { class: "card-title" }, hAsync("slot", { name: "heading" }, hAsync("ic-typography", { variant: "h4" }, hAsync("p", null, heading)))), isSlotUsed$1(this.el, "interaction-button") && (hAsync("div", { class: "interaction-button" }, hAsync("slot", { name: "interaction-button" })))), (subheading || isSlotUsed$1(this.el, "subheading")) && (hAsync("div", { class: "subheading" }, hAsync("slot", { name: "subheading" }, hAsync("ic-typography", { variant: "subtitle-small" }, subheading)))), isSlotUsed$1(this.el, "adornment") && (hAsync("div", { class: "adornment" }, hAsync("slot", { name: "adornment" }))), isSlotUsed$1(this.el, "image-mid") && (hAsync("div", { class: "image-mid" }, hAsync("slot", { name: "image-mid" }))), (message || isSlotUsed$1(this.el, "message")) && (hAsync("div", { class: {
        ["card-message"]: true,
      } }, message && hAsync("ic-typography", { variant: "body" }, message), isSlotUsed$1(this.el, "message") && hAsync("slot", { name: "message" }))), (isSlotUsed$1(this.el, "interaction-controls") || expandable) && (hAsync("div", { class: "interaction-area" }, hAsync("div", { class: "interaction-controls" }, hAsync("slot", { name: "interaction-controls" })), expandable && (hAsync("ic-button", { class: {
        ["toggle-button"]: true,
        ["toggle-button-closed"]: !this.areaExpanded,
        ["toggle-button-expanded"]: this.areaExpanded,
      }, variant: "icon", size: "large", "aria-label": "Toggle expandable area", "aria-expanded": this.areaExpanded, "aria-controls": "expanded-content-area", onClick: this.toggleExpanded, innerHTML: chevronIcon })))), isSlotUsed$1(this.el, "expanded-content") && this.areaExpanded && (hAsync("div", { class: "expanded-content", id: "expanded-content-area" }, hAsync("slot", { name: "expanded-content" }))), isSlotUsed$1(this.el, "badge") && hAsync("slot", { name: "badge" })));
  }
  get el() { return getElement(this); }
  static get style() { return icCardCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "ic-card",
    "$members$": {
      "clickable": [1028],
      "disabled": [4],
      "expandable": [4],
      "fullWidth": [4, "full-width"],
      "heading": [1],
      "href": [1],
      "hreflang": [1],
      "message": [1],
      "referrerpolicy": [1],
      "rel": [1],
      "subheading": [1],
      "target": [1],
      "appearance": [32],
      "areaExpanded": [32],
      "isFocussed": [32],
      "parentEl": [32],
      "parentIsAnchorTag": [32],
      "setFocus": [64]
    },
    "$listeners$": [[2, "click", "handleHostClick"], [4, "themeChange", "themeChangeHandler"]],
    "$lazyBundleId$": "-",
    "$attrsToReflect$": []
  }; }
}

const icCheckboxCss = "/*!@html*/html.sc-ic-checkbox{line-height:1.15;-webkit-text-size-adjust:100%}/*!@body*/body.sc-ic-checkbox{margin:0}/*!@main*/main.sc-ic-checkbox{display:block}/*!@h1*/h1.sc-ic-checkbox{font-size:2em;margin:0.67em 0}/*!@hr*/hr.sc-ic-checkbox{box-sizing:content-box;height:0;overflow:visible}/*!@pre*/pre.sc-ic-checkbox{font-family:monospace, monospace;font-size:1em}/*!@a*/a.sc-ic-checkbox{background-color:transparent}/*!@abbr[title]*/abbr[title].sc-ic-checkbox{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}/*!@b,\nstrong*/b.sc-ic-checkbox,strong.sc-ic-checkbox{font-weight:bolder}/*!@code,\nkbd,\nsamp*/code.sc-ic-checkbox,kbd.sc-ic-checkbox,samp.sc-ic-checkbox{font-family:monospace, monospace;font-size:1em}/*!@small*/small.sc-ic-checkbox{font-size:80%}/*!@sub,\nsup*/sub.sc-ic-checkbox,sup.sc-ic-checkbox{font-size:75%;line-height:0;position:relative;vertical-align:baseline}/*!@sub*/sub.sc-ic-checkbox{bottom:-0.25em}/*!@sup*/sup.sc-ic-checkbox{top:-0.5em}/*!@img*/img.sc-ic-checkbox{border-style:none}/*!@button,\ninput,\noptgroup,\nselect,\ntextarea*/button.sc-ic-checkbox,input.sc-ic-checkbox,optgroup.sc-ic-checkbox,select.sc-ic-checkbox,textarea.sc-ic-checkbox{font-family:inherit;font-size:100%;line-height:1.15;margin:0}/*!@button,\ninput*/button.sc-ic-checkbox,input.sc-ic-checkbox{overflow:visible}/*!@button,\nselect*/button.sc-ic-checkbox,select.sc-ic-checkbox{text-transform:none}/*!@button,\n[type=\"button\"],\n[type=\"reset\"],\n[type=\"submit\"]*/button.sc-ic-checkbox,[type=\"button\"].sc-ic-checkbox,[type=\"reset\"].sc-ic-checkbox,[type=\"submit\"].sc-ic-checkbox{-webkit-appearance:button}/*!@button::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner*/button.sc-ic-checkbox::-moz-focus-inner,[type=\"button\"].sc-ic-checkbox::-moz-focus-inner,[type=\"reset\"].sc-ic-checkbox::-moz-focus-inner,[type=\"submit\"].sc-ic-checkbox::-moz-focus-inner{border-style:none;padding:0}/*!@button:-moz-focusring,\n[type=\"button\"]:-moz-focusring,\n[type=\"reset\"]:-moz-focusring,\n[type=\"submit\"]:-moz-focusring*/button.sc-ic-checkbox:-moz-focusring,[type=\"button\"].sc-ic-checkbox:-moz-focusring,[type=\"reset\"].sc-ic-checkbox:-moz-focusring,[type=\"submit\"].sc-ic-checkbox:-moz-focusring{outline:1px dotted ButtonText}/*!@fieldset*/fieldset.sc-ic-checkbox{padding:0.35em 0.75em 0.625em}/*!@legend*/legend.sc-ic-checkbox{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}/*!@progress*/progress.sc-ic-checkbox{vertical-align:baseline}/*!@textarea*/textarea.sc-ic-checkbox{overflow:auto}/*!@[type=\"checkbox\"],\n[type=\"radio\"]*/[type=\"checkbox\"].sc-ic-checkbox,[type=\"radio\"].sc-ic-checkbox{box-sizing:border-box;padding:0}/*!@[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button*/[type=\"number\"].sc-ic-checkbox::-webkit-inner-spin-button,[type=\"number\"].sc-ic-checkbox::-webkit-outer-spin-button{height:auto}/*!@[type=\"search\"]*/[type=\"search\"].sc-ic-checkbox{-webkit-appearance:textfield;outline-offset:-2px}/*!@[type=\"search\"]::-webkit-search-decoration*/[type=\"search\"].sc-ic-checkbox::-webkit-search-decoration{-webkit-appearance:none}/*!@::-webkit-file-upload-button*/.sc-ic-checkbox::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}/*!@details*/details.sc-ic-checkbox{display:block}/*!@summary*/summary.sc-ic-checkbox{display:list-item}/*!@template*/template.sc-ic-checkbox{display:none}/*!@[hidden]*/[hidden].sc-ic-checkbox{display:none}/*!@html,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo*/html.sc-ic-checkbox,body.sc-ic-checkbox,div.sc-ic-checkbox,span.sc-ic-checkbox,applet.sc-ic-checkbox,object.sc-ic-checkbox,iframe.sc-ic-checkbox,h1.sc-ic-checkbox,h2.sc-ic-checkbox,h3.sc-ic-checkbox,h4.sc-ic-checkbox,h5.sc-ic-checkbox,h6.sc-ic-checkbox,p.sc-ic-checkbox,blockquote.sc-ic-checkbox,pre.sc-ic-checkbox,a.sc-ic-checkbox,abbr.sc-ic-checkbox,acronym.sc-ic-checkbox,address.sc-ic-checkbox,big.sc-ic-checkbox,cite.sc-ic-checkbox,code.sc-ic-checkbox,del.sc-ic-checkbox,dfn.sc-ic-checkbox,em.sc-ic-checkbox,img.sc-ic-checkbox,ins.sc-ic-checkbox,kbd.sc-ic-checkbox,q.sc-ic-checkbox,s.sc-ic-checkbox,samp.sc-ic-checkbox,small.sc-ic-checkbox,strike.sc-ic-checkbox,strong.sc-ic-checkbox,sub.sc-ic-checkbox,sup.sc-ic-checkbox,tt.sc-ic-checkbox,var.sc-ic-checkbox,b.sc-ic-checkbox,u.sc-ic-checkbox,i.sc-ic-checkbox,center.sc-ic-checkbox,dl.sc-ic-checkbox,dt.sc-ic-checkbox,dd.sc-ic-checkbox,ol.sc-ic-checkbox,ul.sc-ic-checkbox,li.sc-ic-checkbox,fieldset.sc-ic-checkbox,form.sc-ic-checkbox,label.sc-ic-checkbox,legend.sc-ic-checkbox,table.sc-ic-checkbox,caption.sc-ic-checkbox,tbody.sc-ic-checkbox,tfoot.sc-ic-checkbox,thead.sc-ic-checkbox,tr.sc-ic-checkbox,th.sc-ic-checkbox,td.sc-ic-checkbox,article.sc-ic-checkbox,aside.sc-ic-checkbox,canvas.sc-ic-checkbox,details.sc-ic-checkbox,embed.sc-ic-checkbox,figure.sc-ic-checkbox,figcaption.sc-ic-checkbox,footer.sc-ic-checkbox,header.sc-ic-checkbox,hgroup.sc-ic-checkbox,menu.sc-ic-checkbox,nav.sc-ic-checkbox,output.sc-ic-checkbox,ruby.sc-ic-checkbox,section.sc-ic-checkbox,summary.sc-ic-checkbox,time.sc-ic-checkbox,mark.sc-ic-checkbox,audio.sc-ic-checkbox,video.sc-ic-checkbox{margin:0;padding:0;border:0;font-size:100%;font-style:inherit;vertical-align:baseline}/*!@:host(.disabled)*/.disabled.sc-ic-checkbox-h{color:var(--ic-architectural-200);pointer-events:none}/*!@.container*/.container.sc-ic-checkbox{display:flex;width:-moz-fit-content;width:fit-content;padding:var(--ic-space-xxs) 0 var(--ic-space-xxs) var(--ic-space-xxs);margin-bottom:var(--ic-space-xxs);align-items:center}/*!@:host(.small) .container*/.small.sc-ic-checkbox-h .container.sc-ic-checkbox{margin-bottom:var(--ic-space-xxxs)}/*!@.checkbox*/.checkbox.sc-ic-checkbox{-webkit-appearance:none;-moz-appearance:none;appearance:none;display:block;position:relative;top:0;left:0;height:var(--ic-space-lg);width:var(--ic-space-lg);background-color:transparent;border:var(--ic-border-width) solid var(--ic-architectural-300);border-radius:var(--ic-border-radius);outline:none;cursor:pointer;transition:var(--ic-easing-transition-fast);flex-shrink:0}/*!@:host(.small) .checkbox,\n:host(.small) .container svg*/.small.sc-ic-checkbox-h .checkbox.sc-ic-checkbox,.small.sc-ic-checkbox-h .container.sc-ic-checkbox svg.sc-ic-checkbox{width:var(--ic-space-md);height:var(--ic-space-md)}/*!@:host(.large) .checkbox,\n:host(.large) .container svg*/.large.sc-ic-checkbox-h .checkbox.sc-ic-checkbox,.large.sc-ic-checkbox-h .container.sc-ic-checkbox svg.sc-ic-checkbox{width:var(--ic-space-xl);height:var(--ic-space-xl)}/*!@.checkbox:checked*/.checkbox.sc-ic-checkbox:checked{background-color:var(--ic-action-default);border:var(--ic-border-width) solid var(--ic-action-default);transition:var(--ic-easing-transition-slow)}/*!@.checkbox:checked:disabled*/.checkbox.sc-ic-checkbox:checked:disabled{background-color:var(--ic-architectural-200)}/*!@.checkbox:indeterminate,\n.checkbox.indeterminate:checked*/.checkbox.sc-ic-checkbox:indeterminate,.checkbox.indeterminate.sc-ic-checkbox:checked{background-color:transparent;border:0.125rem solid var(--ic-action-default)}/*!@.checkbox:checked:hover*/.checkbox.sc-ic-checkbox:checked:hover{background-color:var(--ic-action-default-hover)}/*!@.checkbox:indeterminate:hover,\n.checkbox.indeterminate:checked:hover*/.checkbox.sc-ic-checkbox:indeterminate:hover,.checkbox.indeterminate.sc-ic-checkbox:checked:hover{background-color:var(--ic-action-default-bg-hover);border:0.125rem solid var(--ic-action-default-hover)}/*!@.checkbox:checked:active*/.checkbox.sc-ic-checkbox:checked:active{background-color:var(--ic-action-default-active)}/*!@.checkbox:indeterminate:active,\n.checkbox.indeterminate:checked:active*/.checkbox.sc-ic-checkbox:indeterminate:active,.checkbox.indeterminate.sc-ic-checkbox:checked:active{background-color:var(--ic-action-default-bg-active);border:0.125rem solid var(--ic-action-default-active)}/*!@.checkbox:hover*/.checkbox.sc-ic-checkbox:hover{background-color:var(--ic-action-default-bg-hover);box-shadow:0 0 0 0.25rem var(--ic-action-default-bg-hover);border:var(--ic-border-width) solid var(--ic-action-default-hover)}/*!@.checkbox:active*/.checkbox.sc-ic-checkbox:active{background-color:var(--ic-action-default-bg-active);box-shadow:0 0 0 0.25rem var(--ic-action-default-bg-active);border:var(--ic-border-width) solid var(--ic-action-default-active)}/*!@.checkbox:focus*/.checkbox.sc-ic-checkbox:focus{box-shadow:var(--ic-border-focus)}/*!@.checkbox:disabled*/.checkbox.sc-ic-checkbox:disabled{border:var(--ic-border-width) dashed var(--ic-architectural-200)}/*!@.checkbox-label*/.checkbox-label.sc-ic-checkbox{padding-left:var(--ic-space-sm)}/*!@.checkbox-label:hover*/.checkbox-label.sc-ic-checkbox:hover{cursor:pointer}/*!@.checkmark*/.checkmark.sc-ic-checkbox{position:relative;right:calc(-1 * var(--ic-space-lg));margin-left:calc(-1 * var(--ic-space-lg));fill:white;z-index:1;background-color:transparent;pointer-events:none;flex-shrink:0}/*!@:host(.small) .checkmark*/.small.sc-ic-checkbox-h .checkmark.sc-ic-checkbox{margin-left:calc(-1 * var(--ic-space-md));right:calc(-1 * var(--ic-space-md))}/*!@:host(.large) .checkmark*/.large.sc-ic-checkbox-h .checkmark.sc-ic-checkbox{margin-left:calc(-1 * var(--ic-space-xl));right:calc(-1 * var(--ic-space-xl))}/*!@.indeterminate-symbol*/.indeterminate-symbol.sc-ic-checkbox{position:relative;width:0.875rem;height:var(--ic-space-xxxs);right:-1.188rem;margin-left:-0.875rem;z-index:1;background-color:var(--ic-action-default);pointer-events:none;flex-shrink:0}/*!@:host(.small) .indeterminate-symbol*/.small.sc-ic-checkbox-h .indeterminate-symbol.sc-ic-checkbox{width:0.6rem;right:-0.8rem;margin-left:-0.6rem}/*!@:host(.large) .indeterminate-symbol*/.large.sc-ic-checkbox-h .indeterminate-symbol.sc-ic-checkbox{width:1.25rem;right:-1.625rem;margin-left:-1.25rem}/*!@.container:hover .indeterminate-symbol*/.container.sc-ic-checkbox:hover .indeterminate-symbol.sc-ic-checkbox{background-color:var(--ic-action-default-hover)}/*!@.container:active .indeterminate-symbol*/.container.sc-ic-checkbox:active .indeterminate-symbol.sc-ic-checkbox{background-color:var(--ic-action-default-active)}/*!@.additional-field-wrapper*/.additional-field-wrapper.sc-ic-checkbox{margin-left:calc(var(--ic-space-md) + var(--ic-space-lg));margin-top:calc(var(--ic-space-sm) / 2)}/*!@.branch-corner*/.branch-corner.sc-ic-checkbox{color:var(--ic-action-default);height:var(--ic-space-md);width:var(--ic-space-xl);border-radius:0 0 0 0.188rem;border-bottom:0.125rem solid var(--ic-action-default);border-left:0.125rem solid var(--ic-action-default)}/*!@.dynamic-container*/.dynamic-container.sc-ic-checkbox{display:flex;position:relative;margin:var(--ic-space-xxxs) 0 var(--ic-space-xxs) var(--ic-space-md);gap:var(--ic-space-xs)}/*!@.dynamic-text*/.dynamic-text.sc-ic-checkbox{color:var(--ic-action-default);margin-top:calc(var(--ic-space-sm) / 2);margin-bottom:var(--ic-space-xs);border-radius:2%}@media (max-width: 576px){/*!@::slotted(ic-text-field)*/.sc-ic-checkbox-s>ic-text-field{--input-width:100%}}@media (forced-colors: active){/*!@.checkbox*/.checkbox.sc-ic-checkbox{-webkit-appearance:revert;-moz-appearance:revert;appearance:revert;transition:none}/*!@.checkbox:checked*/.checkbox.sc-ic-checkbox:checked{transition:none}/*!@.checkbox:focus-visible*/.checkbox.sc-ic-checkbox:focus-visible{outline:0.125rem solid highlight}/*!@.checkbox:disabled:not(:checked)*/.checkbox.sc-ic-checkbox:disabled:not(:checked){-webkit-appearance:none;-moz-appearance:none;appearance:none;border-color:GrayText}/*!@.checkmark*/.checkmark.sc-ic-checkbox{fill:none}/*!@.indeterminate-symbol*/.indeterminate-symbol.sc-ic-checkbox{display:none}}";

/**
 * @slot additional-field - Content to be displayed alongside a checkbox.
 */
// eslint-disable-next-line @typescript-eslint/no-unused-vars
class Checkbox {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.checkboxChecked = createEvent(this, "checkboxChecked", 7);
    this.icCheck = createEvent(this, "icCheck", 7);
    this.IC_TEXT_FIELD = "ic-text-field";
    this.handleClick = () => {
      this.checked = !this.checked;
      this.icCheck.emit();
      this.checkboxChecked.emit();
    };
    this.handleFormReset = () => {
      this.checked = this.initiallyChecked;
    };
    this.additionalFieldDisplay = "static";
    this.checked = false;
    this.initiallyChecked = this.checked;
    this.disabled = false;
    this.dynamicText = "This selection requires additional answers";
    this.form = undefined;
    this.formaction = undefined;
    this.formenctype = undefined;
    this.formmethod = undefined;
    this.formnovalidate = undefined;
    this.formtarget = undefined;
    this.groupLabel = undefined;
    this.indeterminate = false;
    this.label = undefined;
    this.name = undefined;
    this.size = undefined;
    this.small = false;
    this.value = undefined;
  }
  componentWillLoad() {
    removeDisabledFalse(this.disabled, this.el);
    addFormResetListener(this.el, this.handleFormReset);
  }
  componentDidLoad() {
    onComponentRequiredPropUndefined([
      { prop: this.label, propName: "label" },
      { prop: this.value, propName: "value" },
    ], "Checkbox");
  }
  componentDidRender() {
    if (this.additionalFieldDisplay === "static") {
      const textfield = this.el.querySelector(this.IC_TEXT_FIELD);
      if (!this.checked) {
        textfield && textfield.setAttribute("disabled", "");
      }
      else {
        textfield && textfield.removeAttribute("disabled");
      }
    }
    else if (this.additionalFieldContainer) {
      if (!this.checked) {
        this.additionalFieldContainer.style.display = "none";
      }
      else {
        this.additionalFieldContainer.style.display = "flex";
      }
    }
  }
  disconnectedCallback() {
    removeFormResetListener(this.el, this.handleFormReset);
  }
  /**
   * Sets focus on the checkbox.
   */
  async setFocus() {
    const checkboxEl = this.el.shadowRoot.querySelector(".checkbox");
    if (checkboxEl) {
      checkboxEl.focus();
    }
  }
  render() {
    let id = `ic-checkbox-${isPropDefined(this.label) ? this.label : this.value}-${this.groupLabel}`;
    id = id.replace(/ /g, "-");
    const parentElementSize = this.el.parentElement.size;
    this.checked
      ? renderHiddenInput(true, this.el, this.name, this.checked && this.value, this.disabled)
      : removeHiddenInput(this.el);
    return (hAsync(Host, { class: {
        ["disabled"]: this.disabled,
        ["small"]: this.small,
        [`${this.size || parentElementSize}`]: true,
      } }, hAsync("div", { class: "container" }, this.checked && !this.indeterminate && (hAsync("svg", { class: "checkmark", width: "1.5rem", height: "1.5rem", viewBox: "0 0 24 24", xmlns: "http://www.w3.org/2000/svg", "fill-rule": "evenodd", "clip-rule": "evenodd" }, hAsync("title", null, "checkmark icon"), hAsync("path", { d: "M21 6.285l-11.16 12.733-6.84-6.018 1.319-1.49 5.341 4.686 9.865-11.196 1.475 1.285z" }))), this.checked && this.indeterminate && (hAsync("div", { class: "indeterminate-symbol" })), hAsync("input", { role: "checkbox", class: {
        ["checkbox"]: true,
        ["checked"]: this.checked,
        ["indeterminate"]: this.indeterminate,
      }, type: "checkbox", name: this.name, id: id, value: this.value, disabled: this.disabled ? true : null, checked: this.checked, indeterminate: this.indeterminate, onClick: this.handleClick, form: this.form, formaction: this.formaction, formenctype: this.formenctype, formmethod: this.formmethod, formnovalidate: this.formnovalidate, formtarget: this.formtarget }), hAsync("ic-typography", { class: "checkbox-label", variant: "body" }, hAsync("label", { htmlFor: id }, this.label))), isSlotUsed$1(this.el, "additional-field") && (hAsync("div", { class: "dynamic-container", ref: (el) => (this.additionalFieldContainer = el) }, this.additionalFieldDisplay === "dynamic" && (hAsync("div", { class: "branch-corner" })), hAsync("div", null, this.additionalFieldDisplay === "dynamic" && (hAsync("ic-typography", { variant: "caption" }, hAsync("p", { class: "dynamic-text", "aria-live": "polite" }, this.dynamicText))), hAsync("div", { class: {
        "additional-field-wrapper": this.additionalFieldDisplay === "static",
      } }, hAsync("slot", { name: "additional-field" })))))));
  }
  static get delegatesFocus() { return true; }
  get el() { return getElement(this); }
  static get style() { return icCheckboxCss; }
  static get cmpMeta() { return {
    "$flags$": 25,
    "$tagName$": "ic-checkbox",
    "$members$": {
      "additionalFieldDisplay": [513, "additional-field-display"],
      "checked": [1540],
      "disabled": [4],
      "dynamicText": [1, "dynamic-text"],
      "form": [1],
      "formaction": [1],
      "formenctype": [1],
      "formmethod": [1],
      "formnovalidate": [4],
      "formtarget": [1],
      "groupLabel": [1, "group-label"],
      "indeterminate": [4],
      "label": [1],
      "name": [1],
      "size": [1],
      "small": [4],
      "value": [1],
      "initiallyChecked": [32],
      "setFocus": [64]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["additionalFieldDisplay", "additional-field-display"], ["checked", "checked"]]
  }; }
}

const icCheckboxGroupCss = "/*!@html*/html.sc-ic-checkbox-group{line-height:1.15;-webkit-text-size-adjust:100%}/*!@body*/body.sc-ic-checkbox-group{margin:0}/*!@main*/main.sc-ic-checkbox-group{display:block}/*!@h1*/h1.sc-ic-checkbox-group{font-size:2em;margin:0.67em 0}/*!@hr*/hr.sc-ic-checkbox-group{box-sizing:content-box;height:0;overflow:visible}/*!@pre*/pre.sc-ic-checkbox-group{font-family:monospace, monospace;font-size:1em}/*!@a*/a.sc-ic-checkbox-group{background-color:transparent}/*!@abbr[title]*/abbr[title].sc-ic-checkbox-group{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}/*!@b,\nstrong*/b.sc-ic-checkbox-group,strong.sc-ic-checkbox-group{font-weight:bolder}/*!@code,\nkbd,\nsamp*/code.sc-ic-checkbox-group,kbd.sc-ic-checkbox-group,samp.sc-ic-checkbox-group{font-family:monospace, monospace;font-size:1em}/*!@small*/small.sc-ic-checkbox-group{font-size:80%}/*!@sub,\nsup*/sub.sc-ic-checkbox-group,sup.sc-ic-checkbox-group{font-size:75%;line-height:0;position:relative;vertical-align:baseline}/*!@sub*/sub.sc-ic-checkbox-group{bottom:-0.25em}/*!@sup*/sup.sc-ic-checkbox-group{top:-0.5em}/*!@img*/img.sc-ic-checkbox-group{border-style:none}/*!@button,\ninput,\noptgroup,\nselect,\ntextarea*/button.sc-ic-checkbox-group,input.sc-ic-checkbox-group,optgroup.sc-ic-checkbox-group,select.sc-ic-checkbox-group,textarea.sc-ic-checkbox-group{font-family:inherit;font-size:100%;line-height:1.15;margin:0}/*!@button,\ninput*/button.sc-ic-checkbox-group,input.sc-ic-checkbox-group{overflow:visible}/*!@button,\nselect*/button.sc-ic-checkbox-group,select.sc-ic-checkbox-group{text-transform:none}/*!@button,\n[type=\"button\"],\n[type=\"reset\"],\n[type=\"submit\"]*/button.sc-ic-checkbox-group,[type=\"button\"].sc-ic-checkbox-group,[type=\"reset\"].sc-ic-checkbox-group,[type=\"submit\"].sc-ic-checkbox-group{-webkit-appearance:button}/*!@button::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner*/button.sc-ic-checkbox-group::-moz-focus-inner,[type=\"button\"].sc-ic-checkbox-group::-moz-focus-inner,[type=\"reset\"].sc-ic-checkbox-group::-moz-focus-inner,[type=\"submit\"].sc-ic-checkbox-group::-moz-focus-inner{border-style:none;padding:0}/*!@button:-moz-focusring,\n[type=\"button\"]:-moz-focusring,\n[type=\"reset\"]:-moz-focusring,\n[type=\"submit\"]:-moz-focusring*/button.sc-ic-checkbox-group:-moz-focusring,[type=\"button\"].sc-ic-checkbox-group:-moz-focusring,[type=\"reset\"].sc-ic-checkbox-group:-moz-focusring,[type=\"submit\"].sc-ic-checkbox-group:-moz-focusring{outline:1px dotted ButtonText}/*!@fieldset*/fieldset.sc-ic-checkbox-group{padding:0.35em 0.75em 0.625em}/*!@legend*/legend.sc-ic-checkbox-group{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}/*!@progress*/progress.sc-ic-checkbox-group{vertical-align:baseline}/*!@textarea*/textarea.sc-ic-checkbox-group{overflow:auto}/*!@[type=\"checkbox\"],\n[type=\"radio\"]*/[type=\"checkbox\"].sc-ic-checkbox-group,[type=\"radio\"].sc-ic-checkbox-group{box-sizing:border-box;padding:0}/*!@[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button*/[type=\"number\"].sc-ic-checkbox-group::-webkit-inner-spin-button,[type=\"number\"].sc-ic-checkbox-group::-webkit-outer-spin-button{height:auto}/*!@[type=\"search\"]*/[type=\"search\"].sc-ic-checkbox-group{-webkit-appearance:textfield;outline-offset:-2px}/*!@[type=\"search\"]::-webkit-search-decoration*/[type=\"search\"].sc-ic-checkbox-group::-webkit-search-decoration{-webkit-appearance:none}/*!@::-webkit-file-upload-button*/.sc-ic-checkbox-group::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}/*!@details*/details.sc-ic-checkbox-group{display:block}/*!@summary*/summary.sc-ic-checkbox-group{display:list-item}/*!@template*/template.sc-ic-checkbox-group{display:none}/*!@[hidden]*/[hidden].sc-ic-checkbox-group{display:none}/*!@html,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo*/html.sc-ic-checkbox-group,body.sc-ic-checkbox-group,div.sc-ic-checkbox-group,span.sc-ic-checkbox-group,applet.sc-ic-checkbox-group,object.sc-ic-checkbox-group,iframe.sc-ic-checkbox-group,h1.sc-ic-checkbox-group,h2.sc-ic-checkbox-group,h3.sc-ic-checkbox-group,h4.sc-ic-checkbox-group,h5.sc-ic-checkbox-group,h6.sc-ic-checkbox-group,p.sc-ic-checkbox-group,blockquote.sc-ic-checkbox-group,pre.sc-ic-checkbox-group,a.sc-ic-checkbox-group,abbr.sc-ic-checkbox-group,acronym.sc-ic-checkbox-group,address.sc-ic-checkbox-group,big.sc-ic-checkbox-group,cite.sc-ic-checkbox-group,code.sc-ic-checkbox-group,del.sc-ic-checkbox-group,dfn.sc-ic-checkbox-group,em.sc-ic-checkbox-group,img.sc-ic-checkbox-group,ins.sc-ic-checkbox-group,kbd.sc-ic-checkbox-group,q.sc-ic-checkbox-group,s.sc-ic-checkbox-group,samp.sc-ic-checkbox-group,small.sc-ic-checkbox-group,strike.sc-ic-checkbox-group,strong.sc-ic-checkbox-group,sub.sc-ic-checkbox-group,sup.sc-ic-checkbox-group,tt.sc-ic-checkbox-group,var.sc-ic-checkbox-group,b.sc-ic-checkbox-group,u.sc-ic-checkbox-group,i.sc-ic-checkbox-group,center.sc-ic-checkbox-group,dl.sc-ic-checkbox-group,dt.sc-ic-checkbox-group,dd.sc-ic-checkbox-group,ol.sc-ic-checkbox-group,ul.sc-ic-checkbox-group,li.sc-ic-checkbox-group,fieldset.sc-ic-checkbox-group,form.sc-ic-checkbox-group,label.sc-ic-checkbox-group,legend.sc-ic-checkbox-group,table.sc-ic-checkbox-group,caption.sc-ic-checkbox-group,tbody.sc-ic-checkbox-group,tfoot.sc-ic-checkbox-group,thead.sc-ic-checkbox-group,tr.sc-ic-checkbox-group,th.sc-ic-checkbox-group,td.sc-ic-checkbox-group,article.sc-ic-checkbox-group,aside.sc-ic-checkbox-group,canvas.sc-ic-checkbox-group,details.sc-ic-checkbox-group,embed.sc-ic-checkbox-group,figure.sc-ic-checkbox-group,figcaption.sc-ic-checkbox-group,footer.sc-ic-checkbox-group,header.sc-ic-checkbox-group,hgroup.sc-ic-checkbox-group,menu.sc-ic-checkbox-group,nav.sc-ic-checkbox-group,output.sc-ic-checkbox-group,ruby.sc-ic-checkbox-group,section.sc-ic-checkbox-group,summary.sc-ic-checkbox-group,time.sc-ic-checkbox-group,mark.sc-ic-checkbox-group,audio.sc-ic-checkbox-group,video.sc-ic-checkbox-group{margin:0;padding:0;border:0;font-size:100%;font-style:inherit;vertical-align:baseline}/*!@:host*/.sc-ic-checkbox-group-h{display:block}/*!@ic-input-label.error*/ic-input-label.error.sc-ic-checkbox-group{color:var(--ic-status-error)}/*!@ic-input-label ic-typography*/ic-input-label.sc-ic-checkbox-group ic-typography.sc-ic-checkbox-group{margin-bottom:var(--ic-space-sm)}/*!@:host(.small) ic-input-label ic-typography*/.small.sc-ic-checkbox-group-h ic-input-label.sc-ic-checkbox-group ic-typography.sc-ic-checkbox-group{margin-bottom:calc(var(--ic-space-sm) / 2)}/*!@ic-input-validation*/ic-input-validation.sc-ic-checkbox-group{margin-top:var(--ic-space-sm)}/*!@:host(.small) ic-input-validation*/.small.sc-ic-checkbox-group-h ic-input-validation.sc-ic-checkbox-group{margin-top:calc(var(--ic-space-sm) / 2)}/*!@.checkboxes-container*/.checkboxes-container.sc-ic-checkbox-group{margin-bottom:calc(-1 * var(--ic-space-xxs))}/*!@:host(.small) .checkboxes-container*/.small.sc-ic-checkbox-group-h .checkboxes-container.sc-ic-checkbox-group{margin-bottom:calc(-1 * var(--ic-space-xxxs))}/*!@.screen-reader-only-text*/.screen-reader-only-text.sc-ic-checkbox-group{position:absolute;left:-9999px;background-color:#fff;color:#000;text-transform:none}";

// eslint-disable-next-line @typescript-eslint/no-unused-vars
class CheckboxGroup {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.icChange = createEvent(this, "icChange", 7);
    this.disabled = false;
    this.helperText = "";
    this.hideLabel = false;
    this.label = undefined;
    this.name = undefined;
    this.required = false;
    this.size = "default";
    this.small = false;
    this.validationStatus = "";
    this.validationText = "";
  }
  handleChange(ev) {
    //don't pass on the event if it has come from slotted text field
    //otherwise any icChange handler bound to the checkbox group will also run
    if (ev.target.tagName === "IC-TEXT-FIELD") {
      ev.stopImmediatePropagation();
    }
  }
  componentWillLoad() {
    removeDisabledFalse(this.disabled, this.el);
  }
  componentDidLoad() {
    Array.from(this.el.querySelectorAll("ic-checkbox")).forEach((checkbox) => {
      if (!checkbox.name)
        checkbox.name = this.name;
      checkbox.groupLabel = this.label;
    });
    onComponentRequiredPropUndefined([
      { prop: this.label, propName: "label" },
      { prop: this.name, propName: "name" },
    ], "Checkbox Group");
  }
  selectHandler(ev) {
    const checkedOptions = Array.from(this.el.querySelectorAll("ic-checkbox")).filter((checkbox) => checkbox.checked && !checkbox.disabled);
    this.icChange.emit({
      value: checkedOptions.map((opt) => opt.value),
      checkedOptions: checkedOptions.map((opt) => {
        var _a;
        return ({
          checkbox: opt,
          textFieldValue: (_a = opt.querySelector("ic-text-field")) === null || _a === void 0 ? void 0 : _a.value,
        });
      }),
      selectedOption: ev.target,
    });
  }
  render() {
    const describedBy = getInputDescribedByText(this.name, this.helperText !== "", this.validationStatus !== "");
    const hadValidationStatus = hasValidationStatus(this.validationStatus, this.disabled);
    return (hAsync(Host, { class: { ["small"]: this.small, [`${this.size}`]: true } }, (this.validationStatus === "error" ||
      this.required ||
      this.hideLabel) && (hAsync("span", { id: "screenReaderOnlyText", class: "screen-reader-only-text", "aria-hidden": "true" }, this.label, " ", this.validationStatus === "error" ? "invalid data " : null, " ", this.required ? "required" : null)), hAsync("fieldset", { id: this.name, "aria-labelledby": `${this.validationStatus === "error" || this.required || this.hideLabel
        ? "screenReaderOnlyText"
        : ""} ${describedBy}`.trim(), disabled: this.disabled }, !this.hideLabel && (hAsync("legend", null, hAsync("ic-input-label", { class: { [`${this.validationStatus}`]: true }, label: this.label, helperText: this.helperText, required: this.required, disabled: this.disabled, for: this.name }))), hAsync("div", { class: "checkboxes-container" }, hAsync("slot", null))), hadValidationStatus && (hAsync("ic-input-validation", { for: this.name, ariaLiveMode: "polite", status: this.validationStatus, message: this.validationText }))));
  }
  get el() { return getElement(this); }
  static get style() { return icCheckboxGroupCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "ic-checkbox-group",
    "$members$": {
      "disabled": [4],
      "helperText": [1, "helper-text"],
      "hideLabel": [4, "hide-label"],
      "label": [1],
      "name": [1],
      "required": [4],
      "size": [1],
      "small": [4],
      "validationStatus": [1, "validation-status"],
      "validationText": [1, "validation-text"]
    },
    "$listeners$": [[0, "icChange", "handleChange"], [0, "icCheck", "selectHandler"]],
    "$lazyBundleId$": "-",
    "$attrsToReflect$": []
  }; }
}

var dismissIcon = `<svg viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M10 0C4.47 0 0 4.47 0 10C0 15.53 4.47 20 10 20C15.53 20 20 15.53 20 10C20 4.47 15.53 0 10 0ZM15 13.59L13.59 15L10 11.41L6.41 15L5 13.59L8.59 10L5 6.41L6.41 5L10 8.59L13.59 5L15 6.41L11.41 10L15 13.59Z" fill="currentColor"/>
</svg>
`;

const icChipCss = "/*!@html*/html.sc-ic-chip{line-height:1.15;-webkit-text-size-adjust:100%}/*!@body*/body.sc-ic-chip{margin:0}/*!@main*/main.sc-ic-chip{display:block}/*!@h1*/h1.sc-ic-chip{font-size:2em;margin:0.67em 0}/*!@hr*/hr.sc-ic-chip{box-sizing:content-box;height:0;overflow:visible}/*!@pre*/pre.sc-ic-chip{font-family:monospace, monospace;font-size:1em}/*!@a*/a.sc-ic-chip{background-color:transparent}/*!@abbr[title]*/abbr[title].sc-ic-chip{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}/*!@b,\nstrong*/b.sc-ic-chip,strong.sc-ic-chip{font-weight:bolder}/*!@code,\nkbd,\nsamp*/code.sc-ic-chip,kbd.sc-ic-chip,samp.sc-ic-chip{font-family:monospace, monospace;font-size:1em}/*!@small*/small.sc-ic-chip{font-size:80%}/*!@sub,\nsup*/sub.sc-ic-chip,sup.sc-ic-chip{font-size:75%;line-height:0;position:relative;vertical-align:baseline}/*!@sub*/sub.sc-ic-chip{bottom:-0.25em}/*!@sup*/sup.sc-ic-chip{top:-0.5em}/*!@img*/img.sc-ic-chip{border-style:none}/*!@button,\ninput,\noptgroup,\nselect,\ntextarea*/button.sc-ic-chip,input.sc-ic-chip,optgroup.sc-ic-chip,select.sc-ic-chip,textarea.sc-ic-chip{font-family:inherit;font-size:100%;line-height:1.15;margin:0}/*!@button,\ninput*/button.sc-ic-chip,input.sc-ic-chip{overflow:visible}/*!@button,\nselect*/button.sc-ic-chip,select.sc-ic-chip{text-transform:none}/*!@button,\n[type=\"button\"],\n[type=\"reset\"],\n[type=\"submit\"]*/button.sc-ic-chip,[type=\"button\"].sc-ic-chip,[type=\"reset\"].sc-ic-chip,[type=\"submit\"].sc-ic-chip{-webkit-appearance:button}/*!@button::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner*/button.sc-ic-chip::-moz-focus-inner,[type=\"button\"].sc-ic-chip::-moz-focus-inner,[type=\"reset\"].sc-ic-chip::-moz-focus-inner,[type=\"submit\"].sc-ic-chip::-moz-focus-inner{border-style:none;padding:0}/*!@button:-moz-focusring,\n[type=\"button\"]:-moz-focusring,\n[type=\"reset\"]:-moz-focusring,\n[type=\"submit\"]:-moz-focusring*/button.sc-ic-chip:-moz-focusring,[type=\"button\"].sc-ic-chip:-moz-focusring,[type=\"reset\"].sc-ic-chip:-moz-focusring,[type=\"submit\"].sc-ic-chip:-moz-focusring{outline:1px dotted ButtonText}/*!@fieldset*/fieldset.sc-ic-chip{padding:0.35em 0.75em 0.625em}/*!@legend*/legend.sc-ic-chip{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}/*!@progress*/progress.sc-ic-chip{vertical-align:baseline}/*!@textarea*/textarea.sc-ic-chip{overflow:auto}/*!@[type=\"checkbox\"],\n[type=\"radio\"]*/[type=\"checkbox\"].sc-ic-chip,[type=\"radio\"].sc-ic-chip{box-sizing:border-box;padding:0}/*!@[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button*/[type=\"number\"].sc-ic-chip::-webkit-inner-spin-button,[type=\"number\"].sc-ic-chip::-webkit-outer-spin-button{height:auto}/*!@[type=\"search\"]*/[type=\"search\"].sc-ic-chip{-webkit-appearance:textfield;outline-offset:-2px}/*!@[type=\"search\"]::-webkit-search-decoration*/[type=\"search\"].sc-ic-chip::-webkit-search-decoration{-webkit-appearance:none}/*!@::-webkit-file-upload-button*/.sc-ic-chip::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}/*!@details*/details.sc-ic-chip{display:block}/*!@summary*/summary.sc-ic-chip{display:list-item}/*!@template*/template.sc-ic-chip{display:none}/*!@[hidden]*/[hidden].sc-ic-chip{display:none}/*!@html,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo*/html.sc-ic-chip,body.sc-ic-chip,div.sc-ic-chip,span.sc-ic-chip,applet.sc-ic-chip,object.sc-ic-chip,iframe.sc-ic-chip,h1.sc-ic-chip,h2.sc-ic-chip,h3.sc-ic-chip,h4.sc-ic-chip,h5.sc-ic-chip,h6.sc-ic-chip,p.sc-ic-chip,blockquote.sc-ic-chip,pre.sc-ic-chip,a.sc-ic-chip,abbr.sc-ic-chip,acronym.sc-ic-chip,address.sc-ic-chip,big.sc-ic-chip,cite.sc-ic-chip,code.sc-ic-chip,del.sc-ic-chip,dfn.sc-ic-chip,em.sc-ic-chip,img.sc-ic-chip,ins.sc-ic-chip,kbd.sc-ic-chip,q.sc-ic-chip,s.sc-ic-chip,samp.sc-ic-chip,small.sc-ic-chip,strike.sc-ic-chip,strong.sc-ic-chip,sub.sc-ic-chip,sup.sc-ic-chip,tt.sc-ic-chip,var.sc-ic-chip,b.sc-ic-chip,u.sc-ic-chip,i.sc-ic-chip,center.sc-ic-chip,dl.sc-ic-chip,dt.sc-ic-chip,dd.sc-ic-chip,ol.sc-ic-chip,ul.sc-ic-chip,li.sc-ic-chip,fieldset.sc-ic-chip,form.sc-ic-chip,label.sc-ic-chip,legend.sc-ic-chip,table.sc-ic-chip,caption.sc-ic-chip,tbody.sc-ic-chip,tfoot.sc-ic-chip,thead.sc-ic-chip,tr.sc-ic-chip,th.sc-ic-chip,td.sc-ic-chip,article.sc-ic-chip,aside.sc-ic-chip,canvas.sc-ic-chip,details.sc-ic-chip,embed.sc-ic-chip,figure.sc-ic-chip,figcaption.sc-ic-chip,footer.sc-ic-chip,header.sc-ic-chip,hgroup.sc-ic-chip,menu.sc-ic-chip,nav.sc-ic-chip,output.sc-ic-chip,ruby.sc-ic-chip,section.sc-ic-chip,summary.sc-ic-chip,time.sc-ic-chip,mark.sc-ic-chip,audio.sc-ic-chip,video.sc-ic-chip{margin:0;padding:0;border:0;font-size:100%;font-style:inherit;vertical-align:baseline}/*!@:host*/.sc-ic-chip-h{display:inline-block}/*!@.chip*/.chip.sc-ic-chip{display:flex;padding:var(--ic-space-xxs);font-size:0.875rem;border-radius:var(--ic-space-md);text-align:left;text-decoration:none;transition:var(--ic-easing-transition-fast);position:relative}/*!@.chip.small*/.chip.small.sc-ic-chip{padding:var(--ic-space-xxxs);border-radius:calc(var(--ic-space-md) - var(--ic-space-xxxs))}/*!@.chip.large*/.chip.large.sc-ic-chip{padding:var(--ic-space-xs);border-radius:calc(var(--ic-space-md) + var(--ic-space-xxs))}/*!@.label*/.label.sc-ic-chip{padding:0 var(--ic-space-xs)}/*!@.chip.hovered:not(:focus-within)*/.chip.hovered.sc-ic-chip:not(:focus-within){background-color:var(--ic-architectural-300)}/*!@.chip:focus-within*/.chip.sc-ic-chip:focus-within{box-shadow:var(--ic-border-focus);outline:var(--ic-hc-focus-outline);z-index:1}/*!@.chip.outline.hovered:not(:focus-within),\n.chip.outlined.hovered:not(:focus-within)*/.chip.outline.hovered.sc-ic-chip:not(:focus-within),.chip.outlined.hovered.sc-ic-chip:not(:focus-within){background-color:var(--ic-action-dark-bg-hover)}/*!@ic-tooltip:focus-within*/ic-tooltip.sc-ic-chip:focus-within{z-index:1}/*!@.filled*/.filled.sc-ic-chip{background-color:var(--ic-architectural-200);color:black;border:none}/*!@.filled.disabled*/.filled.disabled.sc-ic-chip{background-color:var(--ic-architectural-100)}/*!@.outline,\n.outlined*/.outline.sc-ic-chip,.outlined.sc-ic-chip{color:var(--ic-architectural-900);border:var(--ic-border-width) solid var(--ic-architectural-900);padding:calc(var(--ic-space-xxs) - var(--ic-space-1px))}/*!@.outline.small,\n.outlined.small*/.outline.small.sc-ic-chip,.outlined.small.sc-ic-chip{padding:calc(var(--ic-space-xxxs) - var(--ic-space-1px))}/*!@.outline.large,\n.outlined.large*/.outline.large.sc-ic-chip,.outlined.large.sc-ic-chip{padding:calc(var(--ic-space-xs) - var(--ic-space-1px))}/*!@.outline.disabled,\n.outlined.disabled*/.outline.disabled.sc-ic-chip,.outlined.disabled.sc-ic-chip{border:var(--ic-border-disabled);background:none}/*!@.chip.disabled ic-typography*/.chip.disabled.sc-ic-chip ic-typography.sc-ic-chip{color:var(--ic-architectural-200)}/*!@.dismiss-icon*/.dismiss-icon.sc-ic-chip{border:none;border-radius:50%;padding:0;background:none;cursor:pointer;margin:var(--ic-space-xxxs);height:calc(var(--ic-space-lg) - var(--ic-space-xxs));width:calc(var(--ic-space-lg) - var(--ic-space-xxs))}/*!@.dismiss-icon:focus*/.dismiss-icon.sc-ic-chip:focus{outline:var(--ic-hc-focus-outline)}/*!@.dismiss-icon[disabled]*/.dismiss-icon[disabled].sc-ic-chip{pointer-events:none;color:var(--ic-architectural-200)}/*!@.icon*/.icon.sc-ic-chip{padding:var(--ic-space-xxxs);box-sizing:border-box}/*!@.icon,\nic-tooltip*/.icon.sc-ic-chip,ic-tooltip.sc-ic-chip{width:var(--ic-space-lg);height:var(--ic-space-lg)}/*!@.chip.disabled path,\n.chip.disabled ::slotted(svg)*/.chip.disabled.sc-ic-chip path.sc-ic-chip,.chip.disabled .sc-ic-chip-s>svg{fill:var(--ic-architectural-200)}@media (forced-colors: active){/*!@.chip*/.chip.sc-ic-chip{border:var(--ic-hc-border)}/*!@.filled.small*/.filled.small.sc-ic-chip{padding:calc(var(--ic-space-xxxs) - var(--ic-space-1px))}/*!@.filled*/.filled.sc-ic-chip{padding:calc(var(--ic-space-xxxs) + var(--ic-space-1px))}/*!@.filled.large*/.filled.large.sc-ic-chip{padding:calc(var(--ic-space-xs) - var(--ic-space-1px))}/*!@.chip.disabled*/.chip.disabled.sc-ic-chip{-webkit-appearance:none;-moz-appearance:none;appearance:none;border-color:GrayText}/*!@.chip.disabled ic-typography*/.chip.disabled.sc-ic-chip ic-typography.sc-ic-chip{color:GrayText}/*!@.chip.disabled path,\n  .chip.disabled ::slotted(svg)*/.chip.disabled.sc-ic-chip path.sc-ic-chip,.chip.disabled .sc-ic-chip-s>svg{fill:GrayText}/*!@.chip:focus-within*/.chip.sc-ic-chip:focus-within{outline:none;border-color:Highlight}}";

/**
 * @slot icon - Content will be rendered at the start of the chip.
 * @slot badge - Badge component overlaying the top right of the chip.
 */
class Chip {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.dismiss = createEvent(this, "dismiss", 7);
    this.icDismiss = createEvent(this, "icDismiss", 7);
    this.dismissAction = () => {
      this.dismiss.emit();
      this.icDismiss.emit();
    };
    this.mouseEnterHandler = () => {
      this.isHovered = true;
    };
    this.mouseLeaveHandler = () => {
      this.isHovered = false;
    };
    this.isHovered = false;
    this.visible = true;
    this.appearance = undefined;
    this.disabled = false;
    this.dismissible = false;
    this.label = undefined;
    this.size = "default";
    this.variant = "filled";
  }
  componentWillLoad() {
    removeDisabledFalse(this.disabled, this.el);
    if (this.appearance === "outline") {
      this.variant = "outlined";
    }
  }
  componentDidLoad() {
    var _a;
    this.dismissible &&
      ((_a = this.el.shadowRoot
        .querySelector("span.ic-tooltip-label")) === null || _a === void 0 ? void 0 : _a.setAttribute("aria-hidden", "true"));
    onComponentRequiredPropUndefined([{ prop: this.label, propName: "label" }], "Chip");
  }
  handleClick() {
    this.visible = !this.visible;
  }
  /**
   * Sets focus on the chip.
   */
  async setFocus() {
    if (this.el.shadowRoot.querySelector("button")) {
      this.el.shadowRoot.querySelector("button").focus();
    }
  }
  render() {
    const { label, appearance, variant, size, dismissible, visible, disabled, isHovered, } = this;
    return (visible && (hAsync("div", { class: {
        ["chip"]: true,
        [`${appearance}`]: appearance !== undefined,
        [`${variant}`]: true,
        [`${size}`]: true,
        ["disabled"]: disabled,
        ["dismissible"]: dismissible,
        ["hovered"]: isHovered,
      } }, isSlotUsed$1(this.el, "icon") && (hAsync("div", { class: "icon" }, hAsync("slot", { name: "icon" }))), hAsync("ic-typography", { variant: "label", "apply-vertical-margins": false, class: "label" }, hAsync("span", null, label)), dismissible && (hAsync("ic-tooltip", { label: "Dismiss", target: "dismiss-icon", class: { ["tooltip-disabled"]: disabled } }, hAsync("button", { id: "dismiss-icon", class: {
        ["dismiss-icon"]: true,
      }, "aria-label": `Dismiss ${label} chip`, disabled: disabled, tabindex: disabled ? -1 : 0, onClick: this.dismissAction, onMouseEnter: this.mouseEnterHandler, onMouseLeave: this.mouseLeaveHandler, innerHTML: dismissIcon }))), isSlotUsed$1(this.el, "badge") && hAsync("slot", { name: "badge" }))));
  }
  static get delegatesFocus() { return true; }
  get el() { return getElement(this); }
  static get style() { return icChipCss; }
  static get cmpMeta() { return {
    "$flags$": 25,
    "$tagName$": "ic-chip",
    "$members$": {
      "appearance": [1],
      "disabled": [4],
      "dismissible": [4],
      "label": [1],
      "size": [1],
      "variant": [1],
      "isHovered": [32],
      "visible": [32],
      "setFocus": [64]
    },
    "$listeners$": [[2, "icDismiss", "handleClick"]],
    "$lazyBundleId$": "-",
    "$attrsToReflect$": []
  }; }
}

const icClassificationBannerCss = "/*!@html*/html.sc-ic-classification-banner{line-height:1.15;-webkit-text-size-adjust:100%}/*!@body*/body.sc-ic-classification-banner{margin:0}/*!@main*/main.sc-ic-classification-banner{display:block}/*!@h1*/h1.sc-ic-classification-banner{font-size:2em;margin:0.67em 0}/*!@hr*/hr.sc-ic-classification-banner{box-sizing:content-box;height:0;overflow:visible}/*!@pre*/pre.sc-ic-classification-banner{font-family:monospace, monospace;font-size:1em}/*!@a*/a.sc-ic-classification-banner{background-color:transparent}/*!@abbr[title]*/abbr[title].sc-ic-classification-banner{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}/*!@b,\nstrong*/b.sc-ic-classification-banner,strong.sc-ic-classification-banner{font-weight:bolder}/*!@code,\nkbd,\nsamp*/code.sc-ic-classification-banner,kbd.sc-ic-classification-banner,samp.sc-ic-classification-banner{font-family:monospace, monospace;font-size:1em}/*!@small*/small.sc-ic-classification-banner{font-size:80%}/*!@sub,\nsup*/sub.sc-ic-classification-banner,sup.sc-ic-classification-banner{font-size:75%;line-height:0;position:relative;vertical-align:baseline}/*!@sub*/sub.sc-ic-classification-banner{bottom:-0.25em}/*!@sup*/sup.sc-ic-classification-banner{top:-0.5em}/*!@img*/img.sc-ic-classification-banner{border-style:none}/*!@button,\ninput,\noptgroup,\nselect,\ntextarea*/button.sc-ic-classification-banner,input.sc-ic-classification-banner,optgroup.sc-ic-classification-banner,select.sc-ic-classification-banner,textarea.sc-ic-classification-banner{font-family:inherit;font-size:100%;line-height:1.15;margin:0}/*!@button,\ninput*/button.sc-ic-classification-banner,input.sc-ic-classification-banner{overflow:visible}/*!@button,\nselect*/button.sc-ic-classification-banner,select.sc-ic-classification-banner{text-transform:none}/*!@button,\n[type=\"button\"],\n[type=\"reset\"],\n[type=\"submit\"]*/button.sc-ic-classification-banner,[type=\"button\"].sc-ic-classification-banner,[type=\"reset\"].sc-ic-classification-banner,[type=\"submit\"].sc-ic-classification-banner{-webkit-appearance:button}/*!@button::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner*/button.sc-ic-classification-banner::-moz-focus-inner,[type=\"button\"].sc-ic-classification-banner::-moz-focus-inner,[type=\"reset\"].sc-ic-classification-banner::-moz-focus-inner,[type=\"submit\"].sc-ic-classification-banner::-moz-focus-inner{border-style:none;padding:0}/*!@button:-moz-focusring,\n[type=\"button\"]:-moz-focusring,\n[type=\"reset\"]:-moz-focusring,\n[type=\"submit\"]:-moz-focusring*/button.sc-ic-classification-banner:-moz-focusring,[type=\"button\"].sc-ic-classification-banner:-moz-focusring,[type=\"reset\"].sc-ic-classification-banner:-moz-focusring,[type=\"submit\"].sc-ic-classification-banner:-moz-focusring{outline:1px dotted ButtonText}/*!@fieldset*/fieldset.sc-ic-classification-banner{padding:0.35em 0.75em 0.625em}/*!@legend*/legend.sc-ic-classification-banner{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}/*!@progress*/progress.sc-ic-classification-banner{vertical-align:baseline}/*!@textarea*/textarea.sc-ic-classification-banner{overflow:auto}/*!@[type=\"checkbox\"],\n[type=\"radio\"]*/[type=\"checkbox\"].sc-ic-classification-banner,[type=\"radio\"].sc-ic-classification-banner{box-sizing:border-box;padding:0}/*!@[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button*/[type=\"number\"].sc-ic-classification-banner::-webkit-inner-spin-button,[type=\"number\"].sc-ic-classification-banner::-webkit-outer-spin-button{height:auto}/*!@[type=\"search\"]*/[type=\"search\"].sc-ic-classification-banner{-webkit-appearance:textfield;outline-offset:-2px}/*!@[type=\"search\"]::-webkit-search-decoration*/[type=\"search\"].sc-ic-classification-banner::-webkit-search-decoration{-webkit-appearance:none}/*!@::-webkit-file-upload-button*/.sc-ic-classification-banner::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}/*!@details*/details.sc-ic-classification-banner{display:block}/*!@summary*/summary.sc-ic-classification-banner{display:list-item}/*!@template*/template.sc-ic-classification-banner{display:none}/*!@[hidden]*/[hidden].sc-ic-classification-banner{display:none}/*!@html,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo*/html.sc-ic-classification-banner,body.sc-ic-classification-banner,div.sc-ic-classification-banner,span.sc-ic-classification-banner,applet.sc-ic-classification-banner,object.sc-ic-classification-banner,iframe.sc-ic-classification-banner,h1.sc-ic-classification-banner,h2.sc-ic-classification-banner,h3.sc-ic-classification-banner,h4.sc-ic-classification-banner,h5.sc-ic-classification-banner,h6.sc-ic-classification-banner,p.sc-ic-classification-banner,blockquote.sc-ic-classification-banner,pre.sc-ic-classification-banner,a.sc-ic-classification-banner,abbr.sc-ic-classification-banner,acronym.sc-ic-classification-banner,address.sc-ic-classification-banner,big.sc-ic-classification-banner,cite.sc-ic-classification-banner,code.sc-ic-classification-banner,del.sc-ic-classification-banner,dfn.sc-ic-classification-banner,em.sc-ic-classification-banner,img.sc-ic-classification-banner,ins.sc-ic-classification-banner,kbd.sc-ic-classification-banner,q.sc-ic-classification-banner,s.sc-ic-classification-banner,samp.sc-ic-classification-banner,small.sc-ic-classification-banner,strike.sc-ic-classification-banner,strong.sc-ic-classification-banner,sub.sc-ic-classification-banner,sup.sc-ic-classification-banner,tt.sc-ic-classification-banner,var.sc-ic-classification-banner,b.sc-ic-classification-banner,u.sc-ic-classification-banner,i.sc-ic-classification-banner,center.sc-ic-classification-banner,dl.sc-ic-classification-banner,dt.sc-ic-classification-banner,dd.sc-ic-classification-banner,ol.sc-ic-classification-banner,ul.sc-ic-classification-banner,li.sc-ic-classification-banner,fieldset.sc-ic-classification-banner,form.sc-ic-classification-banner,label.sc-ic-classification-banner,legend.sc-ic-classification-banner,table.sc-ic-classification-banner,caption.sc-ic-classification-banner,tbody.sc-ic-classification-banner,tfoot.sc-ic-classification-banner,thead.sc-ic-classification-banner,tr.sc-ic-classification-banner,th.sc-ic-classification-banner,td.sc-ic-classification-banner,article.sc-ic-classification-banner,aside.sc-ic-classification-banner,canvas.sc-ic-classification-banner,details.sc-ic-classification-banner,embed.sc-ic-classification-banner,figure.sc-ic-classification-banner,figcaption.sc-ic-classification-banner,footer.sc-ic-classification-banner,header.sc-ic-classification-banner,hgroup.sc-ic-classification-banner,menu.sc-ic-classification-banner,nav.sc-ic-classification-banner,output.sc-ic-classification-banner,ruby.sc-ic-classification-banner,section.sc-ic-classification-banner,summary.sc-ic-classification-banner,time.sc-ic-classification-banner,mark.sc-ic-classification-banner,audio.sc-ic-classification-banner,video.sc-ic-classification-banner{margin:0;padding:0;border:0;font-size:100%;font-style:inherit;vertical-align:baseline}/*!@:host*/.sc-ic-classification-banner-h{position:fixed;left:0;bottom:0;width:100%;height:var(--ic-space-lg);z-index:var(--ic-z-index-classification-banner)}/*!@:host(.inline)*/.inline.sc-ic-classification-banner-h{position:static;left:auto;bottom:auto}/*!@.classification-banner*/.classification-banner.sc-ic-classification-banner{display:flex;flex-direction:row;justify-content:center;align-items:center;padding:var(--ic-space-xxxs) var(--ic-space-md)}/*!@.default*/.default.sc-ic-classification-banner{background-color:var(--ic-classification-not-set);color:var(--ic-classification-not-set-foreground)}/*!@.official,\n.official-sensitive*/.official.sc-ic-classification-banner,.official-sensitive.sc-ic-classification-banner{background-color:var(--ic-classification-official);color:var(--ic-classification-official-foreground)}/*!@.secret*/.secret.sc-ic-classification-banner{background-color:var(--ic-classification-secret);color:var(--ic-classification-secret-foreground)}/*!@.top-secret*/.top-secret.sc-ic-classification-banner{background-color:var(--ic-classification-top-secret);color:var(--ic-classification-top-secret-foreground)}/*!@.offscreen*/.offscreen.sc-ic-classification-banner{position:absolute;left:-9999px;background-color:#fff;color:#000;text-transform:none}@media (forced-colors: active){/*!@.classification-banner*/.classification-banner.sc-ic-classification-banner{border:var(--ic-hc-border)}}";

const classificationText = {
  default: "protective marking not set",
  official: "official",
  "official-sensitive": "official sensitive",
  secret: "secret",
  "top-secret": "top secret",
};
class ClassificationBanner {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.additionalSelectors = "";
    this.classification = "default";
    this.country = "uk";
    this.inline = false;
    this.upTo = false;
  }
  render() {
    const { classification, inline, country, upTo, additionalSelectors } = this;
    return (hAsync(Host, { class: { ["inline"]: inline } }, hAsync("banner", { "aria-label": "Protective marking", class: {
        ["classification-banner"]: true,
        [`${classification}`]: classification,
      } }, classification !== "default" ? (hAsync("span", { class: "offscreen" }, "The protective marking of this page is:", " ")) : null, hAsync("ic-typography", { variant: "caption-uppercase" }, classification === "default"
      ? classificationText[classification]
      : `${upTo ? "up to" : ""} 
               ${country !== "" ? country : ""} 
               ${classificationText[classification]} 
               ${additionalSelectors !== "" ? additionalSelectors : ""}`))));
  }
  static get style() { return icClassificationBannerCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "ic-classification-banner",
    "$members$": {
      "additionalSelectors": [1, "additional-selectors"],
      "classification": [1],
      "country": [1],
      "inline": [4],
      "upTo": [4, "up-to"]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": []
  }; }
}

const icDataEntityCss = "/*!@html*/html.sc-ic-data-entity{line-height:1.15;-webkit-text-size-adjust:100%}/*!@body*/body.sc-ic-data-entity{margin:0}/*!@main*/main.sc-ic-data-entity{display:block}/*!@h1*/h1.sc-ic-data-entity{font-size:2em;margin:0.67em 0}/*!@hr*/hr.sc-ic-data-entity{box-sizing:content-box;height:0;overflow:visible}/*!@pre*/pre.sc-ic-data-entity{font-family:monospace, monospace;font-size:1em}/*!@a*/a.sc-ic-data-entity{background-color:transparent}/*!@abbr[title]*/abbr[title].sc-ic-data-entity{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}/*!@b,\nstrong*/b.sc-ic-data-entity,strong.sc-ic-data-entity{font-weight:bolder}/*!@code,\nkbd,\nsamp*/code.sc-ic-data-entity,kbd.sc-ic-data-entity,samp.sc-ic-data-entity{font-family:monospace, monospace;font-size:1em}/*!@small*/small.sc-ic-data-entity{font-size:80%}/*!@sub,\nsup*/sub.sc-ic-data-entity,sup.sc-ic-data-entity{font-size:75%;line-height:0;position:relative;vertical-align:baseline}/*!@sub*/sub.sc-ic-data-entity{bottom:-0.25em}/*!@sup*/sup.sc-ic-data-entity{top:-0.5em}/*!@img*/img.sc-ic-data-entity{border-style:none}/*!@button,\ninput,\noptgroup,\nselect,\ntextarea*/button.sc-ic-data-entity,input.sc-ic-data-entity,optgroup.sc-ic-data-entity,select.sc-ic-data-entity,textarea.sc-ic-data-entity{font-family:inherit;font-size:100%;line-height:1.15;margin:0}/*!@button,\ninput*/button.sc-ic-data-entity,input.sc-ic-data-entity{overflow:visible}/*!@button,\nselect*/button.sc-ic-data-entity,select.sc-ic-data-entity{text-transform:none}/*!@button,\n[type=\"button\"],\n[type=\"reset\"],\n[type=\"submit\"]*/button.sc-ic-data-entity,[type=\"button\"].sc-ic-data-entity,[type=\"reset\"].sc-ic-data-entity,[type=\"submit\"].sc-ic-data-entity{-webkit-appearance:button}/*!@button::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner*/button.sc-ic-data-entity::-moz-focus-inner,[type=\"button\"].sc-ic-data-entity::-moz-focus-inner,[type=\"reset\"].sc-ic-data-entity::-moz-focus-inner,[type=\"submit\"].sc-ic-data-entity::-moz-focus-inner{border-style:none;padding:0}/*!@button:-moz-focusring,\n[type=\"button\"]:-moz-focusring,\n[type=\"reset\"]:-moz-focusring,\n[type=\"submit\"]:-moz-focusring*/button.sc-ic-data-entity:-moz-focusring,[type=\"button\"].sc-ic-data-entity:-moz-focusring,[type=\"reset\"].sc-ic-data-entity:-moz-focusring,[type=\"submit\"].sc-ic-data-entity:-moz-focusring{outline:1px dotted ButtonText}/*!@fieldset*/fieldset.sc-ic-data-entity{padding:0.35em 0.75em 0.625em}/*!@legend*/legend.sc-ic-data-entity{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}/*!@progress*/progress.sc-ic-data-entity{vertical-align:baseline}/*!@textarea*/textarea.sc-ic-data-entity{overflow:auto}/*!@[type=\"checkbox\"],\n[type=\"radio\"]*/[type=\"checkbox\"].sc-ic-data-entity,[type=\"radio\"].sc-ic-data-entity{box-sizing:border-box;padding:0}/*!@[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button*/[type=\"number\"].sc-ic-data-entity::-webkit-inner-spin-button,[type=\"number\"].sc-ic-data-entity::-webkit-outer-spin-button{height:auto}/*!@[type=\"search\"]*/[type=\"search\"].sc-ic-data-entity{-webkit-appearance:textfield;outline-offset:-2px}/*!@[type=\"search\"]::-webkit-search-decoration*/[type=\"search\"].sc-ic-data-entity::-webkit-search-decoration{-webkit-appearance:none}/*!@::-webkit-file-upload-button*/.sc-ic-data-entity::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}/*!@details*/details.sc-ic-data-entity{display:block}/*!@summary*/summary.sc-ic-data-entity{display:list-item}/*!@template*/template.sc-ic-data-entity{display:none}/*!@[hidden]*/[hidden].sc-ic-data-entity{display:none}/*!@html,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo*/html.sc-ic-data-entity,body.sc-ic-data-entity,div.sc-ic-data-entity,span.sc-ic-data-entity,applet.sc-ic-data-entity,object.sc-ic-data-entity,iframe.sc-ic-data-entity,h1.sc-ic-data-entity,h2.sc-ic-data-entity,h3.sc-ic-data-entity,h4.sc-ic-data-entity,h5.sc-ic-data-entity,h6.sc-ic-data-entity,p.sc-ic-data-entity,blockquote.sc-ic-data-entity,pre.sc-ic-data-entity,a.sc-ic-data-entity,abbr.sc-ic-data-entity,acronym.sc-ic-data-entity,address.sc-ic-data-entity,big.sc-ic-data-entity,cite.sc-ic-data-entity,code.sc-ic-data-entity,del.sc-ic-data-entity,dfn.sc-ic-data-entity,em.sc-ic-data-entity,img.sc-ic-data-entity,ins.sc-ic-data-entity,kbd.sc-ic-data-entity,q.sc-ic-data-entity,s.sc-ic-data-entity,samp.sc-ic-data-entity,small.sc-ic-data-entity,strike.sc-ic-data-entity,strong.sc-ic-data-entity,sub.sc-ic-data-entity,sup.sc-ic-data-entity,tt.sc-ic-data-entity,var.sc-ic-data-entity,b.sc-ic-data-entity,u.sc-ic-data-entity,i.sc-ic-data-entity,center.sc-ic-data-entity,dl.sc-ic-data-entity,dt.sc-ic-data-entity,dd.sc-ic-data-entity,ol.sc-ic-data-entity,ul.sc-ic-data-entity,li.sc-ic-data-entity,fieldset.sc-ic-data-entity,form.sc-ic-data-entity,label.sc-ic-data-entity,legend.sc-ic-data-entity,table.sc-ic-data-entity,caption.sc-ic-data-entity,tbody.sc-ic-data-entity,tfoot.sc-ic-data-entity,thead.sc-ic-data-entity,tr.sc-ic-data-entity,th.sc-ic-data-entity,td.sc-ic-data-entity,article.sc-ic-data-entity,aside.sc-ic-data-entity,canvas.sc-ic-data-entity,details.sc-ic-data-entity,embed.sc-ic-data-entity,figure.sc-ic-data-entity,figcaption.sc-ic-data-entity,footer.sc-ic-data-entity,header.sc-ic-data-entity,hgroup.sc-ic-data-entity,menu.sc-ic-data-entity,nav.sc-ic-data-entity,output.sc-ic-data-entity,ruby.sc-ic-data-entity,section.sc-ic-data-entity,summary.sc-ic-data-entity,time.sc-ic-data-entity,mark.sc-ic-data-entity,audio.sc-ic-data-entity,video.sc-ic-data-entity{margin:0;padding:0;border:0;font-size:100%;font-style:inherit;vertical-align:baseline}/*!@:host*/.sc-ic-data-entity-h{display:block}/*!@.rows*/.rows.sc-ic-data-entity{display:flex;flex-direction:column;gap:var(--ic-space-md)}/*!@:host(.small) .rows*/.small.sc-ic-data-entity-h .rows.sc-ic-data-entity{gap:var(--ic-space-xs)}/*!@.divider*/.divider.sc-ic-data-entity{margin-top:var(--ic-space-lg);margin-bottom:var(--ic-space-md);height:var(--ic-border-width);background-color:var(--ic-architectural-300)}/*!@:host(.small) .divider*/.small.sc-ic-data-entity-h .divider.sc-ic-data-entity{margin-top:var(--ic-space-sm);margin-bottom:var(--ic-space-xs)}@media (forced-colors: active){/*!@.divider*/.divider.sc-ic-data-entity{background-color:canvastext}}";

/**
 * @slot heading - Content will be placed at the top of the data entity.
 */
class DataEntity {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.heading = undefined;
    this.size = "default";
    this.small = false;
  }
  render() {
    const { heading, small, size } = this;
    const children = this.el.children;
    if (small || size === "small") {
      for (let i = 0; i < children.length; i++) {
        children[i].setAttribute("size", "small");
      }
    }
    return (hAsync(Host, { class: { ["small"]: small || size === "small" } }, hAsync("div", { class: "heading", id: "data-entity-heading" }, hAsync("slot", { name: "heading" }, hAsync("ic-typography", { variant: "h3" }, heading))), hAsync("div", { class: "divider" }), hAsync("ul", { "aria-labelledby": "data-entity-heading", class: "rows" }, hAsync("slot", null))));
  }
  get el() { return getElement(this); }
  static get style() { return icDataEntityCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "ic-data-entity",
    "$members$": {
      "heading": [1],
      "size": [1],
      "small": [4]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": []
  }; }
}

const icDataRowCss = "/*!@html*/html.sc-ic-data-row{line-height:1.15;-webkit-text-size-adjust:100%}/*!@body*/body.sc-ic-data-row{margin:0}/*!@main*/main.sc-ic-data-row{display:block}/*!@h1*/h1.sc-ic-data-row{font-size:2em;margin:0.67em 0}/*!@hr*/hr.sc-ic-data-row{box-sizing:content-box;height:0;overflow:visible}/*!@pre*/pre.sc-ic-data-row{font-family:monospace, monospace;font-size:1em}/*!@a*/a.sc-ic-data-row{background-color:transparent}/*!@abbr[title]*/abbr[title].sc-ic-data-row{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}/*!@b,\nstrong*/b.sc-ic-data-row,strong.sc-ic-data-row{font-weight:bolder}/*!@code,\nkbd,\nsamp*/code.sc-ic-data-row,kbd.sc-ic-data-row,samp.sc-ic-data-row{font-family:monospace, monospace;font-size:1em}/*!@small*/small.sc-ic-data-row{font-size:80%}/*!@sub,\nsup*/sub.sc-ic-data-row,sup.sc-ic-data-row{font-size:75%;line-height:0;position:relative;vertical-align:baseline}/*!@sub*/sub.sc-ic-data-row{bottom:-0.25em}/*!@sup*/sup.sc-ic-data-row{top:-0.5em}/*!@img*/img.sc-ic-data-row{border-style:none}/*!@button,\ninput,\noptgroup,\nselect,\ntextarea*/button.sc-ic-data-row,input.sc-ic-data-row,optgroup.sc-ic-data-row,select.sc-ic-data-row,textarea.sc-ic-data-row{font-family:inherit;font-size:100%;line-height:1.15;margin:0}/*!@button,\ninput*/button.sc-ic-data-row,input.sc-ic-data-row{overflow:visible}/*!@button,\nselect*/button.sc-ic-data-row,select.sc-ic-data-row{text-transform:none}/*!@button,\n[type=\"button\"],\n[type=\"reset\"],\n[type=\"submit\"]*/button.sc-ic-data-row,[type=\"button\"].sc-ic-data-row,[type=\"reset\"].sc-ic-data-row,[type=\"submit\"].sc-ic-data-row{-webkit-appearance:button}/*!@button::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner*/button.sc-ic-data-row::-moz-focus-inner,[type=\"button\"].sc-ic-data-row::-moz-focus-inner,[type=\"reset\"].sc-ic-data-row::-moz-focus-inner,[type=\"submit\"].sc-ic-data-row::-moz-focus-inner{border-style:none;padding:0}/*!@button:-moz-focusring,\n[type=\"button\"]:-moz-focusring,\n[type=\"reset\"]:-moz-focusring,\n[type=\"submit\"]:-moz-focusring*/button.sc-ic-data-row:-moz-focusring,[type=\"button\"].sc-ic-data-row:-moz-focusring,[type=\"reset\"].sc-ic-data-row:-moz-focusring,[type=\"submit\"].sc-ic-data-row:-moz-focusring{outline:1px dotted ButtonText}/*!@fieldset*/fieldset.sc-ic-data-row{padding:0.35em 0.75em 0.625em}/*!@legend*/legend.sc-ic-data-row{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}/*!@progress*/progress.sc-ic-data-row{vertical-align:baseline}/*!@textarea*/textarea.sc-ic-data-row{overflow:auto}/*!@[type=\"checkbox\"],\n[type=\"radio\"]*/[type=\"checkbox\"].sc-ic-data-row,[type=\"radio\"].sc-ic-data-row{box-sizing:border-box;padding:0}/*!@[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button*/[type=\"number\"].sc-ic-data-row::-webkit-inner-spin-button,[type=\"number\"].sc-ic-data-row::-webkit-outer-spin-button{height:auto}/*!@[type=\"search\"]*/[type=\"search\"].sc-ic-data-row{-webkit-appearance:textfield;outline-offset:-2px}/*!@[type=\"search\"]::-webkit-search-decoration*/[type=\"search\"].sc-ic-data-row::-webkit-search-decoration{-webkit-appearance:none}/*!@::-webkit-file-upload-button*/.sc-ic-data-row::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}/*!@details*/details.sc-ic-data-row{display:block}/*!@summary*/summary.sc-ic-data-row{display:list-item}/*!@template*/template.sc-ic-data-row{display:none}/*!@[hidden]*/[hidden].sc-ic-data-row{display:none}/*!@html,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo*/html.sc-ic-data-row,body.sc-ic-data-row,div.sc-ic-data-row,span.sc-ic-data-row,applet.sc-ic-data-row,object.sc-ic-data-row,iframe.sc-ic-data-row,h1.sc-ic-data-row,h2.sc-ic-data-row,h3.sc-ic-data-row,h4.sc-ic-data-row,h5.sc-ic-data-row,h6.sc-ic-data-row,p.sc-ic-data-row,blockquote.sc-ic-data-row,pre.sc-ic-data-row,a.sc-ic-data-row,abbr.sc-ic-data-row,acronym.sc-ic-data-row,address.sc-ic-data-row,big.sc-ic-data-row,cite.sc-ic-data-row,code.sc-ic-data-row,del.sc-ic-data-row,dfn.sc-ic-data-row,em.sc-ic-data-row,img.sc-ic-data-row,ins.sc-ic-data-row,kbd.sc-ic-data-row,q.sc-ic-data-row,s.sc-ic-data-row,samp.sc-ic-data-row,small.sc-ic-data-row,strike.sc-ic-data-row,strong.sc-ic-data-row,sub.sc-ic-data-row,sup.sc-ic-data-row,tt.sc-ic-data-row,var.sc-ic-data-row,b.sc-ic-data-row,u.sc-ic-data-row,i.sc-ic-data-row,center.sc-ic-data-row,dl.sc-ic-data-row,dt.sc-ic-data-row,dd.sc-ic-data-row,ol.sc-ic-data-row,ul.sc-ic-data-row,li.sc-ic-data-row,fieldset.sc-ic-data-row,form.sc-ic-data-row,label.sc-ic-data-row,legend.sc-ic-data-row,table.sc-ic-data-row,caption.sc-ic-data-row,tbody.sc-ic-data-row,tfoot.sc-ic-data-row,thead.sc-ic-data-row,tr.sc-ic-data-row,th.sc-ic-data-row,td.sc-ic-data-row,article.sc-ic-data-row,aside.sc-ic-data-row,canvas.sc-ic-data-row,details.sc-ic-data-row,embed.sc-ic-data-row,figure.sc-ic-data-row,figcaption.sc-ic-data-row,footer.sc-ic-data-row,header.sc-ic-data-row,hgroup.sc-ic-data-row,menu.sc-ic-data-row,nav.sc-ic-data-row,output.sc-ic-data-row,ruby.sc-ic-data-row,section.sc-ic-data-row,summary.sc-ic-data-row,time.sc-ic-data-row,mark.sc-ic-data-row,audio.sc-ic-data-row,video.sc-ic-data-row{margin:0;padding:0;border:0;font-size:100%;font-style:inherit;vertical-align:baseline}/*!@:host*/.sc-ic-data-row-h{position:relative;display:block}/*!@.data*/.data.sc-ic-data-row{display:flex;align-items:center}/*!@.text-cells*/.text-cells.sc-ic-data-row{display:flex;flex-grow:1;min-width:0}/*!@.label*/.label.sc-ic-data-row{width:12.5rem;min-width:12.5rem;margin-right:var(--ic-space-md);color:var(--ic-color-tertiary-text)}/*!@.value*/.value.sc-ic-data-row{flex-grow:1}/*!@slot[name=\"value\"]::slotted(ic-text-field[readonly][hide-label])*/slot[name=\"value\"].sc-ic-data-row-s>ic-text-field[readonly][hide-label]{margin-top:calc(var(--ic-space-xs) * -1)}/*!@slot[name=\"value\"]::slotted(ic-text-field[small][readonly][hide-label])*/slot[name=\"value\"].sc-ic-data-row-s>ic-text-field[small][readonly][hide-label]{margin-top:calc(var(--ic-space-xxs) * -1)}/*!@slot[name=\"value\"]::slotted(ic-text-field[readonly][hide-label][rows])*/slot[name=\"value\"].sc-ic-data-row-s>ic-text-field[readonly][hide-label][rows]{margin-top:calc(var(--ic-space-xxs) * -1 - var(--ic-space-xxxs))}/*!@.end-component*/.end-component.sc-ic-data-row{width:-moz-fit-content;width:fit-content;margin-left:3.5rem}/*!@.divider*/.divider.sc-ic-data-row{margin-top:var(--ic-space-md);height:var(--ic-border-width);background-color:var(--ic-architectural-300)}/*!@:host(.small) .divider*/.small.sc-ic-data-row-h .divider.sc-ic-data-row{margin-top:var(--ic-space-xs)}/*!@:host(.breakpoint-medium) .label*/.breakpoint-medium.sc-ic-data-row-h .label.sc-ic-data-row{width:10rem;min-width:10rem}/*!@:host(.breakpoint-xs) .text-cells*/.breakpoint-xs.sc-ic-data-row-h .text-cells.sc-ic-data-row{flex-direction:column}/*!@:host(.breakpoint-xs) .label*/.breakpoint-xs.sc-ic-data-row-h .label.sc-ic-data-row{width:8rem;margin-bottom:var(--ic-space-xs)}/*!@:host(.breakpoint-xs) .value*/.breakpoint-xs.sc-ic-data-row-h .value.sc-ic-data-row{max-width:95%}/*!@:host(.breakpoint-xs) .end-component*/.breakpoint-xs.sc-ic-data-row-h .end-component.sc-ic-data-row{margin-left:0}@media (forced-colors: active){/*!@.divider*/.divider.sc-ic-data-row{background-color:canvastext}}";

/**
 * @slot label - Content will be rendered in the leftmost cell.
 * @slot value - Content will be rendered to the right of the label.
 * @slot end-component - Content will be displayed in the rightmost cell.
 */
class DataRow {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.hasEndComponent = false;
    this.resizeObserver = null;
    this.runResizeObserver = () => {
      this.resizeObserver = new ResizeObserver(() => {
        this.checkLabelAbove();
      });
      this.resizeObserver.observe(this.el);
    };
    /**
     * Renders the label either as a ic-typography or slot. Slotted content takes precedence.
     * @param label string - label of value
     * @returns HTMLDivElement - returns label as slot or ic-typography with label as textContent
     */
    this.renderLabel = (label) => {
      if (isSlotUsed$1(this.el, "label")) {
        return (hAsync("div", { class: "label" }, hAsync("slot", { name: "label" })));
      }
      else if (label) {
        return (hAsync("div", { class: "label" }, hAsync("ic-typography", { variant: this.entitySize === "xs" ? "label" : "subtitle-large" }, label)));
      }
      return null;
    };
    this.deviceSize = DEVICE_SIZES.XL;
    this.entitySize = undefined;
    this.label = undefined;
    this.size = "default";
    this.small = false;
    this.value = undefined;
  }
  disconnectedCallback() {
    if (this.resizeObserver !== null) {
      this.resizeObserver.disconnect();
    }
  }
  componentWillLoad() {
    this.deviceSize = getCurrentDeviceSize();
    this.hasEndComponent = slotHasContent(this.el, "end-component");
    this.checkLabelAbove();
  }
  componentDidLoad() {
    checkResizeObserver$1(this.runResizeObserver);
    if (this.hasEndComponent) {
      this.labelEndComponent();
    }
  }
  checkLabelAbove() {
    var _a;
    const rowSize = (_a = this.el.shadowRoot.querySelector(".data")) === null || _a === void 0 ? void 0 : _a.clientWidth;
    if (rowSize) {
      if (rowSize + 46 < DEVICE_SIZES.S) {
        this.entitySize = "xs";
      }
      else if (rowSize + 46 < DEVICE_SIZES.M) {
        this.entitySize = "m";
      }
      else {
        this.entitySize = "xl";
      }
    }
  }
  labelEndComponent() {
    const component = this.el.shadowRoot.querySelectorAll("slot[name=end-component]");
    component.forEach((child) => child.setAttribute("aria-label", "for " + this.label + " row"));
  }
  render() {
    const { label, value, small, size } = this;
    return (hAsync(Host, { class: {
        ["small"]: small || size === "small",
        ["breakpoint-medium"]: this.entitySize === "m",
        ["breakpoint-xs"]: this.entitySize === "xs",
      }, role: "listitem" }, hAsync("div", { class: "data" }, hAsync("div", { class: "text-cells" }, this.renderLabel(label), hAsync("div", { class: "value" }, hAsync("slot", { name: "value" }, hAsync("ic-typography", { variant: "body" }, value)))), this.hasEndComponent && (hAsync("div", { class: "end-component" }, hAsync("div", { role: "cell" }, hAsync("slot", { name: "end-component" }))))), hAsync("div", { class: "divider" })));
  }
  get el() { return getElement(this); }
  static get style() { return icDataRowCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "ic-data-row",
    "$members$": {
      "label": [1],
      "size": [1],
      "small": [4],
      "value": [1],
      "deviceSize": [32],
      "entitySize": [32]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": []
  }; }
}

var unsortedIcon = `<svg focusable="false" aria-hidden="true" viewBox="0 0 24 24">
    <path d="M9 3 5 6.99h3V14h2V6.99h3L9 3zm7 14.01V10h-2v7.01h-3L15 21l4-3.99h-3z"></path>
</svg>`;

var ascendingIcon = `<svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" style="transform: rotate(-90deg);">
    <path d="M16.01 11H4v2h12.01v3L20 12l-3.99-4z"></path>
</svg>`;

var descendingIcon = `<svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" style="transform: rotate(90deg)">
    <path d="M16.01 11H4v2h12.01v3L20 12l-3.99-4z"></path>
</svg>`;

// Build does not recognise this function being passed via @ukic/web-components so it has been added locally
const checkResizeObserver = (callbackFn) => {
  if (typeof window !== "undefined" &&
    typeof window.ResizeObserver !== "undefined") {
    callbackFn();
  }
};
const getCssProperty = (cssVar) => getComputedStyle(document.documentElement).getPropertyValue(cssVar);
({
  XS: Number(getCssProperty("--ic-breakpoint-xs").replace("px", "")),
  S: Number(getCssProperty("--ic-breakpoint-sm").replace("px", "")),
  M: Number(getCssProperty("--ic-breakpoint-md").replace("px", "")),
  L: Number(getCssProperty("--ic-breakpoint-lg").replace("px", "")),
  XL: Number(getCssProperty("--ic-breakpoint-xl").replace("px", "")),
  UNDEFINED: 1200,
});
const isSlotUsed = (element, slotName) => {
  return Array.from(element.children).some((child) => child.getAttribute("slot") === slotName);
};
const getSlot = (element, name) => {
  if (element && element.querySelector) {
    return element.querySelector(`[slot="${name}"]`);
  }
  return null;
};
const getSlotElements = (slot) => {
  const slotContent = slot.firstElementChild;
  if (slotContent !== null) {
    const elements = slotContent.assignedElements
      ? slotContent.assignedElements()
      : slotContent.childNodes;
    return elements.length ? elements : null;
  }
  else {
    //check for single element
    return slot === null ? null : [slot];
  }
};
const getSlotContent = (element, name) => {
  const slot = getSlot(element, name);
  if (slot) {
    return getSlotElements(slot);
  }
  return null;
};

const icDataTableCss = "/*!@:host*/.sc-ic-data-table-h{position:relative;display:block;height:100%;max-height:100%}/*!@tbody*/tbody.sc-ic-data-table{vertical-align:top}/*!@.table-container*/.table-container.sc-ic-data-table{position:relative;height:calc(100% - var(--ic-space-xxxs))}/*!@.table-row-container*/.table-row-container.sc-ic-data-table{position:relative;height:100%;overflow:auto;transition:var(--ic-easing-transition-fast);overflow-anchor:none}/*!@:host([show-pagination=\"true\"]) .table-row-container*/[show-pagination=\"true\"].sc-ic-data-table-h .table-row-container.sc-ic-data-table{height:calc(100% - 3.5625rem)}/*!@table*/table.sc-ic-data-table{table-layout:fixed;border-spacing:0;width:100%}/*!@.table-row-container:focus*/.table-row-container.sc-ic-data-table:focus{outline:none;box-shadow:var(--ic-border-focus);border-radius:var(--ic-border-radius);transition:var(--ic-easing-transition-fast);z-index:1}/*!@:host([embedded=\"true\"]) .table-row-container*/[embedded=\"true\"].sc-ic-data-table-h .table-row-container.sc-ic-data-table{border:var(--ic-border-light)}/*!@.column-header-sticky*/.column-header-sticky.sc-ic-data-table{position:sticky;top:0;z-index:1}/*!@.column-header-overlay*/.column-header-overlay.sc-ic-data-table{position:sticky;top:0;z-index:1;box-shadow:0 0.375rem var(--ic-space-xs) calc(var(--ic-space-xxs * -1))\n    rgb(0 0 0 / 20%)}/*!@.row-header-sticky*/.row-header-sticky.sc-ic-data-table{position:sticky;left:0}/*!@.column-header,\n.table-row*/.column-header.sc-ic-data-table,.table-row.sc-ic-data-table{box-sizing:border-box}/*!@.table-row-selected*/.table-row-selected.sc-ic-data-table{background-color:var(--ic-table-row-selected) !important}/*!@.sort-button*/.sort-button.sc-ic-data-table{margin-left:auto}/*!@.sort-button:hover*/.sort-button.sc-ic-data-table:hover{background-color:var(--ic-action-dark-bg-hover)}/*!@.sort-button:active*/.sort-button.sc-ic-data-table:active{background-color:var(--ic-action-dark-bg-active)}/*!@.sort-button svg*/.sort-button.sc-ic-data-table svg.sc-ic-data-table{color:var(--ic-architectural-black)}/*!@.sort-button-unsorted svg*/.sort-button-unsorted.sc-ic-data-table svg.sc-ic-data-table{color:var(--ic-color-tertiary-text)}/*!@.table-density-dense*/.table-density-dense.sc-ic-data-table{padding:var(--ic-space-xxs) var(--ic-space-xs) !important}/*!@.text-dense*/.text-dense.sc-ic-data-table{font-size:var(--ic-font-size-label)}/*!@.table-density-spacious*/.table-density-spacious.sc-ic-data-table{padding:0.625rem var(--ic-space-xs) !important}/*!@.text-spacious*/.text-spacious.sc-ic-data-table{font-size:1.125rem}/*!@.column-header-text*/.column-header-text.sc-ic-data-table{font-weight:var(--ic-font-weight-bold)}/*!@.column-header,\n.row-header*/.column-header.sc-ic-data-table,.row-header.sc-ic-data-table{text-align:left;padding:var(--ic-space-xs);background-color:var(--ic-architectural-40);border-right:var(--ic-border-light);border-bottom:var(--ic-border-light)}/*!@.column-header:last-child*/.column-header.sc-ic-data-table:last-child{border-right:none}/*!@.scrollable .column-header:last-child*/.scrollable.sc-ic-data-table .column-header.sc-ic-data-table:last-child{border-right:var(--ic-border-light) !important}/*!@:host([embedded=\"true\"]) tr:last-child .table-cell,\n:host([embedded=\"true\"]) tr:last-child .row-header*/[embedded=\"true\"].sc-ic-data-table-h tr.sc-ic-data-table:last-child .table-cell.sc-ic-data-table,[embedded=\"true\"].sc-ic-data-table-h tr.sc-ic-data-table:last-child .row-header.sc-ic-data-table{border-bottom:none}/*!@.column-header-alignment-left,\n.row-header-alignment-left,\n.cell-alignment-left*/.column-header-alignment-left.sc-ic-data-table,.row-header-alignment-left.sc-ic-data-table,.cell-alignment-left.sc-ic-data-table{text-align:left !important;justify-content:start !important}/*!@.column-header-alignment-right,\n.row-header-alignment-right,\n.cell-alignment-right*/.column-header-alignment-right.sc-ic-data-table,.row-header-alignment-right.sc-ic-data-table,.cell-alignment-right.sc-ic-data-table{justify-content:end !important}/*!@.column-header-alignment-center,\n.row-header-alignment-center,\n.cell-alignment-center*/.column-header-alignment-center.sc-ic-data-table,.row-header-alignment-center.sc-ic-data-table,.cell-alignment-center.sc-ic-data-table{text-align:center !important}/*!@.table-row:nth-child(even)*/.table-row.sc-ic-data-table:nth-child(even){background-color:var(--ic-architectural-20)}/*!@.table-cell*/.table-cell.sc-ic-data-table{padding:var(--ic-space-xs);border-bottom:solid var(--ic-architectural-100) var(--ic-space-1px)}/*!@ic-tooltip > ic-typography*/ic-tooltip.sc-ic-data-table>ic-typography.sc-ic-data-table{display:-webkit-box;-webkit-box-orient:vertical;overflow:hidden}/*!@.data-type-number,\n.data-type-date*/.data-type-number.sc-ic-data-table,.data-type-date.sc-ic-data-table{justify-content:end;text-align:end}/*!@.cell-alignment-top*/.cell-alignment-top.sc-ic-data-table{vertical-align:top;align-items:flex-start}/*!@.cell-alignment-middle*/.cell-alignment-middle.sc-ic-data-table{vertical-align:middle;align-items:center}/*!@.cell-alignment-bottom*/.cell-alignment-bottom.sc-ic-data-table{vertical-align:bottom;align-items:flex-end}/*!@.cell-emphasis-low*/.cell-emphasis-low.sc-ic-data-table{color:var(--ic-color-secondary-text)}/*!@.cell-emphasis-high*/.cell-emphasis-high.sc-ic-data-table{font-weight:var(--ic-font-weight-bold)}/*!@.pagination-container*/.pagination-container.sc-ic-data-table{background-color:var(--ic-architectural-40);border-top:var(--ic-border-light)}/*!@.screen-reader-sort-text,\n.table-caption*/.screen-reader-sort-text.sc-ic-data-table,.table-caption.sc-ic-data-table{position:absolute;left:-100rem}/*!@.table-cell,\n.column-header,\n.row-header*/.table-cell.sc-ic-data-table,.column-header.sc-ic-data-table,.row-header.sc-ic-data-table{word-wrap:break-word;white-space:pre-wrap}/*!@.loading-empty*/.loading-empty.sc-ic-data-table{padding:var(--ic-space-xl) var(--ic-space-xxl);margin-top:var(--ic-space-xl)}/*!@.updating-state*/.updating-state.sc-ic-data-table{padding:0;border-bottom:var(--ic-border-light)}/*!@.updating-state-headers*/.updating-state-headers.sc-ic-data-table{border-bottom:none}/*!@.loading*/.loading.sc-ic-data-table{position:absolute;left:calc(50% - 5.9741rem);opacity:0;transition:opacity var(--ic-transition-duration-slow)}/*!@.loading.show-background*/.loading.show-background.sc-ic-data-table{background-color:var(--ic-architectural-white);border:var(--ic-border-light)}/*!@.loading.show*/.loading.show.sc-ic-data-table{opacity:1}/*!@.icon,\n::slotted(svg)*/.icon.sc-ic-data-table,.sc-ic-data-table-s>svg{height:var(--ic-space-lg);width:var(--ic-space-lg);margin-right:var(--ic-space-xxs)}/*!@.column-header-alignment-right > .icon,\n.row-header-alignment-right > .icon,\n.cell-alignment-right > .icon,\n.column-header-alignment-right > ::slotted(svg),\n.row-header-alignment-right > ::slotted(svg),\n.cell-alignment-right > ::slotted(svg)*/.column-header-alignment-right.sc-ic-data-table>.icon.sc-ic-data-table,.row-header-alignment-right.sc-ic-data-table>.icon.sc-ic-data-table,.cell-alignment-right.sc-ic-data-table>.icon.sc-ic-data-table,.column-header-alignment-right>.sc-ic-data-table-s>svg,.row-header-alignment-right>.sc-ic-data-table-s>svg,.cell-alignment-right>.sc-ic-data-table-s>svg{margin-right:auto}/*!@.column-header-alignment-center > ic-typography,\n.row-header-alignment-right > ic-typography,\n.cell-alignment-center > ic-typography*/.column-header-alignment-center.sc-ic-data-table>ic-typography.sc-ic-data-table,.row-header-alignment-right.sc-ic-data-table>ic-typography.sc-ic-data-table,.cell-alignment-center.sc-ic-data-table>ic-typography.sc-ic-data-table{flex:1}/*!@.icon > svg*/.icon.sc-ic-data-table>svg.sc-ic-data-table{height:var(--ic-space-lg);width:var(--ic-space-lg);display:inline-block}@media screen and (min-width: 576px){/*!@.column-header-inner-container*/.column-header-inner-container.sc-ic-data-table{display:flex;align-items:center}/*!@.cell-container*/.cell-container.sc-ic-data-table{display:flex}}";

/**
 * @slot empty-state - Content is slotted below the table header when there is no data and the table is not loading.
 * @slot {COLUMN_KEY}-{ROW_INDEX}[-icon] - Each cell should have its own slot, named using the column tag and the row index, allowing for custom elements to be displayed. Include `-icon` at the end for that cell's icon slot.
 * @slot {COLUMN_KEY}-column-icon - The icon slot for a column header.
 * @slot title-bar - A custom ic-data-table-title-bar can be slotted above the column headers to display additional information about the table.
 */
class DataTable {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.icRowHeightChange = createEvent(this, "icRowHeightChange", 7);
    this.DENSITY_HEIGHT_MULTIPLIER = {
      dense: 0.8,
      default: 1,
      spacious: 1.2,
    };
    this.DENSITY_PADDING_HEIGHT_DIFF = {
      dense: 8,
      default: 16,
      spacious: 20,
    };
    this.SORT_ICONS = {
      unsorted: unsortedIcon,
      ascending: ascendingIcon,
      descending: descendingIcon,
    };
    this.hasLoadedForOneSecond = true;
    this.startLoadingTimer = () => {
      this.hasLoadedForOneSecond = false;
      this.timerStarted = Date.now();
      setTimeout(() => {
        this.hasLoadedForOneSecond = true;
        this.timerStarted = null;
      }, this.minimumLoadingDisplayDuration);
    };
    this.isObject = (value) => typeof value === "object";
    this.notDefaultDensity = () => this.density !== "default";
    this.getCellContent = (cell, dataType) => {
      switch (dataType) {
        case "element":
          return undefined;
        case "date":
          return (cell instanceof Date ? cell : new Date(cell)).toLocaleDateString();
        default:
          return cell;
      }
    };
    this.getCellAlignment = (cell, alignment) => {
      if (this.isObject(cell) && Object.keys(cell).includes("cellAlignment")) {
        return this.getObjectValue(this.getObjectValue(cell, "cellAlignment"), alignment);
      }
    };
    this.createUpdatingIndicator = () => {
      const { appearance, description, max, min, progress } = this.updatingOptions || {};
      return (hAsync("th", { colSpan: this.columns.length, class: "updating-state" }, hAsync("ic-loading-indicator", { appearance: appearance, description: description || "Updating table data", fullWidth: true, max: max, min: min, progress: progress, type: "linear", size: "small" })));
    };
    this.createCells = (row, rowIndex) => {
      const rowValues = Object.values(row);
      const rowKeys = Object.keys(row);
      const rowTextWrapIndex = rowKeys.indexOf("textWrap");
      const rowTextWrap = rowTextWrapIndex > -1 && rowValues[rowTextWrapIndex];
      let rowAlignment;
      let rowEmphasis;
      const headerIndex = rowKeys.indexOf("header");
      if (headerIndex > -1) {
        rowAlignment = this.getObjectValue(rowValues[headerIndex], "rowAlignment");
        rowEmphasis = this.getObjectValue(rowValues[headerIndex], "emphasis");
      }
      return rowValues.map((cell, index) => {
        const { columnAlignment, dataType, emphasis, icon, key, textWrap } = this.columns[index] || {};
        const cellSlotName = `${key}-${rowIndex}`;
        const hasIcon = this.isObject(cell) && Object.keys(cell).includes("icon");
        const isNotElement = dataType !== "element";
        const cellValue = (key) => this.getObjectValue(cell, key);
        return (key &&
          (rowKeys[index] === "header" ? (hAsync("th", { scope: "row", colSpan: cellValue("colspan"), class: {
              ["row-header"]: true,
              [`row-header-alignment-${cellValue("cellAlignment")}`]: !!cellValue("cellAlignment"),
              ["row-header-sticky"]: this.stickyRowHeaders,
            } }, cellValue("title"))) : (hAsync("td", { class: {
              ["table-cell"]: true,
              [`table-density-${this.density}`]: this.notDefaultDensity(),
              [`data-type-${dataType}-cell`]: true,
              [`cell-alignment-${(columnAlignment === null || columnAlignment === void 0 ? void 0 : columnAlignment.vertical) ||
                rowAlignment ||
                this.getCellAlignment(cell, "vertical")}`]: !!(columnAlignment === null || columnAlignment === void 0 ? void 0 : columnAlignment.vertical) ||
                !!rowAlignment ||
                !!this.getCellAlignment(cell, "vertical"),
            } }, hAsync("div", { innerHTML: dataType === "element" && !isSlotUsed(this.el, cellSlotName)
              ? cell
              : null, class: {
              "cell-container": isNotElement,
              [`data-type-${dataType}`]: true,
              [`cell-alignment-${(columnAlignment === null || columnAlignment === void 0 ? void 0 : columnAlignment.horizontal) ||
                this.getCellAlignment(cell, "horizontal")}`]: !!(columnAlignment === null || columnAlignment === void 0 ? void 0 : columnAlignment.horizontal) ||
                !!this.getCellAlignment(cell, "horizontal"),
              [`cell-alignment-${(columnAlignment === null || columnAlignment === void 0 ? void 0 : columnAlignment.vertical) ||
                rowAlignment ||
                this.getCellAlignment(cell, "vertical")}`]: !!(columnAlignment === null || columnAlignment === void 0 ? void 0 : columnAlignment.vertical) ||
                !!rowAlignment ||
                !!this.getCellAlignment(cell, "vertical"),
            }, style: {
              height: this.currentRowHeight &&
                !rowTextWrap &&
                !textWrap &&
                isNotElement
                ? `${this.currentRowHeight *
                  this.DENSITY_HEIGHT_MULTIPLIER[this.density] -
                  this.DENSITY_PADDING_HEIGHT_DIFF[this.density]}px`
                : null,
              overflowY: this.truncationPattern === "tooltip" &&
                !(rowTextWrap && textWrap) &&
                isNotElement
                ? "hidden"
                : null,
            } }, isSlotUsed(this.el, cellSlotName) ? (hAsync("slot", { name: cellSlotName })) : (hAsync(Fragment, null, isSlotUsed(this.el, `${cellSlotName}-icon`) ? (hAsync("slot", { name: `${cellSlotName}-icon` })) : ((hasIcon || (icon === null || icon === void 0 ? void 0 : icon.onAllCells)) && (hAsync("span", { class: "icon", innerHTML: cellValue("icon") || icon.icon }))), hAsync("ic-typography", { id: cellSlotName, variant: "body", class: {
              [`cell-emphasis-${(this.isObject(cell) && cellValue("emphasis")) ||
                emphasis ||
                rowEmphasis}`]: (this.isObject(cell) && !!cellValue("emphasis")) ||
                !!emphasis ||
                !!rowEmphasis,
              [`text-${this.density}`]: this.notDefaultDensity(),
            } }, this.isObject(cell) && dataType !== "date" ? (Object.keys(cell).includes("href") ? (hAsync("ic-link", { href: cellValue("href") }, cellValue("data"))) : (cellValue("data"))) : (this.getCellContent(cell, dataType))))))))));
      });
    };
    this.createColumnHeaders = () => {
      return this.columns.map(({ cellAlignment, colspan, icon, key, title }) => (hAsync("th", { scope: "col", class: {
          ["column-header"]: true,
          [`table-density-${this.density}`]: this.notDefaultDensity(),
          ["updating-state-headers"]: this.updating && !this.loading,
        }, colSpan: colspan }, hAsync("div", { class: {
          "column-header-inner-container": true,
          [`column-header-alignment-${cellAlignment}`]: !!cellAlignment,
        } }, isSlotUsed(this.el, `${key}-column-icon`) ? (hAsync("slot", { name: `${key}-column-icon` })) : (icon &&
        !icon.hideOnHeader && (hAsync("span", { class: "icon", innerHTML: icon.icon }))), hAsync("ic-typography", { variant: "body", class: {
          ["column-header-text"]: true,
          [`text-${this.density}`]: this.notDefaultDensity(),
        } }, title), this.sortable && (hAsync("ic-button", { variant: "icon", id: `sort-button-${key}`, "aria-label": this.getSortButtonLabel(key),
        // eslint-disable-next-line react/jsx-no-bind
        onClick: () => this.sortRows(key), innerHTML: this.SORT_ICONS[this.sortedColumn === key
          ? this.sortedColumnOrder
          : "unsorted"], class: {
          ["sort-button"]: true,
          ["sort-button-unsorted"]: this.sortedColumn !== key ||
            this.sortedColumnOrder === "unsorted",
        } }))))));
    };
    this.onRowClick = (target, row) => {
      if (target.tagName !== "IC-TYPOGRAPHY" &&
        !target.style.getPropertyValue("--truncation-max-lines")) {
        this.selectedRow =
          !(this.selectedRow === row && this.loading && this.updating) && row;
      }
    };
    this.createRows = () => {
      const data = this.showPagination
        ? this.data.slice(this.fromRow, this.toRow)
        : this.data.slice();
      /**
       * Ensures that createCells has a value in data to map over to actually render the slot.
       * Removes the need for the user to add it multiple times.
       */
      this.columns.forEach(({ key }) => {
        data.forEach((row, rowIndex) => {
          const cellSlotName = `${key}-${rowIndex}`;
          if (isSlotUsed(this.el, cellSlotName)) {
            row[key] = getSlotContent(this.el, cellSlotName);
          }
        });
      });
      return data
        .sort(!this.sortable ? undefined : this.getSortFunction())
        .map((row, index) => {
        var _a;
        const variableRowHeightVal = (_a = this.variableRowHeight) === null || _a === void 0 ? void 0 : _a.call(this, Object.assign(Object.assign({}, row), { index }));
        this.currentRowHeight = variableRowHeightVal
          ? variableRowHeightVal !== "auto" && variableRowHeightVal
          : this.globalRowHeight !== "auto" && this.globalRowHeight;
        return (hAsync("tr", {
          // eslint-disable-next-line react/jsx-no-bind
          onClick: (event) => this.onRowClick(event.target, row), class: {
            ["table-row"]: true,
            ["table-row-selected"]: this.selectedRow === row,
          }
        }, this.createCells(row, index)));
      });
    };
    this.getObjectValue = (cell, key) => {
      return Object.values(cell)[Object.keys(cell).indexOf(key)];
    };
    this.getSortButtonLabel = (key) => {
      let label = "";
      const getNextSortOption = (option) => {
        const sortOrders = this.sortOptions.sortOrders;
        return sortOrders[(sortOrders.indexOf(option) + 1) % sortOrders.length];
      };
      if (this.sortedColumn === key) {
        const sortOption = getNextSortOption(this.sortedColumnOrder);
        label = sortOption !== "unsorted" ? `Sort ${sortOption}` : "Remove sort";
      }
      else {
        label = `Sort ${getNextSortOption("unsorted")}`;
      }
      return label;
    };
    this.getComparison = (targetRow, comparisonRow) => {
      const targetRowValue = targetRow[this.sortedColumn];
      const comparisonRowValue = comparisonRow[this.sortedColumn];
      return this.columns.find((col) => col.key === this.sortedColumn)
        .dataType === "date"
        ? new Date(targetRowValue).valueOf() -
          new Date(comparisonRowValue).valueOf()
        : String(this.isObject(targetRowValue)
          ? Object.values(targetRowValue)[0]
          : targetRowValue).localeCompare(String(this.isObject(comparisonRowValue)
          ? Object.values(comparisonRowValue)[0]
          : comparisonRowValue), undefined, { numeric: true, sensitivity: "base" });
    };
    this.getSortFunction = () => {
      switch (this.sortedColumnOrder) {
        case "ascending":
          return (a, b) => this.getComparison(a, b);
        case "descending":
          return (a, b) => this.getComparison(b, a);
        default:
          return undefined;
      }
    };
    this.sortRows = (column) => {
      const sortButton = this.el.shadowRoot.querySelector(`#sort-button-${column}`);
      const sortOrders = this.sortOptions.sortOrders;
      if (column !== this.sortedColumn) {
        if (this.sortedColumn) {
          const previousSortedButton = this.el.shadowRoot.querySelector(`#sort-button-${this.sortedColumn}`);
          previousSortedButton.setAttribute("aria-label", this.getSortButtonLabel(column)); // Passing through unsorted column returns correct label for newly unsorted column
        }
        this.sortedColumn = column;
        this.sortedColumnOrder = "unsorted";
      }
      let nextSortOrderIndex = sortOrders.indexOf(this.sortedColumnOrder) + 1;
      if (nextSortOrderIndex > sortOrders.length - 1) {
        nextSortOrderIndex = 0;
      }
      this.sortedColumnOrder = sortOrders[nextSortOrderIndex];
      sortButton.setAttribute("aria-label", this.getSortButtonLabel(column));
    };
    this.updateScrollOffset = () => {
      this.scrollOffset = this.el.shadowRoot.querySelector(".table-row-container").scrollTop;
    };
    this.fromRow = 0;
    this.previousRowsPerPage = undefined;
    this.rowsPerPage = undefined;
    this.scrollable = false;
    this.scrollOffset = 0;
    this.selectedRow = undefined;
    this.sortedColumn = undefined;
    this.sortedColumnOrder = undefined;
    this.toRow = undefined;
    this.caption = undefined;
    this.columns = undefined;
    this.data = undefined;
    this.density = "default";
    this.embedded = false;
    this.globalRowHeight = 40;
    this.hideColumnHeaders = false;
    this.loading = false;
    this.loadingOptions = undefined;
    this.minimumLoadingDisplayDuration = 1000;
    this.paginationOptions = {
      itemsPerPage: [
        { label: "10", value: "10" },
        { label: "25", value: "25" },
        { label: "50", value: "50" },
      ],
      type: "page",
      control: "simple",
      itemsPerPageControl: true,
      goToPageControl: true,
      alignment: "right",
    };
    this.showPagination = false;
    this.sortable = false;
    this.sortOptions = {
      sortOrders: ["unsorted", "ascending", "descending"],
      defaultColumn: "",
    };
    this.stickyColumnHeaders = false;
    this.stickyRowHeaders = false;
    this.truncationPattern = "tooltip";
    this.updating = false;
    this.updatingOptions = undefined;
    this.variableRowHeight = undefined;
  }
  componentWillLoad() {
    var _a;
    this.rowsPerPage = Number(this.paginationOptions.itemsPerPage[0].value);
    this.previousRowsPerPage = this.rowsPerPage;
    this.toRow = this.rowsPerPage;
    this.sortedColumn = this.sortOptions.defaultColumn;
    this.sortedColumnOrder = this.sortOptions.sortOrders[0];
    this.loadingOptions = Object.assign(Object.assign({}, this.loadingOptions), { showBackground: ((_a = this.data) === null || _a === void 0 ? void 0 : _a.length) > 0 });
  }
  componentDidLoad() {
    const tableElement = this.el.shadowRoot.querySelector("table");
    const tableContainer = this.el.shadowRoot.querySelector(".table-container");
    if ((tableElement === null || tableElement === void 0 ? void 0 : tableElement.clientHeight) > (tableContainer === null || tableContainer === void 0 ? void 0 : tableContainer.clientHeight) ||
      (tableElement === null || tableElement === void 0 ? void 0 : tableElement.clientWidth) > (tableContainer === null || tableContainer === void 0 ? void 0 : tableContainer.clientWidth)) {
      this.scrollable = true;
    }
  }
  componentDidRender() {
    Array.from(this.el.shadowRoot.querySelectorAll("ic-typography:not(.column-header-text)")).forEach((typographyEl) => {
      const parentEl = typographyEl.parentElement;
      const parentIsTooltip = parentEl.tagName === "IC-TOOLTIP";
      const parentDiv = parentIsTooltip ? parentEl.parentElement : parentEl;
      const parentHeight = Number(parentDiv.style["height"].replace("px", ""));
      const maxLines = Math.floor(parentHeight / 24);
      const removeDivStyles = () => {
        parentDiv.style["height"] = null;
        parentDiv.style["overflowY"] = null;
      };
      if (typographyEl.clientHeight > parentHeight) {
        const removeVerticalAlignment = (el) => {
          const VERTICAL_CLASSES = [
            "cell-alignment-middle",
            "cell-alignment-bottom",
          ];
          if (VERTICAL_CLASSES.some((className) => Array.from(el.classList).includes(className))) {
            el.classList.remove(...VERTICAL_CLASSES);
          }
        };
        removeVerticalAlignment(parentDiv);
        removeVerticalAlignment(parentDiv.parentElement);
      }
      else {
        typographyEl.maxLines = undefined;
      }
      if (parentDiv.parentElement.clientHeight >
        parentHeight + this.DENSITY_PADDING_HEIGHT_DIFF[this.density]) {
        removeDivStyles();
      }
      if (typographyEl.scrollHeight < parentHeight && parentIsTooltip) {
        parentEl.replaceWith(...Array.from(parentEl.childNodes)); // Removes tooltip
      }
      else if ((typographyEl.scrollHeight > typographyEl.clientHeight ||
        (parentHeight && typographyEl.clientHeight > parentHeight)) &&
        !parentDiv.classList.contains("data-type-element")) {
        if (this.truncationPattern === "tooltip") {
          typographyEl.style.webkitLineClamp = `${maxLines}`;
          if (!parentIsTooltip) {
            const tooltipEl = document.createElement("ic-tooltip");
            tooltipEl.setAttribute("target", typographyEl.id);
            tooltipEl.setAttribute("label", typographyEl.innerHTML);
            typographyEl.parentNode.replaceChild(tooltipEl, typographyEl);
            tooltipEl.appendChild(typographyEl);
          }
        }
        else {
          /**
           * The manual height on the div can be removed since the line clamp applied to the ic-typography will perform that function.
           * Adding 24 to checkMaxLines ensures an extra line is available for the `See More/See Less` button to move onto.
           */
          removeDivStyles();
          typographyEl.maxLines = maxLines - 1 || 1;
          typographyEl.checkMaxLines(parentHeight + 24);
        }
      }
    });
  }
  handleItemsPerPageChange(ev) {
    this.previousRowsPerPage = this.rowsPerPage;
    this.rowsPerPage = ev.detail.value;
  }
  handlePageChange(ev) {
    this.fromRow = (ev.detail.value - 1) * this.rowsPerPage;
    this.toRow = this.fromRow + this.rowsPerPage;
    const tableRowsContainer = this.el.shadowRoot.querySelector(".table-row-container");
    if (this.previousRowsPerPage === this.rowsPerPage) {
      tableRowsContainer.scrollTop = 0;
    }
    else if (this.previousRowsPerPage < this.rowsPerPage) {
      tableRowsContainer.scrollTop = this.scrollOffset;
      this.previousRowsPerPage = this.rowsPerPage;
    }
    else {
      this.previousRowsPerPage = this.rowsPerPage;
    }
  }
  handleDensityChange(ev) {
    this.density = ev.detail.value;
  }
  clickListener(ev) {
    if (ev.target !== this.el)
      this.selectedRow = undefined;
  }
  loadingHandler(newValue) {
    if (newValue)
      this.startLoadingTimer();
  }
  dataHandler(newData) {
    this.loadingOptions = Object.assign(Object.assign({}, this.loadingOptions), { showBackground: (newData === null || newData === void 0 ? void 0 : newData.length) > 0 });
    if (this.loading) {
      !this.hasLoadedForOneSecond
        ? setTimeout(() => (this.loading = false), this.minimumLoadingDisplayDuration -
          (Date.now() - this.timerStarted))
        : (this.loading = false);
    }
    this.updating && (this.updating = false);
  }
  rowHeightChangeHandler() {
    const deleteTextWrapKey = (array) => array.forEach((val) => val.textWrap && delete val.textWrap);
    deleteTextWrapKey(this.data);
    deleteTextWrapKey(this.columns);
    this.icRowHeightChange.emit();
  }
  /**
   * Resets the `globalRowHeight` prop to `40px` and sets the `variableRowHeight` prop to `null`.
   */
  async resetRowHeights() {
    this.globalRowHeight = 40;
    this.variableRowHeight = null;
  }
  render() {
    const { caption, createColumnHeaders, createRows, createUpdatingIndicator, data, hideColumnHeaders, loading, loadingOptions, paginationOptions, scrollable, scrollOffset, showPagination, sortable, sortedColumnOrder, sortedColumn, stickyColumnHeaders, updateScrollOffset, updating, } = this;
    return (hAsync("div", { class: "table-container" }, isSlotUsed(this.el, "title-bar") && hAsync("slot", { name: "title-bar" }), hAsync("div", { class: {
        ["table-row-container"]: true,
        scrollable,
      }, tabIndex: scrollable ? 0 : null, onScroll: updateScrollOffset }, isSlotUsed(this.el, "title-bar") && hAsync("slot", { name: "title-bar" }), hAsync("table", null, hAsync("caption", { class: "table-caption" }, caption), !hideColumnHeaders && (hAsync("thead", { class: {
        ["column-header-sticky"]: stickyColumnHeaders,
        ["column-header-overlay"]: stickyColumnHeaders && scrollOffset !== 0,
      } }, hAsync("tr", null, createColumnHeaders()))), updating &&
      !loading &&
      (hideColumnHeaders ? (hAsync("thead", null, createUpdatingIndicator())) : (createUpdatingIndicator())), (data === null || data === void 0 ? void 0 : data.length) > 0 && !loading && hAsync("tbody", null, createRows())), !(data === null || data === void 0 ? void 0 : data.length) &&
      !loading &&
      (isSlotUsed(this.el, "empty-state") ? (hAsync("slot", { name: "empty-state" })) : (hAsync("ic-empty-state", { aligned: "center", heading: "No Data", class: "loading-empty" })))), hAsync("ic-loading-indicator", { appearance: loadingOptions === null || loadingOptions === void 0 ? void 0 : loadingOptions.appearance, class: {
        "loading-empty": loading,
        loading: true,
        show: loading,
        "show-background": loadingOptions.showBackground,
      }, description: loadingOptions.description || "Loading table data", label: loadingOptions.label || "Loading...", labelDuration: loadingOptions === null || loadingOptions === void 0 ? void 0 : loadingOptions.labelDuration, max: loadingOptions === null || loadingOptions === void 0 ? void 0 : loadingOptions.max, min: loadingOptions === null || loadingOptions === void 0 ? void 0 : loadingOptions.min, progress: loadingOptions === null || loadingOptions === void 0 ? void 0 : loadingOptions.progress }), showPagination && (hAsync("div", { class: "pagination-container" }, hAsync("ic-pagination-bar", { totalItems: data.length, paginationType: paginationOptions.type, paginationControl: paginationOptions.control, showItemsPerPageControl: paginationOptions.itemsPerPageControl, showGoToPageControl: paginationOptions.goToPageControl, itemsPerPageOptions: paginationOptions.itemsPerPage, alignment: paginationOptions.alignment }))), sortable && (hAsync("div", { class: "screen-reader-sort-text", "aria-live": "polite" }, sortedColumnOrder !== "unsorted" && sortedColumn
      ? `${sortedColumn} sorted ${sortedColumnOrder}`
      : "table unsorted"))));
  }
  get el() { return getElement(this); }
  static get watchers() { return {
    "loading": ["loadingHandler"],
    "data": ["dataHandler"],
    "globalRowHeight": ["rowHeightChangeHandler"],
    "variableRowHeight": ["rowHeightChangeHandler"]
  }; }
  static get style() { return icDataTableCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "ic-data-table",
    "$members$": {
      "caption": [1],
      "columns": [16],
      "data": [16],
      "density": [1025],
      "embedded": [4],
      "globalRowHeight": [1032, "global-row-height"],
      "hideColumnHeaders": [4, "hide-column-headers"],
      "loading": [1028],
      "loadingOptions": [16],
      "minimumLoadingDisplayDuration": [2, "minimum-loading-display-duration"],
      "paginationOptions": [16],
      "showPagination": [4, "show-pagination"],
      "sortable": [4],
      "sortOptions": [16],
      "stickyColumnHeaders": [4, "sticky-column-headers"],
      "stickyRowHeaders": [4, "sticky-row-headers"],
      "truncationPattern": [1, "truncation-pattern"],
      "updating": [4],
      "updatingOptions": [16],
      "variableRowHeight": [1040],
      "fromRow": [32],
      "previousRowsPerPage": [32],
      "rowsPerPage": [32],
      "scrollable": [32],
      "scrollOffset": [32],
      "selectedRow": [32],
      "sortedColumn": [32],
      "sortedColumnOrder": [32],
      "toRow": [32],
      "resetRowHeights": [64]
    },
    "$listeners$": [[0, "icItemsPerPageChange", "handleItemsPerPageChange"], [0, "icPageChange", "handlePageChange"], [0, "icTableDensityUpdate", "handleDensityChange"], [8, "click", "clickListener"]],
    "$lazyBundleId$": "-",
    "$attrsToReflect$": []
  }; }
}

const icDataTableTitleBarCss = "/*!@.title-bar-wrapper,\n.header-container,\n.description-actions,\n.action-area,\n.custom-actions-wrapper*/.title-bar-wrapper.sc-ic-data-table-title-bar,.header-container.sc-ic-data-table-title-bar,.description-actions.sc-ic-data-table-title-bar,.action-area.sc-ic-data-table-title-bar,.custom-actions-wrapper.sc-ic-data-table-title-bar{display:flex}/*!@.title-bar-wrapper,\n.action-area,\n.custom-actions-wrapper*/.title-bar-wrapper.sc-ic-data-table-title-bar,.action-area.sc-ic-data-table-title-bar,.custom-actions-wrapper.sc-ic-data-table-title-bar{gap:var(--ic-space-xs)}/*!@.title-bar-wrapper*/.title-bar-wrapper.sc-ic-data-table-title-bar{flex-direction:column;padding:var(--ic-space-sm) var(--ic-space-xs);border-bottom:var(--ic-space-1px) solid var(--ic-architectural-300)}/*!@.full-width*/.full-width.sc-ic-data-table-title-bar{padding:var(--ic-space-sm) 0;border-bottom:none}/*!@ic-typography.ic-typography-subtitle-small*/ic-typography.ic-typography-subtitle-small.sc-ic-data-table-title-bar{color:var(--ic-color-tertiary-text)}/*!@ic-typography.ic-typography-h3,\n::slotted([slot=\"header\"])*/ic-typography.ic-typography-h3.sc-ic-data-table-title-bar,.sc-ic-data-table-title-bar-s>[slot=\"header\"]{max-width:800px}/*!@ic-typography.ic-typography-body,\n::slotted([slot=\"description\"])*/ic-typography.ic-typography-body.sc-ic-data-table-title-bar,.sc-ic-data-table-title-bar-s>[slot=\"description\"]{color:var(--ic-color-secondary-text)}/*!@ic-typography.ic-typography-body,\nic-typography.ic-typography-subtitle-small,\n::slotted([slot=\"description\"])*/ic-typography.ic-typography-body.sc-ic-data-table-title-bar,ic-typography.ic-typography-subtitle-small.sc-ic-data-table-title-bar,.sc-ic-data-table-title-bar-s>[slot=\"description\"]{max-width:640px}/*!@.density-input*/.density-input.sc-ic-data-table-title-bar{--input-width:7.625rem}@media screen and (max-width: 1200px){/*!@.header-container*/.header-container.sc-ic-data-table-title-bar{flex-direction:column}}@media screen and (min-width: 1201px){/*!@.header-container*/.header-container.sc-ic-data-table-title-bar{gap:var(--ic-space-xs);align-items:baseline}}@media screen and (min-width: 769px){/*!@.description-actions*/.description-actions.sc-ic-data-table-title-bar{justify-content:space-between}}@media screen and (max-width: 768px){/*!@.description-actions*/.description-actions.sc-ic-data-table-title-bar{flex-direction:column;align-items:flex-start;gap:var(--ic-space-xs)}}@media screen and (min-width: 577px){/*!@.action-area*/.action-area.sc-ic-data-table-title-bar{align-items:center}}@media screen and (max-width: 576px){/*!@.action-area*/.action-area.sc-ic-data-table-title-bar{flex-direction:column}}";

const DEFAULT_TITLE_BAR_HEADING = "Title Bar";
/**
 * @slot primary-action - Render an interactive element that will perform a primary action. Renders to the right of the density select.
 * @slot custom-actions - Render additional custom actions to the left of the density select.
 * @slot heading - The heading to render on the data table title bar.
 * @slot description - Render an alternative description in the description section.
 */
class DataTableTitleBar {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.icTableDensityUpdate = createEvent(this, "icTableDensityUpdate", 7);
    this.initialDensitySelectOption = "default";
    this.isEmbedded = false;
    this.changeDensity = (ev) => {
      this.icTableDensityUpdate.emit({ value: ev.detail.value });
    };
    this.description = undefined;
    this.heading = DEFAULT_TITLE_BAR_HEADING;
    this.hideDensitySelect = false;
    this.metadata = undefined;
  }
  componentWillLoad() {
    const parentEl = this.el.parentElement;
    if (parentEl.tagName === "IC-DATA-TABLE") {
      const dataTable = parentEl;
      this.initialDensitySelectOption = dataTable.density;
      this.isEmbedded = dataTable.embedded;
      if (this.heading === DEFAULT_TITLE_BAR_HEADING) {
        this.heading = dataTable.caption;
      }
    }
  }
  render() {
    const { changeDensity, description, el, heading, hideDensitySelect, initialDensitySelectOption, isEmbedded, metadata, } = this;
    const showActionArea = isSlotUsed(el, "primary-action") ||
      isSlotUsed(el, "custom-actions") ||
      !hideDensitySelect;
    const hasDescription = isSlotUsed(el, "description") || description;
    return (hAsync("div", { class: {
        "title-bar-wrapper": true,
        "full-width": isEmbedded,
      } }, hAsync("div", { class: "header-container" }, hAsync("slot", { name: "heading" }, hAsync("ic-typography", { variant: "h3" }, heading)), metadata && (hAsync("ic-typography", { variant: "subtitle-small" }, metadata))), (showActionArea || hasDescription) && (hAsync("div", { class: "description-actions" }, hAsync("slot", { name: "description" }, description && (hAsync("ic-typography", { variant: "body" }, description))), showActionArea && (hAsync("div", { class: "action-area" }, isSlotUsed(el, "custom-actions") && (hAsync("div", { class: "custom-actions-wrapper" }, hAsync("slot", { name: "custom-actions" }))), !hideDensitySelect && (hAsync("ic-select", { small: true, label: "Change density", class: "density-input", hideLabel: true, options: [
        { label: "Default", value: "default" },
        { label: "Dense", value: "dense" },
        { label: "Spacious", value: "spacious" },
      ], value: initialDensitySelectOption, onIcChange: changeDensity })), isSlotUsed(el, "primary-action") && (hAsync("slot", { name: "primary-action" }))))))));
  }
  get el() { return getElement(this); }
  static get style() { return icDataTableTitleBarCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "ic-data-table-title-bar",
    "$members$": {
      "description": [1],
      "heading": [1],
      "hideDensitySelect": [4, "hide-density-select"],
      "metadata": [1]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": []
  }; }
}

const icDialogCss = "/*!@html*/html.sc-ic-dialog{line-height:1.15;-webkit-text-size-adjust:100%}/*!@body*/body.sc-ic-dialog{margin:0}/*!@main*/main.sc-ic-dialog{display:block}/*!@h1*/h1.sc-ic-dialog{font-size:2em;margin:0.67em 0}/*!@hr*/hr.sc-ic-dialog{box-sizing:content-box;height:0;overflow:visible}/*!@pre*/pre.sc-ic-dialog{font-family:monospace, monospace;font-size:1em}/*!@a*/a.sc-ic-dialog{background-color:transparent}/*!@abbr[title]*/abbr[title].sc-ic-dialog{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}/*!@b,\nstrong*/b.sc-ic-dialog,strong.sc-ic-dialog{font-weight:bolder}/*!@code,\nkbd,\nsamp*/code.sc-ic-dialog,kbd.sc-ic-dialog,samp.sc-ic-dialog{font-family:monospace, monospace;font-size:1em}/*!@small*/small.sc-ic-dialog{font-size:80%}/*!@sub,\nsup*/sub.sc-ic-dialog,sup.sc-ic-dialog{font-size:75%;line-height:0;position:relative;vertical-align:baseline}/*!@sub*/sub.sc-ic-dialog{bottom:-0.25em}/*!@sup*/sup.sc-ic-dialog{top:-0.5em}/*!@img*/img.sc-ic-dialog{border-style:none}/*!@button,\ninput,\noptgroup,\nselect,\ntextarea*/button.sc-ic-dialog,input.sc-ic-dialog,optgroup.sc-ic-dialog,select.sc-ic-dialog,textarea.sc-ic-dialog{font-family:inherit;font-size:100%;line-height:1.15;margin:0}/*!@button,\ninput*/button.sc-ic-dialog,input.sc-ic-dialog{overflow:visible}/*!@button,\nselect*/button.sc-ic-dialog,select.sc-ic-dialog{text-transform:none}/*!@button,\n[type=\"button\"],\n[type=\"reset\"],\n[type=\"submit\"]*/button.sc-ic-dialog,[type=\"button\"].sc-ic-dialog,[type=\"reset\"].sc-ic-dialog,[type=\"submit\"].sc-ic-dialog{-webkit-appearance:button}/*!@button::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner*/button.sc-ic-dialog::-moz-focus-inner,[type=\"button\"].sc-ic-dialog::-moz-focus-inner,[type=\"reset\"].sc-ic-dialog::-moz-focus-inner,[type=\"submit\"].sc-ic-dialog::-moz-focus-inner{border-style:none;padding:0}/*!@button:-moz-focusring,\n[type=\"button\"]:-moz-focusring,\n[type=\"reset\"]:-moz-focusring,\n[type=\"submit\"]:-moz-focusring*/button.sc-ic-dialog:-moz-focusring,[type=\"button\"].sc-ic-dialog:-moz-focusring,[type=\"reset\"].sc-ic-dialog:-moz-focusring,[type=\"submit\"].sc-ic-dialog:-moz-focusring{outline:1px dotted ButtonText}/*!@fieldset*/fieldset.sc-ic-dialog{padding:0.35em 0.75em 0.625em}/*!@legend*/legend.sc-ic-dialog{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}/*!@progress*/progress.sc-ic-dialog{vertical-align:baseline}/*!@textarea*/textarea.sc-ic-dialog{overflow:auto}/*!@[type=\"checkbox\"],\n[type=\"radio\"]*/[type=\"checkbox\"].sc-ic-dialog,[type=\"radio\"].sc-ic-dialog{box-sizing:border-box;padding:0}/*!@[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button*/[type=\"number\"].sc-ic-dialog::-webkit-inner-spin-button,[type=\"number\"].sc-ic-dialog::-webkit-outer-spin-button{height:auto}/*!@[type=\"search\"]*/[type=\"search\"].sc-ic-dialog{-webkit-appearance:textfield;outline-offset:-2px}/*!@[type=\"search\"]::-webkit-search-decoration*/[type=\"search\"].sc-ic-dialog::-webkit-search-decoration{-webkit-appearance:none}/*!@::-webkit-file-upload-button*/.sc-ic-dialog::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}/*!@details*/details.sc-ic-dialog{display:block}/*!@summary*/summary.sc-ic-dialog{display:list-item}/*!@template*/template.sc-ic-dialog{display:none}/*!@[hidden]*/[hidden].sc-ic-dialog{display:none}/*!@html,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo*/html.sc-ic-dialog,body.sc-ic-dialog,div.sc-ic-dialog,span.sc-ic-dialog,applet.sc-ic-dialog,object.sc-ic-dialog,iframe.sc-ic-dialog,h1.sc-ic-dialog,h2.sc-ic-dialog,h3.sc-ic-dialog,h4.sc-ic-dialog,h5.sc-ic-dialog,h6.sc-ic-dialog,p.sc-ic-dialog,blockquote.sc-ic-dialog,pre.sc-ic-dialog,a.sc-ic-dialog,abbr.sc-ic-dialog,acronym.sc-ic-dialog,address.sc-ic-dialog,big.sc-ic-dialog,cite.sc-ic-dialog,code.sc-ic-dialog,del.sc-ic-dialog,dfn.sc-ic-dialog,em.sc-ic-dialog,img.sc-ic-dialog,ins.sc-ic-dialog,kbd.sc-ic-dialog,q.sc-ic-dialog,s.sc-ic-dialog,samp.sc-ic-dialog,small.sc-ic-dialog,strike.sc-ic-dialog,strong.sc-ic-dialog,sub.sc-ic-dialog,sup.sc-ic-dialog,tt.sc-ic-dialog,var.sc-ic-dialog,b.sc-ic-dialog,u.sc-ic-dialog,i.sc-ic-dialog,center.sc-ic-dialog,dl.sc-ic-dialog,dt.sc-ic-dialog,dd.sc-ic-dialog,ol.sc-ic-dialog,ul.sc-ic-dialog,li.sc-ic-dialog,fieldset.sc-ic-dialog,form.sc-ic-dialog,label.sc-ic-dialog,legend.sc-ic-dialog,table.sc-ic-dialog,caption.sc-ic-dialog,tbody.sc-ic-dialog,tfoot.sc-ic-dialog,thead.sc-ic-dialog,tr.sc-ic-dialog,th.sc-ic-dialog,td.sc-ic-dialog,article.sc-ic-dialog,aside.sc-ic-dialog,canvas.sc-ic-dialog,details.sc-ic-dialog,embed.sc-ic-dialog,figure.sc-ic-dialog,figcaption.sc-ic-dialog,footer.sc-ic-dialog,header.sc-ic-dialog,hgroup.sc-ic-dialog,menu.sc-ic-dialog,nav.sc-ic-dialog,output.sc-ic-dialog,ruby.sc-ic-dialog,section.sc-ic-dialog,summary.sc-ic-dialog,time.sc-ic-dialog,mark.sc-ic-dialog,audio.sc-ic-dialog,video.sc-ic-dialog{margin:0;padding:0;border:0;font-size:100%;font-style:inherit;vertical-align:baseline}/*!@:host*/.sc-ic-dialog-h{position:fixed;inset:0;display:flex;align-items:center;justify-content:center;min-height:100% !important;background:rgb(0 0 0 / 60%);z-index:var(--ic-z-index-dialog);opacity:0;transition:opacity var(--ic-easing-transition-slow)}/*!@:host(.disable-height-constraint)*/.disable-height-constraint.sc-ic-dialog-h{background:none;justify-content:unset;align-items:unset}/*!@.dialog.disable-height-constraint*/.dialog.disable-height-constraint.sc-ic-dialog{max-height:none;position:relative}/*!@.dialog.disable-height-constraint .content-area*/.dialog.disable-height-constraint.sc-ic-dialog .content-area.sc-ic-dialog{overflow-y:visible}/*!@:host(.fade-in)*/.fade-in.sc-ic-dialog-h{opacity:1;transition:opacity var(--ic-easing-transition-slow)}/*!@:host(.hidden)*/.hidden.sc-ic-dialog-h{display:none}/*!@.dialog*/.dialog.sc-ic-dialog{background-color:var(--ic-architectural-white);border:var(--ic-border-default);border-radius:var(--ic-border-radius);padding:var(--ic-space-xs) 0 var(--ic-space-md);transform:translateY(-3rem);transition:transform 1000s;display:flex;flex-direction:column;box-sizing:border-box;overflow-x:visible}/*!@:host(.fade-in) .dialog*/.fade-in.sc-ic-dialog-h .dialog.sc-ic-dialog{transform:translateY(0);transition:transform var(--ic-easing-transition-slow)}/*!@.small*/.small.sc-ic-dialog{width:50%;max-width:25rem;min-height:11rem;max-height:70vh}/*!@.medium*/.medium.sc-ic-dialog{width:70vw;max-width:44rem;min-height:12.5rem;max-height:70vh}/*!@.large*/.large.sc-ic-dialog{width:90vw;max-width:62.5rem;min-height:12.5rem;max-height:90vh}/*!@.heading-area*/.heading-area.sc-ic-dialog{display:flex;margin-bottom:var(--ic-space-xs);padding:0 var(--ic-space-md)}/*!@.heading*/.heading.sc-ic-dialog{overflow-wrap:break-word}/*!@.close-icon*/.close-icon.sc-ic-dialog{margin-left:auto}/*!@.content-area*/.content-area.sc-ic-dialog{-ms-overflow-style:none;scrollbar-width:none;padding:0 var(--ic-space-md);margin:0;overflow-y:auto}/*!@.content-area::-webkit-scrollbar*/.content-area.sc-ic-dialog::-webkit-scrollbar{display:none}/*!@#dialog-content*/#dialog-content.sc-ic-dialog{margin-bottom:var(--ic-space-sm)}/*!@#dialog-content ::slotted(ic-typography)*/#dialog-content .sc-ic-dialog-s>ic-typography{overflow-wrap:break-word}/*!@#dialog-content ::slotted(*)*/#dialog-content .sc-ic-dialog-s>*{position:relative}/*!@.status-alert*/.status-alert.sc-ic-dialog{margin-bottom:var(--ic-space-xs)}/*!@.dialog-controls*/.dialog-controls.sc-ic-dialog{margin-top:auto;padding:var(--ic-space-xs) var(--ic-space-md) 0;display:flex;justify-content:flex-end;gap:var(--ic-space-md)}/*!@.dialog-control-button*/.dialog-control-button.sc-ic-dialog{width:-moz-fit-content;width:fit-content}/*!@.backdrop*/.backdrop.sc-ic-dialog{overflow-y:auto;position:fixed;inset:0;display:flex;align-items:center;justify-content:center;background:rgb(0 0 0 / 60%);z-index:var(--ic-z-index-dialog);padding-top:16px;padding-bottom:16px}@media (min-width: 800px){/*!@:host([size=\"large\"]) .content-area*/[size=\"large\"].sc-ic-dialog-h .content-area.sc-ic-dialog{width:75%}}@media (max-width: 576px){/*!@.dialog*/.dialog.sc-ic-dialog{width:100vw;height:100vh;transform:translateY(-5rem);max-width:none;max-height:none;box-sizing:border-box}/*!@.backdrop*/.backdrop.sc-ic-dialog{padding:0}/*!@.dialog.disable-height-constraint*/.dialog.disable-height-constraint.sc-ic-dialog{height:auto;min-height:100vh}}@media (max-width: 364px){/*!@.triple-button*/.triple-button.sc-ic-dialog{flex-direction:column;gap:var(--ic-space-xs)}/*!@.dialog-control-button*/.dialog-control-button.sc-ic-dialog{width:unset}}";

/**
 * @slot dialog-controls - Content will be place at the bottom of the dialog.
 * @slot heading - Content will be placed at the top of the dialog.
 * @slot label - Content will be placed above the dialog heading.
 * @slot alert - Content will be placed at the top of the content area of the dialog.
 */
class Dialog {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.icDialogCancelled = createEvent(this, "icDialogCancelled", 7);
    this.icDialogClosed = createEvent(this, "icDialogClosed", 7);
    this.icDialogConfirmed = createEvent(this, "icDialogConfirmed", 7);
    this.icDialogOpened = createEvent(this, "icDialogOpened", 7);
    this.DATA_GETS_FOCUS = "data-gets-focus";
    this.DATA_GETS_FOCUS_SELECTOR = "[data-gets-focus]";
    this.DIALOG_CONTROLS = "dialog-controls";
    this.dialogHeight = 0;
    this.focusedElementIndex = 0;
    this.IC_TEXT_FIELD = "IC-TEXT-FIELD";
    this.IC_ACCORDION = "IC-ACCORDION";
    this.resizeObserver = null;
    this.dialogOpened = () => {
      this.dialogRendered = true;
      if (this.disableHeightConstraint) {
        this.dialogEl.show();
      }
      else {
        this.dialogEl.showModal();
      }
      setTimeout(() => {
        this.fadeIn = true;
        /**
         * This is required to set scroll back to top if:
         * - dialog content goes below the fold
         * - is closed using cancel or confirm and reopened.
         *
         * Without this, the scroll bar will start from the dialog's last scroll-x coordinate.
         */
        if (this.disableHeightConstraint && this.backdropEl.scrollTop !== 0) {
          this.backdropEl.scrollTop = 0;
        }
      }, 10);
      setTimeout(() => {
        this.setInitialFocus();
        checkResizeObserver$1(this.runResizeObserver);
      }, 75);
      setTimeout(() => {
        this.getFocusedElementIndex();
        this.icDialogOpened.emit();
      }, 80);
    };
    this.runResizeObserver = () => {
      this.resizeObserver = new ResizeObserver(() => {
        clearTimeout(this.resizeTimeout);
        this.resizeTimeout = window.setTimeout(this.resizeObserverCallback, 80);
      });
      this.resizeObserver.observe(this.dialogEl);
    };
    this.resizeObserverCallback = () => {
      if (this.dialogEl.clientHeight !== this.dialogHeight) {
        this.dialogHeight = this.dialogEl.clientHeight;
      }
    };
    this.refreshInteractiveElementsOnSlotChange = () => {
      this.contentArea = this.el.shadowRoot.querySelector("#dialog-content slot");
      this.contentArea.addEventListener("slotchange", this.getInteractiveElements);
    };
    this.removeSlotChangeListener = () => {
      if (this.contentArea) {
        this.contentArea.removeEventListener("slotchange", this.getInteractiveElements);
      }
    };
    this.setInitialFocus = () => {
      this.sourceElement = document.activeElement;
      let focusedElement;
      if (this.el.querySelector(this.DATA_GETS_FOCUS_SELECTOR) !== null) {
        focusedElement = this.el.querySelector(this.DATA_GETS_FOCUS_SELECTOR);
      }
      else {
        focusedElement = this.el.shadowRoot.querySelector(this.DATA_GETS_FOCUS_SELECTOR);
      }
      if (focusedElement.tagName === this.IC_TEXT_FIELD) {
        focusedElement.setFocus();
      }
      else if (focusedElement.tagName === this.IC_ACCORDION) {
        focusedElement.setFocus();
      }
      else {
        focusedElement.focus({
          preventScroll: this.disableHeightConstraint ? true : false,
        });
      }
    };
    this.getFocusedElementIndex = () => {
      for (let i = 0; i < this.interactiveElementList.length; i++) {
        if (this.interactiveElementList[i] ===
          (this.el.shadowRoot.activeElement || document.activeElement)) {
          this.focusedElementIndex = i;
        }
      }
    };
    this.setAlertVariant = () => {
      if (isPropDefined(this.status) && this.status !== null) {
        const alert = this.el.shadowRoot.querySelector("ic-alert");
        alert.setAttribute("variant", this.status);
      }
    };
    this.closeIconClick = () => {
      this.open = false;
    };
    this.getInteractiveElements = () => {
      this.interactiveElementList = Array.from(this.el.shadowRoot.querySelectorAll("ic-button"));
      const slottedInteractiveElements = Array.from(this.el.querySelectorAll(`a[href], button, input:not(.ic-input), textarea, select, details, [tabindex]:not([tabindex="-1"]), 
          ic-button, ic-checkbox, ic-select, ic-search-bar, ic-tab-group, ic-radio-group, 
          ic-back-to-top, ic-breadcrumb, ic-chip[dismissible="true"], ic-footer-link, ic-link, ic-navigation-button, 
          ic-navigation-item, ic-switch, ic-text-field, ic-accordion-group, ic-accordion`));
      if (slottedInteractiveElements.length > 0) {
        if (slottedInteractiveElements[0].slot !== this.DIALOG_CONTROLS) {
          slottedInteractiveElements[0].setAttribute(this.DATA_GETS_FOCUS, "");
        }
        else if (!this.destructive) {
          slottedInteractiveElements[slottedInteractiveElements.length - 1].setAttribute(this.DATA_GETS_FOCUS, "");
        }
      }
      for (let i = 0; i < slottedInteractiveElements.length; i++) {
        this.interactiveElementList.splice(1 + i, 0, slottedInteractiveElements[i]);
      }
    };
    this.getNextFocusEl = (focusedElementIndex) => this.interactiveElementList[focusedElementIndex];
    this.focusNextInteractiveElement = (shiftKey) => {
      this.getFocusedElementIndex();
      this.setFocusIndexBasedOnShiftKey(shiftKey);
      this.loopNextFocusIndexIfLastElement();
      let nextFocusEl = this.getNextFocusEl(this.focusedElementIndex);
      const isHidden = getComputedStyle(nextFocusEl).visibility === "hidden";
      if (nextFocusEl.tagName === this.IC_TEXT_FIELD) {
        nextFocusEl.setFocus();
      }
      else {
        if (isHidden) {
          this.setFocusIndexBasedOnShiftKey(shiftKey);
          this.loopNextFocusIndexIfLastElement();
          nextFocusEl = this.getNextFocusEl(this.focusedElementIndex);
        }
        if (nextFocusEl.tagName === this.IC_ACCORDION) {
          nextFocusEl.setFocus();
        }
        else {
          nextFocusEl.focus();
        }
      }
    };
    this.setButtonOnClick = () => {
      var _a, _b, _c;
      if (this.buttons) {
        this.buttonOnclick0 = new Function((_a = this.buttonProps[0]) === null || _a === void 0 ? void 0 : _a.onclick);
        this.buttonOnclick1 = new Function((_b = this.buttonProps[1]) === null || _b === void 0 ? void 0 : _b.onclick);
        this.buttonOnclick2 = new Function((_c = this.buttonProps[2]) === null || _c === void 0 ? void 0 : _c.onclick);
      }
    };
    this.getButtonOnclick = (index) => {
      if (index === 0) {
        return this.buttonOnclick0();
      }
      else if (index === 1) {
        return this.buttonOnclick1();
      }
      else {
        return this.buttonOnclick2();
      }
    };
    this.getButtonVariant = (index) => {
      const mainVariant = this.destructive ? "destructive" : "primary";
      if (this.buttonProps.length === 1) {
        return mainVariant;
      }
      else if (this.buttonProps.length === 2) {
        if (index === 0) {
          return "tertiary";
        }
        else {
          return mainVariant;
        }
      }
      else {
        if (index === 2) {
          return mainVariant;
        }
        else {
          return "secondary";
        }
      }
    };
    this.renderDialog = () => {
      const { alertHeading, alertMessage, buttons, buttonProps, size, heading, label, status, destructive, dismissLabel, hideCloseButton, } = this;
      return (hAsync("dialog", { class: {
          ["dialog"]: true,
          [`${size}`]: true,
          ["disable-height-constraint"]: this.disableHeightConstraint,
        }, "aria-labelledby": "dialog-label dialog-heading", "aria-describedby": "dialog-alert dialog-content", ref: (el) => (this.dialogEl = el) }, hAsync("div", { class: "heading-area" }, hAsync("div", { class: "heading-content" }, hAsync("div", { class: "label" }, hAsync("slot", { name: "label" }, hAsync("ic-typography", { variant: "label", id: "dialog-label" }, label))), hAsync("div", { class: "heading" }, hAsync("slot", { name: "heading" }, hAsync("ic-typography", { variant: "h4", id: "dialog-heading" }, heading)))), !hideCloseButton && (hAsync("ic-button", { class: "close-icon", variant: "icon", innerHTML: closeIcon, "aria-label": dismissLabel, onClick: this.closeIconClick, "data-gets-focus": destructive || !buttons ? "" : null }))), hAsync("div", { class: "content-area" }, isSlotUsed$1(this.el, "alert") ? (hAsync("slot", { name: "alert" })) : (status && (hAsync("ic-alert", { variant: status, heading: alertHeading, message: alertMessage, "title-above": true, class: "status-alert", id: "dialog-alert" }))), hAsync("div", { id: "dialog-content" }, hAsync("slot", null))), (buttons || isSlotUsed$1(this.el, this.DIALOG_CONTROLS)) && (hAsync("div", { class: {
          [this.DIALOG_CONTROLS]: true,
          ["triple-button"]: buttonProps.length === 3,
        } }, hAsync("slot", { name: this.DIALOG_CONTROLS }, !isSlotUsed$1(this.el, this.DIALOG_CONTROLS) &&
        buttonProps.map((props, index) => {
          if (index > 2) {
            return;
          }
          else {
            return (hAsync("ic-button", { variant: this.getButtonVariant(index), onClick: () => this.getButtonOnclick(index), class: "dialog-control-button", "full-width": buttonProps.length === 3, "data-gets-focus": this.getButtonVariant(index) === "primary" ? "" : null }, props.label));
          }
        }))))));
    };
    this.dialogRendered = false;
    this.fadeIn = false;
    this.alertHeading = undefined;
    this.alertMessage = undefined;
    this.buttons = true;
    this.closeOnBackdropClick = true;
    this.destructive = false;
    this.dismissLabel = "Dismiss";
    this.disableHeightConstraint = false;
    this.hideCloseButton = false;
    this.heading = undefined;
    this.label = undefined;
    this.open = undefined;
    this.size = "small";
    this.status = undefined;
    this.buttonProps = [
      {
        label: "Cancel",
        onclick: "this.cancelDialog();",
      },
      { label: "Confirm", onclick: "this.confirmDialog();" },
    ];
  }
  watchOpenHandler() {
    if (this.open) {
      this.dialogOpened();
    }
    else {
      this.fadeIn = false;
      if (this.resizeObserver !== null) {
        this.resizeObserver.disconnect();
      }
      setTimeout(() => {
        var _a;
        this.dialogRendered = false;
        this.dialogEl.close();
        (_a = this.sourceElement) === null || _a === void 0 ? void 0 : _a.focus();
        this.dialogHeight = 0;
        this.icDialogClosed.emit();
      }, 80);
    }
  }
  watchPropHandler() {
    this.setButtonOnClick();
  }
  disconnectedCallback() {
    this.removeSlotChangeListener();
  }
  componentWillLoad() {
    if (this.buttonProps.length) {
      this.setButtonOnClick();
    }
  }
  componentDidLoad() {
    this.getInteractiveElements();
    this.setAlertVariant();
    this.refreshInteractiveElementsOnSlotChange();
    if (this.open) {
      this.dialogOpened();
    }
  }
  componentDidRender() {
    if (getComputedStyle(this.el).display !== "none" &&
      this.disableHeightConstraint) {
      document.body.style.overflow = "hidden";
    }
    else {
      document.body.style.overflow = "auto";
    }
  }
  handleKeyboard(ev) {
    if (this.dialogRendered) {
      switch (ev.key) {
        case "Tab":
          ev.preventDefault();
          this.focusNextInteractiveElement(ev.shiftKey);
          break;
        case "Escape":
          if (!ev.repeat) {
            this.open = false;
          }
          ev.stopImmediatePropagation();
          break;
      }
    }
  }
  handleClick(ev) {
    const dialogElement = this.el.shadowRoot.querySelector("dialog");
    if (this.closeOnBackdropClick &&
      ev.composedPath().indexOf(dialogElement) <= 0) {
      const rect = this.dialogEl.getBoundingClientRect();
      const isInDialog = rect.top <= ev.clientY &&
        ev.clientY <= rect.top + rect.height &&
        rect.left <= ev.clientX &&
        ev.clientX <= rect.left + rect.width;
      if (!isInDialog) {
        this.open = false;
      }
    }
  }
  /**
   * @deprecated This method should not be used anymore. Use open prop to set dialog visibility.
   */
  async showDialog() {
    this.open = true;
  }
  /**
   * @deprecated This method should not be used anymore. Use open prop to set dialog visibility.
   */
  async hideDialog() {
    this.open = false;
  }
  /**
   * Cancels the dialog. Used by the default 'Cancel' button or can be called manually to trigger cancelling of dialog.
   */
  async cancelDialog() {
    this.icDialogCancelled.emit();
    this.open = false;
  }
  /**
   * Confirms the dialog. Used by the default 'Confirm' button or can be called manually to trigger confirming of dialog.
   */
  async confirmDialog() {
    this.icDialogConfirmed.emit();
  }
  loopNextFocusIndexIfLastElement() {
    if (this.focusedElementIndex > this.interactiveElementList.length - 1)
      this.focusedElementIndex = 0;
    else if (this.focusedElementIndex < 0) {
      this.focusedElementIndex = this.interactiveElementList.length - 1;
    }
  }
  setFocusIndexBasedOnShiftKey(shiftKey) {
    if (shiftKey) {
      this.focusedElementIndex -= 1;
    }
    else {
      this.focusedElementIndex += 1;
    }
  }
  render() {
    return (hAsync(Host, { class: {
        ["hidden"]: !this.dialogRendered,
        ["fade-in"]: this.fadeIn,
        ["disable-height-constraint"]: this.disableHeightConstraint,
      } }, this.disableHeightConstraint ? (hAsync("div", { class: "backdrop", ref: (el) => (this.backdropEl = el) }, this.renderDialog())) : (this.renderDialog())));
  }
  get el() { return getElement(this); }
  static get watchers() { return {
    "open": ["watchOpenHandler"],
    "buttonProps": ["watchPropHandler"]
  }; }
  static get style() { return icDialogCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "ic-dialog",
    "$members$": {
      "alertHeading": [1, "alert-heading"],
      "alertMessage": [1, "alert-message"],
      "buttons": [4],
      "closeOnBackdropClick": [4, "close-on-backdrop-click"],
      "destructive": [4],
      "dismissLabel": [1, "dismiss-label"],
      "disableHeightConstraint": [4, "disable-height-constraint"],
      "hideCloseButton": [4, "hide-close-button"],
      "heading": [1],
      "label": [1],
      "open": [1540],
      "size": [1],
      "status": [1],
      "buttonProps": [16],
      "dialogRendered": [32],
      "fadeIn": [32],
      "showDialog": [64],
      "hideDialog": [64],
      "cancelDialog": [64],
      "confirmDialog": [64]
    },
    "$listeners$": [[4, "keydown", "handleKeyboard"], [0, "click", "handleClick"]],
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["open", "open"]]
  }; }
}

const icDividerCss = "hr.sc-ic-divider{padding:0;margin:0;border:none;height:var(--ic-space-1px);background-color:var(--ic-keyline-darken-rgb)}hr.light.sc-ic-divider{background-color:var(--ic-keyline-lighten-rgb)}";

class Divider {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.foregroundColor = getThemeForegroundColor();
  }
  themeChangeHandler(ev) {
    const theme = ev.detail;
    this.foregroundColor = theme.mode;
  }
  render() {
    return (hAsync(Host, { "aria-hidden": "true" }, hAsync("hr", { class: {
        ["light"]: this.foregroundColor === IcThemeForegroundEnum.Light,
      } })));
  }
  static get style() { return icDividerCss; }
  static get cmpMeta() { return {
    "$flags$": 2,
    "$tagName$": "ic-divider",
    "$members$": {
      "foregroundColor": [32]
    },
    "$listeners$": [[4, "themeChange", "themeChangeHandler"]],
    "$lazyBundleId$": "-",
    "$attrsToReflect$": []
  }; }
}

const icEmptyStateCss = "/*!@:host*/.sc-ic-empty-state-h{gap:var(--ic-space-xs);padding:var(--ic-space-xs)}/*!@:host,\n.action-area*/.sc-ic-empty-state-h,.action-area.sc-ic-empty-state{display:flex;flex-direction:column}/*!@.action-area*/.action-area.sc-ic-empty-state{gap:var(--ic-space-md)}/*!@:host ::slotted(svg),\n:host ::slotted(img)*/.sc-ic-empty-state-h .sc-ic-empty-state-s>svg,.sc-ic-empty-state-h .sc-ic-empty-state-s>img{border-radius:var(--ic-space-xxs)}/*!@:host(.right),\n:host(.right) .action-area*/.right.sc-ic-empty-state-h,.right.sc-ic-empty-state-h .action-area.sc-ic-empty-state{align-items:flex-end;text-align:right}/*!@:host(.center),\n:host(.center) .action-area*/.center.sc-ic-empty-state-h,.center.sc-ic-empty-state-h .action-area.sc-ic-empty-state{align-items:center;text-align:center}/*!@:host(.image-default) ::slotted(svg),\n:host(.image-default) ::slotted(img)*/.sc-ic-empty-state-h.image-default .sc-ic-empty-state-s>svg,.sc-ic-empty-state-h.image-default .sc-ic-empty-state-s>img{height:calc(3 * var(--ic-space-lg)) !important;width:calc(3 * var(--ic-space-lg)) !important}/*!@:host(.image-small) ::slotted(svg),\n:host(.image-small) ::slotted(img)*/.sc-ic-empty-state-h.image-small .sc-ic-empty-state-s>svg,.sc-ic-empty-state-h.image-small .sc-ic-empty-state-s>img{height:var(--ic-space-xxl) !important;width:var(--ic-space-xxl) !important}/*!@:host(.image-large) ::slotted(svg),\n:host(.image-large) ::slotted(img)*/.sc-ic-empty-state-h.image-large .sc-ic-empty-state-s>svg,.sc-ic-empty-state-h.image-large .sc-ic-empty-state-s>img{height:calc(4 * var(--ic-space-xl)) !important;width:calc(4 * var(--ic-space-xl)) !important}";

/**
 * @slot image - Content is placed at the top above all other content.
 * @slot actions - Content is placed at the bottom below all other content.
 * @slot heading - Content will be rendered in place of the heading prop.
 * @slot subheading - Content will be rendered in place of the subheading prop.
 * @slot body - Content will be rendered in place of the body prop.
 */
class EmptyState {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.aligned = "left";
    this.body = undefined;
    this.bodyMaxLines = undefined;
    this.heading = undefined;
    this.imageSize = "default";
    this.subheading = undefined;
  }
  componentDidLoad() {
    !isSlotUsed$1(this.el, "heading") &&
      onComponentRequiredPropUndefined([{ prop: this.heading, propName: "heading" }], "Empty State");
  }
  render() {
    const { aligned, body, bodyMaxLines, heading, imageSize, subheading } = this;
    return (hAsync(Host, { class: {
        [`${aligned}`]: true,
        [`image-${imageSize}`]: isSlotUsed$1(this.el, "image"),
      } }, isSlotUsed$1(this.el, "image") && hAsync("slot", { name: "image" }), hAsync("div", null, hAsync("slot", { name: "heading" }, hAsync("ic-typography", { variant: "h4" }, heading)), hAsync("slot", { name: "subheading" }, hAsync("ic-typography", { variant: "subtitle-small" }, subheading)), hAsync("slot", { name: "body" }, hAsync("ic-typography", { maxLines: bodyMaxLines }, body))), isSlotUsed$1(this.el, "actions") && (hAsync("div", { class: "action-area" }, hAsync("slot", { name: "actions" })))));
  }
  get el() { return getElement(this); }
  static get style() { return icEmptyStateCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "ic-empty-state",
    "$members$": {
      "aligned": [1],
      "body": [1],
      "bodyMaxLines": [2, "body-max-lines"],
      "heading": [1],
      "imageSize": [1, "image-size"],
      "subheading": [1]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": []
  }; }
}

const icFooterCss = "/*!@html*/html.sc-ic-footer{line-height:1.15;-webkit-text-size-adjust:100%}/*!@body*/body.sc-ic-footer{margin:0}/*!@main*/main.sc-ic-footer{display:block}/*!@h1*/h1.sc-ic-footer{font-size:2em;margin:0.67em 0}/*!@hr*/hr.sc-ic-footer{box-sizing:content-box;height:0;overflow:visible}/*!@pre*/pre.sc-ic-footer{font-family:monospace, monospace;font-size:1em}/*!@a*/a.sc-ic-footer{background-color:transparent}/*!@abbr[title]*/abbr[title].sc-ic-footer{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}/*!@b,\nstrong*/b.sc-ic-footer,strong.sc-ic-footer{font-weight:bolder}/*!@code,\nkbd,\nsamp*/code.sc-ic-footer,kbd.sc-ic-footer,samp.sc-ic-footer{font-family:monospace, monospace;font-size:1em}/*!@small*/small.sc-ic-footer{font-size:80%}/*!@sub,\nsup*/sub.sc-ic-footer,sup.sc-ic-footer{font-size:75%;line-height:0;position:relative;vertical-align:baseline}/*!@sub*/sub.sc-ic-footer{bottom:-0.25em}/*!@sup*/sup.sc-ic-footer{top:-0.5em}/*!@img*/img.sc-ic-footer{border-style:none}/*!@button,\ninput,\noptgroup,\nselect,\ntextarea*/button.sc-ic-footer,input.sc-ic-footer,optgroup.sc-ic-footer,select.sc-ic-footer,textarea.sc-ic-footer{font-family:inherit;font-size:100%;line-height:1.15;margin:0}/*!@button,\ninput*/button.sc-ic-footer,input.sc-ic-footer{overflow:visible}/*!@button,\nselect*/button.sc-ic-footer,select.sc-ic-footer{text-transform:none}/*!@button,\n[type=\"button\"],\n[type=\"reset\"],\n[type=\"submit\"]*/button.sc-ic-footer,[type=\"button\"].sc-ic-footer,[type=\"reset\"].sc-ic-footer,[type=\"submit\"].sc-ic-footer{-webkit-appearance:button}/*!@button::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner*/button.sc-ic-footer::-moz-focus-inner,[type=\"button\"].sc-ic-footer::-moz-focus-inner,[type=\"reset\"].sc-ic-footer::-moz-focus-inner,[type=\"submit\"].sc-ic-footer::-moz-focus-inner{border-style:none;padding:0}/*!@button:-moz-focusring,\n[type=\"button\"]:-moz-focusring,\n[type=\"reset\"]:-moz-focusring,\n[type=\"submit\"]:-moz-focusring*/button.sc-ic-footer:-moz-focusring,[type=\"button\"].sc-ic-footer:-moz-focusring,[type=\"reset\"].sc-ic-footer:-moz-focusring,[type=\"submit\"].sc-ic-footer:-moz-focusring{outline:1px dotted ButtonText}/*!@fieldset*/fieldset.sc-ic-footer{padding:0.35em 0.75em 0.625em}/*!@legend*/legend.sc-ic-footer{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}/*!@progress*/progress.sc-ic-footer{vertical-align:baseline}/*!@textarea*/textarea.sc-ic-footer{overflow:auto}/*!@[type=\"checkbox\"],\n[type=\"radio\"]*/[type=\"checkbox\"].sc-ic-footer,[type=\"radio\"].sc-ic-footer{box-sizing:border-box;padding:0}/*!@[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button*/[type=\"number\"].sc-ic-footer::-webkit-inner-spin-button,[type=\"number\"].sc-ic-footer::-webkit-outer-spin-button{height:auto}/*!@[type=\"search\"]*/[type=\"search\"].sc-ic-footer{-webkit-appearance:textfield;outline-offset:-2px}/*!@[type=\"search\"]::-webkit-search-decoration*/[type=\"search\"].sc-ic-footer::-webkit-search-decoration{-webkit-appearance:none}/*!@::-webkit-file-upload-button*/.sc-ic-footer::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}/*!@details*/details.sc-ic-footer{display:block}/*!@summary*/summary.sc-ic-footer{display:list-item}/*!@template*/template.sc-ic-footer{display:none}/*!@[hidden]*/[hidden].sc-ic-footer{display:none}/*!@html,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo*/html.sc-ic-footer,body.sc-ic-footer,div.sc-ic-footer,span.sc-ic-footer,applet.sc-ic-footer,object.sc-ic-footer,iframe.sc-ic-footer,h1.sc-ic-footer,h2.sc-ic-footer,h3.sc-ic-footer,h4.sc-ic-footer,h5.sc-ic-footer,h6.sc-ic-footer,p.sc-ic-footer,blockquote.sc-ic-footer,pre.sc-ic-footer,a.sc-ic-footer,abbr.sc-ic-footer,acronym.sc-ic-footer,address.sc-ic-footer,big.sc-ic-footer,cite.sc-ic-footer,code.sc-ic-footer,del.sc-ic-footer,dfn.sc-ic-footer,em.sc-ic-footer,img.sc-ic-footer,ins.sc-ic-footer,kbd.sc-ic-footer,q.sc-ic-footer,s.sc-ic-footer,samp.sc-ic-footer,small.sc-ic-footer,strike.sc-ic-footer,strong.sc-ic-footer,sub.sc-ic-footer,sup.sc-ic-footer,tt.sc-ic-footer,var.sc-ic-footer,b.sc-ic-footer,u.sc-ic-footer,i.sc-ic-footer,center.sc-ic-footer,dl.sc-ic-footer,dt.sc-ic-footer,dd.sc-ic-footer,ol.sc-ic-footer,ul.sc-ic-footer,li.sc-ic-footer,fieldset.sc-ic-footer,form.sc-ic-footer,label.sc-ic-footer,legend.sc-ic-footer,table.sc-ic-footer,caption.sc-ic-footer,tbody.sc-ic-footer,tfoot.sc-ic-footer,thead.sc-ic-footer,tr.sc-ic-footer,th.sc-ic-footer,td.sc-ic-footer,article.sc-ic-footer,aside.sc-ic-footer,canvas.sc-ic-footer,details.sc-ic-footer,embed.sc-ic-footer,figure.sc-ic-footer,figcaption.sc-ic-footer,footer.sc-ic-footer,header.sc-ic-footer,hgroup.sc-ic-footer,menu.sc-ic-footer,nav.sc-ic-footer,output.sc-ic-footer,ruby.sc-ic-footer,section.sc-ic-footer,summary.sc-ic-footer,time.sc-ic-footer,mark.sc-ic-footer,audio.sc-ic-footer,video.sc-ic-footer{margin:0;padding:0;border:0;font-size:100%;font-style:inherit;vertical-align:baseline}/*!@:host*/.sc-ic-footer-h{display:block;--footer-compliance-padding:1rem 0}/*!@:host(.footer-sparse)*/.footer-sparse.sc-ic-footer-h{--footer-links-padding:1.5rem 0;--footer-logo-margin-bottom:var(--ic-space-lg);--footer-link-inner-flex-direction:row}/*!@:host(.footer-small)*/.footer-small.sc-ic-footer-h{--footer-links-padding:0 0;--footer-logo-margin-bottom:var(--ic-space-md);--footer-link-inner-flex-direction:column}/*!@:host(.footer-light)*/.footer-light.sc-ic-footer-h{--footer-theme-secondary:var(--ic-theme-secondary);--footer-theme-tertiary:var(--ic-theme-tertiary);--footer-keyline:var(--ic-keyline-lighten)}/*!@:host(.footer-dark)*/.footer-dark.sc-ic-footer-h{--footer-theme-secondary:var(--ic-theme-secondary-light);--footer-theme-tertiary:var(--ic-theme-tertiary-light);--footer-keyline:var(--ic-keyline-darken)}/*!@:host(.footer-small.footer-ungrouped)*/.footer-small.footer-ungrouped.sc-ic-footer-h{--footer-links-padding:var(--ic-space-md) 0 0 0}/*!@footer*/footer.sc-ic-footer{display:flex;flex-direction:column;width:100%}/*!@.footer-description*/.footer-description.sc-ic-footer{background-color:var(--footer-theme-secondary);color:var(--ic-theme-text);border-bottom:var(--footer-keyline)}/*!@.footer-description-inner*/.footer-description-inner.sc-ic-footer{padding:1rem 0}/*!@.footer-links*/.footer-links.sc-ic-footer{padding:var(--footer-links-padding);background-color:var(--footer-theme-secondary);color:var(--ic-theme-text)}/*!@.footer-links-inner*/.footer-links-inner.sc-ic-footer{display:flex;flex-direction:var(--footer-link-inner-flex-direction)}/*!@.footer-compliance*/.footer-compliance.sc-ic-footer{background-color:var(--footer-theme-tertiary);color:var(--ic-theme-text)}/*!@.footer-compliance-inner*/.footer-compliance-inner.sc-ic-footer{padding:var(--footer-compliance-padding)}/*!@.footer-logo*/.footer-logo.sc-ic-footer{margin-bottom:var(--footer-logo-margin-bottom);display:flex;gap:var(--ic-space-xxl)}/*!@.footer-logo > ::slotted()*/.footer-logo>.sc-ic-footer-h{margin-right:var(--ic-space-md)}/*!@.footer-caption*/.footer-caption.sc-ic-footer{margin-bottom:var(--ic-space-md)}/*!@.classification-spacing*/.classification-spacing.sc-ic-footer{margin-bottom:var(--ic-space-lg)}@media (forced-colors: active){/*!@footer*/footer.sc-ic-footer{border-top:var(--ic-hc-border)}}";

/**
 * @slot description - Content will be rendered at the top of the footer.
 * @slot link - Content will be rendered between description and logos.
 * @slot logo - Content will be rendered underneath footer links.
 * @slot caption - Content will be rendered above Crown Copyright.
 */
class Footer {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.footerResized = createEvent(this, "footerResized", 7);
    this.resizeObserver = null;
    this.resizeObserverCallback = (currSize) => {
      if (currSize !== this.deviceSize) {
        this.deviceSize = currSize;
      }
      this.footerResized.emit();
    };
    this.runResizeObserver = () => {
      this.resizeObserver = new ResizeObserver(() => {
        const currSize = getCurrentDeviceSize();
        this.resizeObserverCallback(currSize);
      });
      this.resizeObserver.observe(this.footerEl);
    };
    this.deviceSize = IC_DEVICE_SIZES.XL;
    this.foregroundColor = getThemeForegroundColor();
    this.aligned = "left";
    this.breakpoint = "medium";
    this.caption = undefined;
    this.copyright = true;
    this.description = undefined;
    this.groupLinks = false;
  }
  disconnectedCallback() {
    if (this.resizeObserver !== null) {
      this.resizeObserver.disconnect();
    }
  }
  componentWillLoad() {
    this.deviceSize = getCurrentDeviceSize();
  }
  componentDidLoad() {
    checkResizeObserver$1(this.runResizeObserver);
  }
  themeChangeHandler(ev) {
    const theme = ev.detail;
    this.foregroundColor = theme.mode;
  }
  isSmall() {
    const bp = this.breakpoint;
    return bp === "extra small"
      ? this.deviceSize < IC_DEVICE_SIZES.XS
      : bp === "small"
        ? this.deviceSize < IC_DEVICE_SIZES.S
        : bp === "medium"
          ? this.deviceSize < IC_DEVICE_SIZES.M
          : bp === "large"
            ? this.deviceSize < IC_DEVICE_SIZES.L
            : bp === "extra large"
              ? this.deviceSize < IC_DEVICE_SIZES.XL
              : false;
  }
  render() {
    const { aligned, caption, copyright, description, groupLinks, foregroundColor, } = this;
    const small = this.isSmall();
    return (hAsync(Host, { class: {
        footer: true,
        [`footer-${small ? "small" : "sparse"}`]: true,
        [`footer-${groupLinks ? "grouped" : "ungrouped"}`]: true,
        [`footer-${foregroundColor}`]: true,
        // Slots will be able to infer their own color
        [IcThemeForegroundEnum.Dark]: foregroundColor === IcThemeForegroundEnum.Dark,
        [IcThemeForegroundEnum.Light]: foregroundColor === IcThemeForegroundEnum.Light,
      } }, hAsync("footer", { ref: (footerEl) => (this.footerEl = footerEl) }, hAsync("div", { class: "footer-description" }, hAsync("ic-section-container", { aligned: aligned, fullHeight: true }, hAsync("div", { class: "footer-description-inner" }, hAsync("ic-typography", { variant: "body" }, hAsync("slot", { name: "description" }, description))))), isSlotUsed$1(this.el, "link") && (hAsync("div", { class: "footer-links" }, groupLinks && small ? (hAsync("div", { class: "footer-links-inner" }, hAsync("slot", { name: "link" }))) : (hAsync("ic-section-container", { fullHeight: true, aligned: aligned }, hAsync("div", { class: "footer-links-inner" }, hAsync("slot", { name: "link" })))))), hAsync("div", { class: "footer-compliance" }, hAsync("ic-section-container", { aligned: aligned, fullHeight: true }, hAsync("div", { class: "footer-compliance-inner" }, isSlotUsed$1(this.el, "logo") && (hAsync("div", { class: "footer-logo" }, hAsync("slot", { name: "logo" }))), (isSlotUsed$1(this.el, "caption") || caption) && (hAsync("div", { class: "footer-caption" }, hAsync("ic-typography", { variant: this.deviceSize <= IC_DEVICE_SIZES.M
        ? "caption"
        : "body" }, hAsync("slot", { name: "caption" }, caption)))), copyright && (hAsync("div", { class: {
        ["footer-copyright"]: true,
        ["classification-spacing"]: hasClassificationBanner(),
      } }, hAsync("ic-typography", { variant: this.deviceSize <= IC_DEVICE_SIZES.M
        ? "caption-uppercase"
        : "label-uppercase" }, "\u00A9 Crown Copyright")))))))));
  }
  get el() { return getElement(this); }
  static get style() { return icFooterCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "ic-footer",
    "$members$": {
      "aligned": [1],
      "breakpoint": [1],
      "caption": [1],
      "copyright": [4],
      "description": [1],
      "groupLinks": [4, "group-links"],
      "deviceSize": [32],
      "foregroundColor": [32]
    },
    "$listeners$": [[4, "themeChange", "themeChangeHandler"]],
    "$lazyBundleId$": "-",
    "$attrsToReflect$": []
  }; }
}

var OpenInNew = `<svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 0 24 24" width="24px"><path d="M0 0h24v24H0z" fill="none"/><path d="M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z"/></svg>`;

const icFooterLinkCss = "/*!@html*/html.sc-ic-footer-link{line-height:1.15;-webkit-text-size-adjust:100%}/*!@body*/body.sc-ic-footer-link{margin:0}/*!@main*/main.sc-ic-footer-link{display:block}/*!@h1*/h1.sc-ic-footer-link{font-size:2em;margin:0.67em 0}/*!@hr*/hr.sc-ic-footer-link{box-sizing:content-box;height:0;overflow:visible}/*!@pre*/pre.sc-ic-footer-link{font-family:monospace, monospace;font-size:1em}/*!@a*/a.sc-ic-footer-link{background-color:transparent}/*!@abbr[title]*/abbr[title].sc-ic-footer-link{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}/*!@b,\nstrong*/b.sc-ic-footer-link,strong.sc-ic-footer-link{font-weight:bolder}/*!@code,\nkbd,\nsamp*/code.sc-ic-footer-link,kbd.sc-ic-footer-link,samp.sc-ic-footer-link{font-family:monospace, monospace;font-size:1em}/*!@small*/small.sc-ic-footer-link{font-size:80%}/*!@sub,\nsup*/sub.sc-ic-footer-link,sup.sc-ic-footer-link{font-size:75%;line-height:0;position:relative;vertical-align:baseline}/*!@sub*/sub.sc-ic-footer-link{bottom:-0.25em}/*!@sup*/sup.sc-ic-footer-link{top:-0.5em}/*!@img*/img.sc-ic-footer-link{border-style:none}/*!@button,\ninput,\noptgroup,\nselect,\ntextarea*/button.sc-ic-footer-link,input.sc-ic-footer-link,optgroup.sc-ic-footer-link,select.sc-ic-footer-link,textarea.sc-ic-footer-link{font-family:inherit;font-size:100%;line-height:1.15;margin:0}/*!@button,\ninput*/button.sc-ic-footer-link,input.sc-ic-footer-link{overflow:visible}/*!@button,\nselect*/button.sc-ic-footer-link,select.sc-ic-footer-link{text-transform:none}/*!@button,\n[type=\"button\"],\n[type=\"reset\"],\n[type=\"submit\"]*/button.sc-ic-footer-link,[type=\"button\"].sc-ic-footer-link,[type=\"reset\"].sc-ic-footer-link,[type=\"submit\"].sc-ic-footer-link{-webkit-appearance:button}/*!@button::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner*/button.sc-ic-footer-link::-moz-focus-inner,[type=\"button\"].sc-ic-footer-link::-moz-focus-inner,[type=\"reset\"].sc-ic-footer-link::-moz-focus-inner,[type=\"submit\"].sc-ic-footer-link::-moz-focus-inner{border-style:none;padding:0}/*!@button:-moz-focusring,\n[type=\"button\"]:-moz-focusring,\n[type=\"reset\"]:-moz-focusring,\n[type=\"submit\"]:-moz-focusring*/button.sc-ic-footer-link:-moz-focusring,[type=\"button\"].sc-ic-footer-link:-moz-focusring,[type=\"reset\"].sc-ic-footer-link:-moz-focusring,[type=\"submit\"].sc-ic-footer-link:-moz-focusring{outline:1px dotted ButtonText}/*!@fieldset*/fieldset.sc-ic-footer-link{padding:0.35em 0.75em 0.625em}/*!@legend*/legend.sc-ic-footer-link{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}/*!@progress*/progress.sc-ic-footer-link{vertical-align:baseline}/*!@textarea*/textarea.sc-ic-footer-link{overflow:auto}/*!@[type=\"checkbox\"],\n[type=\"radio\"]*/[type=\"checkbox\"].sc-ic-footer-link,[type=\"radio\"].sc-ic-footer-link{box-sizing:border-box;padding:0}/*!@[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button*/[type=\"number\"].sc-ic-footer-link::-webkit-inner-spin-button,[type=\"number\"].sc-ic-footer-link::-webkit-outer-spin-button{height:auto}/*!@[type=\"search\"]*/[type=\"search\"].sc-ic-footer-link{-webkit-appearance:textfield;outline-offset:-2px}/*!@[type=\"search\"]::-webkit-search-decoration*/[type=\"search\"].sc-ic-footer-link::-webkit-search-decoration{-webkit-appearance:none}/*!@::-webkit-file-upload-button*/.sc-ic-footer-link::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}/*!@details*/details.sc-ic-footer-link{display:block}/*!@summary*/summary.sc-ic-footer-link{display:list-item}/*!@template*/template.sc-ic-footer-link{display:none}/*!@[hidden]*/[hidden].sc-ic-footer-link{display:none}/*!@html,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo*/html.sc-ic-footer-link,body.sc-ic-footer-link,div.sc-ic-footer-link,span.sc-ic-footer-link,applet.sc-ic-footer-link,object.sc-ic-footer-link,iframe.sc-ic-footer-link,h1.sc-ic-footer-link,h2.sc-ic-footer-link,h3.sc-ic-footer-link,h4.sc-ic-footer-link,h5.sc-ic-footer-link,h6.sc-ic-footer-link,p.sc-ic-footer-link,blockquote.sc-ic-footer-link,pre.sc-ic-footer-link,a.sc-ic-footer-link,abbr.sc-ic-footer-link,acronym.sc-ic-footer-link,address.sc-ic-footer-link,big.sc-ic-footer-link,cite.sc-ic-footer-link,code.sc-ic-footer-link,del.sc-ic-footer-link,dfn.sc-ic-footer-link,em.sc-ic-footer-link,img.sc-ic-footer-link,ins.sc-ic-footer-link,kbd.sc-ic-footer-link,q.sc-ic-footer-link,s.sc-ic-footer-link,samp.sc-ic-footer-link,small.sc-ic-footer-link,strike.sc-ic-footer-link,strong.sc-ic-footer-link,sub.sc-ic-footer-link,sup.sc-ic-footer-link,tt.sc-ic-footer-link,var.sc-ic-footer-link,b.sc-ic-footer-link,u.sc-ic-footer-link,i.sc-ic-footer-link,center.sc-ic-footer-link,dl.sc-ic-footer-link,dt.sc-ic-footer-link,dd.sc-ic-footer-link,ol.sc-ic-footer-link,ul.sc-ic-footer-link,li.sc-ic-footer-link,fieldset.sc-ic-footer-link,form.sc-ic-footer-link,label.sc-ic-footer-link,legend.sc-ic-footer-link,table.sc-ic-footer-link,caption.sc-ic-footer-link,tbody.sc-ic-footer-link,tfoot.sc-ic-footer-link,thead.sc-ic-footer-link,tr.sc-ic-footer-link,th.sc-ic-footer-link,td.sc-ic-footer-link,article.sc-ic-footer-link,aside.sc-ic-footer-link,canvas.sc-ic-footer-link,details.sc-ic-footer-link,embed.sc-ic-footer-link,figure.sc-ic-footer-link,figcaption.sc-ic-footer-link,footer.sc-ic-footer-link,header.sc-ic-footer-link,hgroup.sc-ic-footer-link,menu.sc-ic-footer-link,nav.sc-ic-footer-link,output.sc-ic-footer-link,ruby.sc-ic-footer-link,section.sc-ic-footer-link,summary.sc-ic-footer-link,time.sc-ic-footer-link,mark.sc-ic-footer-link,audio.sc-ic-footer-link,video.sc-ic-footer-link{margin:0;padding:0;border:0;font-size:100%;font-style:inherit;vertical-align:baseline}/*!@:host(.footer-link-ungrouped-sparse)*/.footer-link-ungrouped-sparse.sc-ic-footer-link-h{--footer-link-margin-left:0;--footer-link-margin-right:2.5rem;--footer-link-margin-bottom:0}/*!@:host(.footer-link-ungrouped-small)*/.footer-link-ungrouped-small.sc-ic-footer-link-h{--footer-link-margin-left:0;--footer-link-margin-right:0;--footer-link-margin-bottom:var(--ic-space-md)}/*!@:host(.footer-link-grouped-sparse)*/.footer-link-grouped-sparse.sc-ic-footer-link-h{--footer-link-margin-left:0;--footer-link-margin-right:0;--footer-link-margin-bottom:var(--ic-space-md)}/*!@:host(.footer-link-grouped-small)*/.footer-link-grouped-small.sc-ic-footer-link-h{--footer-link-margin-left:var(--ic-space-md);--footer-link-margin-right:0;--footer-link-margin-bottom:var(--ic-space-md)}/*!@:host(.footer-link)*/.footer-link.sc-ic-footer-link-h{margin-left:var(--footer-link-margin-left);margin-right:var(--footer-link-margin-right);margin-bottom:var(--footer-link-margin-bottom)}/*!@:host(.footer-link) a,\n:host(.footer-link) a ::slotted(a)*/.footer-link.sc-ic-footer-link-h a.sc-ic-footer-link,.sc-ic-footer-link-h.footer-link a .sc-ic-footer-link-s>a{display:flex;align-items:flex-end;font-weight:var(--ic-font-weight-bold);color:inherit;width:-moz-fit-content;width:fit-content;font-size:var(--ic-font-size-regular)}/*!@:host(.footer-link) a:link,\n:host(.footer-link) a ::slotted(a:link)*/.footer-link.sc-ic-footer-link-h a.sc-ic-footer-link:link,.sc-ic-footer-link-h.footer-link a .sc-ic-footer-link-s>a:link{color:inherit;text-decoration:underline;font-weight:var(--ic-font-weight-bold)}/*!@:host(.footer-link) a:link > ::slotted(svg),\n:host(.footer-link) a:link > ::slotted(img),\n:host(.footer-link) a ::slotted(a:link > ::slotted(svg)),\n:host(.footer-link) a ::slotted(a:link > ::slotted(img))*/.sc-ic-footer-link-h.footer-link a:link>.sc-ic-footer-link-s>svg,.sc-ic-footer-link-h.footer-link a:link>.sc-ic-footer-link-s>img,.sc-ic-footer-link-h.footer-link a .sc-ic-footer-link-s>a:link>-shadowcssslotted(svg),.sc-ic-footer-link-h.footer-link a .sc-ic-footer-link-s>a:link>-shadowcssslotted(img){padding:var(--ic-space-xxxs);pointer-events:none;transition:var(--ic-easing-transition-fast)}/*!@:host(.footer-link-light) ::slotted(svg)*/.sc-ic-footer-link-h.footer-link-light .sc-ic-footer-link-s>svg{fill:var(--ic-architectural-white)}/*!@:host(.footer-link-dark) ::slotted(svg)*/.sc-ic-footer-link-h.footer-link-dark .sc-ic-footer-link-s>svg{fill:var(--ic-architectural-black)}/*!@:host(.footer-link) a:link:hover,\n:host(.footer-link) a:link:focus,\n:host(.footer-link) a ::slotted(a:link:hover),\n:host(.footer-link) a ::slotted(a:link:focus)*/.footer-link.sc-ic-footer-link-h a.sc-ic-footer-link:link:hover,.footer-link.sc-ic-footer-link-h a.sc-ic-footer-link:link:focus,.sc-ic-footer-link-h.footer-link a .sc-ic-footer-link-s>a:link:hover,.sc-ic-footer-link-h.footer-link a .sc-ic-footer-link-s>a:link:focus{border-bottom:0.25rem solid !important;margin-bottom:-0.25rem !important;text-decoration:none}@supports (text-decoration-thickness: 25%){/*!@:host(.footer-link) a:link:hover,\n  :host(.footer-link) a:link:focus,\n  :host(.footer-link) a ::slotted(a:link:hover),\n  :host(.footer-link) a ::slotted(a:link:focus)*/.footer-link.sc-ic-footer-link-h a.sc-ic-footer-link:link:hover,.footer-link.sc-ic-footer-link-h a.sc-ic-footer-link:link:focus,.sc-ic-footer-link-h.footer-link a .sc-ic-footer-link-s>a:link:hover,.sc-ic-footer-link-h.footer-link a .sc-ic-footer-link-s>a:link:focus{text-decoration-line:underline;text-decoration-thickness:25%;text-underline-offset:25%;border-bottom:0 !important;margin-bottom:0 !important}}/*!@:host(.footer-link) a:link:hover,\n:host(.footer-link) a ::slotted(a:link:hover)*/.footer-link.sc-ic-footer-link-h a.sc-ic-footer-link:link:hover,.sc-ic-footer-link-h.footer-link a .sc-ic-footer-link-s>a:link:hover{outline:none}/*!@:host(.footer-link) a:link:focus,\n:host(.footer-link) a ::slotted(a:link:focus)*/.footer-link.sc-ic-footer-link-h a.sc-ic-footer-link:link:focus,.sc-ic-footer-link-h.footer-link a .sc-ic-footer-link-s>a:link:focus{outline:var(--ic-hc-focus-outline)}/*!@:host(.footer-link) a:link:focus > ::slotted(svg),\n:host(.footer-link) a:link:focus > ::slotted(img),\n:host(.footer-link) a ::slotted(a:link:focus > ::slotted(svg)),\n:host(.footer-link) a ::slotted(a:link:focus > ::slotted(img))*/.sc-ic-footer-link-h.footer-link a:link:focus>.sc-ic-footer-link-s>svg,.sc-ic-footer-link-h.footer-link a:link:focus>.sc-ic-footer-link-s>img,.sc-ic-footer-link-h.footer-link a .sc-ic-footer-link-s>a:link:focus>-shadowcssslotted(svg),.sc-ic-footer-link-h.footer-link a .sc-ic-footer-link-s>a:link:focus>-shadowcssslotted(img){box-shadow:var(--ic-border-focus);border-radius:var(--ic-border-radius)}/*!@:host(.footer-link) a:focus,\n:host(.footer-link) a ::slotted(a:focus)*/.footer-link.sc-ic-footer-link-h a.sc-ic-footer-link:focus,.sc-ic-footer-link-h.footer-link a .sc-ic-footer-link-s>a:focus{border-radius:var(--ic-border-radius);outline:var(--ic-hc-focus-outline);transition:var(--ic-transition-duration-fast)}/*!@:host(.footer-link) a:link:active,\n:host(.footer-link) a:link:focus:active,\n:host(.footer-link) a:link:visited:active,\n:host(.footer-link) a ::slotted(a:link:active),\n:host(.footer-link) a ::slotted(a:link:focus:active),\n:host(.footer-link) a ::slotted(a:link:visited:active)*/.footer-link.sc-ic-footer-link-h a.sc-ic-footer-link:link:active,.footer-link.sc-ic-footer-link-h a.sc-ic-footer-link:link:focus:active,.footer-link.sc-ic-footer-link-h a.sc-ic-footer-link:link:visited:active,.sc-ic-footer-link-h.footer-link a .sc-ic-footer-link-s>a:link:active,.sc-ic-footer-link-h.footer-link a .sc-ic-footer-link-s>a:link:focus:active,.sc-ic-footer-link-h.footer-link a .sc-ic-footer-link-s>a:link:visited:active{color:inherit;text-decoration:none}/*!@:host(.footer-link) a:hover,\n:host(.footer-link) a ::slotted(a:hover)*/.footer-link.sc-ic-footer-link-h a.sc-ic-footer-link:hover,.sc-ic-footer-link-h.footer-link a .sc-ic-footer-link-s>a:hover{text-decoration:none}/*!@.open-in-new-icon*/.open-in-new-icon.sc-ic-footer-link{padding-left:var(--ic-space-xxs)}/*!@.open-in-new-icon,\n.open-in-new-icon svg*/.open-in-new-icon.sc-ic-footer-link,.open-in-new-icon.sc-ic-footer-link svg.sc-ic-footer-link{height:var(--ic-space-md);width:var(--ic-space-md)}/*!@:host(.footer-link-light) .open-in-new-icon svg*/.footer-link-light.sc-ic-footer-link-h .open-in-new-icon.sc-ic-footer-link svg.sc-ic-footer-link{fill:var(--ic-architectural-white)}/*!@:host(.footer-link-dark) .open-in-new-icon svg*/.footer-link-dark.sc-ic-footer-link-h .open-in-new-icon.sc-ic-footer-link svg.sc-ic-footer-link{fill:var(--ic-architectural-black)}@media screen and (min-width: 769px){/*!@:host(.footer-link.footer-link-ungrouped-sparse:last-of-type)*/.footer-link.footer-link-ungrouped-sparse.sc-ic-footer-link-h:last-of-type{margin-right:0}}@media (forced-colors: active){/*!@:host(.footer-link-light) ::slotted(svg),\n  :host(.footer-link-dark) ::slotted(svg)*/.sc-ic-footer-link-h.footer-link-light .sc-ic-footer-link-s>svg,.sc-ic-footer-link-h.footer-link-dark .sc-ic-footer-link-s>svg{fill:currentcolor}}";

class FooterLink {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.deviceSize = DEVICE_SIZES.XL;
    this.footerConfig = { small: false, grouped: false };
    this.foregroundColor = getThemeForegroundColor();
    this.download = false;
    this.href = null;
    this.hreflang = undefined;
    this.referrerpolicy = undefined;
    this.rel = undefined;
    this.target = undefined;
  }
  componentWillLoad() {
    this.footerConfig = this.inferConfig(this.el);
  }
  footerResizeHandler() {
    this.footerConfig = this.inferConfig(this.el);
  }
  footerThemeChangeHandler(ev) {
    const theme = ev.detail;
    this.foregroundColor = theme.mode;
  }
  inferConfig(e) {
    if (e.parentElement !== null) {
      if (e.parentElement.classList.contains("footer")) {
        return {
          small: e.parentElement.classList.contains("footer-small"),
          grouped: e.parentElement.classList.contains("footer-grouped"),
        };
      }
      else {
        return this.inferConfig(e.parentElement);
      }
    }
    else {
      return { small: false, grouped: false };
    }
  }
  render() {
    const { footerConfig, href, hreflang, referrerpolicy, rel, target, download, } = this;
    const { small, grouped } = footerConfig;
    return (hAsync(Host, { class: {
        "footer-link": true,
        [`footer-link-${grouped ? "grouped" : "ungrouped"}-${small ? "small" : "sparse"}`]: true,
        [`footer-link-${this.foregroundColor}`]: true,
      } }, hAsync("a", { href: href, hreflang: hreflang, referrerPolicy: referrerpolicy, rel: rel, download: download !== false ? download : null, target: target }, hAsync("slot", null), target === "_blank" && (hAsync("span", { class: "open-in-new-icon", innerHTML: OpenInNew })))));
  }
  static get delegatesFocus() { return true; }
  get el() { return getElement(this); }
  static get style() { return icFooterLinkCss; }
  static get cmpMeta() { return {
    "$flags$": 25,
    "$tagName$": "ic-footer-link",
    "$members$": {
      "download": [8],
      "href": [1],
      "hreflang": [1],
      "referrerpolicy": [1],
      "rel": [1],
      "target": [1],
      "deviceSize": [32],
      "footerConfig": [32],
      "foregroundColor": [32]
    },
    "$listeners$": [[4, "footerResized", "footerResizeHandler"], [4, "themeChange", "footerThemeChangeHandler"]],
    "$lazyBundleId$": "-",
    "$attrsToReflect$": []
  }; }
}

const icFooterLinkGroupCss = "/*!@html*/html.sc-ic-footer-link-group{line-height:1.15;-webkit-text-size-adjust:100%}/*!@body*/body.sc-ic-footer-link-group{margin:0}/*!@main*/main.sc-ic-footer-link-group{display:block}/*!@h1*/h1.sc-ic-footer-link-group{font-size:2em;margin:0.67em 0}/*!@hr*/hr.sc-ic-footer-link-group{box-sizing:content-box;height:0;overflow:visible}/*!@pre*/pre.sc-ic-footer-link-group{font-family:monospace, monospace;font-size:1em}/*!@a*/a.sc-ic-footer-link-group{background-color:transparent}/*!@abbr[title]*/abbr[title].sc-ic-footer-link-group{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}/*!@b,\nstrong*/b.sc-ic-footer-link-group,strong.sc-ic-footer-link-group{font-weight:bolder}/*!@code,\nkbd,\nsamp*/code.sc-ic-footer-link-group,kbd.sc-ic-footer-link-group,samp.sc-ic-footer-link-group{font-family:monospace, monospace;font-size:1em}/*!@small*/small.sc-ic-footer-link-group{font-size:80%}/*!@sub,\nsup*/sub.sc-ic-footer-link-group,sup.sc-ic-footer-link-group{font-size:75%;line-height:0;position:relative;vertical-align:baseline}/*!@sub*/sub.sc-ic-footer-link-group{bottom:-0.25em}/*!@sup*/sup.sc-ic-footer-link-group{top:-0.5em}/*!@img*/img.sc-ic-footer-link-group{border-style:none}/*!@button,\ninput,\noptgroup,\nselect,\ntextarea*/button.sc-ic-footer-link-group,input.sc-ic-footer-link-group,optgroup.sc-ic-footer-link-group,select.sc-ic-footer-link-group,textarea.sc-ic-footer-link-group{font-family:inherit;font-size:100%;line-height:1.15;margin:0}/*!@button,\ninput*/button.sc-ic-footer-link-group,input.sc-ic-footer-link-group{overflow:visible}/*!@button,\nselect*/button.sc-ic-footer-link-group,select.sc-ic-footer-link-group{text-transform:none}/*!@button,\n[type=\"button\"],\n[type=\"reset\"],\n[type=\"submit\"]*/button.sc-ic-footer-link-group,[type=\"button\"].sc-ic-footer-link-group,[type=\"reset\"].sc-ic-footer-link-group,[type=\"submit\"].sc-ic-footer-link-group{-webkit-appearance:button}/*!@button::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner*/button.sc-ic-footer-link-group::-moz-focus-inner,[type=\"button\"].sc-ic-footer-link-group::-moz-focus-inner,[type=\"reset\"].sc-ic-footer-link-group::-moz-focus-inner,[type=\"submit\"].sc-ic-footer-link-group::-moz-focus-inner{border-style:none;padding:0}/*!@button:-moz-focusring,\n[type=\"button\"]:-moz-focusring,\n[type=\"reset\"]:-moz-focusring,\n[type=\"submit\"]:-moz-focusring*/button.sc-ic-footer-link-group:-moz-focusring,[type=\"button\"].sc-ic-footer-link-group:-moz-focusring,[type=\"reset\"].sc-ic-footer-link-group:-moz-focusring,[type=\"submit\"].sc-ic-footer-link-group:-moz-focusring{outline:1px dotted ButtonText}/*!@fieldset*/fieldset.sc-ic-footer-link-group{padding:0.35em 0.75em 0.625em}/*!@legend*/legend.sc-ic-footer-link-group{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}/*!@progress*/progress.sc-ic-footer-link-group{vertical-align:baseline}/*!@textarea*/textarea.sc-ic-footer-link-group{overflow:auto}/*!@[type=\"checkbox\"],\n[type=\"radio\"]*/[type=\"checkbox\"].sc-ic-footer-link-group,[type=\"radio\"].sc-ic-footer-link-group{box-sizing:border-box;padding:0}/*!@[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button*/[type=\"number\"].sc-ic-footer-link-group::-webkit-inner-spin-button,[type=\"number\"].sc-ic-footer-link-group::-webkit-outer-spin-button{height:auto}/*!@[type=\"search\"]*/[type=\"search\"].sc-ic-footer-link-group{-webkit-appearance:textfield;outline-offset:-2px}/*!@[type=\"search\"]::-webkit-search-decoration*/[type=\"search\"].sc-ic-footer-link-group::-webkit-search-decoration{-webkit-appearance:none}/*!@::-webkit-file-upload-button*/.sc-ic-footer-link-group::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}/*!@details*/details.sc-ic-footer-link-group{display:block}/*!@summary*/summary.sc-ic-footer-link-group{display:list-item}/*!@template*/template.sc-ic-footer-link-group{display:none}/*!@[hidden]*/[hidden].sc-ic-footer-link-group{display:none}/*!@html,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo*/html.sc-ic-footer-link-group,body.sc-ic-footer-link-group,div.sc-ic-footer-link-group,span.sc-ic-footer-link-group,applet.sc-ic-footer-link-group,object.sc-ic-footer-link-group,iframe.sc-ic-footer-link-group,h1.sc-ic-footer-link-group,h2.sc-ic-footer-link-group,h3.sc-ic-footer-link-group,h4.sc-ic-footer-link-group,h5.sc-ic-footer-link-group,h6.sc-ic-footer-link-group,p.sc-ic-footer-link-group,blockquote.sc-ic-footer-link-group,pre.sc-ic-footer-link-group,a.sc-ic-footer-link-group,abbr.sc-ic-footer-link-group,acronym.sc-ic-footer-link-group,address.sc-ic-footer-link-group,big.sc-ic-footer-link-group,cite.sc-ic-footer-link-group,code.sc-ic-footer-link-group,del.sc-ic-footer-link-group,dfn.sc-ic-footer-link-group,em.sc-ic-footer-link-group,img.sc-ic-footer-link-group,ins.sc-ic-footer-link-group,kbd.sc-ic-footer-link-group,q.sc-ic-footer-link-group,s.sc-ic-footer-link-group,samp.sc-ic-footer-link-group,small.sc-ic-footer-link-group,strike.sc-ic-footer-link-group,strong.sc-ic-footer-link-group,sub.sc-ic-footer-link-group,sup.sc-ic-footer-link-group,tt.sc-ic-footer-link-group,var.sc-ic-footer-link-group,b.sc-ic-footer-link-group,u.sc-ic-footer-link-group,i.sc-ic-footer-link-group,center.sc-ic-footer-link-group,dl.sc-ic-footer-link-group,dt.sc-ic-footer-link-group,dd.sc-ic-footer-link-group,ol.sc-ic-footer-link-group,ul.sc-ic-footer-link-group,li.sc-ic-footer-link-group,fieldset.sc-ic-footer-link-group,form.sc-ic-footer-link-group,label.sc-ic-footer-link-group,legend.sc-ic-footer-link-group,table.sc-ic-footer-link-group,caption.sc-ic-footer-link-group,tbody.sc-ic-footer-link-group,tfoot.sc-ic-footer-link-group,thead.sc-ic-footer-link-group,tr.sc-ic-footer-link-group,th.sc-ic-footer-link-group,td.sc-ic-footer-link-group,article.sc-ic-footer-link-group,aside.sc-ic-footer-link-group,canvas.sc-ic-footer-link-group,details.sc-ic-footer-link-group,embed.sc-ic-footer-link-group,figure.sc-ic-footer-link-group,figcaption.sc-ic-footer-link-group,footer.sc-ic-footer-link-group,header.sc-ic-footer-link-group,hgroup.sc-ic-footer-link-group,menu.sc-ic-footer-link-group,nav.sc-ic-footer-link-group,output.sc-ic-footer-link-group,ruby.sc-ic-footer-link-group,section.sc-ic-footer-link-group,summary.sc-ic-footer-link-group,time.sc-ic-footer-link-group,mark.sc-ic-footer-link-group,audio.sc-ic-footer-link-group,video.sc-ic-footer-link-group{margin:0;padding:0;border:0;font-size:100%;font-style:inherit;vertical-align:baseline}/*!@:host(.footer-link-group-sparse)*/.footer-link-group-sparse.sc-ic-footer-link-group-h{--footer-link-group-margin-right:5.938rem;--footer-link-group-border-bottom:0 solid transparent;--footer-link-group-title-margin-top:0;--footer-link-group-title-margin-bottom:var(--ic-space-md)}/*!@:host(.footer-link-group-small)*/.footer-link-group-small.sc-ic-footer-link-group-h{--footer-link-group-margin-right:0;--footer-link-group-title-margin-top:var(--ic-space-md);--footer-link-group-title-margin-bottom:var(--ic-space-md);--footer-link-group-links-padding-left:var(--ic-space-md);--footer-link-group-links-padding-bottom:var(--ic-space-md)}/*!@:host(.footer-link-group-light.footer-link-group-small)*/.footer-link-group-light.footer-link-group-small.sc-ic-footer-link-group-h{--footer-link-group-border-bottom:var(--ic-keyline-lighten)}/*!@:host(.footer-link-group-dark.footer-link-group-small)*/.footer-link-group-dark.footer-link-group-small.sc-ic-footer-link-group-h{--footer-link-group-border-bottom:var(--ic-keyline-darken)}/*!@:host(.footer-link-group)*/.footer-link-group.sc-ic-footer-link-group-h{margin-right:var(--footer-link-group-margin-right);border-bottom:var(--footer-link-group-border-bottom)}/*!@:host(.footer-link-group-small.footer-link-group-light:hover)*/.footer-link-group-small.footer-link-group-light.sc-ic-footer-link-group-h:hover{background-color:var(--ic-action-light-bg-hover);cursor:pointer}/*!@:host(.footer-link-group-small.footer-link-group-dark:hover)*/.footer-link-group-small.footer-link-group-dark.sc-ic-footer-link-group-h:hover{background-color:var(--ic-action-dark-bg-hover);cursor:pointer}/*!@:host(.footer-link-group-sparse:focus)*/.footer-link-group-sparse.sc-ic-footer-link-group-h:focus{box-shadow:var(--ic-border-focus-inset);border-radius:var(--ic-border-radius-inset);outline:var(--ic-hc-focus-outline);z-index:1}/*!@:host(.footer-link-group-small:focus)*/.footer-link-group-small.sc-ic-footer-link-group-h:focus{box-shadow:var(--ic-border-focus-inset);border-radius:var(--ic-border-radius-inset);outline:var(--ic-hc-focus-outline);z-index:1}/*!@:host(.footer-link-group-small.footer-link-group-light:active)*/.footer-link-group-small.footer-link-group-light.sc-ic-footer-link-group-h:active{background-color:var(--ic-action-light-bg-active)}/*!@:host(.footer-link-group-small.footer-link-group-dark:active)*/.footer-link-group-small.footer-link-group-dark.sc-ic-footer-link-group-h:active{background-color:var(--ic-action-dark-bg-active)}/*!@.footer-link-group-title*/.footer-link-group-title.sc-ic-footer-link-group{margin-top:var(--footer-link-group-title-margin-top);margin-bottom:var(--footer-link-group-title-margin-bottom);flex-grow:1}/*!@.footer-link-group-toggle*/.footer-link-group-toggle.sc-ic-footer-link-group{fill:white !important}/*!@.footer-link-group-links*/.footer-link-group-links.sc-ic-footer-link-group{display:flex;flex-direction:column}/*!@.footer-link-group-header*/.footer-link-group-header.sc-ic-footer-link-group{display:flex;align-items:center}";

class FooterLinkGroup {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.handleKeydown = (event) => {
      if (event.key === " " || event.key === "Enter") {
        this.toggleExpanded();
      }
    };
    this.toggleExpanded = () => {
      this.expanded = !this.expanded;
    };
    this.expanded = false;
    this.deviceSize = DEVICE_SIZES.XL;
    this.dropdownIconStyle = getThemeForegroundColor();
    this.small = false;
    this.groupTitle = undefined;
  }
  componentWillLoad() {
    this.small = this.isSmall(this.el);
  }
  componentDidLoad() {
    onComponentRequiredPropUndefined([{ prop: this.groupTitle, propName: "group-title" }], "Footer Link Group");
  }
  footerResizeHandler() {
    this.small = this.isSmall(this.el);
  }
  footerThemeChangeHandler(ev) {
    const theme = ev.detail;
    this.dropdownIconStyle = theme.mode;
  }
  isSmall(e) {
    if (e.parentElement !== null) {
      if (e.parentElement.classList.contains("footer")) {
        return e.parentElement.classList.contains("footer-small");
      }
      else {
        return this.isSmall(e.parentElement);
      }
    }
    else {
      return false;
    }
  }
  render() {
    const { small, groupTitle } = this;
    return !small ? (hAsync(Host, { class: {
        ["footer-link-group footer-link-group-sparse"]: true,
        [`footer-link-group-${this.dropdownIconStyle}`]: true,
      } }, hAsync("div", { class: "footer-link-group-title" }, hAsync("ic-typography", { variant: "subtitle-small" }, groupTitle)), hAsync("div", { class: "footer-link-group-links" }, hAsync("slot", null)))) : (hAsync(Host, { class: {
        ["footer-link-group footer-link-group-small"]: true,
        [`footer-link-group-${this.dropdownIconStyle}`]: true,
      }, tabIndex: "1", onClick: this.toggleExpanded, onKeydown: this.handleKeydown, "aria-haspopup": "true", "aria-expanded": this.expanded }, hAsync("ic-section-container", { fullHeight: true }, hAsync("div", { class: "footer-link-group-header" }, hAsync("div", { class: "footer-link-group-title" }, hAsync("ic-typography", { variant: "label" }, groupTitle)), this.expanded ? (hAsync("svg", { class: "footer-link-group-toggle", xmlns: "http://www.w3.org/2000/svg", "aria-hidden": "true", role: "img", width: "1em", height: "1em", preserveAspectRatio: "xMidYMid meet", viewBox: "0 0 1200 1200" }, hAsync("path", { fill: "currentColor", d: "M600.002 210.605L421.285 389.336L0 810.559l178.721 178.836l421.281-421.341l421.281 421.341L1200 810.559L778.733 389.336L600.002 210.605z" }))) : (hAsync("svg", { class: "footer-link-group-toggle", xmlns: "http://www.w3.org/2000/svg", "aria-hidden": "true", role: "img", width: "1em", height: "1em", preserveAspectRatio: "xMidYMid meet", viewBox: "0 0 1200 1200" }, hAsync("g", { transform: "translate(0 1200) scale(1 -1)" }, hAsync("path", { fill: "currentColor", d: "M600.002 210.605L421.285 389.336L0 810.559l178.721 178.836l421.281-421.341l421.281 421.341L1200 810.559L778.733 389.336L600.002 210.605z" }))))), this.expanded && (hAsync("div", { class: "footer-link-group-links" }, hAsync("slot", null))))));
  }
  static get delegatesFocus() { return true; }
  get el() { return getElement(this); }
  static get style() { return icFooterLinkGroupCss; }
  static get cmpMeta() { return {
    "$flags$": 25,
    "$tagName$": "ic-footer-link-group",
    "$members$": {
      "groupTitle": [1, "group-title"],
      "expanded": [32],
      "deviceSize": [32],
      "dropdownIconStyle": [32],
      "small": [32]
    },
    "$listeners$": [[4, "footerResized", "footerResizeHandler"], [4, "themeChange", "footerThemeChangeHandler"]],
    "$lazyBundleId$": "-",
    "$attrsToReflect$": []
  }; }
}

const icHeroCss = "/*!@html*/html.sc-ic-hero{line-height:1.15;-webkit-text-size-adjust:100%}/*!@body*/body.sc-ic-hero{margin:0}/*!@main*/main.sc-ic-hero{display:block}/*!@h1*/h1.sc-ic-hero{font-size:2em;margin:0.67em 0}/*!@hr*/hr.sc-ic-hero{box-sizing:content-box;height:0;overflow:visible}/*!@pre*/pre.sc-ic-hero{font-family:monospace, monospace;font-size:1em}/*!@a*/a.sc-ic-hero{background-color:transparent}/*!@abbr[title]*/abbr[title].sc-ic-hero{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}/*!@b,\nstrong*/b.sc-ic-hero,strong.sc-ic-hero{font-weight:bolder}/*!@code,\nkbd,\nsamp*/code.sc-ic-hero,kbd.sc-ic-hero,samp.sc-ic-hero{font-family:monospace, monospace;font-size:1em}/*!@small*/small.sc-ic-hero{font-size:80%}/*!@sub,\nsup*/sub.sc-ic-hero,sup.sc-ic-hero{font-size:75%;line-height:0;position:relative;vertical-align:baseline}/*!@sub*/sub.sc-ic-hero{bottom:-0.25em}/*!@sup*/sup.sc-ic-hero{top:-0.5em}/*!@img*/img.sc-ic-hero{border-style:none}/*!@button,\ninput,\noptgroup,\nselect,\ntextarea*/button.sc-ic-hero,input.sc-ic-hero,optgroup.sc-ic-hero,select.sc-ic-hero,textarea.sc-ic-hero{font-family:inherit;font-size:100%;line-height:1.15;margin:0}/*!@button,\ninput*/button.sc-ic-hero,input.sc-ic-hero{overflow:visible}/*!@button,\nselect*/button.sc-ic-hero,select.sc-ic-hero{text-transform:none}/*!@button,\n[type=\"button\"],\n[type=\"reset\"],\n[type=\"submit\"]*/button.sc-ic-hero,[type=\"button\"].sc-ic-hero,[type=\"reset\"].sc-ic-hero,[type=\"submit\"].sc-ic-hero{-webkit-appearance:button}/*!@button::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner*/button.sc-ic-hero::-moz-focus-inner,[type=\"button\"].sc-ic-hero::-moz-focus-inner,[type=\"reset\"].sc-ic-hero::-moz-focus-inner,[type=\"submit\"].sc-ic-hero::-moz-focus-inner{border-style:none;padding:0}/*!@button:-moz-focusring,\n[type=\"button\"]:-moz-focusring,\n[type=\"reset\"]:-moz-focusring,\n[type=\"submit\"]:-moz-focusring*/button.sc-ic-hero:-moz-focusring,[type=\"button\"].sc-ic-hero:-moz-focusring,[type=\"reset\"].sc-ic-hero:-moz-focusring,[type=\"submit\"].sc-ic-hero:-moz-focusring{outline:1px dotted ButtonText}/*!@fieldset*/fieldset.sc-ic-hero{padding:0.35em 0.75em 0.625em}/*!@legend*/legend.sc-ic-hero{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}/*!@progress*/progress.sc-ic-hero{vertical-align:baseline}/*!@textarea*/textarea.sc-ic-hero{overflow:auto}/*!@[type=\"checkbox\"],\n[type=\"radio\"]*/[type=\"checkbox\"].sc-ic-hero,[type=\"radio\"].sc-ic-hero{box-sizing:border-box;padding:0}/*!@[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button*/[type=\"number\"].sc-ic-hero::-webkit-inner-spin-button,[type=\"number\"].sc-ic-hero::-webkit-outer-spin-button{height:auto}/*!@[type=\"search\"]*/[type=\"search\"].sc-ic-hero{-webkit-appearance:textfield;outline-offset:-2px}/*!@[type=\"search\"]::-webkit-search-decoration*/[type=\"search\"].sc-ic-hero::-webkit-search-decoration{-webkit-appearance:none}/*!@::-webkit-file-upload-button*/.sc-ic-hero::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}/*!@details*/details.sc-ic-hero{display:block}/*!@summary*/summary.sc-ic-hero{display:list-item}/*!@template*/template.sc-ic-hero{display:none}/*!@[hidden]*/[hidden].sc-ic-hero{display:none}/*!@html,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo*/html.sc-ic-hero,body.sc-ic-hero,div.sc-ic-hero,span.sc-ic-hero,applet.sc-ic-hero,object.sc-ic-hero,iframe.sc-ic-hero,h1.sc-ic-hero,h2.sc-ic-hero,h3.sc-ic-hero,h4.sc-ic-hero,h5.sc-ic-hero,h6.sc-ic-hero,p.sc-ic-hero,blockquote.sc-ic-hero,pre.sc-ic-hero,a.sc-ic-hero,abbr.sc-ic-hero,acronym.sc-ic-hero,address.sc-ic-hero,big.sc-ic-hero,cite.sc-ic-hero,code.sc-ic-hero,del.sc-ic-hero,dfn.sc-ic-hero,em.sc-ic-hero,img.sc-ic-hero,ins.sc-ic-hero,kbd.sc-ic-hero,q.sc-ic-hero,s.sc-ic-hero,samp.sc-ic-hero,small.sc-ic-hero,strike.sc-ic-hero,strong.sc-ic-hero,sub.sc-ic-hero,sup.sc-ic-hero,tt.sc-ic-hero,var.sc-ic-hero,b.sc-ic-hero,u.sc-ic-hero,i.sc-ic-hero,center.sc-ic-hero,dl.sc-ic-hero,dt.sc-ic-hero,dd.sc-ic-hero,ol.sc-ic-hero,ul.sc-ic-hero,li.sc-ic-hero,fieldset.sc-ic-hero,form.sc-ic-hero,label.sc-ic-hero,legend.sc-ic-hero,table.sc-ic-hero,caption.sc-ic-hero,tbody.sc-ic-hero,tfoot.sc-ic-hero,thead.sc-ic-hero,tr.sc-ic-hero,th.sc-ic-hero,td.sc-ic-hero,article.sc-ic-hero,aside.sc-ic-hero,canvas.sc-ic-hero,details.sc-ic-hero,embed.sc-ic-hero,figure.sc-ic-hero,figcaption.sc-ic-hero,footer.sc-ic-hero,header.sc-ic-hero,hgroup.sc-ic-hero,menu.sc-ic-hero,nav.sc-ic-hero,output.sc-ic-hero,ruby.sc-ic-hero,section.sc-ic-hero,summary.sc-ic-hero,time.sc-ic-hero,mark.sc-ic-hero,audio.sc-ic-hero,video.sc-ic-hero{margin:0;padding:0;border:0;font-size:100%;font-style:inherit;vertical-align:baseline}/*!@:host*/.sc-ic-hero-h{display:block;background-color:var(--ic-theme-tertiary);color:var(--ic-theme-text);--hero-heading-bottom-margin:var(--ic-space-md)}/*!@:host(.dark)*/.dark.sc-ic-hero-h{background-color:var(--ic-theme-secondary)}/*!@:host(.has-background-image)*/.has-background-image.sc-ic-hero-h{background-repeat:no-repeat;background-position:right -6.25rem;background-size:auto calc(100% + 6.25rem);box-shadow:var(--ic-elevation-inset)}@media (prefers-reduced-motion){/*!@:host(.has-background-image)*/.has-background-image.sc-ic-hero-h{background-position:right -6.25rem !important}}/*!@ic-typography.heading-bottom-spacing*/ic-typography.heading-bottom-spacing.sc-ic-hero{margin-bottom:var(--hero-heading-bottom-margin)}/*!@.section-container*/.section-container.sc-ic-hero{display:flex;align-items:center;height:100%}/*!@.left-container*/.left-container.sc-ic-hero{padding:var(--ic-space-xl) 0}/*!@.left-container:not(.left-container-full-width)*/.left-container.sc-ic-hero:not(.left-container-full-width){flex-basis:50%}/*!@.left-container-full-width*/.left-container-full-width.sc-ic-hero{width:100%}/*!@.right-container*/.right-container.sc-ic-hero{flex-basis:50%}/*!@.interaction-container*/.interaction-container.sc-ic-hero{display:flex;gap:var(--ic-space-md);margin-top:var(--ic-space-lg);flex-wrap:wrap}/*!@.secondary-container*/.secondary-container.sc-ic-hero{display:flex;flex-direction:column;justify-content:center;border-left:var(--ic-space-xxxs) solid var(--ic-theme-text)}/*!@.secondary-subheading*/.secondary-subheading.sc-ic-hero{margin-top:var(--ic-space-xxs)}/*!@:host([content-aligned=\"left\"]) .left-container,\n:host([content-aligned=\"left\"]) .interaction-container*/[content-aligned=\"left\"].sc-ic-hero-h .left-container.sc-ic-hero,[content-aligned=\"left\"].sc-ic-hero-h .interaction-container.sc-ic-hero{justify-content:flex-start;text-align:left}/*!@:host([content-aligned=\"center\"]) .left-container,\n:host([content-aligned=\"center\"]) .interaction-container*/[content-aligned=\"center\"].sc-ic-hero-h .left-container.sc-ic-hero,[content-aligned=\"center\"].sc-ic-hero-h .interaction-container.sc-ic-hero{justify-content:center;text-align:center}@media (min-width: 992px){/*!@.left-container-full-width*/.left-container-full-width.sc-ic-hero{width:66.6%}}@media (min-width: 1044px){/*!@:host,\n  .section-container*/.sc-ic-hero-h,.section-container.sc-ic-hero{min-height:13rem}/*!@:host(.small),\n  :host(.small) .section-container*/.small.sc-ic-hero-h,.small.sc-ic-hero-h .section-container.sc-ic-hero{min-height:10.813rem}/*!@.left-container:not(.left-container-full-width)*/.left-container.sc-ic-hero:not(.left-container-full-width){flex-basis:66.6%}/*!@.left-container*/.left-container.sc-ic-hero{min-height:9rem}/*!@.right-container*/.right-container.sc-ic-hero{flex-basis:33.3%;margin-left:3.125rem}/*!@.secondary-container*/.secondary-container.sc-ic-hero{min-height:9rem}/*!@.secondary-heading,\n  .secondary-subheading*/.secondary-heading.sc-ic-hero,.secondary-subheading.sc-ic-hero{margin-left:3.938rem}}@media (min-width: 801px) and (max-width: 1043px){/*!@:host(.has-background-image)*/.has-background-image.sc-ic-hero-h{background-image:none !important}/*!@:host,\n  .section-container*/.sc-ic-hero-h,.section-container.sc-ic-hero{min-height:16rem}/*!@:host(.small),\n  :host(.small) .section-container*/.small.sc-ic-hero-h,.small.sc-ic-hero-h .section-container.sc-ic-hero{min-height:15rem}/*!@:host(.secondary-heading),\n  :host(.secondary-heading) .section-container*/.secondary-heading.sc-ic-hero-h,.secondary-heading.sc-ic-hero-h .section-container.sc-ic-hero{min-height:14rem}/*!@.left-container*/.left-container.sc-ic-hero{min-height:10rem}/*!@.secondary-container*/.secondary-container.sc-ic-hero{min-height:10rem}/*!@.secondary-heading,\n  .secondary-subheading*/.secondary-heading.sc-ic-hero,.secondary-subheading.sc-ic-hero{margin-left:5.922rem}/*!@.right-container*/.right-container.sc-ic-hero{margin-left:3.125rem}}@media (min-width: 641px) and (max-width: 800px){/*!@:host(.has-background-image)*/.has-background-image.sc-ic-hero-h{background-image:none !important}/*!@:host,\n  .section-container*/.sc-ic-hero-h,.section-container.sc-ic-hero{min-height:16rem}/*!@:host(.small),\n  :host(.small) .section-container*/.small.sc-ic-hero-h,.small.sc-ic-hero-h .section-container.sc-ic-hero{min-height:15rem}/*!@:host(.secondary-heading),\n  :host(.secondary-heading) .section-container*/.secondary-heading.sc-ic-hero-h,.secondary-heading.sc-ic-hero-h .section-container.sc-ic-hero{min-height:14rem}/*!@.left-container*/.left-container.sc-ic-hero{min-height:10rem}/*!@.secondary-container*/.secondary-container.sc-ic-hero{min-height:10rem}/*!@.secondary-heading,\n  .secondary-subheading*/.secondary-heading.sc-ic-hero,.secondary-subheading.sc-ic-hero{margin-left:2.125rem}/*!@.right-container*/.right-container.sc-ic-hero{margin-left:3.125rem}}@media (min-width: 481px) and (max-width: 640px){/*!@:host(.has-background-image)*/.has-background-image.sc-ic-hero-h{background-image:none !important}/*!@:host,\n  .section-container*/.sc-ic-hero-h,.section-container.sc-ic-hero{min-height:13rem}/*!@:host(.small),\n  :host(.small) .section-container*/.small.sc-ic-hero-h,.small.sc-ic-hero-h .section-container.sc-ic-hero{min-height:10.813rem}/*!@:host(.secondary-heading),\n  :host(.secondary-heading) .section-container*/.secondary-heading.sc-ic-hero-h,.secondary-heading.sc-ic-hero-h .section-container.sc-ic-hero{min-height:17.5rem}/*!@:host(.secondary-heading) .section-container,\n  :host(.small) .section-container,\n  .section-container*/.secondary-heading.sc-ic-hero-h .section-container.sc-ic-hero,.small.sc-ic-hero-h .section-container.sc-ic-hero,.section-container.sc-ic-hero{flex-direction:column;align-items:flex-start}/*!@.left-container*/.left-container.sc-ic-hero{height:-moz-fit-content;height:fit-content}/*!@.secondary-container*/.secondary-container.sc-ic-hero{height:-moz-fit-content;height:fit-content;border:none}/*!@.right-container*/.right-container.sc-ic-hero{margin-bottom:2.5rem}}@media (max-width: 480px){/*!@:host(.has-background-image)*/.has-background-image.sc-ic-hero-h{background-image:none !important}/*!@:host,\n  .section-container*/.sc-ic-hero-h,.section-container.sc-ic-hero{min-height:12rem}/*!@:host,\n  .right-container*/.sc-ic-hero-h,.right-container.sc-ic-hero{margin-bottom:var(--ic-space-md)}/*!@:host(.small),\n  :host(.small) .section-container*/.small.sc-ic-hero-h,.small.sc-ic-hero-h .section-container.sc-ic-hero{min-height:10.813rem}/*!@:host(.secondary-heading),\n  :host(.secondary-heading) .section-container*/.secondary-heading.sc-ic-hero-h,.secondary-heading.sc-ic-hero-h .section-container.sc-ic-hero{min-height:16.5rem}/*!@:host(.secondary-heading) .section-container,\n  :host(.small) .section-container,\n  .section-container*/.secondary-heading.sc-ic-hero-h .section-container.sc-ic-hero,.small.sc-ic-hero-h .section-container.sc-ic-hero,.section-container.sc-ic-hero{flex-direction:column;align-items:flex-start}/*!@.left-container*/.left-container.sc-ic-hero{height:-moz-fit-content;height:fit-content}/*!@.secondary-container*/.secondary-container.sc-ic-hero{height:-moz-fit-content;height:fit-content;border:none}}";

/**
 * @slot heading - Content will be rendered in the title area, in place of the heading.
 * @slot subheading - Content will be rendered in the title area, in place of the subheading.
 * @slot interaction - Content will be rendered in the interaction area, adjacent to the title area.
 * @slot secondary - Content will be rendered in the secondary content area.
 */
class Hero {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.foregroundColor = getThemeForegroundColor();
    this.rightContent = false;
    this.leftContentFullWidth = !this.rightContent && this.secondaryHeading === undefined;
    this.scrollFactor = "right -100px";
    this.aligned = "left";
    this.backgroundImage = undefined;
    this.contentAligned = "left";
    this.disableBackgroundParallax = false;
    this.heading = undefined;
    this.secondaryHeading = undefined;
    this.secondarySubheading = undefined;
    this.size = "default";
    this.small = false;
    this.subheading = undefined;
  }
  componentWillLoad() {
    this.rightContent = slotHasContent(this.el, "secondary");
  }
  componentDidLoad() {
    onComponentRequiredPropUndefined([{ prop: this.heading, propName: "heading" }], "Hero");
  }
  componentWillRender() {
    this.rightContent = slotHasContent(this.el, "secondary");
  }
  themeChangeHandler(ev) {
    const theme = ev.detail;
    this.foregroundColor = theme.mode;
  }
  doScroll() {
    if (this.disableBackgroundParallax) {
      return;
    }
    const scrolltotop = document.scrollingElement.scrollTop;
    const factor = 0.4;
    const y = -100 + scrolltotop * factor;
    this.scrollFactor = "right " + y + "px";
  }
  render() {
    const { aligned, small, size, heading, subheading, secondaryHeading, secondarySubheading, foregroundColor, backgroundImage, scrollFactor, } = this;
    let style = {};
    if (isPropDefined(backgroundImage)) {
      style = {
        "background-image": "url(" + backgroundImage + ")",
        "background-position": scrollFactor,
      };
    }
    return (hAsync(Host, { class: {
        [IcThemeForegroundEnum.Dark]: foregroundColor === IcThemeForegroundEnum.Dark,
        ["has-background-image"]: backgroundImage !== undefined,
        ["small"]: small || size === "small",
        ["secondary-heading"]: !!secondaryHeading,
      }, style: style }, hAsync("ic-section-container", { aligned: aligned, fullHeight: true, class: "section-container" }, hAsync("div", { class: {
        ["left-container"]: true,
        ["left-container-full-width"]: this.leftContentFullWidth,
      } }, hAsync("div", { class: "heading" }, hAsync("slot", { name: "heading" }, hAsync("ic-typography", { variant: small || size === "small" ? "h2" : "h1", class: {
        ["heading-bottom-spacing"]: !small && size !== "small",
      } }, heading))), hAsync("div", { class: "subheading" }, hAsync("slot", { name: "subheading" }, hAsync("ic-typography", { variant: "body" }, subheading))), hAsync("div", { class: "interaction-container" }, hAsync("slot", { name: "interaction" }))), (isPropDefined(secondaryHeading) || this.rightContent) && (hAsync("div", { class: "right-container" }, hAsync("slot", { name: "secondary" }, secondaryHeading && (hAsync("div", { class: "secondary-container" }, hAsync("div", { class: "secondary-heading" }, hAsync("ic-typography", { variant: "h4" }, secondaryHeading)), hAsync("div", { class: "secondary-subheading" }, hAsync("ic-typography", { variant: "subtitle-small" }, secondarySubheading))))))))));
  }
  get el() { return getElement(this); }
  static get style() { return icHeroCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "ic-hero",
    "$members$": {
      "aligned": [1],
      "backgroundImage": [1, "background-image"],
      "contentAligned": [1, "content-aligned"],
      "disableBackgroundParallax": [4, "disable-background-parallax"],
      "heading": [1],
      "secondaryHeading": [1, "secondary-heading"],
      "secondarySubheading": [1, "secondary-subheading"],
      "size": [1],
      "small": [4],
      "subheading": [1],
      "foregroundColor": [32],
      "rightContent": [32],
      "leftContentFullWidth": [32],
      "scrollFactor": [32]
    },
    "$listeners$": [[4, "themeChange", "themeChangeHandler"], [5, "scroll", "doScroll"]],
    "$lazyBundleId$": "-",
    "$attrsToReflect$": []
  }; }
}

var LeftArrow = `<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20" fill="none">
  <path d="M13.0875 6.175L11.9125 5L6.91251 10L11.9125 15L13.0875 13.825L9.27084 10L13.0875 6.175Z"/>
</svg>`;

var RightArrow = `<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20" fill="none">
  <path d="M8.08748 5L6.91248 6.175L10.7291 10L6.91248 13.825L8.08748 15L13.0875 10L8.08748 5Z"/>
</svg>`;

const icHorizontalScrollCss = "/*!@html*/html.sc-ic-horizontal-scroll{line-height:1.15;-webkit-text-size-adjust:100%}/*!@body*/body.sc-ic-horizontal-scroll{margin:0}/*!@main*/main.sc-ic-horizontal-scroll{display:block}/*!@h1*/h1.sc-ic-horizontal-scroll{font-size:2em;margin:0.67em 0}/*!@hr*/hr.sc-ic-horizontal-scroll{box-sizing:content-box;height:0;overflow:visible}/*!@pre*/pre.sc-ic-horizontal-scroll{font-family:monospace, monospace;font-size:1em}/*!@a*/a.sc-ic-horizontal-scroll{background-color:transparent}/*!@abbr[title]*/abbr[title].sc-ic-horizontal-scroll{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}/*!@b,\nstrong*/b.sc-ic-horizontal-scroll,strong.sc-ic-horizontal-scroll{font-weight:bolder}/*!@code,\nkbd,\nsamp*/code.sc-ic-horizontal-scroll,kbd.sc-ic-horizontal-scroll,samp.sc-ic-horizontal-scroll{font-family:monospace, monospace;font-size:1em}/*!@small*/small.sc-ic-horizontal-scroll{font-size:80%}/*!@sub,\nsup*/sub.sc-ic-horizontal-scroll,sup.sc-ic-horizontal-scroll{font-size:75%;line-height:0;position:relative;vertical-align:baseline}/*!@sub*/sub.sc-ic-horizontal-scroll{bottom:-0.25em}/*!@sup*/sup.sc-ic-horizontal-scroll{top:-0.5em}/*!@img*/img.sc-ic-horizontal-scroll{border-style:none}/*!@button,\ninput,\noptgroup,\nselect,\ntextarea*/button.sc-ic-horizontal-scroll,input.sc-ic-horizontal-scroll,optgroup.sc-ic-horizontal-scroll,select.sc-ic-horizontal-scroll,textarea.sc-ic-horizontal-scroll{font-family:inherit;font-size:100%;line-height:1.15;margin:0}/*!@button,\ninput*/button.sc-ic-horizontal-scroll,input.sc-ic-horizontal-scroll{overflow:visible}/*!@button,\nselect*/button.sc-ic-horizontal-scroll,select.sc-ic-horizontal-scroll{text-transform:none}/*!@button,\n[type=\"button\"],\n[type=\"reset\"],\n[type=\"submit\"]*/button.sc-ic-horizontal-scroll,[type=\"button\"].sc-ic-horizontal-scroll,[type=\"reset\"].sc-ic-horizontal-scroll,[type=\"submit\"].sc-ic-horizontal-scroll{-webkit-appearance:button}/*!@button::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner*/button.sc-ic-horizontal-scroll::-moz-focus-inner,[type=\"button\"].sc-ic-horizontal-scroll::-moz-focus-inner,[type=\"reset\"].sc-ic-horizontal-scroll::-moz-focus-inner,[type=\"submit\"].sc-ic-horizontal-scroll::-moz-focus-inner{border-style:none;padding:0}/*!@button:-moz-focusring,\n[type=\"button\"]:-moz-focusring,\n[type=\"reset\"]:-moz-focusring,\n[type=\"submit\"]:-moz-focusring*/button.sc-ic-horizontal-scroll:-moz-focusring,[type=\"button\"].sc-ic-horizontal-scroll:-moz-focusring,[type=\"reset\"].sc-ic-horizontal-scroll:-moz-focusring,[type=\"submit\"].sc-ic-horizontal-scroll:-moz-focusring{outline:1px dotted ButtonText}/*!@fieldset*/fieldset.sc-ic-horizontal-scroll{padding:0.35em 0.75em 0.625em}/*!@legend*/legend.sc-ic-horizontal-scroll{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}/*!@progress*/progress.sc-ic-horizontal-scroll{vertical-align:baseline}/*!@textarea*/textarea.sc-ic-horizontal-scroll{overflow:auto}/*!@[type=\"checkbox\"],\n[type=\"radio\"]*/[type=\"checkbox\"].sc-ic-horizontal-scroll,[type=\"radio\"].sc-ic-horizontal-scroll{box-sizing:border-box;padding:0}/*!@[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button*/[type=\"number\"].sc-ic-horizontal-scroll::-webkit-inner-spin-button,[type=\"number\"].sc-ic-horizontal-scroll::-webkit-outer-spin-button{height:auto}/*!@[type=\"search\"]*/[type=\"search\"].sc-ic-horizontal-scroll{-webkit-appearance:textfield;outline-offset:-2px}/*!@[type=\"search\"]::-webkit-search-decoration*/[type=\"search\"].sc-ic-horizontal-scroll::-webkit-search-decoration{-webkit-appearance:none}/*!@::-webkit-file-upload-button*/.sc-ic-horizontal-scroll::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}/*!@details*/details.sc-ic-horizontal-scroll{display:block}/*!@summary*/summary.sc-ic-horizontal-scroll{display:list-item}/*!@template*/template.sc-ic-horizontal-scroll{display:none}/*!@[hidden]*/[hidden].sc-ic-horizontal-scroll{display:none}/*!@html,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo*/html.sc-ic-horizontal-scroll,body.sc-ic-horizontal-scroll,div.sc-ic-horizontal-scroll,span.sc-ic-horizontal-scroll,applet.sc-ic-horizontal-scroll,object.sc-ic-horizontal-scroll,iframe.sc-ic-horizontal-scroll,h1.sc-ic-horizontal-scroll,h2.sc-ic-horizontal-scroll,h3.sc-ic-horizontal-scroll,h4.sc-ic-horizontal-scroll,h5.sc-ic-horizontal-scroll,h6.sc-ic-horizontal-scroll,p.sc-ic-horizontal-scroll,blockquote.sc-ic-horizontal-scroll,pre.sc-ic-horizontal-scroll,a.sc-ic-horizontal-scroll,abbr.sc-ic-horizontal-scroll,acronym.sc-ic-horizontal-scroll,address.sc-ic-horizontal-scroll,big.sc-ic-horizontal-scroll,cite.sc-ic-horizontal-scroll,code.sc-ic-horizontal-scroll,del.sc-ic-horizontal-scroll,dfn.sc-ic-horizontal-scroll,em.sc-ic-horizontal-scroll,img.sc-ic-horizontal-scroll,ins.sc-ic-horizontal-scroll,kbd.sc-ic-horizontal-scroll,q.sc-ic-horizontal-scroll,s.sc-ic-horizontal-scroll,samp.sc-ic-horizontal-scroll,small.sc-ic-horizontal-scroll,strike.sc-ic-horizontal-scroll,strong.sc-ic-horizontal-scroll,sub.sc-ic-horizontal-scroll,sup.sc-ic-horizontal-scroll,tt.sc-ic-horizontal-scroll,var.sc-ic-horizontal-scroll,b.sc-ic-horizontal-scroll,u.sc-ic-horizontal-scroll,i.sc-ic-horizontal-scroll,center.sc-ic-horizontal-scroll,dl.sc-ic-horizontal-scroll,dt.sc-ic-horizontal-scroll,dd.sc-ic-horizontal-scroll,ol.sc-ic-horizontal-scroll,ul.sc-ic-horizontal-scroll,li.sc-ic-horizontal-scroll,fieldset.sc-ic-horizontal-scroll,form.sc-ic-horizontal-scroll,label.sc-ic-horizontal-scroll,legend.sc-ic-horizontal-scroll,table.sc-ic-horizontal-scroll,caption.sc-ic-horizontal-scroll,tbody.sc-ic-horizontal-scroll,tfoot.sc-ic-horizontal-scroll,thead.sc-ic-horizontal-scroll,tr.sc-ic-horizontal-scroll,th.sc-ic-horizontal-scroll,td.sc-ic-horizontal-scroll,article.sc-ic-horizontal-scroll,aside.sc-ic-horizontal-scroll,canvas.sc-ic-horizontal-scroll,details.sc-ic-horizontal-scroll,embed.sc-ic-horizontal-scroll,figure.sc-ic-horizontal-scroll,figcaption.sc-ic-horizontal-scroll,footer.sc-ic-horizontal-scroll,header.sc-ic-horizontal-scroll,hgroup.sc-ic-horizontal-scroll,menu.sc-ic-horizontal-scroll,nav.sc-ic-horizontal-scroll,output.sc-ic-horizontal-scroll,ruby.sc-ic-horizontal-scroll,section.sc-ic-horizontal-scroll,summary.sc-ic-horizontal-scroll,time.sc-ic-horizontal-scroll,mark.sc-ic-horizontal-scroll,audio.sc-ic-horizontal-scroll,video.sc-ic-horizontal-scroll{margin:0;padding:0;border:0;font-size:100%;font-style:inherit;vertical-align:baseline}/*!@:host*/.sc-ic-horizontal-scroll-h{--border-bottom-color:var(--ic-architectural-300);--splitter-color:var(--ic-architectural-100);display:flex;max-width:100%}/*!@:host(.light)*/.light.sc-ic-horizontal-scroll-h{--splitter-color:var(--ic-keyline-lighten-rgb)}/*!@:host(.dark)*/.dark.sc-ic-horizontal-scroll-h{--splitter-color:var(--ic-keyline-darken-rgb)}/*!@::slotted(*)*/.sc-ic-horizontal-scroll-s>*{overflow-x:scroll;overflow-y:hidden;scroll-behavior:smooth;scrollbar-width:none;-ms-overflow-style:none;margin:calc(var(--ic-space-xs) * -1) !important;padding:var(--ic-space-xs) !important}/*!@:host(.visible) ::slotted(*)*/.sc-ic-horizontal-scroll-h.visible .sc-ic-horizontal-scroll-s>*{margin:calc(var(--ic-space-xs) * -1) 0 !important;padding:var(--ic-space-xs) !important}/*!@.tabs-container::-webkit-scrollbar*/.tabs-container.sc-ic-horizontal-scroll::-webkit-scrollbar{display:none}/*!@.scroll-container-left,\n.scroll-container-right*/.scroll-container-left.sc-ic-horizontal-scroll,.scroll-container-right.sc-ic-horizontal-scroll{display:flex}/*!@.scroll-container-left*/.scroll-container-left.sc-ic-horizontal-scroll{margin-left:var(--ic-space-xxs)}/*!@.scroll-container-right*/.scroll-container-right.sc-ic-horizontal-scroll{margin-right:var(--ic-space-xxs)}/*!@.hidden*/.hidden.sc-ic-horizontal-scroll{display:none}/*!@.scroll-arrow*/.scroll-arrow.sc-ic-horizontal-scroll{margin:var(--ic-space-xxs) 0}/*!@.disabled .ic-tooltip-container*/.disabled.sc-ic-horizontal-scroll .ic-tooltip-container.sc-ic-horizontal-scroll{display:none !important}/*!@.scroll-splitter-left,\n.scroll-splitter-right*/.scroll-splitter-left.sc-ic-horizontal-scroll,.scroll-splitter-right.sc-ic-horizontal-scroll{display:flex;height:var(--ic-space-lg);width:var(--ic-space-1px);margin-top:var(--ic-space-xs);border-radius:var(--ic-space-1px);background-color:var(--splitter-color)}/*!@.scroll-splitter-left*/.scroll-splitter-left.sc-ic-horizontal-scroll{margin-left:calc(var(--ic-space-xxs) - var(--ic-space-1px))}/*!@.scroll-splitter-right*/.scroll-splitter-right.sc-ic-horizontal-scroll{margin-right:calc(var(--ic-space-xxs) - var(--ic-space-1px))}/*!@.disabled .scroll-splitter-left,\n.disabled .scroll-splitter-right*/.disabled.sc-ic-horizontal-scroll .scroll-splitter-left.sc-ic-horizontal-scroll,.disabled.sc-ic-horizontal-scroll .scroll-splitter-right.sc-ic-horizontal-scroll{background-color:transparent}/*!@.disabled ic-button > svg*/.disabled.sc-ic-horizontal-scroll ic-button.sc-ic-horizontal-scroll>svg.sc-ic-horizontal-scroll{color:var(--ic-keyline-darken-rgb)}/*!@:host(.dark) .disabled ic-button > svg,\n:host(.light) .disabled ic-button > svg*/.dark.sc-ic-horizontal-scroll-h .disabled.sc-ic-horizontal-scroll ic-button.sc-ic-horizontal-scroll>svg.sc-ic-horizontal-scroll,.light.sc-ic-horizontal-scroll-h .disabled.sc-ic-horizontal-scroll ic-button.sc-ic-horizontal-scroll>svg.sc-ic-horizontal-scroll{color:var(--splitter-color) !important}";

const SCROLL_DELAY_MS = 200;
class HorizontalScroll {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.buttonStateSet = false;
    this.focusHandler = (event) => {
      this.itemFocusHandler(Array.from(this.items).indexOf(event.target));
    };
    this.resizeObserverCallback = () => {
      if (this.el.clientWidth >= this.itemsContainerEl.scrollWidth) {
        this.itemOverflow = false;
      }
      else {
        this.itemOverflow = elementOverflowsX(this.itemsContainerEl);
      }
      if (this.itemOverflow) {
        this.lastItemVisible =
          this.itemsContainerEl.offsetWidth + this.itemsContainerEl.scrollLeft >=
            this.itemsContainerEl.scrollWidth;
      }
    };
    this.runResizeObserver = () => {
      this.resizeObserver = new ResizeObserver(() => {
        this.resizeObserverCallback();
      });
      this.resizeObserver.observe(this.itemsContainerEl);
    };
    this.scrollLeft = () => {
      this.scrollItemIntoView(this.getCurrentLeftItem() - 1);
    };
    this.scrollRight = () => {
      this.scrollItemIntoView(this.getCurrentLeftItem() + 1);
    };
    this.longScrollRight = () => {
      this.scrollRight();
      this.scrollDelay = window.setTimeout(this.longScrollRight, SCROLL_DELAY_MS);
    };
    this.longScrollLeft = () => {
      this.scrollLeft();
      this.scrollDelay = window.setTimeout(this.longScrollLeft, SCROLL_DELAY_MS);
    };
    this.leftArrowMouseDownHandler = (e) => {
      e.preventDefault();
      this.scrollDelay = window.setTimeout(this.longScrollLeft, SCROLL_DELAY_MS);
    };
    this.rightArrowMouseDownHandler = (e) => {
      e.preventDefault();
      this.scrollDelay = window.setTimeout(this.longScrollRight, SCROLL_DELAY_MS);
    };
    this.arrowMouseUpHandler = () => {
      window.clearTimeout(this.scrollDelay);
    };
    this.getCurrentLeftItem = () => {
      const index = this.itemOffsets.findIndex((el) => el > Math.round(this.itemsContainerEl.scrollLeft));
      return index < 0 ? 0 : index;
    };
    this.scrollHandler = () => {
      window.clearTimeout(this.isScrolling);
      // Set a timeout to run after scrolling ends
      this.isScrolling = window.setTimeout(this.scrollStopped, 50);
    };
    this.scrollStopped = () => {
      // If scrollItemIntoView has been called, the button states will already be set
      // Can't just handle it here as it causes strange jumping behaviour in positioning
      const scrollLeft = Math.round(this.itemsContainerEl.scrollLeft);
      if (this.buttonStateSet === false) {
        this.firstItemVisible = scrollLeft === 0;
        this.lastItemVisible =
          this.itemsContainerEl.offsetWidth + scrollLeft >=
            this.itemsContainerEl.scrollWidth;
      }
      this.buttonStateSet = false;
    };
    this.firstItemVisible = true;
    this.itemOverflow = false;
    this.lastItemVisible = false;
    this.appearance = "default";
    this.focusTrigger = "focus";
  }
  componentWillLoad() {
    this.itemsContainerEl = this.el.children[0];
    this.itemsContainerEl.addEventListener("scroll", this.scrollHandler);
    this.items = (getSlotElements$1(this.itemsContainerEl) ||
      Array.from(this.itemsContainerEl.children));
    this.items.forEach((item) => {
      if (item.addEventListener) {
        item.addEventListener(this.focusTrigger, this.focusHandler);
      }
    });
  }
  componentDidLoad() {
    let runningTotal = 0;
    this.itemOffsets = this.items.map((item) => {
      runningTotal += item.offsetWidth;
      return runningTotal;
    });
    checkResizeObserver$1(this.runResizeObserver);
    // Add event listener to scroll containers as mouse events are not fired on disabled elements (ic-button's <button>)
    // 'mouseleave' needed in case the user moves their mouse while holding the arrow buttons
    // - 'mouseup' otherwise not detected and scrolling not stopped
    const scrollArrows = Array.from(this.el.shadowRoot.querySelectorAll("div"));
    ["mouseup", "mouseleave"].forEach((event) => {
      scrollArrows.forEach((arrow) => arrow.addEventListener(event, this.arrowMouseUpHandler));
    });
  }
  disconnectedCallback() {
    if (this.resizeObserver !== undefined) {
      this.resizeObserver.disconnect();
    }
    const scrollArrows = Array.from(this.el.shadowRoot.querySelectorAll("div"));
    ["mouseup", "mouseleave"].forEach((event) => {
      scrollArrows.forEach((arrow) => arrow.removeEventListener(event, this.arrowMouseUpHandler));
    });
    this.items.forEach((item) => {
      if (item.removeEventListener) {
        item.removeEventListener(this.focusTrigger, this.focusHandler);
      }
    });
    this.itemsContainerEl.removeEventListener("scroll", this.scrollHandler);
  }
  /**
   * @internal if side scrolling enabled, scrolls the specified item into view.
   */
  async scrollItemIntoView(itemPosition) {
    this.firstItemVisible = itemPosition <= 0;
    const newScrollPos = itemPosition <= 0 ? 0 : this.itemOffsets[itemPosition - 1];
    this.lastItemVisible =
      this.itemsContainerEl.offsetWidth + newScrollPos >=
        this.itemsContainerEl.scrollWidth;
    this.buttonStateSet = true;
    this.itemsContainerEl.scrollLeft = newScrollPos;
  }
  itemFocusHandler(itemPosition) {
    if (this.itemOverflow) {
      this.scrollItemIntoView(itemPosition);
    }
  }
  render() {
    const { appearance, firstItemVisible, lastItemVisible, itemOverflow } = this;
    return (hAsync(Host, { class: {
        ["visible"]: itemOverflow,
        ["dark"]: this.appearance === IcThemeForegroundEnum.Dark,
        ["light"]: this.appearance === IcThemeForegroundEnum.Light,
      } }, hAsync("div", { "aria-hidden": "true", class: {
        ["scroll-container-left"]: true,
        ["hidden"]: !itemOverflow,
        ["disabled"]: firstItemVisible,
      }, role: "tab" }, hAsync("ic-button", { class: "scroll-arrow", variant: "icon", "aria-label": "Scroll left", appearance: appearance, innerHTML: LeftArrow, disabled: firstItemVisible, tabindex: "-1", onClick: this.scrollLeft, onMouseDown: this.leftArrowMouseDownHandler }), hAsync("span", { class: "scroll-splitter-left" })), hAsync("slot", null), hAsync("div", { "aria-hidden": "true", class: {
        ["scroll-container-right"]: true,
        ["hidden"]: !itemOverflow,
        ["disabled"]: lastItemVisible,
      }, role: "tab" }, hAsync("span", { class: "scroll-splitter-right" }), hAsync("ic-button", { class: "scroll-arrow", variant: "icon", "aria-label": "Scroll right", appearance: appearance, innerHTML: RightArrow, disabled: lastItemVisible, tabindex: "-1", onClick: this.scrollRight, onMouseDown: this.rightArrowMouseDownHandler }))));
  }
  get el() { return getElement(this); }
  static get style() { return icHorizontalScrollCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "ic-horizontal-scroll",
    "$members$": {
      "appearance": [1],
      "focusTrigger": [1, "focus-trigger"],
      "firstItemVisible": [32],
      "itemOverflow": [32],
      "lastItemVisible": [32],
      "scrollItemIntoView": [64]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": []
  }; }
}

const icInputComponentContainerCss = "ic-input-component-container{display:flex;border:var(--ic-border-width) solid\n    var(--border-color, var(--ic-architectural-400));border-radius:var(--ic-border-radius);transition:var(--ic-easing-transition-slow);height:2.5rem;width:var(--input-width, 20rem);padding:var(--ic-space-1px);background-color:var(--ic-architectural-white);box-sizing:border-box;fill:var(--ic-architectural-400);outline:none}ic-input-component-container.fullwidth{width:100%}ic-input-component-container.disabled,ic-input-component-container.disabled:hover{border:var(--ic-border-width) dashed var(--ic-architectural-200)}ic-input-component-container.readonly,ic-input-component-container.readonly:hover{border:none;padding:0}ic-input-component-container.error{border:var(--ic-error-border-default);padding:0}ic-input-component-container.error:hover{border:var(--ic-error-border-hover)}ic-input-component-container.error:focus-within{border:var(--ic-error-border-pressed)}ic-input-component-container.warning{border:var(--ic-warning-border-default);padding:0}ic-input-component-container.warning:hover{border:var(--ic-warning-border-hover)}ic-input-component-container.warning:focus-within{border:var(--ic-warning-border-pressed)}ic-input-component-container.success{border:var(--ic-success-border-default);padding:0}ic-input-component-container.success:hover{border:var(--ic-success-border-hover)}ic-input-component-container.success:focus-within{border:var(--ic-success-border-pressed)}ic-input-component-container.small{height:var(--ic-space-xl)}ic-input-component-container.multiline{height:auto}ic-input-component-container .icon-container{margin-top:var(--ic-space-xxs);margin-left:0.438rem;display:flex;align-items:center}ic-input-component-container.multiline .icon-container,ic-input-component-container.multiline.small .icon-container{margin-top:0.375rem;display:block}ic-input-component-container.readonly .icon-container{margin-left:-0.313rem}ic-input-component-container.disabled ::-moz-placeholder{display:none}ic-input-component-container.disabled ::placeholder{display:none}ic-input-component-container .inline-success{margin:var(--ic-space-xs) 0.375rem;display:flex;align-items:center}ic-input-component-container.dark:hover{--border-color:var(--ic-architectural-400)}ic-input-component-container .inline-success>svg{fill:var(--ic-status-success);height:1.25rem;width:1.25rem}ic-input-component-container:hover{border:var(--ic-border-hover);color:var(--ic-action-dark-hover)}ic-input-component-container:focus{border:var(--ic-border-pressed)}.focus-indicator{display:flex;width:100%;margin:-0.125rem;padding:0.125rem;border-radius:var(--ic-border-radius);transition:var(--ic-easing-transition-fast)}.focus-indicator:focus-within,.focus-indicator-enabled{box-shadow:var(--ic-border-focus)}.focus-indicator.dark:focus-within{box-shadow:var(--ic-border-focus)}@media (forced-colors: active){ic-input-component-container,.focus-indicator{transition:none}ic-input-component-container:focus-within{border:var(--ic-border-width) solid Highlight;outline:0.125rem solid Highlight}ic-input-component-container.disabled,ic-input-component-container.disabled:hover{border:var(--ic-border-width) dashed GrayText}}";

/**
 * @slot left-icon - Content will be placed to the left of the input.
 */
class InputComponentContainer {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.appearance = "default";
    this.dark = false;
    this.disabled = false;
    this.fullWidth = false;
    this.multiLine = false;
    this.readonly = false;
    this.size = "default";
    this.small = false;
    this.validationInline = false;
    this.validationStatus = "";
  }
  render() {
    const { small, size, validationStatus, disabled, readonly, multiLine, fullWidth, dark, appearance, validationInline, } = this;
    const hasValidationStatus = this.validationStatus !== "" && !this.disabled && !this.readonly
      ? true
      : false;
    return (hAsync(Host, { class: {
        ["small"]: small || size === "small",
        [validationStatus]: hasValidationStatus,
        ["disabled"]: disabled,
        ["readonly"]: readonly,
        ["multiline"]: multiLine,
        ["fullwidth"]: fullWidth,
        ["dark"]: dark || appearance === "dark",
      } }, hAsync("div", { class: {
        "focus-indicator": true,
        dark: dark || appearance === "dark",
      } }, isSlotUsed$1(this.el, "left-icon") && (hAsync("div", { class: {
        ["icon-container"]: true,
      } }, hAsync("slot", { name: "left-icon" }))), hAsync("slot", null), validationInline &&
      validationStatus === IcInformationStatus.Success && (hAsync("span", { class: {
        ["inline-success"]: true,
      }, innerHTML: successIcon })))));
  }
  get el() { return getElement(this); }
  static get style() { return icInputComponentContainerCss; }
  static get cmpMeta() { return {
    "$flags$": 4,
    "$tagName$": "ic-input-component-container",
    "$members$": {
      "appearance": [1],
      "dark": [4],
      "disabled": [4],
      "fullWidth": [4, "full-width"],
      "multiLine": [4, "multi-line"],
      "readonly": [4],
      "size": [1],
      "small": [4],
      "validationInline": [4, "validation-inline"],
      "validationStatus": [1, "validation-status"]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": []
  }; }
}

const icInputContainerCss = "ic-input-container .component-container{display:flex;flex-direction:column}";

class InputContainer {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.disabled = false;
    this.readonly = false;
  }
  render() {
    return (hAsync(Host, null, hAsync("div", { class: {
        ["component-container"]: true,
        ["disabled"]: this.disabled,
        ["readonly"]: this.readonly,
      } }, hAsync("slot", null))));
  }
  static get style() { return icInputContainerCss; }
  static get cmpMeta() { return {
    "$flags$": 4,
    "$tagName$": "ic-input-container",
    "$members$": {
      "disabled": [4],
      "readonly": [4]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": []
  }; }
}

const icInputLabelCss = "ic-input-label{margin-bottom:var(--ic-space-xs)}ic-input-label.with-helper{margin-bottom:var(--ic-space-xxxs)}ic-input-label.readonly{color:var(--ic-color-tertiary-text)}ic-input-label .helpertext{margin-top:var(--ic-space-xxxs)}ic-input-label .helpertext-normal{color:var(--ic-color-secondary-text)}ic-input-label .helpertext-readonly{color:var(--ic-color-tertiary-text)}ic-input-label .readonly-label{color:var(--ic-color-secondary-text)}ic-input-label .error-label{color:var(--ic-status-error)}ic-input-label .dark{color:var(--ic-architectural-white)}";

class InputLabel {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.appearance = "default";
    this.dark = false;
    this.disabled = false;
    this.error = false;
    this.for = undefined;
    this.helperText = "";
    this.label = undefined;
    this.readonly = false;
    this.required = false;
  }
  componentDidLoad() {
    onComponentRequiredPropUndefined([{ prop: this.label, propName: "label" }], "Input Label");
  }
  render() {
    const { disabled, readonly, label, required, helperText, error, dark, appearance, } = this;
    const labelText = required ? label + " *" : label;
    const labelContent = readonly ? (`${labelText}`) : (hAsync("label", { htmlFor: this.for }, labelText));
    const id = getInputHelperTextID(this.for);
    return (hAsync(Host, { class: {
        ["disabled"]: disabled,
        ["readonly"]: readonly,
        ["with-helper"]: helperText !== "",
      } }, hAsync("ic-typography", { variant: "label", class: {
        ["readonly-label"]: readonly,
        ["error-label"]: error && !(readonly || disabled),
        ["dark"]: dark || appearance === "dark",
      } }, labelContent), helperText !== "" && (hAsync("ic-typography", { variant: "caption", class: {
        ["helpertext"]: true,
        ["helpertext-normal"]: !disabled && !readonly,
        ["helpertext-readonly"]: readonly,
      } }, hAsync("span", { id: id }, helperText)))));
  }
  static get style() { return icInputLabelCss; }
  static get cmpMeta() { return {
    "$flags$": 0,
    "$tagName$": "ic-input-label",
    "$members$": {
      "appearance": [1],
      "dark": [4],
      "disabled": [4],
      "error": [4],
      "for": [1],
      "helperText": [1, "helper-text"],
      "label": [1],
      "readonly": [4],
      "required": [4]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": []
  }; }
}

const icInputValidationCss = "ic-input-validation{width:var(--input-width, 20rem);margin-top:var(--ic-space-xs);display:flex}ic-input-validation.fullwidth{width:100%}ic-input-validation span.status-icon{padding-right:var(--ic-space-xxs)}ic-input-validation span.status-icon>svg{height:1.25rem;width:1.25rem}ic-input-validation span.icon-success>svg{fill:var(--ic-status-success)}ic-input-validation span.icon-error>svg{fill:var(--ic-status-error)}ic-input-validation span.icon-warning>svg{fill:var(--ic-status-warning)}ic-input-validation .statustext{flex-grow:1}";

const icon = {
  [IcInformationStatus.Warning]: warningIcon$1,
  [IcInformationStatus.Error]: errorIcon,
  [IcInformationStatus.Success]: successIcon,
};
/**
 * @slot validation-message-adornment - Content will be placed to the right of the validation message.
 */
class InputValidation {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.ariaLiveMode = "polite";
    this.for = undefined;
    this.fullWidth = false;
    this.message = undefined;
    this.status = "";
  }
  componentDidLoad() {
    onComponentRequiredPropUndefined([{ prop: this.message, propName: "message" }], "Input Validation");
  }
  render() {
    const displayIcon = this.status !== "" ? icon[this.status] : "";
    const id = getInputValidationTextID(this.for);
    return (hAsync(Host, { class: {
        [this.status]: this.status !== "",
        ["fullwidth"]: this.fullWidth,
      } }, displayIcon !== "" && (hAsync("span", { class: {
        ["status-icon"]: true,
        [`icon-${this.status}`]: true,
      }, innerHTML: displayIcon })), hAsync("ic-typography", { variant: "caption", class: "statustext" }, hAsync("span", { "aria-live": this.ariaLiveMode, id: id }, this.message)), hAsync("slot", { name: "validation-message-adornment" })));
  }
  get el() { return getElement(this); }
  static get style() { return icInputValidationCss; }
  static get cmpMeta() { return {
    "$flags$": 4,
    "$tagName$": "ic-input-validation",
    "$members$": {
      "ariaLiveMode": [1, "aria-live-mode"],
      "for": [1],
      "fullWidth": [4, "full-width"],
      "message": [1],
      "status": [1]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": []
  }; }
}

const icLinkCss = "/*!@html*/html.sc-ic-link{line-height:1.15;-webkit-text-size-adjust:100%}/*!@body*/body.sc-ic-link{margin:0}/*!@main*/main.sc-ic-link{display:block}/*!@h1*/h1.sc-ic-link{font-size:2em;margin:0.67em 0}/*!@hr*/hr.sc-ic-link{box-sizing:content-box;height:0;overflow:visible}/*!@pre*/pre.sc-ic-link{font-family:monospace, monospace;font-size:1em}/*!@a*/a.sc-ic-link{background-color:transparent}/*!@abbr[title]*/abbr[title].sc-ic-link{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}/*!@b,\nstrong*/b.sc-ic-link,strong.sc-ic-link{font-weight:bolder}/*!@code,\nkbd,\nsamp*/code.sc-ic-link,kbd.sc-ic-link,samp.sc-ic-link{font-family:monospace, monospace;font-size:1em}/*!@small*/small.sc-ic-link{font-size:80%}/*!@sub,\nsup*/sub.sc-ic-link,sup.sc-ic-link{font-size:75%;line-height:0;position:relative;vertical-align:baseline}/*!@sub*/sub.sc-ic-link{bottom:-0.25em}/*!@sup*/sup.sc-ic-link{top:-0.5em}/*!@img*/img.sc-ic-link{border-style:none}/*!@button,\ninput,\noptgroup,\nselect,\ntextarea*/button.sc-ic-link,input.sc-ic-link,optgroup.sc-ic-link,select.sc-ic-link,textarea.sc-ic-link{font-family:inherit;font-size:100%;line-height:1.15;margin:0}/*!@button,\ninput*/button.sc-ic-link,input.sc-ic-link{overflow:visible}/*!@button,\nselect*/button.sc-ic-link,select.sc-ic-link{text-transform:none}/*!@button,\n[type=\"button\"],\n[type=\"reset\"],\n[type=\"submit\"]*/button.sc-ic-link,[type=\"button\"].sc-ic-link,[type=\"reset\"].sc-ic-link,[type=\"submit\"].sc-ic-link{-webkit-appearance:button}/*!@button::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner*/button.sc-ic-link::-moz-focus-inner,[type=\"button\"].sc-ic-link::-moz-focus-inner,[type=\"reset\"].sc-ic-link::-moz-focus-inner,[type=\"submit\"].sc-ic-link::-moz-focus-inner{border-style:none;padding:0}/*!@button:-moz-focusring,\n[type=\"button\"]:-moz-focusring,\n[type=\"reset\"]:-moz-focusring,\n[type=\"submit\"]:-moz-focusring*/button.sc-ic-link:-moz-focusring,[type=\"button\"].sc-ic-link:-moz-focusring,[type=\"reset\"].sc-ic-link:-moz-focusring,[type=\"submit\"].sc-ic-link:-moz-focusring{outline:1px dotted ButtonText}/*!@fieldset*/fieldset.sc-ic-link{padding:0.35em 0.75em 0.625em}/*!@legend*/legend.sc-ic-link{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}/*!@progress*/progress.sc-ic-link{vertical-align:baseline}/*!@textarea*/textarea.sc-ic-link{overflow:auto}/*!@[type=\"checkbox\"],\n[type=\"radio\"]*/[type=\"checkbox\"].sc-ic-link,[type=\"radio\"].sc-ic-link{box-sizing:border-box;padding:0}/*!@[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button*/[type=\"number\"].sc-ic-link::-webkit-inner-spin-button,[type=\"number\"].sc-ic-link::-webkit-outer-spin-button{height:auto}/*!@[type=\"search\"]*/[type=\"search\"].sc-ic-link{-webkit-appearance:textfield;outline-offset:-2px}/*!@[type=\"search\"]::-webkit-search-decoration*/[type=\"search\"].sc-ic-link::-webkit-search-decoration{-webkit-appearance:none}/*!@::-webkit-file-upload-button*/.sc-ic-link::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}/*!@details*/details.sc-ic-link{display:block}/*!@summary*/summary.sc-ic-link{display:list-item}/*!@template*/template.sc-ic-link{display:none}/*!@[hidden]*/[hidden].sc-ic-link{display:none}/*!@html,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo*/html.sc-ic-link,body.sc-ic-link,div.sc-ic-link,span.sc-ic-link,applet.sc-ic-link,object.sc-ic-link,iframe.sc-ic-link,h1.sc-ic-link,h2.sc-ic-link,h3.sc-ic-link,h4.sc-ic-link,h5.sc-ic-link,h6.sc-ic-link,p.sc-ic-link,blockquote.sc-ic-link,pre.sc-ic-link,a.sc-ic-link,abbr.sc-ic-link,acronym.sc-ic-link,address.sc-ic-link,big.sc-ic-link,cite.sc-ic-link,code.sc-ic-link,del.sc-ic-link,dfn.sc-ic-link,em.sc-ic-link,img.sc-ic-link,ins.sc-ic-link,kbd.sc-ic-link,q.sc-ic-link,s.sc-ic-link,samp.sc-ic-link,small.sc-ic-link,strike.sc-ic-link,strong.sc-ic-link,sub.sc-ic-link,sup.sc-ic-link,tt.sc-ic-link,var.sc-ic-link,b.sc-ic-link,u.sc-ic-link,i.sc-ic-link,center.sc-ic-link,dl.sc-ic-link,dt.sc-ic-link,dd.sc-ic-link,ol.sc-ic-link,ul.sc-ic-link,li.sc-ic-link,fieldset.sc-ic-link,form.sc-ic-link,label.sc-ic-link,legend.sc-ic-link,table.sc-ic-link,caption.sc-ic-link,tbody.sc-ic-link,tfoot.sc-ic-link,thead.sc-ic-link,tr.sc-ic-link,th.sc-ic-link,td.sc-ic-link,article.sc-ic-link,aside.sc-ic-link,canvas.sc-ic-link,details.sc-ic-link,embed.sc-ic-link,figure.sc-ic-link,figcaption.sc-ic-link,footer.sc-ic-link,header.sc-ic-link,hgroup.sc-ic-link,menu.sc-ic-link,nav.sc-ic-link,output.sc-ic-link,ruby.sc-ic-link,section.sc-ic-link,summary.sc-ic-link,time.sc-ic-link,mark.sc-ic-link,audio.sc-ic-link,video.sc-ic-link{margin:0;padding:0;border:0;font-size:100%;font-style:inherit;vertical-align:baseline}/*!@:host(.link) .ic-link,\n:host(.link) ::slotted(a)*/.link.sc-ic-link-h .ic-link.sc-ic-link,.sc-ic-link-h.link .sc-ic-link-s>a{color:var(--ic-hyperlink);text-decoration:underline;font-weight:var(--ic-font-weight-bold);transition:var(--ic-easing-transition-fast)}/*!@:host(.link.dark) .ic-link.dark,\n:host(.link.dark) ::slotted(a)*/.link.dark.sc-ic-link-h .ic-link.dark.sc-ic-link,.sc-ic-link-h.link.dark .sc-ic-link-s>a{color:var(--ic-color-primary-text)}/*!@:host(.link.light) .ic-link.light,\n:host(.link.light) ::slotted(a)*/.link.light.sc-ic-link-h .ic-link.light.sc-ic-link,.sc-ic-link-h.link.light .sc-ic-link-s>a{color:var(--ic-color-white-text)}/*!@:host(.link) .ic-link:visited,\n:host(.link) ::slotted(a:visited)*/.link.sc-ic-link-h .ic-link.sc-ic-link:visited,.sc-ic-link-h.link .sc-ic-link-s>a:visited{color:var(--ic-hyperlink-visited)}/*!@:host(.link) .ic-link:hover,\n:host(.link) .ic-link:focus,\n:host(.link) ::slotted(a:hover),\n:host(.link) ::slotted(a:focus)*/.link.sc-ic-link-h .ic-link.sc-ic-link:hover,.link.sc-ic-link-h .ic-link.sc-ic-link:focus,.sc-ic-link-h.link .sc-ic-link-s>a:hover,.sc-ic-link-h.link .sc-ic-link-s>a:focus{outline:none;border-bottom:0.25rem solid !important;margin-bottom:-0.25rem !important;text-decoration:none}@supports (text-decoration-thickness: 25%){/*!@:host(.link) .ic-link:hover,\n  :host(.link) .ic-link:focus,\n  :host(.link) ::slotted(a:hover),\n  :host(.link) ::slotted(a:focus)*/.link.sc-ic-link-h .ic-link.sc-ic-link:hover,.link.sc-ic-link-h .ic-link.sc-ic-link:focus,.sc-ic-link-h.link .sc-ic-link-s>a:hover,.sc-ic-link-h.link .sc-ic-link-s>a:focus{text-decoration-line:underline;text-decoration-thickness:25%;text-underline-offset:25%;border-bottom:0 !important;margin-bottom:0 !important}}/*!@:host(.link) .ic-link:active,\n:host(.link) .ic-link:focus:active,\n:host(.link) .ic-link:visited:active,\n:host(.link) ::slotted(a:active),\n:host(.link) ::slotted(a:focus:active),\n:host(.link) ::slotted(a:visited:active)*/.link.sc-ic-link-h .ic-link.sc-ic-link:active,.link.sc-ic-link-h .ic-link.sc-ic-link:focus:active,.link.sc-ic-link-h .ic-link.sc-ic-link:visited:active,.sc-ic-link-h.link .sc-ic-link-s>a:active,.sc-ic-link-h.link .sc-ic-link-s>a:focus:active,.sc-ic-link-h.link .sc-ic-link-s>a:visited:active{text-decoration:none}/*!@.ic-link-open-in-new-icon*/.ic-link-open-in-new-icon.sc-ic-link{vertical-align:middle;margin-left:var(--ic-space-xxs)}/*!@.ic-link > .ic-link-open-in-new-icon*/.ic-link.sc-ic-link>.ic-link-open-in-new-icon.sc-ic-link{fill:var(--ic-hyperlink)}/*!@.ic-link.dark > .ic-link-open-in-new-icon*/.ic-link.dark.sc-ic-link>.ic-link-open-in-new-icon.sc-ic-link{fill:var(--ic-color-primary-text)}/*!@.ic-link.light > .ic-link-open-in-new-icon*/.ic-link.light.sc-ic-link>.ic-link-open-in-new-icon.sc-ic-link{fill:var(--ic-color-white-text)}/*!@.ic-link-open-in-new-icon > svg*/.ic-link-open-in-new-icon.sc-ic-link>svg.sc-ic-link{width:var(--ic-space-md);height:var(--ic-space-md);fill:currentcolor}/*!@.ic-link:visited > .ic-link-open-in-new-icon*/.ic-link.sc-ic-link:visited>.ic-link-open-in-new-icon.sc-ic-link{fill:var(--ic-hyperlink-visited)}/*!@.ic-link.light:visited > .ic-link-open-in-new-icon*/.ic-link.light.sc-ic-link:visited>.ic-link-open-in-new-icon.sc-ic-link{fill:var(--ic-hyperlink-contrast-visited)}/*!@:host(.breadcrumb-link) .ic-link*/.breadcrumb-link.sc-ic-link-h .ic-link.sc-ic-link{display:var(--breadcrumb-link-display);align-items:var(--breadcrumb-link-align-items);gap:var(--breadcrumb-link-gap)}/*!@:host(.breadcrumb-link) .ic-link ::slotted(.back-icon)*/.sc-ic-link-h.breadcrumb-link .ic-link .sc-ic-link-s>.back-icon{height:var(--ic-space-lg);width:var(--ic-space-lg)}/*!@:host(.breadcrumb-link.current-page) a,\n:host(.breadcrumb-link.current-page) ::slotted(a)*/.breadcrumb-link.current-page.sc-ic-link-h a.sc-ic-link,.sc-ic-link-h.breadcrumb-link.current-page .sc-ic-link-s>a{font-weight:normal;color:inherit;text-decoration:none;display:flex;align-items:center}/*!@:host(.breadcrumb-link.current-page) .ic-link,\n:host(.breadcrumb-link.current-page) ::slotted(a:focus)*/.breadcrumb-link.current-page.sc-ic-link-h .ic-link.sc-ic-link,.sc-ic-link-h.breadcrumb-link.current-page .sc-ic-link-s>a:focus{outline:var(--ic-hc-focus-outline);text-decoration:none}/*!@:host(.breadcrumb-link.current-page) .ic-link:visited*/.breadcrumb-link.current-page.sc-ic-link-h .ic-link.sc-ic-link:visited{color:var(--ic-color-primary-text)}";

/**
 * @slot router-item - Handle routing by nesting your routes in this slot.
 */
class Link {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.inheritedAttributes = {};
    this.appearance = "default";
    this.download = false;
    this.href = null;
    this.hreflang = undefined;
    this.referrerpolicy = undefined;
    this.rel = undefined;
    this.showIcon = undefined;
    this.target = undefined;
  }
  componentWillLoad() {
    this.inheritedAttributes = inheritAttributes(this.el, IC_INHERITED_ARIA);
    this.updateTheme();
  }
  themeChangeHandler(ev) {
    const theme = ev.detail;
    this.updateTheme(theme.mode);
  }
  /**
   * Sets focus on the link.
   */
  async setFocus() {
    if (this.el.shadowRoot.querySelector("a")) {
      this.el.shadowRoot.querySelector("a").focus();
    }
  }
  updateTheme(newTheme = null) {
    const theme = getThemeFromContext(this.el, newTheme || null);
    switch (theme) {
      case IcThemeForegroundEnum.Light:
        this.appearance = IcThemeForegroundEnum.Light;
        break;
      case IcThemeForegroundEnum.Dark:
        this.appearance = IcThemeForegroundEnum.Dark;
        break;
    }
  }
  hasRouterSlot() {
    this.routerSlot = this.el.querySelector('[slot="router-item"]');
    if (this.routerSlot) {
      this.routerSlot.ariaLabel = this.routerSlot.textContent;
    }
    return !!this.routerSlot;
  }
  render() {
    const { download, href, hreflang, referrerpolicy, rel, target, showIcon, appearance, } = this;
    return (hAsync(Host, { class: { ["link"]: true, [`${appearance}`]: true } }, this.hasRouterSlot() ? (hAsync("slot", { name: "router-item" })) : (hAsync("a", Object.assign({ class: {
        ["ic-link"]: href !== null,
        [`${appearance}`]: href !== null,
      }, download: download !== false ? download : null, href: href, hrefLang: hreflang, referrerPolicy: referrerpolicy, rel: rel, target: target, tabindex: href !== null ? "0" : "-1" }, this.inheritedAttributes), hAsync("slot", null), (showIcon || target === "_blank") && (hAsync("span", { class: "ic-link-open-in-new-icon", innerHTML: OpenInNew }))))));
  }
  static get delegatesFocus() { return true; }
  get el() { return getElement(this); }
  static get style() { return icLinkCss; }
  static get cmpMeta() { return {
    "$flags$": 25,
    "$tagName$": "ic-link",
    "$members$": {
      "appearance": [1025],
      "download": [8],
      "href": [1],
      "hreflang": [1],
      "referrerpolicy": [1],
      "rel": [1],
      "showIcon": [4, "show-icon"],
      "target": [1],
      "setFocus": [64]
    },
    "$listeners$": [[4, "themeChange", "themeChangeHandler"]],
    "$lazyBundleId$": "-",
    "$attrsToReflect$": []
  }; }
}

const icLoadingIndicatorCss = "/*!@html*/html.sc-ic-loading-indicator{line-height:1.15;-webkit-text-size-adjust:100%}/*!@body*/body.sc-ic-loading-indicator{margin:0}/*!@main*/main.sc-ic-loading-indicator{display:block}/*!@h1*/h1.sc-ic-loading-indicator{font-size:2em;margin:0.67em 0}/*!@hr*/hr.sc-ic-loading-indicator{box-sizing:content-box;height:0;overflow:visible}/*!@pre*/pre.sc-ic-loading-indicator{font-family:monospace, monospace;font-size:1em}/*!@a*/a.sc-ic-loading-indicator{background-color:transparent}/*!@abbr[title]*/abbr[title].sc-ic-loading-indicator{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}/*!@b,\nstrong*/b.sc-ic-loading-indicator,strong.sc-ic-loading-indicator{font-weight:bolder}/*!@code,\nkbd,\nsamp*/code.sc-ic-loading-indicator,kbd.sc-ic-loading-indicator,samp.sc-ic-loading-indicator{font-family:monospace, monospace;font-size:1em}/*!@small*/small.sc-ic-loading-indicator{font-size:80%}/*!@sub,\nsup*/sub.sc-ic-loading-indicator,sup.sc-ic-loading-indicator{font-size:75%;line-height:0;position:relative;vertical-align:baseline}/*!@sub*/sub.sc-ic-loading-indicator{bottom:-0.25em}/*!@sup*/sup.sc-ic-loading-indicator{top:-0.5em}/*!@img*/img.sc-ic-loading-indicator{border-style:none}/*!@button,\ninput,\noptgroup,\nselect,\ntextarea*/button.sc-ic-loading-indicator,input.sc-ic-loading-indicator,optgroup.sc-ic-loading-indicator,select.sc-ic-loading-indicator,textarea.sc-ic-loading-indicator{font-family:inherit;font-size:100%;line-height:1.15;margin:0}/*!@button,\ninput*/button.sc-ic-loading-indicator,input.sc-ic-loading-indicator{overflow:visible}/*!@button,\nselect*/button.sc-ic-loading-indicator,select.sc-ic-loading-indicator{text-transform:none}/*!@button,\n[type=\"button\"],\n[type=\"reset\"],\n[type=\"submit\"]*/button.sc-ic-loading-indicator,[type=\"button\"].sc-ic-loading-indicator,[type=\"reset\"].sc-ic-loading-indicator,[type=\"submit\"].sc-ic-loading-indicator{-webkit-appearance:button}/*!@button::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner*/button.sc-ic-loading-indicator::-moz-focus-inner,[type=\"button\"].sc-ic-loading-indicator::-moz-focus-inner,[type=\"reset\"].sc-ic-loading-indicator::-moz-focus-inner,[type=\"submit\"].sc-ic-loading-indicator::-moz-focus-inner{border-style:none;padding:0}/*!@button:-moz-focusring,\n[type=\"button\"]:-moz-focusring,\n[type=\"reset\"]:-moz-focusring,\n[type=\"submit\"]:-moz-focusring*/button.sc-ic-loading-indicator:-moz-focusring,[type=\"button\"].sc-ic-loading-indicator:-moz-focusring,[type=\"reset\"].sc-ic-loading-indicator:-moz-focusring,[type=\"submit\"].sc-ic-loading-indicator:-moz-focusring{outline:1px dotted ButtonText}/*!@fieldset*/fieldset.sc-ic-loading-indicator{padding:0.35em 0.75em 0.625em}/*!@legend*/legend.sc-ic-loading-indicator{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}/*!@progress*/progress.sc-ic-loading-indicator{vertical-align:baseline}/*!@textarea*/textarea.sc-ic-loading-indicator{overflow:auto}/*!@[type=\"checkbox\"],\n[type=\"radio\"]*/[type=\"checkbox\"].sc-ic-loading-indicator,[type=\"radio\"].sc-ic-loading-indicator{box-sizing:border-box;padding:0}/*!@[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button*/[type=\"number\"].sc-ic-loading-indicator::-webkit-inner-spin-button,[type=\"number\"].sc-ic-loading-indicator::-webkit-outer-spin-button{height:auto}/*!@[type=\"search\"]*/[type=\"search\"].sc-ic-loading-indicator{-webkit-appearance:textfield;outline-offset:-2px}/*!@[type=\"search\"]::-webkit-search-decoration*/[type=\"search\"].sc-ic-loading-indicator::-webkit-search-decoration{-webkit-appearance:none}/*!@::-webkit-file-upload-button*/.sc-ic-loading-indicator::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}/*!@details*/details.sc-ic-loading-indicator{display:block}/*!@summary*/summary.sc-ic-loading-indicator{display:list-item}/*!@template*/template.sc-ic-loading-indicator{display:none}/*!@[hidden]*/[hidden].sc-ic-loading-indicator{display:none}/*!@html,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo*/html.sc-ic-loading-indicator,body.sc-ic-loading-indicator,div.sc-ic-loading-indicator,span.sc-ic-loading-indicator,applet.sc-ic-loading-indicator,object.sc-ic-loading-indicator,iframe.sc-ic-loading-indicator,h1.sc-ic-loading-indicator,h2.sc-ic-loading-indicator,h3.sc-ic-loading-indicator,h4.sc-ic-loading-indicator,h5.sc-ic-loading-indicator,h6.sc-ic-loading-indicator,p.sc-ic-loading-indicator,blockquote.sc-ic-loading-indicator,pre.sc-ic-loading-indicator,a.sc-ic-loading-indicator,abbr.sc-ic-loading-indicator,acronym.sc-ic-loading-indicator,address.sc-ic-loading-indicator,big.sc-ic-loading-indicator,cite.sc-ic-loading-indicator,code.sc-ic-loading-indicator,del.sc-ic-loading-indicator,dfn.sc-ic-loading-indicator,em.sc-ic-loading-indicator,img.sc-ic-loading-indicator,ins.sc-ic-loading-indicator,kbd.sc-ic-loading-indicator,q.sc-ic-loading-indicator,s.sc-ic-loading-indicator,samp.sc-ic-loading-indicator,small.sc-ic-loading-indicator,strike.sc-ic-loading-indicator,strong.sc-ic-loading-indicator,sub.sc-ic-loading-indicator,sup.sc-ic-loading-indicator,tt.sc-ic-loading-indicator,var.sc-ic-loading-indicator,b.sc-ic-loading-indicator,u.sc-ic-loading-indicator,i.sc-ic-loading-indicator,center.sc-ic-loading-indicator,dl.sc-ic-loading-indicator,dt.sc-ic-loading-indicator,dd.sc-ic-loading-indicator,ol.sc-ic-loading-indicator,ul.sc-ic-loading-indicator,li.sc-ic-loading-indicator,fieldset.sc-ic-loading-indicator,form.sc-ic-loading-indicator,label.sc-ic-loading-indicator,legend.sc-ic-loading-indicator,table.sc-ic-loading-indicator,caption.sc-ic-loading-indicator,tbody.sc-ic-loading-indicator,tfoot.sc-ic-loading-indicator,thead.sc-ic-loading-indicator,tr.sc-ic-loading-indicator,th.sc-ic-loading-indicator,td.sc-ic-loading-indicator,article.sc-ic-loading-indicator,aside.sc-ic-loading-indicator,canvas.sc-ic-loading-indicator,details.sc-ic-loading-indicator,embed.sc-ic-loading-indicator,figure.sc-ic-loading-indicator,figcaption.sc-ic-loading-indicator,footer.sc-ic-loading-indicator,header.sc-ic-loading-indicator,hgroup.sc-ic-loading-indicator,menu.sc-ic-loading-indicator,nav.sc-ic-loading-indicator,output.sc-ic-loading-indicator,ruby.sc-ic-loading-indicator,section.sc-ic-loading-indicator,summary.sc-ic-loading-indicator,time.sc-ic-loading-indicator,mark.sc-ic-loading-indicator,audio.sc-ic-loading-indicator,video.sc-ic-loading-indicator{margin:0;padding:0;border:0;font-size:100%;font-style:inherit;vertical-align:baseline}/*!@:host*/.sc-ic-loading-indicator-h{display:block;--linear-border-radius:0.25rem;--inner-color:var(--ic-action-default);--outer-color:var(--ic-architectural-100);--label-color:var(--ic-color-primary-text);--margin:none;--linear-line-height:var(--ic-space-xs)}/*!@:host(.light)*/.light.sc-ic-loading-indicator-h{--inner-color:var(--ic-architectural-white);--outer-color:var(--ic-architectural-800);--label-color:var(--ic-architectural-white)}/*!@.ic-loading-container*/.ic-loading-container.sc-ic-loading-indicator{display:flex;flex-direction:column;justify-content:center;align-items:center}/*!@:host([size=\"small\"])*/[size=\"small\"].sc-ic-loading-indicator-h{--circular-diameter:2.5rem;--linear-line-height:var(--ic-space-xxs)}/*!@:host([size=\"default\"])*/[size=\"default\"].sc-ic-loading-indicator-h{--circular-diameter:5rem}/*!@:host([size=\"large\"])*/[size=\"large\"].sc-ic-loading-indicator-h{--circular-diameter:7.5rem}/*!@:host([size=\"icon\"])*/[size=\"icon\"].sc-ic-loading-indicator-h{display:inline-block;--margin:var(--ic-space-xxxs);--circular-diameter:1.25rem}/*!@:host(.label)*/.label.sc-ic-loading-indicator-h{--margin:0 0 var(--ic-space-xs) 0}/*!@.ic-loading-label*/.ic-loading-label.sc-ic-loading-indicator{white-space:nowrap;color:var(--label-color);margin-left:var(--label-margin-left)}/*!@.ic-loading-circular-outer*/.ic-loading-circular-outer.sc-ic-loading-indicator{height:var(--circular-diameter);width:var(--circular-diameter)}/*!@.ic-loading-circular-outer.indeterminate*/.ic-loading-circular-outer.indeterminate.sc-ic-loading-indicator{animation:circular-animation 1s linear;animation-iteration-count:infinite}@keyframes circular-animation{100%{transform:rotate(360deg)}}/*!@.ic-loading-circular-outer,\n.ic-loading-linear-outer*/.ic-loading-circular-outer.sc-ic-loading-indicator,.ic-loading-linear-outer.sc-ic-loading-indicator{margin:var(--margin)}/*!@.ic-loading-linear-outer*/.ic-loading-linear-outer.sc-ic-loading-indicator{background-color:var(--outer-color);height:var(--linear-line-height);width:100%;border-radius:var(--linear-border-radius);overflow:hidden}/*!@.ic-loading-linear-inner*/.ic-loading-linear-inner.sc-ic-loading-indicator{position:relative;height:100%;background-color:var(--inner-color);border-radius:var(--linear-border-radius)}/*!@.indeterminate > .ic-loading-linear-inner*/.indeterminate.sc-ic-loading-indicator>.ic-loading-linear-inner.sc-ic-loading-indicator{animation:linear-animation 2s infinite}/*!@.determinate > .ic-loading-linear-inner*/.determinate.sc-ic-loading-indicator>.ic-loading-linear-inner.sc-ic-loading-indicator{transition:width 0.5s;width:var(--linear-width)}/*!@:host(.full-width)*/.full-width.sc-ic-loading-indicator-h{--linear-border-radius:none}@keyframes linear-animation{0%{width:0%;left:-1%}25%{width:0%;left:-1%}50%{width:101%;left:-1%}75%{width:0%;left:101%}100%{width:0%;left:101%}}/*!@.ic-loading-circular-svg*/.ic-loading-circular-svg.sc-ic-loading-indicator{position:relative;width:100%;height:100%;transform:rotate(-90deg)}/*!@.ic-loading-circular-svg circle*/.ic-loading-circular-svg.sc-ic-loading-indicator circle.sc-ic-loading-indicator{width:100%;height:100%;fill:none;stroke:var(--outer-color);stroke-width:var(--circular-line-width);stroke-linecap:round}/*!@.ic-loading-circular-svg circle:nth-child(2)*/.ic-loading-circular-svg.sc-ic-loading-indicator circle.sc-ic-loading-indicator:nth-child(2){--circular-indeterminate:calc(\n    (0.25 * var(--stroke-dasharray)) - var(--stroke-dasharray)\n  );stroke-dasharray:var(--stroke-dasharray), var(--stroke-dasharray);stroke-dashoffset:var(--stroke-dashoffset, var(--circular-indeterminate));stroke:var(--compact-step-inner-color, var(--inner-color))}/*!@:host(.inner-label) .ic-loading-circular-inner*/.inner-label.sc-ic-loading-indicator-h .ic-loading-circular-inner.sc-ic-loading-indicator{display:grid}/*!@:host(.inner-label) .ic-loading-circular-svg,\n.inner-text*/.inner-label.sc-ic-loading-indicator-h .ic-loading-circular-svg.sc-ic-loading-indicator,.inner-text.sc-ic-loading-indicator{grid-column:1;grid-row:1}/*!@:host(.not-required.compact-step-progress-indicator)\n  .ic-loading-circular-svg\n  circle:nth-child(2)*/.not-required.compact-step-progress-indicator.sc-ic-loading-indicator-h .ic-loading-circular-svg.sc-ic-loading-indicator circle.sc-ic-loading-indicator:nth-child(2){stroke:var(--ic-architectural-300)}/*!@.inner-text*/.inner-text.sc-ic-loading-indicator{display:flex;align-items:center;justify-content:center;width:var(--ic-space-lg);height:inherit;overflow:hidden;margin:auto;color:var(--ic-status-info)}/*!@:host(.not-required.compact-step-progress-indicator) .inner-text*/.not-required.compact-step-progress-indicator.sc-ic-loading-indicator-h .inner-text.sc-ic-loading-indicator{color:var(--ic-color-tertiary-text)}@media (forced-colors: active){/*!@.indeterminate > .ic-loading-circular-inner*/.indeterminate.sc-ic-loading-indicator>.ic-loading-circular-inner.sc-ic-loading-indicator{forced-color-adjust:none}/*!@.ic-loading-linear-outer*/.ic-loading-linear-outer.sc-ic-loading-indicator{border:var(--ic-hc-border)}/*!@.ic-loading-linear-inner*/.ic-loading-linear-inner.sc-ic-loading-indicator{background-color:canvastext}/*!@.ic-loading-circular-svg circle*/.ic-loading-circular-svg.sc-ic-loading-indicator circle.sc-ic-loading-indicator{stroke:Background}/*!@.ic-loading-circular-svg circle:nth-child(2)*/.ic-loading-circular-svg.sc-ic-loading-indicator circle.sc-ic-loading-indicator:nth-child(2){stroke:canvastext}/*!@:host(.not-required.compact-step-progress-indicator)\n    .ic-loading-circular-svg\n    circle:nth-child(2)*/.not-required.compact-step-progress-indicator.sc-ic-loading-indicator-h .ic-loading-circular-svg.sc-ic-loading-indicator circle.sc-ic-loading-indicator:nth-child(2){stroke:GrayText}}";

class LoadingIndicator {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.updateCircularProgressMeter = () => {
      if (!this.indeterminate) {
        this.circularMeter.style.setProperty("--progress-value", String(this.progress));
      }
    };
    this.getLabel = (labelIndex, setLabel) => {
      return new Promise(() => {
        this.interval = setInterval(() => {
          if (labelIndex < this.labelList.length - 1) {
            labelIndex++;
          }
          else {
            labelIndex = 0;
          }
          setLabel(this.labelList[labelIndex]);
        }, this.labelDuration);
      });
    };
    this.getLabelVariant = () => {
      var _a;
      let variant = "h4";
      const width = (_a = this.outerElement) === null || _a === void 0 ? void 0 : _a.offsetWidth;
      if (this.size === "small" || (this.type === "circular" && width < 60)) {
        variant = "label";
      }
      else if (this.size === "large" ||
        (this.type === "circular" && width >= 120)) {
        variant = "h2";
      }
      return variant;
    };
    // Sets the circular indicator line width - accounting for the circle size being altered using the CSS custom property
    this.setCircleLineWidth = () => {
      const { offsetWidth: width } = this.outerElement;
      const compactStepCircularLineWidth = this.el.classList.contains("compact-step-progress-indicator")
        ? 40
        : 0;
      const toastDismissTimerCircularLineWidth = this.el.classList.contains("toast-dismiss-timer")
        ? 20
        : 0;
      if (width ||
        compactStepCircularLineWidth ||
        toastDismissTimerCircularLineWidth) {
        this.circularLineWidth =
          (compactStepCircularLineWidth ||
            toastDismissTimerCircularLineWidth ||
            width) * 0.1;
        this.circularDiameter =
          compactStepCircularLineWidth ||
            toastDismissTimerCircularLineWidth ||
            width;
        this.outerElement.style.setProperty("--circular-line-width", `${this.circularLineWidth}px`);
      }
    };
    this.setLinearDeterminateWidth = () => {
      if (!this.innerElement)
        return;
      // Ensure progress cannot be out of bounds
      const progress = Math.min(this.max, Math.max(this.min, this.progress));
      const proportion = (progress - this.min) / (this.max - this.min);
      this.showSecond = proportion > 0.5;
      if (this.showSecond) {
        this.innerElement.classList.remove("clip");
      }
      else {
        this.innerElement.classList.add("clip");
      }
      this.innerElement.style.setProperty("--linear-width", `${proportion * 100}%`);
    };
    this.calcOuterClass = () => {
      let cls = `ic-loading-${this.type}-outer`;
      cls += this.indeterminate ? " indeterminate" : " determinate";
      return cls;
    };
    this.updateLabel = () => {
      if (isPropDefined(this.label)) {
        this.labelList = this.label.split("/");
        const labelIndex = 0;
        this.indicatorLabel = this.labelList[labelIndex];
        if (this.labelList.length > 1) {
          this.getLabel(labelIndex, (label) => {
            this.indicatorLabel = label;
          });
        }
      }
    };
    this.setCircleXY = () => {
      if (this.circularDiameter > 0) {
        const r = this.circularDiameter / 2;
        const x = r;
        const y = r;
        const nextRadius = r - this.circularLineWidth / 2;
        this.setDashSteps(nextRadius);
        return { x, y, r: nextRadius };
      }
      return { x: 0, y: 0, r: 0 };
    };
    this.setDashSteps = (radius) => {
      const dashArray = 2 * Math.PI * radius;
      const progress = Math.min(Math.max(this.progress, this.min), this.max);
      const proportion = -1 - (progress - this.min) / (this.max - this.min);
      this.circularMeter.style.setProperty("--stroke-dasharray", `${dashArray}px`);
      if (!this.indeterminate) {
        this.circularMeter.style.setProperty("--circular-steps-max", String(this.max));
        this.circularMeter.style.setProperty("--stroke-dashoffset", `${proportion * dashArray}px`);
      }
    };
    this.circularDiameter = undefined;
    this.circularLineWidth = undefined;
    this.indeterminate = undefined;
    this.indicatorLabel = undefined;
    this.showSecond = false;
    this.appearance = "dark";
    this.description = "Loading";
    this.fullWidth = false;
    this.innerLabel = undefined;
    this.labelDuration = 8000;
    this.max = 100;
    this.min = 0;
    this.size = "default";
    this.type = "circular";
    this.label = undefined;
    this.progress = undefined;
  }
  watchPropHandler() {
    this.updateLabel();
  }
  watchProgressHandler() {
    if (this.type === "circular") {
      this.updateCircularProgressMeter();
    }
  }
  disconnectedCallback() {
    clearInterval(this.interval);
  }
  componentWillLoad() {
    this.indeterminate = this.progress === undefined;
    this.updateLabel();
  }
  componentDidLoad() {
    if (this.type === "circular") {
      this.setCircleLineWidth();
      this.circularMeter = this.el.shadowRoot.querySelector(".ic-loading-circular-svg circle:nth-child(2)");
      this.updateCircularProgressMeter();
    }
    if (Number(this.progress) >= 0 && this.type === "linear") {
      this.setLinearDeterminateWidth();
    }
  }
  componentWillUpdate() {
    this.indeterminate = this.progress === undefined;
  }
  componentDidUpdate() {
    if (Number(this.progress) >= 0 && this.type === "linear") {
      this.setLinearDeterminateWidth();
    }
  }
  render() {
    const { appearance, label, description, size, fullWidth, innerLabel } = this;
    const { x, y, r } = this.setCircleXY();
    return (hAsync(Host, { class: {
        ["light"]: appearance === IcThemeForegroundEnum.Light,
        ["label"]: !!label,
        ["full-width"]: fullWidth,
        ["inner-label"]: !!innerLabel,
      } }, hAsync("div", { class: "ic-loading-container" }, hAsync("div", { ref: (el) => (this.outerElement = el), class: this.calcOuterClass(), role: "progressbar", "aria-labelledby": this.label && this.size !== "icon" && "ic-loading-label", "aria-label": description, "aria-valuenow": this.progress, "aria-valuemin": this.min, "aria-valuemax": this.max }, hAsync("div", { ref: (el) => (this.innerElement = el), class: `ic-loading-${this.type}-inner` }, this.innerLabel &&
      this.innerLabel !== undefined &&
      this.size === "small" && (hAsync("ic-typography", { variant: "subtitle-small", class: "inner-text" }, this.innerLabel)), this.type === "circular" && (hAsync("svg", { class: "ic-loading-circular-svg", viewBox: `0 0 ${this.circularDiameter || 0} ${this.circularDiameter || 0}` }, hAsync("circle", { cx: `${x}`, cy: `${y}`, r: `${r}` }), hAsync("circle", { cx: `${x}`, cy: `${y}`, r: `${r}` }))))), label && size !== "icon" && (hAsync("ic-typography", { id: "ic-loading-label", class: "ic-loading-label", role: "status", variant: this.getLabelVariant() }, hAsync("p", null, this.indicatorLabel))))));
  }
  get el() { return getElement(this); }
  static get watchers() { return {
    "label": ["watchPropHandler"],
    "progress": ["watchProgressHandler"]
  }; }
  static get style() { return icLoadingIndicatorCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "ic-loading-indicator",
    "$members$": {
      "appearance": [1],
      "description": [1],
      "fullWidth": [516, "full-width"],
      "innerLabel": [2, "inner-label"],
      "labelDuration": [2, "label-duration"],
      "max": [2],
      "min": [2],
      "size": [513],
      "type": [513],
      "label": [1],
      "progress": [2],
      "circularDiameter": [32],
      "circularLineWidth": [32],
      "indeterminate": [32],
      "indicatorLabel": [32],
      "showSecond": [32]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["fullWidth", "full-width"], ["size", "size"], ["type", "type"]]
  }; }
}

var top = 'top';
var bottom = 'bottom';
var right = 'right';
var left = 'left';
var auto = 'auto';
var basePlacements = [top, bottom, right, left];
var start = 'start';
var end = 'end';
var clippingParents = 'clippingParents';
var viewport = 'viewport';
var popper = 'popper';
var reference = 'reference';
var variationPlacements = /*#__PURE__*/basePlacements.reduce(function (acc, placement) {
  return acc.concat([placement + "-" + start, placement + "-" + end]);
}, []);
var placements = /*#__PURE__*/[].concat(basePlacements, [auto]).reduce(function (acc, placement) {
  return acc.concat([placement, placement + "-" + start, placement + "-" + end]);
}, []); // modifiers that need to read the DOM

var beforeRead = 'beforeRead';
var read = 'read';
var afterRead = 'afterRead'; // pure-logic modifiers

var beforeMain = 'beforeMain';
var main = 'main';
var afterMain = 'afterMain'; // modifier with the purpose to write to the DOM (or write into a framework state)

var beforeWrite = 'beforeWrite';
var write = 'write';
var afterWrite = 'afterWrite';
var modifierPhases = [beforeRead, read, afterRead, beforeMain, main, afterMain, beforeWrite, write, afterWrite];

function getNodeName(element) {
  return element ? (element.nodeName || '').toLowerCase() : null;
}

function getWindow(node) {
  if (node == null) {
    return window;
  }

  if (node.toString() !== '[object Window]') {
    var ownerDocument = node.ownerDocument;
    return ownerDocument ? ownerDocument.defaultView || window : window;
  }

  return node;
}

function isElement(node) {
  var OwnElement = getWindow(node).Element;
  return node instanceof OwnElement || node instanceof Element;
}

function isHTMLElement(node) {
  var OwnElement = getWindow(node).HTMLElement;
  return node instanceof OwnElement || node instanceof HTMLElement;
}

function isShadowRoot(node) {
  // IE 11 has no ShadowRoot
  if (typeof ShadowRoot === 'undefined') {
    return false;
  }

  var OwnElement = getWindow(node).ShadowRoot;
  return node instanceof OwnElement || node instanceof ShadowRoot;
}

// and applies them to the HTMLElements such as popper and arrow

function applyStyles(_ref) {
  var state = _ref.state;
  Object.keys(state.elements).forEach(function (name) {
    var style = state.styles[name] || {};
    var attributes = state.attributes[name] || {};
    var element = state.elements[name]; // arrow is optional + virtual elements

    if (!isHTMLElement(element) || !getNodeName(element)) {
      return;
    } // Flow doesn't support to extend this property, but it's the most
    // effective way to apply styles to an HTMLElement
    // $FlowFixMe[cannot-write]


    Object.assign(element.style, style);
    Object.keys(attributes).forEach(function (name) {
      var value = attributes[name];

      if (value === false) {
        element.removeAttribute(name);
      } else {
        element.setAttribute(name, value === true ? '' : value);
      }
    });
  });
}

function effect$2(_ref2) {
  var state = _ref2.state;
  var initialStyles = {
    popper: {
      position: state.options.strategy,
      left: '0',
      top: '0',
      margin: '0'
    },
    arrow: {
      position: 'absolute'
    },
    reference: {}
  };
  Object.assign(state.elements.popper.style, initialStyles.popper);
  state.styles = initialStyles;

  if (state.elements.arrow) {
    Object.assign(state.elements.arrow.style, initialStyles.arrow);
  }

  return function () {
    Object.keys(state.elements).forEach(function (name) {
      var element = state.elements[name];
      var attributes = state.attributes[name] || {};
      var styleProperties = Object.keys(state.styles.hasOwnProperty(name) ? state.styles[name] : initialStyles[name]); // Set all values to an empty string to unset them

      var style = styleProperties.reduce(function (style, property) {
        style[property] = '';
        return style;
      }, {}); // arrow is optional + virtual elements

      if (!isHTMLElement(element) || !getNodeName(element)) {
        return;
      }

      Object.assign(element.style, style);
      Object.keys(attributes).forEach(function (attribute) {
        element.removeAttribute(attribute);
      });
    });
  };
} // eslint-disable-next-line import/no-unused-modules


var applyStyles$1 = {
  name: 'applyStyles',
  enabled: true,
  phase: 'write',
  fn: applyStyles,
  effect: effect$2,
  requires: ['computeStyles']
};

function getBasePlacement(placement) {
  return placement.split('-')[0];
}

var max = Math.max;
var min = Math.min;
var round = Math.round;

function getUAString() {
  var uaData = navigator.userAgentData;

  if (uaData != null && uaData.brands && Array.isArray(uaData.brands)) {
    return uaData.brands.map(function (item) {
      return item.brand + "/" + item.version;
    }).join(' ');
  }

  return navigator.userAgent;
}

function isLayoutViewport() {
  return !/^((?!chrome|android).)*safari/i.test(getUAString());
}

function getBoundingClientRect(element, includeScale, isFixedStrategy) {
  if (includeScale === void 0) {
    includeScale = false;
  }

  if (isFixedStrategy === void 0) {
    isFixedStrategy = false;
  }

  var clientRect = element.getBoundingClientRect();
  var scaleX = 1;
  var scaleY = 1;

  if (includeScale && isHTMLElement(element)) {
    scaleX = element.offsetWidth > 0 ? round(clientRect.width) / element.offsetWidth || 1 : 1;
    scaleY = element.offsetHeight > 0 ? round(clientRect.height) / element.offsetHeight || 1 : 1;
  }

  var _ref = isElement(element) ? getWindow(element) : window,
      visualViewport = _ref.visualViewport;

  var addVisualOffsets = !isLayoutViewport() && isFixedStrategy;
  var x = (clientRect.left + (addVisualOffsets && visualViewport ? visualViewport.offsetLeft : 0)) / scaleX;
  var y = (clientRect.top + (addVisualOffsets && visualViewport ? visualViewport.offsetTop : 0)) / scaleY;
  var width = clientRect.width / scaleX;
  var height = clientRect.height / scaleY;
  return {
    width: width,
    height: height,
    top: y,
    right: x + width,
    bottom: y + height,
    left: x,
    x: x,
    y: y
  };
}

// means it doesn't take into account transforms.

function getLayoutRect(element) {
  var clientRect = getBoundingClientRect(element); // Use the clientRect sizes if it's not been transformed.
  // Fixes https://github.com/popperjs/popper-core/issues/1223

  var width = element.offsetWidth;
  var height = element.offsetHeight;

  if (Math.abs(clientRect.width - width) <= 1) {
    width = clientRect.width;
  }

  if (Math.abs(clientRect.height - height) <= 1) {
    height = clientRect.height;
  }

  return {
    x: element.offsetLeft,
    y: element.offsetTop,
    width: width,
    height: height
  };
}

function contains(parent, child) {
  var rootNode = child.getRootNode && child.getRootNode(); // First, attempt with faster native method

  if (parent.contains(child)) {
    return true;
  } // then fallback to custom implementation with Shadow DOM support
  else if (rootNode && isShadowRoot(rootNode)) {
      var next = child;

      do {
        if (next && parent.isSameNode(next)) {
          return true;
        } // $FlowFixMe[prop-missing]: need a better way to handle this...


        next = next.parentNode || next.host;
      } while (next);
    } // Give up, the result is false


  return false;
}

function getComputedStyle$1(element) {
  return getWindow(element).getComputedStyle(element);
}

function isTableElement(element) {
  return ['table', 'td', 'th'].indexOf(getNodeName(element)) >= 0;
}

function getDocumentElement(element) {
  // $FlowFixMe[incompatible-return]: assume body is always available
  return ((isElement(element) ? element.ownerDocument : // $FlowFixMe[prop-missing]
  element.document) || window.document).documentElement;
}

function getParentNode(element) {
  if (getNodeName(element) === 'html') {
    return element;
  }

  return (// this is a quicker (but less type safe) way to save quite some bytes from the bundle
    // $FlowFixMe[incompatible-return]
    // $FlowFixMe[prop-missing]
    element.assignedSlot || // step into the shadow DOM of the parent of a slotted node
    element.parentNode || ( // DOM Element detected
    isShadowRoot(element) ? element.host : null) || // ShadowRoot detected
    // $FlowFixMe[incompatible-call]: HTMLElement is a Node
    getDocumentElement(element) // fallback

  );
}

function getTrueOffsetParent(element) {
  if (!isHTMLElement(element) || // https://github.com/popperjs/popper-core/issues/837
  getComputedStyle$1(element).position === 'fixed') {
    return null;
  }

  return element.offsetParent;
} // `.offsetParent` reports `null` for fixed elements, while absolute elements
// return the containing block


function getContainingBlock(element) {
  var isFirefox = /firefox/i.test(getUAString());
  var isIE = /Trident/i.test(getUAString());

  if (isIE && isHTMLElement(element)) {
    // In IE 9, 10 and 11 fixed elements containing block is always established by the viewport
    var elementCss = getComputedStyle$1(element);

    if (elementCss.position === 'fixed') {
      return null;
    }
  }

  var currentNode = getParentNode(element);

  if (isShadowRoot(currentNode)) {
    currentNode = currentNode.host;
  }

  while (isHTMLElement(currentNode) && ['html', 'body'].indexOf(getNodeName(currentNode)) < 0) {
    var css = getComputedStyle$1(currentNode); // This is non-exhaustive but covers the most common CSS properties that
    // create a containing block.
    // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block

    if (css.transform !== 'none' || css.perspective !== 'none' || css.contain === 'paint' || ['transform', 'perspective'].indexOf(css.willChange) !== -1 || isFirefox && css.willChange === 'filter' || isFirefox && css.filter && css.filter !== 'none') {
      return currentNode;
    } else {
      currentNode = currentNode.parentNode;
    }
  }

  return null;
} // Gets the closest ancestor positioned element. Handles some edge cases,
// such as table ancestors and cross browser bugs.


function getOffsetParent(element) {
  var window = getWindow(element);
  var offsetParent = getTrueOffsetParent(element);

  while (offsetParent && isTableElement(offsetParent) && getComputedStyle$1(offsetParent).position === 'static') {
    offsetParent = getTrueOffsetParent(offsetParent);
  }

  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle$1(offsetParent).position === 'static')) {
    return window;
  }

  return offsetParent || getContainingBlock(element) || window;
}

function getMainAxisFromPlacement(placement) {
  return ['top', 'bottom'].indexOf(placement) >= 0 ? 'x' : 'y';
}

function within(min$1, value, max$1) {
  return max(min$1, min(value, max$1));
}
function withinMaxClamp(min, value, max) {
  var v = within(min, value, max);
  return v > max ? max : v;
}

function getFreshSideObject() {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0
  };
}

function mergePaddingObject(paddingObject) {
  return Object.assign({}, getFreshSideObject(), paddingObject);
}

function expandToHashMap(value, keys) {
  return keys.reduce(function (hashMap, key) {
    hashMap[key] = value;
    return hashMap;
  }, {});
}

var toPaddingObject = function toPaddingObject(padding, state) {
  padding = typeof padding === 'function' ? padding(Object.assign({}, state.rects, {
    placement: state.placement
  })) : padding;
  return mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements));
};

function arrow(_ref) {
  var _state$modifiersData$;

  var state = _ref.state,
      name = _ref.name,
      options = _ref.options;
  var arrowElement = state.elements.arrow;
  var popperOffsets = state.modifiersData.popperOffsets;
  var basePlacement = getBasePlacement(state.placement);
  var axis = getMainAxisFromPlacement(basePlacement);
  var isVertical = [left, right].indexOf(basePlacement) >= 0;
  var len = isVertical ? 'height' : 'width';

  if (!arrowElement || !popperOffsets) {
    return;
  }

  var paddingObject = toPaddingObject(options.padding, state);
  var arrowRect = getLayoutRect(arrowElement);
  var minProp = axis === 'y' ? top : left;
  var maxProp = axis === 'y' ? bottom : right;
  var endDiff = state.rects.reference[len] + state.rects.reference[axis] - popperOffsets[axis] - state.rects.popper[len];
  var startDiff = popperOffsets[axis] - state.rects.reference[axis];
  var arrowOffsetParent = getOffsetParent(arrowElement);
  var clientSize = arrowOffsetParent ? axis === 'y' ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;
  var centerToReference = endDiff / 2 - startDiff / 2; // Make sure the arrow doesn't overflow the popper if the center point is
  // outside of the popper bounds

  var min = paddingObject[minProp];
  var max = clientSize - arrowRect[len] - paddingObject[maxProp];
  var center = clientSize / 2 - arrowRect[len] / 2 + centerToReference;
  var offset = within(min, center, max); // Prevents breaking syntax highlighting...

  var axisProp = axis;
  state.modifiersData[name] = (_state$modifiersData$ = {}, _state$modifiersData$[axisProp] = offset, _state$modifiersData$.centerOffset = offset - center, _state$modifiersData$);
}

function effect$1(_ref2) {
  var state = _ref2.state,
      options = _ref2.options;
  var _options$element = options.element,
      arrowElement = _options$element === void 0 ? '[data-popper-arrow]' : _options$element;

  if (arrowElement == null) {
    return;
  } // CSS selector


  if (typeof arrowElement === 'string') {
    arrowElement = state.elements.popper.querySelector(arrowElement);

    if (!arrowElement) {
      return;
    }
  }

  if (!contains(state.elements.popper, arrowElement)) {
    return;
  }

  state.elements.arrow = arrowElement;
} // eslint-disable-next-line import/no-unused-modules


var arrow$1 = {
  name: 'arrow',
  enabled: true,
  phase: 'main',
  fn: arrow,
  effect: effect$1,
  requires: ['popperOffsets'],
  requiresIfExists: ['preventOverflow']
};

function getVariation(placement) {
  return placement.split('-')[1];
}

var unsetSides = {
  top: 'auto',
  right: 'auto',
  bottom: 'auto',
  left: 'auto'
}; // Round the offsets to the nearest suitable subpixel based on the DPR.
// Zooming can change the DPR, but it seems to report a value that will
// cleanly divide the values into the appropriate subpixels.

function roundOffsetsByDPR(_ref, win) {
  var x = _ref.x,
      y = _ref.y;
  var dpr = win.devicePixelRatio || 1;
  return {
    x: round(x * dpr) / dpr || 0,
    y: round(y * dpr) / dpr || 0
  };
}

function mapToStyles(_ref2) {
  var _Object$assign2;

  var popper = _ref2.popper,
      popperRect = _ref2.popperRect,
      placement = _ref2.placement,
      variation = _ref2.variation,
      offsets = _ref2.offsets,
      position = _ref2.position,
      gpuAcceleration = _ref2.gpuAcceleration,
      adaptive = _ref2.adaptive,
      roundOffsets = _ref2.roundOffsets,
      isFixed = _ref2.isFixed;
  var _offsets$x = offsets.x,
      x = _offsets$x === void 0 ? 0 : _offsets$x,
      _offsets$y = offsets.y,
      y = _offsets$y === void 0 ? 0 : _offsets$y;

  var _ref3 = typeof roundOffsets === 'function' ? roundOffsets({
    x: x,
    y: y
  }) : {
    x: x,
    y: y
  };

  x = _ref3.x;
  y = _ref3.y;
  var hasX = offsets.hasOwnProperty('x');
  var hasY = offsets.hasOwnProperty('y');
  var sideX = left;
  var sideY = top;
  var win = window;

  if (adaptive) {
    var offsetParent = getOffsetParent(popper);
    var heightProp = 'clientHeight';
    var widthProp = 'clientWidth';

    if (offsetParent === getWindow(popper)) {
      offsetParent = getDocumentElement(popper);

      if (getComputedStyle$1(offsetParent).position !== 'static' && position === 'absolute') {
        heightProp = 'scrollHeight';
        widthProp = 'scrollWidth';
      }
    } // $FlowFixMe[incompatible-cast]: force type refinement, we compare offsetParent with window above, but Flow doesn't detect it


    offsetParent = offsetParent;

    if (placement === top || (placement === left || placement === right) && variation === end) {
      sideY = bottom;
      var offsetY = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.height : // $FlowFixMe[prop-missing]
      offsetParent[heightProp];
      y -= offsetY - popperRect.height;
      y *= gpuAcceleration ? 1 : -1;
    }

    if (placement === left || (placement === top || placement === bottom) && variation === end) {
      sideX = right;
      var offsetX = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.width : // $FlowFixMe[prop-missing]
      offsetParent[widthProp];
      x -= offsetX - popperRect.width;
      x *= gpuAcceleration ? 1 : -1;
    }
  }

  var commonStyles = Object.assign({
    position: position
  }, adaptive && unsetSides);

  var _ref4 = roundOffsets === true ? roundOffsetsByDPR({
    x: x,
    y: y
  }, getWindow(popper)) : {
    x: x,
    y: y
  };

  x = _ref4.x;
  y = _ref4.y;

  if (gpuAcceleration) {
    var _Object$assign;

    return Object.assign({}, commonStyles, (_Object$assign = {}, _Object$assign[sideY] = hasY ? '0' : '', _Object$assign[sideX] = hasX ? '0' : '', _Object$assign.transform = (win.devicePixelRatio || 1) <= 1 ? "translate(" + x + "px, " + y + "px)" : "translate3d(" + x + "px, " + y + "px, 0)", _Object$assign));
  }

  return Object.assign({}, commonStyles, (_Object$assign2 = {}, _Object$assign2[sideY] = hasY ? y + "px" : '', _Object$assign2[sideX] = hasX ? x + "px" : '', _Object$assign2.transform = '', _Object$assign2));
}

function computeStyles(_ref5) {
  var state = _ref5.state,
      options = _ref5.options;
  var _options$gpuAccelerat = options.gpuAcceleration,
      gpuAcceleration = _options$gpuAccelerat === void 0 ? true : _options$gpuAccelerat,
      _options$adaptive = options.adaptive,
      adaptive = _options$adaptive === void 0 ? true : _options$adaptive,
      _options$roundOffsets = options.roundOffsets,
      roundOffsets = _options$roundOffsets === void 0 ? true : _options$roundOffsets;
  var commonStyles = {
    placement: getBasePlacement(state.placement),
    variation: getVariation(state.placement),
    popper: state.elements.popper,
    popperRect: state.rects.popper,
    gpuAcceleration: gpuAcceleration,
    isFixed: state.options.strategy === 'fixed'
  };

  if (state.modifiersData.popperOffsets != null) {
    state.styles.popper = Object.assign({}, state.styles.popper, mapToStyles(Object.assign({}, commonStyles, {
      offsets: state.modifiersData.popperOffsets,
      position: state.options.strategy,
      adaptive: adaptive,
      roundOffsets: roundOffsets
    })));
  }

  if (state.modifiersData.arrow != null) {
    state.styles.arrow = Object.assign({}, state.styles.arrow, mapToStyles(Object.assign({}, commonStyles, {
      offsets: state.modifiersData.arrow,
      position: 'absolute',
      adaptive: false,
      roundOffsets: roundOffsets
    })));
  }

  state.attributes.popper = Object.assign({}, state.attributes.popper, {
    'data-popper-placement': state.placement
  });
} // eslint-disable-next-line import/no-unused-modules


var computeStyles$1 = {
  name: 'computeStyles',
  enabled: true,
  phase: 'beforeWrite',
  fn: computeStyles,
  data: {}
};

var passive = {
  passive: true
};

function effect(_ref) {
  var state = _ref.state,
      instance = _ref.instance,
      options = _ref.options;
  var _options$scroll = options.scroll,
      scroll = _options$scroll === void 0 ? true : _options$scroll,
      _options$resize = options.resize,
      resize = _options$resize === void 0 ? true : _options$resize;
  var window = getWindow(state.elements.popper);
  var scrollParents = [].concat(state.scrollParents.reference, state.scrollParents.popper);

  if (scroll) {
    scrollParents.forEach(function (scrollParent) {
      scrollParent.addEventListener('scroll', instance.update, passive);
    });
  }

  if (resize) {
    window.addEventListener('resize', instance.update, passive);
  }

  return function () {
    if (scroll) {
      scrollParents.forEach(function (scrollParent) {
        scrollParent.removeEventListener('scroll', instance.update, passive);
      });
    }

    if (resize) {
      window.removeEventListener('resize', instance.update, passive);
    }
  };
} // eslint-disable-next-line import/no-unused-modules


var eventListeners = {
  name: 'eventListeners',
  enabled: true,
  phase: 'write',
  fn: function fn() {},
  effect: effect,
  data: {}
};

var hash$1 = {
  left: 'right',
  right: 'left',
  bottom: 'top',
  top: 'bottom'
};
function getOppositePlacement(placement) {
  return placement.replace(/left|right|bottom|top/g, function (matched) {
    return hash$1[matched];
  });
}

var hash = {
  start: 'end',
  end: 'start'
};
function getOppositeVariationPlacement(placement) {
  return placement.replace(/start|end/g, function (matched) {
    return hash[matched];
  });
}

function getWindowScroll(node) {
  var win = getWindow(node);
  var scrollLeft = win.pageXOffset;
  var scrollTop = win.pageYOffset;
  return {
    scrollLeft: scrollLeft,
    scrollTop: scrollTop
  };
}

function getWindowScrollBarX(element) {
  // If <html> has a CSS width greater than the viewport, then this will be
  // incorrect for RTL.
  // Popper 1 is broken in this case and never had a bug report so let's assume
  // it's not an issue. I don't think anyone ever specifies width on <html>
  // anyway.
  // Browsers where the left scrollbar doesn't cause an issue report `0` for
  // this (e.g. Edge 2019, IE11, Safari)
  return getBoundingClientRect(getDocumentElement(element)).left + getWindowScroll(element).scrollLeft;
}

function getViewportRect(element, strategy) {
  var win = getWindow(element);
  var html = getDocumentElement(element);
  var visualViewport = win.visualViewport;
  var width = html.clientWidth;
  var height = html.clientHeight;
  var x = 0;
  var y = 0;

  if (visualViewport) {
    width = visualViewport.width;
    height = visualViewport.height;
    var layoutViewport = isLayoutViewport();

    if (layoutViewport || !layoutViewport && strategy === 'fixed') {
      x = visualViewport.offsetLeft;
      y = visualViewport.offsetTop;
    }
  }

  return {
    width: width,
    height: height,
    x: x + getWindowScrollBarX(element),
    y: y
  };
}

// of the `<html>` and `<body>` rect bounds if horizontally scrollable

function getDocumentRect(element) {
  var _element$ownerDocumen;

  var html = getDocumentElement(element);
  var winScroll = getWindowScroll(element);
  var body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;
  var width = max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);
  var height = max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);
  var x = -winScroll.scrollLeft + getWindowScrollBarX(element);
  var y = -winScroll.scrollTop;

  if (getComputedStyle$1(body || html).direction === 'rtl') {
    x += max(html.clientWidth, body ? body.clientWidth : 0) - width;
  }

  return {
    width: width,
    height: height,
    x: x,
    y: y
  };
}

function isScrollParent(element) {
  // Firefox wants us to check `-x` and `-y` variations as well
  var _getComputedStyle = getComputedStyle$1(element),
      overflow = _getComputedStyle.overflow,
      overflowX = _getComputedStyle.overflowX,
      overflowY = _getComputedStyle.overflowY;

  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);
}

function getScrollParent(node) {
  if (['html', 'body', '#document'].indexOf(getNodeName(node)) >= 0) {
    // $FlowFixMe[incompatible-return]: assume body is always available
    return node.ownerDocument.body;
  }

  if (isHTMLElement(node) && isScrollParent(node)) {
    return node;
  }

  return getScrollParent(getParentNode(node));
}

/*
given a DOM element, return the list of all scroll parents, up the list of ancesors
until we get to the top window object. This list is what we attach scroll listeners
to, because if any of these parent elements scroll, we'll need to re-calculate the
reference element's position.
*/

function listScrollParents(element, list) {
  var _element$ownerDocumen;

  if (list === void 0) {
    list = [];
  }

  var scrollParent = getScrollParent(element);
  var isBody = scrollParent === ((_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body);
  var win = getWindow(scrollParent);
  var target = isBody ? [win].concat(win.visualViewport || [], isScrollParent(scrollParent) ? scrollParent : []) : scrollParent;
  var updatedList = list.concat(target);
  return isBody ? updatedList : // $FlowFixMe[incompatible-call]: isBody tells us target will be an HTMLElement here
  updatedList.concat(listScrollParents(getParentNode(target)));
}

function rectToClientRect(rect) {
  return Object.assign({}, rect, {
    left: rect.x,
    top: rect.y,
    right: rect.x + rect.width,
    bottom: rect.y + rect.height
  });
}

function getInnerBoundingClientRect(element, strategy) {
  var rect = getBoundingClientRect(element, false, strategy === 'fixed');
  rect.top = rect.top + element.clientTop;
  rect.left = rect.left + element.clientLeft;
  rect.bottom = rect.top + element.clientHeight;
  rect.right = rect.left + element.clientWidth;
  rect.width = element.clientWidth;
  rect.height = element.clientHeight;
  rect.x = rect.left;
  rect.y = rect.top;
  return rect;
}

function getClientRectFromMixedType(element, clippingParent, strategy) {
  return clippingParent === viewport ? rectToClientRect(getViewportRect(element, strategy)) : isElement(clippingParent) ? getInnerBoundingClientRect(clippingParent, strategy) : rectToClientRect(getDocumentRect(getDocumentElement(element)));
} // A "clipping parent" is an overflowable container with the characteristic of
// clipping (or hiding) overflowing elements with a position different from
// `initial`


function getClippingParents(element) {
  var clippingParents = listScrollParents(getParentNode(element));
  var canEscapeClipping = ['absolute', 'fixed'].indexOf(getComputedStyle$1(element).position) >= 0;
  var clipperElement = canEscapeClipping && isHTMLElement(element) ? getOffsetParent(element) : element;

  if (!isElement(clipperElement)) {
    return [];
  } // $FlowFixMe[incompatible-return]: https://github.com/facebook/flow/issues/1414


  return clippingParents.filter(function (clippingParent) {
    return isElement(clippingParent) && contains(clippingParent, clipperElement) && getNodeName(clippingParent) !== 'body';
  });
} // Gets the maximum area that the element is visible in due to any number of
// clipping parents


function getClippingRect(element, boundary, rootBoundary, strategy) {
  var mainClippingParents = boundary === 'clippingParents' ? getClippingParents(element) : [].concat(boundary);
  var clippingParents = [].concat(mainClippingParents, [rootBoundary]);
  var firstClippingParent = clippingParents[0];
  var clippingRect = clippingParents.reduce(function (accRect, clippingParent) {
    var rect = getClientRectFromMixedType(element, clippingParent, strategy);
    accRect.top = max(rect.top, accRect.top);
    accRect.right = min(rect.right, accRect.right);
    accRect.bottom = min(rect.bottom, accRect.bottom);
    accRect.left = max(rect.left, accRect.left);
    return accRect;
  }, getClientRectFromMixedType(element, firstClippingParent, strategy));
  clippingRect.width = clippingRect.right - clippingRect.left;
  clippingRect.height = clippingRect.bottom - clippingRect.top;
  clippingRect.x = clippingRect.left;
  clippingRect.y = clippingRect.top;
  return clippingRect;
}

function computeOffsets(_ref) {
  var reference = _ref.reference,
      element = _ref.element,
      placement = _ref.placement;
  var basePlacement = placement ? getBasePlacement(placement) : null;
  var variation = placement ? getVariation(placement) : null;
  var commonX = reference.x + reference.width / 2 - element.width / 2;
  var commonY = reference.y + reference.height / 2 - element.height / 2;
  var offsets;

  switch (basePlacement) {
    case top:
      offsets = {
        x: commonX,
        y: reference.y - element.height
      };
      break;

    case bottom:
      offsets = {
        x: commonX,
        y: reference.y + reference.height
      };
      break;

    case right:
      offsets = {
        x: reference.x + reference.width,
        y: commonY
      };
      break;

    case left:
      offsets = {
        x: reference.x - element.width,
        y: commonY
      };
      break;

    default:
      offsets = {
        x: reference.x,
        y: reference.y
      };
  }

  var mainAxis = basePlacement ? getMainAxisFromPlacement(basePlacement) : null;

  if (mainAxis != null) {
    var len = mainAxis === 'y' ? 'height' : 'width';

    switch (variation) {
      case start:
        offsets[mainAxis] = offsets[mainAxis] - (reference[len] / 2 - element[len] / 2);
        break;

      case end:
        offsets[mainAxis] = offsets[mainAxis] + (reference[len] / 2 - element[len] / 2);
        break;
    }
  }

  return offsets;
}

function detectOverflow(state, options) {
  if (options === void 0) {
    options = {};
  }

  var _options = options,
      _options$placement = _options.placement,
      placement = _options$placement === void 0 ? state.placement : _options$placement,
      _options$strategy = _options.strategy,
      strategy = _options$strategy === void 0 ? state.strategy : _options$strategy,
      _options$boundary = _options.boundary,
      boundary = _options$boundary === void 0 ? clippingParents : _options$boundary,
      _options$rootBoundary = _options.rootBoundary,
      rootBoundary = _options$rootBoundary === void 0 ? viewport : _options$rootBoundary,
      _options$elementConte = _options.elementContext,
      elementContext = _options$elementConte === void 0 ? popper : _options$elementConte,
      _options$altBoundary = _options.altBoundary,
      altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary,
      _options$padding = _options.padding,
      padding = _options$padding === void 0 ? 0 : _options$padding;
  var paddingObject = mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements));
  var altContext = elementContext === popper ? reference : popper;
  var popperRect = state.rects.popper;
  var element = state.elements[altBoundary ? altContext : elementContext];
  var clippingClientRect = getClippingRect(isElement(element) ? element : element.contextElement || getDocumentElement(state.elements.popper), boundary, rootBoundary, strategy);
  var referenceClientRect = getBoundingClientRect(state.elements.reference);
  var popperOffsets = computeOffsets({
    reference: referenceClientRect,
    element: popperRect,
    strategy: 'absolute',
    placement: placement
  });
  var popperClientRect = rectToClientRect(Object.assign({}, popperRect, popperOffsets));
  var elementClientRect = elementContext === popper ? popperClientRect : referenceClientRect; // positive = overflowing the clipping rect
  // 0 or negative = within the clipping rect

  var overflowOffsets = {
    top: clippingClientRect.top - elementClientRect.top + paddingObject.top,
    bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,
    left: clippingClientRect.left - elementClientRect.left + paddingObject.left,
    right: elementClientRect.right - clippingClientRect.right + paddingObject.right
  };
  var offsetData = state.modifiersData.offset; // Offsets can be applied only to the popper element

  if (elementContext === popper && offsetData) {
    var offset = offsetData[placement];
    Object.keys(overflowOffsets).forEach(function (key) {
      var multiply = [right, bottom].indexOf(key) >= 0 ? 1 : -1;
      var axis = [top, bottom].indexOf(key) >= 0 ? 'y' : 'x';
      overflowOffsets[key] += offset[axis] * multiply;
    });
  }

  return overflowOffsets;
}

function computeAutoPlacement(state, options) {
  if (options === void 0) {
    options = {};
  }

  var _options = options,
      placement = _options.placement,
      boundary = _options.boundary,
      rootBoundary = _options.rootBoundary,
      padding = _options.padding,
      flipVariations = _options.flipVariations,
      _options$allowedAutoP = _options.allowedAutoPlacements,
      allowedAutoPlacements = _options$allowedAutoP === void 0 ? placements : _options$allowedAutoP;
  var variation = getVariation(placement);
  var placements$1 = variation ? flipVariations ? variationPlacements : variationPlacements.filter(function (placement) {
    return getVariation(placement) === variation;
  }) : basePlacements;
  var allowedPlacements = placements$1.filter(function (placement) {
    return allowedAutoPlacements.indexOf(placement) >= 0;
  });

  if (allowedPlacements.length === 0) {
    allowedPlacements = placements$1;
  } // $FlowFixMe[incompatible-type]: Flow seems to have problems with two array unions...


  var overflows = allowedPlacements.reduce(function (acc, placement) {
    acc[placement] = detectOverflow(state, {
      placement: placement,
      boundary: boundary,
      rootBoundary: rootBoundary,
      padding: padding
    })[getBasePlacement(placement)];
    return acc;
  }, {});
  return Object.keys(overflows).sort(function (a, b) {
    return overflows[a] - overflows[b];
  });
}

function getExpandedFallbackPlacements(placement) {
  if (getBasePlacement(placement) === auto) {
    return [];
  }

  var oppositePlacement = getOppositePlacement(placement);
  return [getOppositeVariationPlacement(placement), oppositePlacement, getOppositeVariationPlacement(oppositePlacement)];
}

function flip(_ref) {
  var state = _ref.state,
      options = _ref.options,
      name = _ref.name;

  if (state.modifiersData[name]._skip) {
    return;
  }

  var _options$mainAxis = options.mainAxis,
      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,
      _options$altAxis = options.altAxis,
      checkAltAxis = _options$altAxis === void 0 ? true : _options$altAxis,
      specifiedFallbackPlacements = options.fallbackPlacements,
      padding = options.padding,
      boundary = options.boundary,
      rootBoundary = options.rootBoundary,
      altBoundary = options.altBoundary,
      _options$flipVariatio = options.flipVariations,
      flipVariations = _options$flipVariatio === void 0 ? true : _options$flipVariatio,
      allowedAutoPlacements = options.allowedAutoPlacements;
  var preferredPlacement = state.options.placement;
  var basePlacement = getBasePlacement(preferredPlacement);
  var isBasePlacement = basePlacement === preferredPlacement;
  var fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipVariations ? [getOppositePlacement(preferredPlacement)] : getExpandedFallbackPlacements(preferredPlacement));
  var placements = [preferredPlacement].concat(fallbackPlacements).reduce(function (acc, placement) {
    return acc.concat(getBasePlacement(placement) === auto ? computeAutoPlacement(state, {
      placement: placement,
      boundary: boundary,
      rootBoundary: rootBoundary,
      padding: padding,
      flipVariations: flipVariations,
      allowedAutoPlacements: allowedAutoPlacements
    }) : placement);
  }, []);
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var checksMap = new Map();
  var makeFallbackChecks = true;
  var firstFittingPlacement = placements[0];

  for (var i = 0; i < placements.length; i++) {
    var placement = placements[i];

    var _basePlacement = getBasePlacement(placement);

    var isStartVariation = getVariation(placement) === start;
    var isVertical = [top, bottom].indexOf(_basePlacement) >= 0;
    var len = isVertical ? 'width' : 'height';
    var overflow = detectOverflow(state, {
      placement: placement,
      boundary: boundary,
      rootBoundary: rootBoundary,
      altBoundary: altBoundary,
      padding: padding
    });
    var mainVariationSide = isVertical ? isStartVariation ? right : left : isStartVariation ? bottom : top;

    if (referenceRect[len] > popperRect[len]) {
      mainVariationSide = getOppositePlacement(mainVariationSide);
    }

    var altVariationSide = getOppositePlacement(mainVariationSide);
    var checks = [];

    if (checkMainAxis) {
      checks.push(overflow[_basePlacement] <= 0);
    }

    if (checkAltAxis) {
      checks.push(overflow[mainVariationSide] <= 0, overflow[altVariationSide] <= 0);
    }

    if (checks.every(function (check) {
      return check;
    })) {
      firstFittingPlacement = placement;
      makeFallbackChecks = false;
      break;
    }

    checksMap.set(placement, checks);
  }

  if (makeFallbackChecks) {
    // `2` may be desired in some cases – research later
    var numberOfChecks = flipVariations ? 3 : 1;

    var _loop = function _loop(_i) {
      var fittingPlacement = placements.find(function (placement) {
        var checks = checksMap.get(placement);

        if (checks) {
          return checks.slice(0, _i).every(function (check) {
            return check;
          });
        }
      });

      if (fittingPlacement) {
        firstFittingPlacement = fittingPlacement;
        return "break";
      }
    };

    for (var _i = numberOfChecks; _i > 0; _i--) {
      var _ret = _loop(_i);

      if (_ret === "break") break;
    }
  }

  if (state.placement !== firstFittingPlacement) {
    state.modifiersData[name]._skip = true;
    state.placement = firstFittingPlacement;
    state.reset = true;
  }
} // eslint-disable-next-line import/no-unused-modules


var flip$1 = {
  name: 'flip',
  enabled: true,
  phase: 'main',
  fn: flip,
  requiresIfExists: ['offset'],
  data: {
    _skip: false
  }
};

function getSideOffsets(overflow, rect, preventedOffsets) {
  if (preventedOffsets === void 0) {
    preventedOffsets = {
      x: 0,
      y: 0
    };
  }

  return {
    top: overflow.top - rect.height - preventedOffsets.y,
    right: overflow.right - rect.width + preventedOffsets.x,
    bottom: overflow.bottom - rect.height + preventedOffsets.y,
    left: overflow.left - rect.width - preventedOffsets.x
  };
}

function isAnySideFullyClipped(overflow) {
  return [top, right, bottom, left].some(function (side) {
    return overflow[side] >= 0;
  });
}

function hide(_ref) {
  var state = _ref.state,
      name = _ref.name;
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var preventedOffsets = state.modifiersData.preventOverflow;
  var referenceOverflow = detectOverflow(state, {
    elementContext: 'reference'
  });
  var popperAltOverflow = detectOverflow(state, {
    altBoundary: true
  });
  var referenceClippingOffsets = getSideOffsets(referenceOverflow, referenceRect);
  var popperEscapeOffsets = getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);
  var isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);
  var hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);
  state.modifiersData[name] = {
    referenceClippingOffsets: referenceClippingOffsets,
    popperEscapeOffsets: popperEscapeOffsets,
    isReferenceHidden: isReferenceHidden,
    hasPopperEscaped: hasPopperEscaped
  };
  state.attributes.popper = Object.assign({}, state.attributes.popper, {
    'data-popper-reference-hidden': isReferenceHidden,
    'data-popper-escaped': hasPopperEscaped
  });
} // eslint-disable-next-line import/no-unused-modules


var hide$1 = {
  name: 'hide',
  enabled: true,
  phase: 'main',
  requiresIfExists: ['preventOverflow'],
  fn: hide
};

function distanceAndSkiddingToXY(placement, rects, offset) {
  var basePlacement = getBasePlacement(placement);
  var invertDistance = [left, top].indexOf(basePlacement) >= 0 ? -1 : 1;

  var _ref = typeof offset === 'function' ? offset(Object.assign({}, rects, {
    placement: placement
  })) : offset,
      skidding = _ref[0],
      distance = _ref[1];

  skidding = skidding || 0;
  distance = (distance || 0) * invertDistance;
  return [left, right].indexOf(basePlacement) >= 0 ? {
    x: distance,
    y: skidding
  } : {
    x: skidding,
    y: distance
  };
}

function offset(_ref2) {
  var state = _ref2.state,
      options = _ref2.options,
      name = _ref2.name;
  var _options$offset = options.offset,
      offset = _options$offset === void 0 ? [0, 0] : _options$offset;
  var data = placements.reduce(function (acc, placement) {
    acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset);
    return acc;
  }, {});
  var _data$state$placement = data[state.placement],
      x = _data$state$placement.x,
      y = _data$state$placement.y;

  if (state.modifiersData.popperOffsets != null) {
    state.modifiersData.popperOffsets.x += x;
    state.modifiersData.popperOffsets.y += y;
  }

  state.modifiersData[name] = data;
} // eslint-disable-next-line import/no-unused-modules


var offset$1 = {
  name: 'offset',
  enabled: true,
  phase: 'main',
  requires: ['popperOffsets'],
  fn: offset
};

function popperOffsets(_ref) {
  var state = _ref.state,
      name = _ref.name;
  // Offsets are the actual position the popper needs to have to be
  // properly positioned near its reference element
  // This is the most basic placement, and will be adjusted by
  // the modifiers in the next step
  state.modifiersData[name] = computeOffsets({
    reference: state.rects.reference,
    element: state.rects.popper,
    strategy: 'absolute',
    placement: state.placement
  });
} // eslint-disable-next-line import/no-unused-modules


var popperOffsets$1 = {
  name: 'popperOffsets',
  enabled: true,
  phase: 'read',
  fn: popperOffsets,
  data: {}
};

function getAltAxis(axis) {
  return axis === 'x' ? 'y' : 'x';
}

function preventOverflow(_ref) {
  var state = _ref.state,
      options = _ref.options,
      name = _ref.name;
  var _options$mainAxis = options.mainAxis,
      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,
      _options$altAxis = options.altAxis,
      checkAltAxis = _options$altAxis === void 0 ? false : _options$altAxis,
      boundary = options.boundary,
      rootBoundary = options.rootBoundary,
      altBoundary = options.altBoundary,
      padding = options.padding,
      _options$tether = options.tether,
      tether = _options$tether === void 0 ? true : _options$tether,
      _options$tetherOffset = options.tetherOffset,
      tetherOffset = _options$tetherOffset === void 0 ? 0 : _options$tetherOffset;
  var overflow = detectOverflow(state, {
    boundary: boundary,
    rootBoundary: rootBoundary,
    padding: padding,
    altBoundary: altBoundary
  });
  var basePlacement = getBasePlacement(state.placement);
  var variation = getVariation(state.placement);
  var isBasePlacement = !variation;
  var mainAxis = getMainAxisFromPlacement(basePlacement);
  var altAxis = getAltAxis(mainAxis);
  var popperOffsets = state.modifiersData.popperOffsets;
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var tetherOffsetValue = typeof tetherOffset === 'function' ? tetherOffset(Object.assign({}, state.rects, {
    placement: state.placement
  })) : tetherOffset;
  var normalizedTetherOffsetValue = typeof tetherOffsetValue === 'number' ? {
    mainAxis: tetherOffsetValue,
    altAxis: tetherOffsetValue
  } : Object.assign({
    mainAxis: 0,
    altAxis: 0
  }, tetherOffsetValue);
  var offsetModifierState = state.modifiersData.offset ? state.modifiersData.offset[state.placement] : null;
  var data = {
    x: 0,
    y: 0
  };

  if (!popperOffsets) {
    return;
  }

  if (checkMainAxis) {
    var _offsetModifierState$;

    var mainSide = mainAxis === 'y' ? top : left;
    var altSide = mainAxis === 'y' ? bottom : right;
    var len = mainAxis === 'y' ? 'height' : 'width';
    var offset = popperOffsets[mainAxis];
    var min$1 = offset + overflow[mainSide];
    var max$1 = offset - overflow[altSide];
    var additive = tether ? -popperRect[len] / 2 : 0;
    var minLen = variation === start ? referenceRect[len] : popperRect[len];
    var maxLen = variation === start ? -popperRect[len] : -referenceRect[len]; // We need to include the arrow in the calculation so the arrow doesn't go
    // outside the reference bounds

    var arrowElement = state.elements.arrow;
    var arrowRect = tether && arrowElement ? getLayoutRect(arrowElement) : {
      width: 0,
      height: 0
    };
    var arrowPaddingObject = state.modifiersData['arrow#persistent'] ? state.modifiersData['arrow#persistent'].padding : getFreshSideObject();
    var arrowPaddingMin = arrowPaddingObject[mainSide];
    var arrowPaddingMax = arrowPaddingObject[altSide]; // If the reference length is smaller than the arrow length, we don't want
    // to include its full size in the calculation. If the reference is small
    // and near the edge of a boundary, the popper can overflow even if the
    // reference is not overflowing as well (e.g. virtual elements with no
    // width or height)

    var arrowLen = within(0, referenceRect[len], arrowRect[len]);
    var minOffset = isBasePlacement ? referenceRect[len] / 2 - additive - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis : minLen - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis;
    var maxOffset = isBasePlacement ? -referenceRect[len] / 2 + additive + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis : maxLen + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis;
    var arrowOffsetParent = state.elements.arrow && getOffsetParent(state.elements.arrow);
    var clientOffset = arrowOffsetParent ? mainAxis === 'y' ? arrowOffsetParent.clientTop || 0 : arrowOffsetParent.clientLeft || 0 : 0;
    var offsetModifierValue = (_offsetModifierState$ = offsetModifierState == null ? void 0 : offsetModifierState[mainAxis]) != null ? _offsetModifierState$ : 0;
    var tetherMin = offset + minOffset - offsetModifierValue - clientOffset;
    var tetherMax = offset + maxOffset - offsetModifierValue;
    var preventedOffset = within(tether ? min(min$1, tetherMin) : min$1, offset, tether ? max(max$1, tetherMax) : max$1);
    popperOffsets[mainAxis] = preventedOffset;
    data[mainAxis] = preventedOffset - offset;
  }

  if (checkAltAxis) {
    var _offsetModifierState$2;

    var _mainSide = mainAxis === 'x' ? top : left;

    var _altSide = mainAxis === 'x' ? bottom : right;

    var _offset = popperOffsets[altAxis];

    var _len = altAxis === 'y' ? 'height' : 'width';

    var _min = _offset + overflow[_mainSide];

    var _max = _offset - overflow[_altSide];

    var isOriginSide = [top, left].indexOf(basePlacement) !== -1;

    var _offsetModifierValue = (_offsetModifierState$2 = offsetModifierState == null ? void 0 : offsetModifierState[altAxis]) != null ? _offsetModifierState$2 : 0;

    var _tetherMin = isOriginSide ? _min : _offset - referenceRect[_len] - popperRect[_len] - _offsetModifierValue + normalizedTetherOffsetValue.altAxis;

    var _tetherMax = isOriginSide ? _offset + referenceRect[_len] + popperRect[_len] - _offsetModifierValue - normalizedTetherOffsetValue.altAxis : _max;

    var _preventedOffset = tether && isOriginSide ? withinMaxClamp(_tetherMin, _offset, _tetherMax) : within(tether ? _tetherMin : _min, _offset, tether ? _tetherMax : _max);

    popperOffsets[altAxis] = _preventedOffset;
    data[altAxis] = _preventedOffset - _offset;
  }

  state.modifiersData[name] = data;
} // eslint-disable-next-line import/no-unused-modules


var preventOverflow$1 = {
  name: 'preventOverflow',
  enabled: true,
  phase: 'main',
  fn: preventOverflow,
  requiresIfExists: ['offset']
};

function getHTMLElementScroll(element) {
  return {
    scrollLeft: element.scrollLeft,
    scrollTop: element.scrollTop
  };
}

function getNodeScroll(node) {
  if (node === getWindow(node) || !isHTMLElement(node)) {
    return getWindowScroll(node);
  } else {
    return getHTMLElementScroll(node);
  }
}

function isElementScaled(element) {
  var rect = element.getBoundingClientRect();
  var scaleX = round(rect.width) / element.offsetWidth || 1;
  var scaleY = round(rect.height) / element.offsetHeight || 1;
  return scaleX !== 1 || scaleY !== 1;
} // Returns the composite rect of an element relative to its offsetParent.
// Composite means it takes into account transforms as well as layout.


function getCompositeRect(elementOrVirtualElement, offsetParent, isFixed) {
  if (isFixed === void 0) {
    isFixed = false;
  }

  var isOffsetParentAnElement = isHTMLElement(offsetParent);
  var offsetParentIsScaled = isHTMLElement(offsetParent) && isElementScaled(offsetParent);
  var documentElement = getDocumentElement(offsetParent);
  var rect = getBoundingClientRect(elementOrVirtualElement, offsetParentIsScaled, isFixed);
  var scroll = {
    scrollLeft: 0,
    scrollTop: 0
  };
  var offsets = {
    x: 0,
    y: 0
  };

  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {
    if (getNodeName(offsetParent) !== 'body' || // https://github.com/popperjs/popper-core/issues/1078
    isScrollParent(documentElement)) {
      scroll = getNodeScroll(offsetParent);
    }

    if (isHTMLElement(offsetParent)) {
      offsets = getBoundingClientRect(offsetParent, true);
      offsets.x += offsetParent.clientLeft;
      offsets.y += offsetParent.clientTop;
    } else if (documentElement) {
      offsets.x = getWindowScrollBarX(documentElement);
    }
  }

  return {
    x: rect.left + scroll.scrollLeft - offsets.x,
    y: rect.top + scroll.scrollTop - offsets.y,
    width: rect.width,
    height: rect.height
  };
}

function order(modifiers) {
  var map = new Map();
  var visited = new Set();
  var result = [];
  modifiers.forEach(function (modifier) {
    map.set(modifier.name, modifier);
  }); // On visiting object, check for its dependencies and visit them recursively

  function sort(modifier) {
    visited.add(modifier.name);
    var requires = [].concat(modifier.requires || [], modifier.requiresIfExists || []);
    requires.forEach(function (dep) {
      if (!visited.has(dep)) {
        var depModifier = map.get(dep);

        if (depModifier) {
          sort(depModifier);
        }
      }
    });
    result.push(modifier);
  }

  modifiers.forEach(function (modifier) {
    if (!visited.has(modifier.name)) {
      // check for visited object
      sort(modifier);
    }
  });
  return result;
}

function orderModifiers(modifiers) {
  // order based on dependencies
  var orderedModifiers = order(modifiers); // order based on phase

  return modifierPhases.reduce(function (acc, phase) {
    return acc.concat(orderedModifiers.filter(function (modifier) {
      return modifier.phase === phase;
    }));
  }, []);
}

function debounce(fn) {
  var pending;
  return function () {
    if (!pending) {
      pending = new Promise(function (resolve) {
        Promise.resolve().then(function () {
          pending = undefined;
          resolve(fn());
        });
      });
    }

    return pending;
  };
}

function mergeByName(modifiers) {
  var merged = modifiers.reduce(function (merged, current) {
    var existing = merged[current.name];
    merged[current.name] = existing ? Object.assign({}, existing, current, {
      options: Object.assign({}, existing.options, current.options),
      data: Object.assign({}, existing.data, current.data)
    }) : current;
    return merged;
  }, {}); // IE11 does not support Object.values

  return Object.keys(merged).map(function (key) {
    return merged[key];
  });
}

var DEFAULT_OPTIONS = {
  placement: 'bottom',
  modifiers: [],
  strategy: 'absolute'
};

function areValidElements() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  return !args.some(function (element) {
    return !(element && typeof element.getBoundingClientRect === 'function');
  });
}

function popperGenerator(generatorOptions) {
  if (generatorOptions === void 0) {
    generatorOptions = {};
  }

  var _generatorOptions = generatorOptions,
      _generatorOptions$def = _generatorOptions.defaultModifiers,
      defaultModifiers = _generatorOptions$def === void 0 ? [] : _generatorOptions$def,
      _generatorOptions$def2 = _generatorOptions.defaultOptions,
      defaultOptions = _generatorOptions$def2 === void 0 ? DEFAULT_OPTIONS : _generatorOptions$def2;
  return function createPopper(reference, popper, options) {
    if (options === void 0) {
      options = defaultOptions;
    }

    var state = {
      placement: 'bottom',
      orderedModifiers: [],
      options: Object.assign({}, DEFAULT_OPTIONS, defaultOptions),
      modifiersData: {},
      elements: {
        reference: reference,
        popper: popper
      },
      attributes: {},
      styles: {}
    };
    var effectCleanupFns = [];
    var isDestroyed = false;
    var instance = {
      state: state,
      setOptions: function setOptions(setOptionsAction) {
        var options = typeof setOptionsAction === 'function' ? setOptionsAction(state.options) : setOptionsAction;
        cleanupModifierEffects();
        state.options = Object.assign({}, defaultOptions, state.options, options);
        state.scrollParents = {
          reference: isElement(reference) ? listScrollParents(reference) : reference.contextElement ? listScrollParents(reference.contextElement) : [],
          popper: listScrollParents(popper)
        }; // Orders the modifiers based on their dependencies and `phase`
        // properties

        var orderedModifiers = orderModifiers(mergeByName([].concat(defaultModifiers, state.options.modifiers))); // Strip out disabled modifiers

        state.orderedModifiers = orderedModifiers.filter(function (m) {
          return m.enabled;
        });
        runModifierEffects();
        return instance.update();
      },
      // Sync update – it will always be executed, even if not necessary. This
      // is useful for low frequency updates where sync behavior simplifies the
      // logic.
      // For high frequency updates (e.g. `resize` and `scroll` events), always
      // prefer the async Popper#update method
      forceUpdate: function forceUpdate() {
        if (isDestroyed) {
          return;
        }

        var _state$elements = state.elements,
            reference = _state$elements.reference,
            popper = _state$elements.popper; // Don't proceed if `reference` or `popper` are not valid elements
        // anymore

        if (!areValidElements(reference, popper)) {
          return;
        } // Store the reference and popper rects to be read by modifiers


        state.rects = {
          reference: getCompositeRect(reference, getOffsetParent(popper), state.options.strategy === 'fixed'),
          popper: getLayoutRect(popper)
        }; // Modifiers have the ability to reset the current update cycle. The
        // most common use case for this is the `flip` modifier changing the
        // placement, which then needs to re-run all the modifiers, because the
        // logic was previously ran for the previous placement and is therefore
        // stale/incorrect

        state.reset = false;
        state.placement = state.options.placement; // On each update cycle, the `modifiersData` property for each modifier
        // is filled with the initial data specified by the modifier. This means
        // it doesn't persist and is fresh on each update.
        // To ensure persistent data, use `${name}#persistent`

        state.orderedModifiers.forEach(function (modifier) {
          return state.modifiersData[modifier.name] = Object.assign({}, modifier.data);
        });

        for (var index = 0; index < state.orderedModifiers.length; index++) {
          if (state.reset === true) {
            state.reset = false;
            index = -1;
            continue;
          }

          var _state$orderedModifie = state.orderedModifiers[index],
              fn = _state$orderedModifie.fn,
              _state$orderedModifie2 = _state$orderedModifie.options,
              _options = _state$orderedModifie2 === void 0 ? {} : _state$orderedModifie2,
              name = _state$orderedModifie.name;

          if (typeof fn === 'function') {
            state = fn({
              state: state,
              options: _options,
              name: name,
              instance: instance
            }) || state;
          }
        }
      },
      // Async and optimistically optimized update – it will not be executed if
      // not necessary (debounced to run at most once-per-tick)
      update: debounce(function () {
        return new Promise(function (resolve) {
          instance.forceUpdate();
          resolve(state);
        });
      }),
      destroy: function destroy() {
        cleanupModifierEffects();
        isDestroyed = true;
      }
    };

    if (!areValidElements(reference, popper)) {
      return instance;
    }

    instance.setOptions(options).then(function (state) {
      if (!isDestroyed && options.onFirstUpdate) {
        options.onFirstUpdate(state);
      }
    }); // Modifiers have the ability to execute arbitrary code before the first
    // update cycle runs. They will be executed in the same order as the update
    // cycle. This is useful when a modifier adds some persistent data that
    // other modifiers need to use, but the modifier is run after the dependent
    // one.

    function runModifierEffects() {
      state.orderedModifiers.forEach(function (_ref) {
        var name = _ref.name,
            _ref$options = _ref.options,
            options = _ref$options === void 0 ? {} : _ref$options,
            effect = _ref.effect;

        if (typeof effect === 'function') {
          var cleanupFn = effect({
            state: state,
            name: name,
            instance: instance,
            options: options
          });

          var noopFn = function noopFn() {};

          effectCleanupFns.push(cleanupFn || noopFn);
        }
      });
    }

    function cleanupModifierEffects() {
      effectCleanupFns.forEach(function (fn) {
        return fn();
      });
      effectCleanupFns = [];
    }

    return instance;
  };
}

var defaultModifiers = [eventListeners, popperOffsets$1, computeStyles$1, applyStyles$1, offset$1, flip$1, preventOverflow$1, arrow$1, hide$1];
var createPopper = /*#__PURE__*/popperGenerator({
  defaultModifiers: defaultModifiers
}); // eslint-disable-next-line import/no-unused-modules

var checkIcon = `<svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M8.79502 15.875L4.62502 11.705L3.20502 13.115L8.79502 18.705L20.795 6.70501L19.385 5.29501L8.79502 15.875Z" fill="currentColor"/>
</svg>
`;

const icMenuCss = "html.sc-ic-menu{line-height:1.15;-webkit-text-size-adjust:100%}body.sc-ic-menu{margin:0}main.sc-ic-menu{display:block}h1.sc-ic-menu{font-size:2em;margin:0.67em 0}hr.sc-ic-menu{box-sizing:content-box;height:0;overflow:visible}pre.sc-ic-menu{font-family:monospace, monospace;font-size:1em}a.sc-ic-menu{background-color:transparent}abbr[title].sc-ic-menu{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b.sc-ic-menu,strong.sc-ic-menu{font-weight:bolder}code.sc-ic-menu,kbd.sc-ic-menu,samp.sc-ic-menu{font-family:monospace, monospace;font-size:1em}small.sc-ic-menu{font-size:80%}sub.sc-ic-menu,sup.sc-ic-menu{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub.sc-ic-menu{bottom:-0.25em}sup.sc-ic-menu{top:-0.5em}img.sc-ic-menu{border-style:none}button.sc-ic-menu,input.sc-ic-menu,optgroup.sc-ic-menu,select.sc-ic-menu,textarea.sc-ic-menu{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button.sc-ic-menu,input.sc-ic-menu{overflow:visible}button.sc-ic-menu,select.sc-ic-menu{text-transform:none}button.sc-ic-menu,[type=\"button\"].sc-ic-menu,[type=\"reset\"].sc-ic-menu,[type=\"submit\"].sc-ic-menu{-webkit-appearance:button}button.sc-ic-menu::-moz-focus-inner,[type=\"button\"].sc-ic-menu::-moz-focus-inner,[type=\"reset\"].sc-ic-menu::-moz-focus-inner,[type=\"submit\"].sc-ic-menu::-moz-focus-inner{border-style:none;padding:0}button.sc-ic-menu:-moz-focusring,[type=\"button\"].sc-ic-menu:-moz-focusring,[type=\"reset\"].sc-ic-menu:-moz-focusring,[type=\"submit\"].sc-ic-menu:-moz-focusring{outline:1px dotted ButtonText}fieldset.sc-ic-menu{padding:0.35em 0.75em 0.625em}legend.sc-ic-menu{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress.sc-ic-menu{vertical-align:baseline}textarea.sc-ic-menu{overflow:auto}[type=\"checkbox\"].sc-ic-menu,[type=\"radio\"].sc-ic-menu{box-sizing:border-box;padding:0}[type=\"number\"].sc-ic-menu::-webkit-inner-spin-button,[type=\"number\"].sc-ic-menu::-webkit-outer-spin-button{height:auto}[type=\"search\"].sc-ic-menu{-webkit-appearance:textfield;outline-offset:-2px}[type=\"search\"].sc-ic-menu::-webkit-search-decoration{-webkit-appearance:none}.sc-ic-menu::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details.sc-ic-menu{display:block}summary.sc-ic-menu{display:list-item}template.sc-ic-menu{display:none}[hidden].sc-ic-menu{display:none}html.sc-ic-menu,body.sc-ic-menu,div.sc-ic-menu,span.sc-ic-menu,applet.sc-ic-menu,object.sc-ic-menu,iframe.sc-ic-menu,h1.sc-ic-menu,h2.sc-ic-menu,h3.sc-ic-menu,h4.sc-ic-menu,h5.sc-ic-menu,h6.sc-ic-menu,p.sc-ic-menu,blockquote.sc-ic-menu,pre.sc-ic-menu,a.sc-ic-menu,abbr.sc-ic-menu,acronym.sc-ic-menu,address.sc-ic-menu,big.sc-ic-menu,cite.sc-ic-menu,code.sc-ic-menu,del.sc-ic-menu,dfn.sc-ic-menu,em.sc-ic-menu,img.sc-ic-menu,ins.sc-ic-menu,kbd.sc-ic-menu,q.sc-ic-menu,s.sc-ic-menu,samp.sc-ic-menu,small.sc-ic-menu,strike.sc-ic-menu,strong.sc-ic-menu,sub.sc-ic-menu,sup.sc-ic-menu,tt.sc-ic-menu,var.sc-ic-menu,b.sc-ic-menu,u.sc-ic-menu,i.sc-ic-menu,center.sc-ic-menu,dl.sc-ic-menu,dt.sc-ic-menu,dd.sc-ic-menu,ol.sc-ic-menu,ul.sc-ic-menu,li.sc-ic-menu,fieldset.sc-ic-menu,form.sc-ic-menu,label.sc-ic-menu,legend.sc-ic-menu,table.sc-ic-menu,caption.sc-ic-menu,tbody.sc-ic-menu,tfoot.sc-ic-menu,thead.sc-ic-menu,tr.sc-ic-menu,th.sc-ic-menu,td.sc-ic-menu,article.sc-ic-menu,aside.sc-ic-menu,canvas.sc-ic-menu,details.sc-ic-menu,embed.sc-ic-menu,figure.sc-ic-menu,figcaption.sc-ic-menu,footer.sc-ic-menu,header.sc-ic-menu,hgroup.sc-ic-menu,menu.sc-ic-menu,nav.sc-ic-menu,output.sc-ic-menu,ruby.sc-ic-menu,section.sc-ic-menu,summary.sc-ic-menu,time.sc-ic-menu,mark.sc-ic-menu,audio.sc-ic-menu,video.sc-ic-menu{margin:0;padding:0;border:0;font-size:100%;font-style:inherit;vertical-align:baseline}@media (prefers-reduced-motion: no-preference){.open.sc-ic-menu-h .menu.sc-ic-menu{transition:max-height var(--ic-transition-duration-slow)}}.sc-ic-menu-h{border-radius:var(--ic-border-radius);max-height:0;width:var(--input-width, 20rem);color:var(--ic-color-primary-text);background-color:var(--ic-architectural-white);position:relative;z-index:var(--ic-z-index-menu);box-sizing:border-box;box-shadow:var(--ic-elevation-overlay)}.sc-ic-menu-h:not(.no-focus):focus-within{box-shadow:var(--ic-border-focus)}#retry-button.sc-ic-menu::part(button){height:var(--ic-space-lg)}.small.sc-ic-menu #retry-button.sc-ic-menu::part(button){height:var(--ic-space-md)}.on-dialog.sc-ic-menu-h{inset:auto !important}.menu.sc-ic-menu{text-decoration:none;list-style-type:none;border:var(--ic-border-width) solid var(--ic-architectural-400);border-radius:var(--ic-border-radius);background-color:var(--ic-architectural-white);visibility:hidden;max-height:0;overflow-y:hidden}.menu-scroll.sc-ic-menu{overflow-y:auto}.menu.sc-ic-menu:focus-visible{outline:none}.open.sc-ic-menu-h{max-height:none;display:block}.open.sc-ic-menu-h .menu.sc-ic-menu{visibility:visible;max-height:20.125rem}.full-width.sc-ic-menu-h{width:100%}.option.sc-ic-menu{padding:0.5rem 0.438rem;cursor:pointer;display:flex;align-items:center}.option.sc-ic-menu:not(.loading-option){justify-content:space-between}.small.sc-ic-menu-h .option.sc-ic-menu{padding:0.25rem 0.438rem}.option.sc-ic-menu:last-child{border-radius:0 0 var(--ic-space-1px) var(--ic-space-1px)}.option.sc-ic-menu:first-child{border-radius:var(--ic-space-1px) var(--ic-space-1px) 0 0}.option.sc-ic-menu:not(.disabled-option):hover{background-color:var(--ic-action-dark-bg-hover)}.option.sc-ic-menu:not(.disabled-option):active{background-color:var(--ic-action-dark-bg-active)}.option.sc-ic-menu:focus-visible{outline:var(--ic-hc-focus-outline)}.option.sc-ic-menu:not(.disabled-option) .option-description.sc-ic-menu{color:var(--ic-color-secondary-text)}.option.sc-ic-menu .option-label.sc-ic-menu{display:flex;flex-direction:row;align-items:top}.option.sc-ic-menu .option-element.sc-ic-menu{margin-top:var(--ic-space-xxs)}.option.sc-ic-menu .option-icon.sc-ic-menu{height:var(--ic-space-md);width:var(--ic-space-md);margin-top:var(--ic-space-xxs);margin-right:var(--ic-space-xxxs)}.option-text-container.sc-ic-menu{pointer-events:none}.option.loading-option.sc-ic-menu .option-text-container.sc-ic-menu{margin-left:0.625rem;color:var(--ic-color-secondary-text)}.error-icon-svg.sc-ic-menu{height:var(--ic-space-md);width:var(--ic-space-md);fill:var(--ic-status-error);align-self:center;display:flex;margin-right:calc(var(--ic-space-xxs) * 1.2)}.loading-error-info.sc-ic-menu{display:flex}.check-icon.sc-ic-menu{height:var(--ic-space-lg);width:var(--ic-space-lg);margin-left:0.5rem;pointer-events:none}.focused-option.sc-ic-menu .check-icon.sc-ic-menu *.sc-ic-menu{fill:currentcolor}.option-group-title.sc-ic-menu{padding:1.5rem 0.438rem 0.5rem;color:var(--ic-color-tertiary-text)}.small.sc-ic-menu-h .option-group-title.sc-ic-menu{padding:0.75rem 0.438rem 0.25rem}.last-recommended-option.sc-ic-menu{border-bottom:var(--ic-border-default)}.disabled-option.sc-ic-menu{color:var(--ic-architectural-200);cursor:default;pointer-events:none}.focused-option.sc-ic-menu,.focused-option.sc-ic-menu .option-description.sc-ic-menu{background-color:var(--ic-focus-blue) !important;color:var(--ic-color-white-text) !important}.no-results.sc-ic-menu-h li.sc-ic-menu{cursor:no-drop}.no-results.sc-ic-menu-h li.sc-ic-menu:hover{background-color:transparent}@media (forced-colors: active){.focused-option.sc-ic-menu:focus{outline:none;border:0.125rem solid transparent}}";

// eslint-disable-next-line @typescript-eslint/no-unused-vars
class Menu {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.menuKeyPress = createEvent(this, "menuKeyPress", 7);
    this.menuOptionId = createEvent(this, "menuOptionId", 7);
    this.menuOptionSelect = createEvent(this, "menuOptionSelect", 7);
    this.menuStateChange = createEvent(this, "menuStateChange", 7);
    this.menuValueChange = createEvent(this, "menuValueChange", 7);
    this.retryButtonClicked = createEvent(this, "retryButtonClicked", 7);
    this.timeoutBlur = createEvent(this, "timeoutBlur", 7);
    this.ungroupedOptionsSet = createEvent(this, "ungroupedOptionsSet", 7);
    this.disabledOptionSelected = false;
    this.hasPreviouslyBlurred = false;
    this.hasTimedOut = false;
    this.isLoading = false;
    this.isSearchBar = false;
    this.isSearchableSelect = false;
    // Prevents menu re-opening immediately after it is closed on blur when clicking input.
    this.preventClickOpen = false;
    this.ungroupedOptions = [];
    this.handleClearListener = () => {
      this.optionHighlighted = "";
    };
    this.handleSubmitSearch = () => {
      const highlightedOptionIndex = this.options.findIndex((option) => option[this.valueField] === this.optionHighlighted);
      this.setInputValue(highlightedOptionIndex);
    };
    this.handleMenuChange = (open, focusInput) => {
      this.menuStateChange.emit({ open, focusInput });
      if (!open && focusInput !== false) {
        this.inputEl.focus();
        this.preventClickOpen = false;
      }
    };
    this.setNextOptionValue = (selectedOptionIndex) => {
      if (this.ungroupedOptions[selectedOptionIndex + 1]) {
        this.menuOptionSelect.emit({
          value: this.ungroupedOptions[selectedOptionIndex + 1][this.valueField],
          optionId: this.getOptionId(this.ungroupedOptions[selectedOptionIndex + 1][this.valueField]),
        });
      }
      else {
        this.menuOptionSelect.emit({
          value: this.ungroupedOptions[0][this.valueField],
          optionId: this.getOptionId(this.ungroupedOptions[0][this.valueField]),
        });
      }
    };
    this.setPreviousOptionValue = (selectedOptionIndex) => {
      if (this.ungroupedOptions[selectedOptionIndex - 1]) {
        this.menuOptionSelect.emit({
          value: this.ungroupedOptions[selectedOptionIndex - 1][this.valueField],
          optionId: this.getOptionId(this.ungroupedOptions[selectedOptionIndex - 1][this.valueField]),
        });
      }
      else {
        this.menuOptionSelect.emit({
          value: this.ungroupedOptions[this.ungroupedOptions.length - 1][this.valueField],
          optionId: this.getOptionId(this.ungroupedOptions[this.ungroupedOptions.length - 1][this.valueField]),
        });
      }
    };
    this.getParentEl = (parent) => {
      if (parent.tagName === "IC-SEARCH-BAR") {
        this.isSearchBar = true;
      }
      else if (parent.tagName === "IC-SELECT" &&
        parent.getAttribute("searchable") !== null &&
        parent.getAttribute("searchable") !== undefined) {
        this.isSearchableSelect = true;
      }
    };
    this.arrowBehaviour = (event) => {
      event.preventDefault();
      this.handleMenuChange(true);
    };
    this.setMenuOptions = () => this.isSearchBar ? this.options : this.ungroupedOptions;
    this.setHighlightedOption = (highlightedIndex) => {
      const menuOptions = this.setMenuOptions();
      menuOptions[highlightedIndex] &&
        !menuOptions[highlightedIndex].timedOut &&
        (this.optionHighlighted =
          menuOptions[highlightedIndex][this.valueField] || undefined);
    };
    this.autoSetInputValueKeyboardOpen = (event) => {
      const selectedOptionIndex = this.ungroupedOptions.findIndex((option) => option[this.valueField] === this.value);
      this.keyboardNav = false;
      switch (event.key) {
        case "ArrowDown":
          this.keyboardNav = true;
          this.arrowBehaviour(event);
          this.setNextOptionValue(selectedOptionIndex);
          break;
        case "ArrowUp":
          this.keyboardNav = true;
          this.arrowBehaviour(event);
          this.setPreviousOptionValue(selectedOptionIndex);
          break;
        case " ":
        case "Enter":
          if (event.target.id !== "clear-button") {
            this.handleMenuChange(true);
          }
          break;
      }
    };
    this.manSetInputValueKeyboardOpen = (event) => {
      const menuOptions = this.setMenuOptions();
      this.keyboardNav = false;
      const highlightedOptionIndex = menuOptions.findIndex((option) => option[this.valueField] === this.optionHighlighted);
      const getOptionId = (index) => { var _a; return (_a = Array.from(this.host.querySelectorAll("li"))[index]) === null || _a === void 0 ? void 0 : _a.id; };
      const isOpen = this.isSearchBar || this.isSearchableSelect || this.open;
      switch (event.key) {
        case "ArrowDown":
          this.keyboardNav = true;
          this.arrowBehaviour(event);
          if (highlightedOptionIndex < menuOptions.length - 1) {
            this.setHighlightedOption(highlightedOptionIndex + 1);
            this.menuOptionId.emit({
              optionId: getOptionId(highlightedOptionIndex + 1),
            });
          }
          else {
            this.setHighlightedOption(0);
            this.menuOptionId.emit({
              optionId: getOptionId(0),
            });
          }
          this.preventIncorrectTabOrder = false;
          this.focusFromSearchKeypress = false;
          break;
        case "ArrowUp":
          this.keyboardNav = true;
          this.arrowBehaviour(event);
          if (highlightedOptionIndex <= 0 ||
            highlightedOptionIndex > menuOptions.length + 1) {
            this.setHighlightedOption(menuOptions.length - 1);
            this.menuOptionId.emit({
              optionId: getOptionId(menuOptions.length - 1),
            });
          }
          else {
            this.setHighlightedOption(highlightedOptionIndex - 1);
            this.menuOptionId.emit({
              optionId: getOptionId(highlightedOptionIndex - 1),
            });
          }
          this.preventIncorrectTabOrder = false;
          this.focusFromSearchKeypress = false;
          break;
        case "Home":
          this.keyboardNav = true;
          event.preventDefault();
          this.arrowBehaviour(event);
          this.setHighlightedOption(0);
          this.menuOptionId.emit({
            optionId: getOptionId(0),
          });
          break;
        case "End":
          this.keyboardNav = true;
          event.preventDefault();
          this.arrowBehaviour(event);
          this.setHighlightedOption(menuOptions.length - 1);
          this.menuOptionId.emit({
            optionId: getOptionId(menuOptions.length - 1),
          });
          break;
        case " ":
          if (this.isSearchBar || this.isSearchableSelect) {
            break;
          }
          else {
            if (event.target.id !== "clear-button") {
              this.handleMenuChange(true);
            }
          }
          break;
        case "Enter":
          event.preventDefault();
          if (isOpen) {
            if (highlightedOptionIndex >= 0) {
              if (menuOptions[highlightedOptionIndex] !== undefined) {
                if (this.isSearchBar &&
                  menuOptions[highlightedOptionIndex].disabled === true) {
                  this.disabledOptionSelected = true;
                }
                else {
                  this.setInputValue(highlightedOptionIndex);
                  this.value =
                    menuOptions[highlightedOptionIndex][this.valueField];
                }
              }
            }
            else {
              this.setInputValue(highlightedOptionIndex);
            }
          }
          else {
            this.handleMenuChange(true);
          }
          break;
        case "Escape":
          if (this.open) {
            event.stopImmediatePropagation();
          }
          this.handleMenuChange(false);
          this.menuOptionId.emit({ optionId: undefined });
          break;
        case "Shift":
        case "Tab":
          if (this.isSearchBar) {
            this.keyboardNav = true;
          }
          this.preventIncorrectTabOrder = true;
          break;
        case "Backspace":
          if (this.isSearchBar) {
            this.parentEl.setFocus();
            if (this.searchMode === "navigation")
              this.setHighlightedOption(0);
          }
          else if (this.isSearchableSelect) {
            this.parentEl.setFocus();
          }
          this.focusFromSearchKeypress = true;
          break;
        default:
          if (event.key !== "Tab") {
            if (this.isSearchBar) {
              this.parentEl.setFocus();
              if (this.searchMode === "navigation")
                this.setHighlightedOption(0);
            }
            else if (this.isSearchableSelect) {
              this.parentEl.setFocus();
            }
            this.focusFromSearchKeypress = true;
          }
          break;
      }
    };
    this.setInputValue = (highlightedOptionIndex) => {
      const menuOptions = this.setMenuOptions();
      if (menuOptions[highlightedOptionIndex] !== undefined) {
        this.menuOptionSelect.emit({
          value: menuOptions[highlightedOptionIndex][this.valueField],
        });
        this.optionHighlighted = undefined;
        this.menuOptionId.emit({ optionId: undefined });
      }
      if (!this.hasTimedOut)
        this.handleMenuChange(false);
      else
        this.parentEl.setFocus();
    };
    this.handleOptionClick = (event) => {
      const { value, label } = event.target.dataset;
      this.menuOptionSelect.emit({ value, label });
      this.handleMenuChange(false);
    };
    this.handleRetry = () => {
      this.retryButtonClicked.emit({ value: this.value });
    };
    this.handleRetryKeyDown = (ev) => {
      if (ev.key === "Enter" || ev.key === " ") {
        ev.preventDefault();
        this.retryButtonClicked.emit({ value: this.value, keyPressed: ev.key });
      }
    };
    this.handleBlur = (event) => {
      if (event.relatedTarget !== this.inputEl) {
        if (!this.menu.contains(event.relatedTarget)) {
          this.handleMenuChange(false, this.hasPreviouslyBlurred);
        }
      }
      else {
        this.handleMenuChange(false);
        this.preventClickOpen = true;
      }
      if (!this.isSearchBar)
        this.hasPreviouslyBlurred = !!event.relatedTarget;
    };
    this.handleMouseDown = (event) => {
      event.preventDefault();
    };
    this.handleMenuKeyDown = (event) => {
      if (this.activationType === "automatic") {
        this.autoSetValueOnMenuKeyDown(event);
      }
      else if (this.activationType === "manual" && !this.isSearchBar) {
        this.manSetInputValueKeyboardOpen(event);
      }
    };
    this.emitMenuKeyPress = (isNavKey, key) => {
      this.menuKeyPress.emit({ isNavKey: isNavKey, key: key });
    };
    this.autoSetValueOnMenuKeyDown = (event) => {
      event.cancelBubble = true;
      const selectedOptionIndex = this.ungroupedOptions.findIndex((option) => option[this.valueField] === this.value);
      const isSearchableSelect = this.inputEl.tagName === "INPUT";
      this.keyboardNav = false;
      switch (event.key) {
        case " ":
          event.preventDefault();
          break;
        case "ArrowUp":
          if (!this.hasTimedOut) {
            event.preventDefault();
            this.setPreviousOptionValue(selectedOptionIndex);
            this.keyboardNav = true;
          }
          break;
        case "ArrowDown":
          if (!this.hasTimedOut) {
            event.preventDefault();
            this.setNextOptionValue(selectedOptionIndex);
            this.keyboardNav = true;
          }
          break;
        case "Home":
          this.menuOptionSelect.emit({
            value: this.ungroupedOptions[0][this.valueField],
          });
          this.keyboardNav = true;
          break;
        case "End":
          this.menuOptionSelect.emit({
            value: this.ungroupedOptions[this.ungroupedOptions.length - 1][this.valueField],
          });
          this.keyboardNav = true;
          break;
        case "Enter":
          !this.hasTimedOut && this.handleMenuChange(false);
          break;
        case "Escape":
          this.handleMenuChange(false);
          break;
        case "Backspace":
          if (isSearchableSelect) {
            this.inputEl.focus();
          }
          break;
        case "Shift":
          break;
        default:
          if (isSearchableSelect && event.key !== "Tab" && !this.hasTimedOut) {
            this.inputEl.focus();
          }
          if (event.key.length === 1) {
            this.keyboardNav = true;
          }
          break;
      }
      this.emitMenuKeyPress(this.keyboardNav, event.key);
    };
    this.handleMenuKeyUp = (event) => {
      if (event.key === "Tab" && event.shiftKey) {
        this.preventClickOpen = false;
      }
      if (event.key === "Enter" && this.disabledOptionSelected) {
        this.disabledOptionSelected = false;
        event.stopImmediatePropagation();
      }
    };
    this.getOptionId = (value) => {
      return `${this.menuId}-${value}`;
    };
    this.getOptionAriaLabel = (option, parentOption) => {
      let ariaLabel = option[this.labelField];
      if (option.description) {
        ariaLabel = `${ariaLabel}, ${option.description}`;
      }
      if (option.element) {
        ariaLabel = `${ariaLabel}, ${option.element.ariaLabel}`;
      }
      if (parentOption) {
        return `${ariaLabel}, ${parentOption[this.labelField]} group`;
      }
      else {
        return ariaLabel;
      }
    };
    this.getSortedOptions = (options) => {
      let sorted = [];
      if (options.sort) {
        sorted = options.sort((optionA, optionB) => optionA.recommended && !optionB.recommended ? -1 : 0);
      }
      return sorted;
    };
    this.isManualMode = this.activationType === "manual";
    this.scrollToSelected = (menu) => {
      const selectedOption = this.selectOnEnter
        ? this.host.querySelector(`li[data-value="${this.optionHighlighted}"]`)
        : menu.querySelector(".option[aria-selected]");
      if (selectedOption) {
        const elTop = selectedOption.offsetTop + selectedOption.offsetHeight;
        if (elTop > menu.scrollTop + menu.offsetHeight ||
          elTop < menu.scrollTop + menu.offsetHeight) {
          menu.scrollTop = selectedOption.offsetTop;
        }
        selectedOption.focus();
      }
    };
    this.loadUngroupedOptions = () => {
      if (this.options.length > 0 && this.options.map) {
        this.options.map((option) => {
          if (option.children) {
            option.children.map((option) => !option.disabled && this.ungroupedOptions.push(option));
          }
          else if (!option.disabled) {
            this.ungroupedOptions.push(option);
          }
        });
      }
      this.ungroupedOptions = this.getSortedOptions(this.ungroupedOptions);
      this.ungroupedOptionsSet.emit({ options: this.ungroupedOptions });
    };
    this.setMenuScrollbar = () => {
      let optionsHeight = 0;
      this.host
        .querySelectorAll(".option")
        .forEach((option) => (optionsHeight += option.clientHeight));
      if (optionsHeight >= 320) {
        this.menu.classList.add("menu-scroll");
      }
    };
    this.handleTimeoutBlur = (ev) => {
      this.timeoutBlur.emit({ ev });
    };
    this.optionContent = (option) => {
      var _a;
      return (hAsync(Fragment, null, option.loading && hAsync("ic-loading-indicator", { size: "icon" }), hAsync("div", { class: "option-text-container" }, hAsync("div", { class: "option-label" }, option.icon && (hAsync("div", { class: "option-icon", innerHTML: option.icon, "aria-hidden": "true" })), hAsync("ic-typography", { variant: "body", "aria-hidden": "true" }, hAsync("p", null, option[this.labelField]))), option.description && (hAsync("ic-typography", { id: `${this.getOptionId(option[this.valueField])}-description`, class: "option-description", variant: "caption", "aria-hidden": "true" }, hAsync("p", null, option.description))), option.element && (hAsync("div", { class: "option-element", innerHTML: option.element.component, "aria-hidden": "true" }))), !!option[this.valueField] &&
        !!this.value &&
        option[this.valueField].toLowerCase() === ((_a = this.value) === null || _a === void 0 ? void 0 : _a.toLowerCase()) &&
        this.parentEl.tagName !== "IC-SEARCH-BAR" && (hAsync("span", { class: "check-icon", innerHTML: checkIcon }))));
    };
    this.displayOption = (option, index, parentOption) => {
      const { open, value, keyboardNav, isManualMode, initialOptionsListRender, optionHighlighted, options, } = this;
      return (hAsync("li", { id: this.getOptionId(option[this.valueField]), class: {
          option: true,
          "focused-option": isManualMode
            ? (keyboardNav || initialOptionsListRender) &&
              option[this.valueField] === optionHighlighted
            : keyboardNav && option[this.valueField] === value,
          "last-recommended-option": option.recommended &&
            options[index + 1] &&
            !options[index + 1].recommended,
          "disabled-option": option.disabled,
          "loading-option": option.loading,
          timeout: option.timedOut,
        }, role: "option", tabindex: open &&
          (option[this.valueField] === value ||
            option[this.valueField] === optionHighlighted) &&
          keyboardNav
          ? "0"
          : "-1", "aria-label": this.getOptionAriaLabel(option, parentOption), "aria-selected": `${option[this.valueField] === value}`, "aria-disabled": option.disabled ? "true" : "false", onClick: !option.timedOut && !option.loading && this.handleOptionClick, onBlur: this.handleBlur, onMouseDown: this.handleMouseDown, "data-value": option[this.valueField], "data-label": option[this.labelField] }, option.timedOut ? (hAsync(Fragment, null, hAsync("div", { class: "loading-error-info" }, hAsync("svg", { class: "error-icon-svg", "aria-labelledby": "error-title", xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 24 24", fill: "#000000" }, hAsync("title", { id: "error-title" }, "Error"), hAsync("path", { d: "M0 0h24v24H0z", fill: "none" }), hAsync("path", { d: "M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z" })), hAsync("ic-typography", { variant: "label" }, option[this.labelField])), hAsync("ic-button", { size: "small", variant: "tertiary", onClick: this.handleRetry, onKeyDown: this.handleRetryKeyDown, onBlur: this.handleTimeoutBlur, id: "retry-button" }, "Retry"))) : (this.optionContent(option))));
    };
    this.focusFromSearchKeypress = false;
    this.initialOptionsListRender = false;
    this.keyboardNav = false;
    this.optionHighlighted = undefined;
    this.preventIncorrectTabOrder = false;
    this.activationType = "automatic";
    this.anchorEl = undefined;
    this.autoFocusOnSelected = true;
    this.fullWidth = false;
    this.inputEl = undefined;
    this.inputLabel = undefined;
    this.labelField = "label";
    this.menuId = undefined;
    this.open = undefined;
    this.parentEl = undefined;
    this.searchMode = "navigation";
    this.selectOnEnter = false;
    this.size = "default";
    this.small = false;
    this.options = undefined;
    this.value = undefined;
    this.valueField = "value";
  }
  watchOpenHandler() {
    if (!this.open && this.popperInstance) {
      this.popperInstance.destroy();
      this.popperInstance = null;
    }
  }
  watchOptionsHandler(newOptions) {
    this.hasTimedOut = newOptions.some((opt) => opt.timedOut);
    this.isLoading = newOptions.some((opt) => opt.loading);
    this.ungroupedOptions = [];
    this.loadUngroupedOptions();
  }
  watchValueHandler() {
    this.menuValueChange.emit({ value: this.value });
  }
  connectedCallback() {
    this.getParentEl(this.parentEl);
    if (this.isSearchBar) {
      if (this.searchMode === "navigation")
        this.setHighlightedOption(0);
      this.initialOptionsListRender = true;
    }
  }
  disconnectedCallback() {
    if (this.popperInstance) {
      this.popperInstance.destroy();
    }
    this.parentEl.removeEventListener("icClear", this.handleClearListener);
    this.parentEl.removeEventListener("icSubmitSearch", this.handleSubmitSearch);
  }
  componentWillLoad() {
    var _a, _b;
    this.loadUngroupedOptions();
    this.parentEl.addEventListener("icClear", this.handleClearListener);
    this.parentEl.addEventListener("icSubmitSearch", this.handleSubmitSearch);
    this.hasTimedOut = (_a = this.options) === null || _a === void 0 ? void 0 : _a.some((opt) => opt.timedOut);
    this.isLoading = (_b = this.options) === null || _b === void 0 ? void 0 : _b.some((opt) => opt.loading);
  }
  componentDidLoad() {
    if (this.isSearchBar &&
      this.parentEl.disableFilter) {
      this.focusFromSearchKeypress = true;
    }
    onComponentRequiredPropUndefined([
      { prop: this.open, propName: "open" },
      { prop: this.options, propName: "options" },
      { prop: this.menuId, propName: "menu-id" },
      { prop: this.inputLabel, propName: "input-label" },
      //NOTE: no check for value, input-el or anchor-el as otherwise get console errors on first load of select component
    ], "Menu");
  }
  componentDidUpdate() {
    const inputValueInOptions = this.options.some((option) => option[this.valueField] === this.value);
    const optionHighlightedIsSet = this.optionHighlighted !== null &&
      this.optionHighlighted !== undefined &&
      this.optionHighlighted !== "";
    if (this.open && this.options.length !== 0) {
      if (this.value &&
        this.keyboardNav &&
        inputValueInOptions &&
        this.autoFocusOnSelected &&
        !this.isSearchableSelect) {
        this.scrollToSelected(this.menu);
      }
      else if (this.inputEl.tagName !== "IC-TEXT-FIELD" &&
        this.inputEl.tagName !== "INPUT") {
        this.menu.focus();
      }
      else if (optionHighlightedIsSet &&
        !this.focusFromSearchKeypress &&
        !this.preventIncorrectTabOrder) {
        const highlightedEl = this.host.querySelector(`li[data-value="${this.optionHighlighted}"]`);
        if (highlightedEl) {
          highlightedEl.focus();
        }
      }
    }
    if (this.open && !this.value && this.selectOnEnter) {
      this.scrollToSelected(this.menu);
    }
  }
  componentDidRender() {
    if (this.open && !this.popperInstance && this.anchorEl) {
      this.initPopperJs(this.anchorEl);
    }
    if (this.open && !!this.options.length) {
      this.setMenuScrollbar();
    }
  }
  /**
   * @internal If menu is opened with the mouse, emit menuStateChange custom event.
   */
  async handleClickOpen() {
    if (!this.preventClickOpen) {
      this.menuStateChange.emit({ open: !this.open });
      this.keyboardNav = false;
    }
    this.preventClickOpen = false;
  }
  /**
   * Used alongside activationType
   * If menu is opened via keyboard navigation (i.e. Enter, ArrowUp or ArrowDown), emit optionSelect custom event.
   * @param {KeyboardEvent} event - keyboard event
   */
  async handleKeyboardOpen(event) {
    this.keyboardNav = false;
    if (this.activationType === "automatic") {
      this.autoSetInputValueKeyboardOpen(event);
    }
    else {
      this.manSetInputValueKeyboardOpen(event);
    }
  }
  /**
   * @internal Used to highlight the first option in the menu.
   */
  async handleSetFirstOption() {
    this.setHighlightedOption(0);
  }
  /**
   * @internal Used to initialize popperJS with an anchor element.
   * 5/12/2023: Tested with Floating UI, however, discovered inconsistent
   * boundary behaviour so sticking with PopperJS.
   */
  async initPopperJs(anchor) {
    this.popperInstance = createPopper(anchor, this.host, {
      placement: "bottom",
      modifiers: [
        {
          name: "offset",
          options: {
            offset: [0, 7],
          },
        },
        {
          name: "flip",
          options: {
            fallbackPlacements: ["top"],
            rootBoundary: "viewport",
          },
        },
      ],
    });
  }
  render() {
    const { inputLabel, options, menuId, value, fullWidth, hasTimedOut, isLoading, small, size, open, inputEl, keyboardNav, } = this;
    return (hAsync(Host, { class: {
        "full-width": fullWidth,
        "no-focus": (inputEl === null || inputEl === void 0 ? void 0 : inputEl.tagName) === "INPUT" || hasTimedOut || isLoading,
        small: small || size === "small",
        open: open,
      } }, options.length !== 0 && (hAsync("ul", { id: menuId, class: "menu", role: "listbox", "aria-label": inputLabel, "aria-activedescendant": value != null && value !== "" ? this.getOptionId(value) : "", tabindex: open && !keyboardNav && (inputEl === null || inputEl === void 0 ? void 0 : inputEl.tagName) !== "INPUT" ? "0" : "-1", ref: (el) => (this.menu = el), onKeyDown: this.handleMenuKeyDown, onKeyUp: this.handleMenuKeyUp, onBlur: this.handleBlur }, this.getSortedOptions(options).map((option, index) => {
      if (option.children) {
        if (option.children.length > 0) {
          return (hAsync("div", null, hAsync("ic-typography", { class: "option-group-title", role: "presentation", variant: "subtitle-small" }, hAsync("p", null, option[this.labelField])), option.children.map((childOption) => this.displayOption(childOption, index, option))));
        }
        else {
          return null;
        }
      }
      else {
        return this.displayOption(option, index);
      }
    })))));
  }
  get host() { return getElement(this); }
  static get watchers() { return {
    "open": ["watchOpenHandler"],
    "options": ["watchOptionsHandler"],
    "value": ["watchValueHandler"]
  }; }
  static get style() { return icMenuCss; }
  static get cmpMeta() { return {
    "$flags$": 2,
    "$tagName$": "ic-menu",
    "$members$": {
      "activationType": [1, "activation-type"],
      "anchorEl": [16],
      "autoFocusOnSelected": [4, "auto-focus-on-selected"],
      "fullWidth": [4, "full-width"],
      "inputEl": [16],
      "inputLabel": [1, "input-label"],
      "labelField": [1, "label-field"],
      "menuId": [1, "menu-id"],
      "open": [516],
      "parentEl": [16],
      "searchMode": [1, "search-mode"],
      "selectOnEnter": [4, "select-on-enter"],
      "size": [1],
      "small": [4],
      "options": [16],
      "value": [1025],
      "valueField": [1, "value-field"],
      "focusFromSearchKeypress": [32],
      "initialOptionsListRender": [32],
      "keyboardNav": [32],
      "optionHighlighted": [32],
      "preventIncorrectTabOrder": [32],
      "handleClickOpen": [64],
      "handleKeyboardOpen": [64],
      "handleSetFirstOption": [64],
      "initPopperJs": [64]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["open", "open"]]
  }; }
}

const icMenuGroupCss = "/*!@html*/html.sc-ic-menu-group{line-height:1.15;-webkit-text-size-adjust:100%}/*!@body*/body.sc-ic-menu-group{margin:0}/*!@main*/main.sc-ic-menu-group{display:block}/*!@h1*/h1.sc-ic-menu-group{font-size:2em;margin:0.67em 0}/*!@hr*/hr.sc-ic-menu-group{box-sizing:content-box;height:0;overflow:visible}/*!@pre*/pre.sc-ic-menu-group{font-family:monospace, monospace;font-size:1em}/*!@a*/a.sc-ic-menu-group{background-color:transparent}/*!@abbr[title]*/abbr[title].sc-ic-menu-group{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}/*!@b,\nstrong*/b.sc-ic-menu-group,strong.sc-ic-menu-group{font-weight:bolder}/*!@code,\nkbd,\nsamp*/code.sc-ic-menu-group,kbd.sc-ic-menu-group,samp.sc-ic-menu-group{font-family:monospace, monospace;font-size:1em}/*!@small*/small.sc-ic-menu-group{font-size:80%}/*!@sub,\nsup*/sub.sc-ic-menu-group,sup.sc-ic-menu-group{font-size:75%;line-height:0;position:relative;vertical-align:baseline}/*!@sub*/sub.sc-ic-menu-group{bottom:-0.25em}/*!@sup*/sup.sc-ic-menu-group{top:-0.5em}/*!@img*/img.sc-ic-menu-group{border-style:none}/*!@button,\ninput,\noptgroup,\nselect,\ntextarea*/button.sc-ic-menu-group,input.sc-ic-menu-group,optgroup.sc-ic-menu-group,select.sc-ic-menu-group,textarea.sc-ic-menu-group{font-family:inherit;font-size:100%;line-height:1.15;margin:0}/*!@button,\ninput*/button.sc-ic-menu-group,input.sc-ic-menu-group{overflow:visible}/*!@button,\nselect*/button.sc-ic-menu-group,select.sc-ic-menu-group{text-transform:none}/*!@button,\n[type=\"button\"],\n[type=\"reset\"],\n[type=\"submit\"]*/button.sc-ic-menu-group,[type=\"button\"].sc-ic-menu-group,[type=\"reset\"].sc-ic-menu-group,[type=\"submit\"].sc-ic-menu-group{-webkit-appearance:button}/*!@button::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner*/button.sc-ic-menu-group::-moz-focus-inner,[type=\"button\"].sc-ic-menu-group::-moz-focus-inner,[type=\"reset\"].sc-ic-menu-group::-moz-focus-inner,[type=\"submit\"].sc-ic-menu-group::-moz-focus-inner{border-style:none;padding:0}/*!@button:-moz-focusring,\n[type=\"button\"]:-moz-focusring,\n[type=\"reset\"]:-moz-focusring,\n[type=\"submit\"]:-moz-focusring*/button.sc-ic-menu-group:-moz-focusring,[type=\"button\"].sc-ic-menu-group:-moz-focusring,[type=\"reset\"].sc-ic-menu-group:-moz-focusring,[type=\"submit\"].sc-ic-menu-group:-moz-focusring{outline:1px dotted ButtonText}/*!@fieldset*/fieldset.sc-ic-menu-group{padding:0.35em 0.75em 0.625em}/*!@legend*/legend.sc-ic-menu-group{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}/*!@progress*/progress.sc-ic-menu-group{vertical-align:baseline}/*!@textarea*/textarea.sc-ic-menu-group{overflow:auto}/*!@[type=\"checkbox\"],\n[type=\"radio\"]*/[type=\"checkbox\"].sc-ic-menu-group,[type=\"radio\"].sc-ic-menu-group{box-sizing:border-box;padding:0}/*!@[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button*/[type=\"number\"].sc-ic-menu-group::-webkit-inner-spin-button,[type=\"number\"].sc-ic-menu-group::-webkit-outer-spin-button{height:auto}/*!@[type=\"search\"]*/[type=\"search\"].sc-ic-menu-group{-webkit-appearance:textfield;outline-offset:-2px}/*!@[type=\"search\"]::-webkit-search-decoration*/[type=\"search\"].sc-ic-menu-group::-webkit-search-decoration{-webkit-appearance:none}/*!@::-webkit-file-upload-button*/.sc-ic-menu-group::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}/*!@details*/details.sc-ic-menu-group{display:block}/*!@summary*/summary.sc-ic-menu-group{display:list-item}/*!@template*/template.sc-ic-menu-group{display:none}/*!@[hidden]*/[hidden].sc-ic-menu-group{display:none}/*!@html,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo*/html.sc-ic-menu-group,body.sc-ic-menu-group,div.sc-ic-menu-group,span.sc-ic-menu-group,applet.sc-ic-menu-group,object.sc-ic-menu-group,iframe.sc-ic-menu-group,h1.sc-ic-menu-group,h2.sc-ic-menu-group,h3.sc-ic-menu-group,h4.sc-ic-menu-group,h5.sc-ic-menu-group,h6.sc-ic-menu-group,p.sc-ic-menu-group,blockquote.sc-ic-menu-group,pre.sc-ic-menu-group,a.sc-ic-menu-group,abbr.sc-ic-menu-group,acronym.sc-ic-menu-group,address.sc-ic-menu-group,big.sc-ic-menu-group,cite.sc-ic-menu-group,code.sc-ic-menu-group,del.sc-ic-menu-group,dfn.sc-ic-menu-group,em.sc-ic-menu-group,img.sc-ic-menu-group,ins.sc-ic-menu-group,kbd.sc-ic-menu-group,q.sc-ic-menu-group,s.sc-ic-menu-group,samp.sc-ic-menu-group,small.sc-ic-menu-group,strike.sc-ic-menu-group,strong.sc-ic-menu-group,sub.sc-ic-menu-group,sup.sc-ic-menu-group,tt.sc-ic-menu-group,var.sc-ic-menu-group,b.sc-ic-menu-group,u.sc-ic-menu-group,i.sc-ic-menu-group,center.sc-ic-menu-group,dl.sc-ic-menu-group,dt.sc-ic-menu-group,dd.sc-ic-menu-group,ol.sc-ic-menu-group,ul.sc-ic-menu-group,li.sc-ic-menu-group,fieldset.sc-ic-menu-group,form.sc-ic-menu-group,label.sc-ic-menu-group,legend.sc-ic-menu-group,table.sc-ic-menu-group,caption.sc-ic-menu-group,tbody.sc-ic-menu-group,tfoot.sc-ic-menu-group,thead.sc-ic-menu-group,tr.sc-ic-menu-group,th.sc-ic-menu-group,td.sc-ic-menu-group,article.sc-ic-menu-group,aside.sc-ic-menu-group,canvas.sc-ic-menu-group,details.sc-ic-menu-group,embed.sc-ic-menu-group,figure.sc-ic-menu-group,figcaption.sc-ic-menu-group,footer.sc-ic-menu-group,header.sc-ic-menu-group,hgroup.sc-ic-menu-group,menu.sc-ic-menu-group,nav.sc-ic-menu-group,output.sc-ic-menu-group,ruby.sc-ic-menu-group,section.sc-ic-menu-group,summary.sc-ic-menu-group,time.sc-ic-menu-group,mark.sc-ic-menu-group,audio.sc-ic-menu-group,video.sc-ic-menu-group{margin:0;padding:0;border:0;font-size:100%;font-style:inherit;vertical-align:baseline}/*!@:host*/.sc-ic-menu-group-h{display:flex;flex-direction:column}/*!@ic-typography*/ic-typography.sc-ic-menu-group{color:var(--ic-color-tertiary-text);margin:var(--ic-space-xs) var(--ic-space-xs) 0}/*!@ul*/ul.sc-ic-menu-group{list-style-type:none;margin:0;padding:0}/*!@hr*/hr.sc-ic-menu-group{display:flex;align-self:stretch;border:calc(var(--ic-space-xxxs) / 2) solid var(--ic-architectural-300);margin:var(--ic-space-xxs) 0 calc(var(--ic-space-sm) / 4)}";

class MenuGroup {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.label = undefined;
  }
  render() {
    const parentMenu = this.el.closest("ic-popover-menu");
    return (hAsync(Host, { "aria-label": this.label !== null ? this.label : "" }, isPropDefined(this.label) && (hAsync("ic-typography", { variant: "subtitle-small" }, this.label)), hAsync("ul", { role: "group" }, hAsync("slot", null)), this.el !== (parentMenu === null || parentMenu === void 0 ? void 0 : parentMenu.querySelector("ic-menu-group:last-child")) && (hAsync("hr", null))));
  }
  get el() { return getElement(this); }
  static get style() { return icMenuGroupCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "ic-menu-group",
    "$members$": {
      "label": [1]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": []
  }; }
}

const icMenuItemCss = "/*!@html*/html.sc-ic-menu-item{line-height:1.15;-webkit-text-size-adjust:100%}/*!@body*/body.sc-ic-menu-item{margin:0}/*!@main*/main.sc-ic-menu-item{display:block}/*!@h1*/h1.sc-ic-menu-item{font-size:2em;margin:0.67em 0}/*!@hr*/hr.sc-ic-menu-item{box-sizing:content-box;height:0;overflow:visible}/*!@pre*/pre.sc-ic-menu-item{font-family:monospace, monospace;font-size:1em}/*!@a*/a.sc-ic-menu-item{background-color:transparent}/*!@abbr[title]*/abbr[title].sc-ic-menu-item{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}/*!@b,\nstrong*/b.sc-ic-menu-item,strong.sc-ic-menu-item{font-weight:bolder}/*!@code,\nkbd,\nsamp*/code.sc-ic-menu-item,kbd.sc-ic-menu-item,samp.sc-ic-menu-item{font-family:monospace, monospace;font-size:1em}/*!@small*/small.sc-ic-menu-item{font-size:80%}/*!@sub,\nsup*/sub.sc-ic-menu-item,sup.sc-ic-menu-item{font-size:75%;line-height:0;position:relative;vertical-align:baseline}/*!@sub*/sub.sc-ic-menu-item{bottom:-0.25em}/*!@sup*/sup.sc-ic-menu-item{top:-0.5em}/*!@img*/img.sc-ic-menu-item{border-style:none}/*!@button,\ninput,\noptgroup,\nselect,\ntextarea*/button.sc-ic-menu-item,input.sc-ic-menu-item,optgroup.sc-ic-menu-item,select.sc-ic-menu-item,textarea.sc-ic-menu-item{font-family:inherit;font-size:100%;line-height:1.15;margin:0}/*!@button,\ninput*/button.sc-ic-menu-item,input.sc-ic-menu-item{overflow:visible}/*!@button,\nselect*/button.sc-ic-menu-item,select.sc-ic-menu-item{text-transform:none}/*!@button,\n[type=\"button\"],\n[type=\"reset\"],\n[type=\"submit\"]*/button.sc-ic-menu-item,[type=\"button\"].sc-ic-menu-item,[type=\"reset\"].sc-ic-menu-item,[type=\"submit\"].sc-ic-menu-item{-webkit-appearance:button}/*!@button::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner*/button.sc-ic-menu-item::-moz-focus-inner,[type=\"button\"].sc-ic-menu-item::-moz-focus-inner,[type=\"reset\"].sc-ic-menu-item::-moz-focus-inner,[type=\"submit\"].sc-ic-menu-item::-moz-focus-inner{border-style:none;padding:0}/*!@button:-moz-focusring,\n[type=\"button\"]:-moz-focusring,\n[type=\"reset\"]:-moz-focusring,\n[type=\"submit\"]:-moz-focusring*/button.sc-ic-menu-item:-moz-focusring,[type=\"button\"].sc-ic-menu-item:-moz-focusring,[type=\"reset\"].sc-ic-menu-item:-moz-focusring,[type=\"submit\"].sc-ic-menu-item:-moz-focusring{outline:1px dotted ButtonText}/*!@fieldset*/fieldset.sc-ic-menu-item{padding:0.35em 0.75em 0.625em}/*!@legend*/legend.sc-ic-menu-item{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}/*!@progress*/progress.sc-ic-menu-item{vertical-align:baseline}/*!@textarea*/textarea.sc-ic-menu-item{overflow:auto}/*!@[type=\"checkbox\"],\n[type=\"radio\"]*/[type=\"checkbox\"].sc-ic-menu-item,[type=\"radio\"].sc-ic-menu-item{box-sizing:border-box;padding:0}/*!@[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button*/[type=\"number\"].sc-ic-menu-item::-webkit-inner-spin-button,[type=\"number\"].sc-ic-menu-item::-webkit-outer-spin-button{height:auto}/*!@[type=\"search\"]*/[type=\"search\"].sc-ic-menu-item{-webkit-appearance:textfield;outline-offset:-2px}/*!@[type=\"search\"]::-webkit-search-decoration*/[type=\"search\"].sc-ic-menu-item::-webkit-search-decoration{-webkit-appearance:none}/*!@::-webkit-file-upload-button*/.sc-ic-menu-item::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}/*!@details*/details.sc-ic-menu-item{display:block}/*!@summary*/summary.sc-ic-menu-item{display:list-item}/*!@template*/template.sc-ic-menu-item{display:none}/*!@[hidden]*/[hidden].sc-ic-menu-item{display:none}/*!@html,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo*/html.sc-ic-menu-item,body.sc-ic-menu-item,div.sc-ic-menu-item,span.sc-ic-menu-item,applet.sc-ic-menu-item,object.sc-ic-menu-item,iframe.sc-ic-menu-item,h1.sc-ic-menu-item,h2.sc-ic-menu-item,h3.sc-ic-menu-item,h4.sc-ic-menu-item,h5.sc-ic-menu-item,h6.sc-ic-menu-item,p.sc-ic-menu-item,blockquote.sc-ic-menu-item,pre.sc-ic-menu-item,a.sc-ic-menu-item,abbr.sc-ic-menu-item,acronym.sc-ic-menu-item,address.sc-ic-menu-item,big.sc-ic-menu-item,cite.sc-ic-menu-item,code.sc-ic-menu-item,del.sc-ic-menu-item,dfn.sc-ic-menu-item,em.sc-ic-menu-item,img.sc-ic-menu-item,ins.sc-ic-menu-item,kbd.sc-ic-menu-item,q.sc-ic-menu-item,s.sc-ic-menu-item,samp.sc-ic-menu-item,small.sc-ic-menu-item,strike.sc-ic-menu-item,strong.sc-ic-menu-item,sub.sc-ic-menu-item,sup.sc-ic-menu-item,tt.sc-ic-menu-item,var.sc-ic-menu-item,b.sc-ic-menu-item,u.sc-ic-menu-item,i.sc-ic-menu-item,center.sc-ic-menu-item,dl.sc-ic-menu-item,dt.sc-ic-menu-item,dd.sc-ic-menu-item,ol.sc-ic-menu-item,ul.sc-ic-menu-item,li.sc-ic-menu-item,fieldset.sc-ic-menu-item,form.sc-ic-menu-item,label.sc-ic-menu-item,legend.sc-ic-menu-item,table.sc-ic-menu-item,caption.sc-ic-menu-item,tbody.sc-ic-menu-item,tfoot.sc-ic-menu-item,thead.sc-ic-menu-item,tr.sc-ic-menu-item,th.sc-ic-menu-item,td.sc-ic-menu-item,article.sc-ic-menu-item,aside.sc-ic-menu-item,canvas.sc-ic-menu-item,details.sc-ic-menu-item,embed.sc-ic-menu-item,figure.sc-ic-menu-item,figcaption.sc-ic-menu-item,footer.sc-ic-menu-item,header.sc-ic-menu-item,hgroup.sc-ic-menu-item,menu.sc-ic-menu-item,nav.sc-ic-menu-item,output.sc-ic-menu-item,ruby.sc-ic-menu-item,section.sc-ic-menu-item,summary.sc-ic-menu-item,time.sc-ic-menu-item,mark.sc-ic-menu-item,audio.sc-ic-menu-item,video.sc-ic-menu-item{margin:0;padding:0;border:0;font-size:100%;font-style:inherit;vertical-align:baseline}/*!@li*/li.sc-ic-menu-item{list-style:none;padding:0}/*!@:host::part(button)*/.sc-ic-menu-item-h::part(button){color:var(--ic-color-primary-text);padding:calc(var(--ic-space-xxxs) / 2);display:flex;align-items:flex-start;gap:var(--ic-space-xs);border-radius:0;min-height:2.5rem;height:auto}/*!@.focus-border*/.focus-border.sc-ic-menu-item{display:flex;align-items:flex-start;gap:var(--ic-space-xs);border-radius:var(--ic-border-radius);margin:calc(var(--ic-space-xxxs) / 2);padding:var(--ic-space-xxs);border:var(--ic-space-xxxs) dashed transparent;--icon-height:auto}/*!@:host(.disabled)::part(button)*/.disabled.sc-ic-menu-item-h::part(button){color:var(--ic-architectural-200) !important;pointer-events:none}/*!@:host(.disabled) .menu-item-label,\n:host(.disabled) .shortcut,\n:host(.disabled) .menu-item-description*/.disabled.sc-ic-menu-item-h .menu-item-label.sc-ic-menu-item,.disabled.sc-ic-menu-item-h .shortcut.sc-ic-menu-item,.disabled.sc-ic-menu-item-h .menu-item-description.sc-ic-menu-item{color:var(--ic-architectural-200) !important}/*!@:host([variant=\"destructive\"])::part(button)*/[variant=\"destructive\"].sc-ic-menu-item-h::part(button){color:var(--ic-action-destructive)}/*!@:host::part(button):hover*/.sc-ic-menu-item-h::part(button):hover{background-color:var(--ic-action-dark-bg-hover)}/*!@:host::part(button):focus-visible,\n:host::part(button):focus*/.sc-ic-menu-item-h::part(button):focus-visible,.sc-ic-menu-item-h::part(button):focus{color:var(--ic-color-white-text);background-color:var(--ic-focus-blue);box-shadow:none}/*!@:host(.disabled)::part(button):focus-visible,\n:host(.disabled)::part(button):focus*/.disabled.sc-ic-menu-item-h::part(button):focus-visible,.disabled.sc-ic-menu-item-h::part(button):focus{color:var(--ic-theme-lighten-40) !important}/*!@:host([variant=\"destructive\"])::part(button):focus-visible,\n:host([variant=\"destructive\"])::part(button):focus*/[variant=\"destructive\"].sc-ic-menu-item-h::part(button):focus-visible,[variant=\"destructive\"].sc-ic-menu-item-h::part(button):focus{background-color:var(--ic-action-destructive)}/*!@ic-button:focus-within .menu-item-label,\nic-button:focus-within .shortcut,\nic-button:focus-within .menu-item-description*/ic-button.sc-ic-menu-item:focus-within .menu-item-label.sc-ic-menu-item,ic-button.sc-ic-menu-item:focus-within .shortcut.sc-ic-menu-item,ic-button.sc-ic-menu-item:focus-within .menu-item-description.sc-ic-menu-item{color:var(--ic-color-white-text)}/*!@:host(.disabled) ic-button:focus-within .focus-border*/.disabled.sc-ic-menu-item-h ic-button.sc-ic-menu-item:focus-within .focus-border.sc-ic-menu-item{border-color:var(--ic-architectural-white)}/*!@:host(.disabled) ic-button:focus-within .menu-item-label,\n:host(.disabled) ic-button:focus-within .shortcut,\n:host(.disabled) ic-button:focus-within .menu-item-description*/.disabled.sc-ic-menu-item-h ic-button.sc-ic-menu-item:focus-within .menu-item-label.sc-ic-menu-item,.disabled.sc-ic-menu-item-h ic-button.sc-ic-menu-item:focus-within .shortcut.sc-ic-menu-item,.disabled.sc-ic-menu-item-h ic-button.sc-ic-menu-item:focus-within .menu-item-description.sc-ic-menu-item{color:var(--ic-theme-lighten-40) !important}/*!@:host::part(button):active*/.sc-ic-menu-item-h::part(button):active{background-color:var(--ic-action-dark-bg-active);color:var(--ic-color-primary-text) !important}/*!@:host([variant=\"destructive\"])::part(button):active*/[variant=\"destructive\"].sc-ic-menu-item-h::part(button):active{background-color:var(--ic-action-dark-bg-active);color:var(--ic-action-destructive) !important}/*!@.menu-item-info*/.menu-item-info.sc-ic-menu-item{display:flex;flex-direction:column;flex:1;align-items:baseline;white-space:pre-line;text-align:left}/*!@.menu-labels*/.menu-labels.sc-ic-menu-item{display:flex;align-items:baseline;gap:var(--ic-space-xs)}/*!@.menu-item-description*/.menu-item-description.sc-ic-menu-item{color:var(--ic-color-secondary-text)}/*!@.shortcut*/.shortcut.sc-ic-menu-item{color:var(--ic-color-tertiary-text);display:flex;flex:min-content}/*!@:host([variant=\"destructive\"]) .menu-item-label*/[variant=\"destructive\"].sc-ic-menu-item-h .menu-item-label.sc-ic-menu-item{text-transform:uppercase;font-weight:600;letter-spacing:0.025em}/*!@ic-button:active .menu-item-label*/ic-button.sc-ic-menu-item:active .menu-item-label.sc-ic-menu-item{color:var(--ic-color-primary-text)}/*!@ic-button:active .menu-item-description*/ic-button.sc-ic-menu-item:active .menu-item-description.sc-ic-menu-item{color:var(--ic-color-secondary-text)}/*!@ic-button:active .shortcut*/ic-button.sc-ic-menu-item:active .shortcut.sc-ic-menu-item{color:var(--ic-color-tertiary-text)}/*!@:host([variant=\"destructive\"]) ic-button:active .menu-item-label*/[variant=\"destructive\"].sc-ic-menu-item-h ic-button.sc-ic-menu-item:active .menu-item-label.sc-ic-menu-item{color:var(--ic-action-destructive) !important}/*!@.icon,\n.check-icon,\n.submenu-icon,\n.icon ::slotted(svg),\n.check-icon svg,\n.submenu-icon svg*/.icon.sc-ic-menu-item,.check-icon.sc-ic-menu-item,.submenu-icon.sc-ic-menu-item,.icon .sc-ic-menu-item-s>svg,.check-icon.sc-ic-menu-item svg.sc-ic-menu-item,.submenu-icon.sc-ic-menu-item svg.sc-ic-menu-item{width:var(--ic-space-lg);height:var(--ic-space-lg)}/*!@.check-icon.hide*/.check-icon.hide.sc-ic-menu-item{visibility:hidden}@media (forced-colors: active){/*!@:host::part(button)*/.sc-ic-menu-item-h::part(button){border:canvas}/*!@:host::part(button):focus-visible*/.sc-ic-menu-item-h::part(button):focus-visible{outline:var(--ic-space-xxxs) solid transparent}/*!@.focus-border*/.focus-border.sc-ic-menu-item{border-color:canvas}/*!@:host(.disabled) ic-button:focus-within .focus-border*/.disabled.sc-ic-menu-item-h ic-button.sc-ic-menu-item:focus-within .focus-border.sc-ic-menu-item{border-color:GrayText}/*!@:host(.disabled) .menu-item-info,\n  :host(.disabled) .menu-item-label,\n  :host(.disabled) .shortcut,\n  :host(.disabled) .menu-item-description,\n  :host(.disabled) ic-button:focus-within .menu-item-info,\n  :host(.disabled) ic-button:focus-within .menu-item-label,\n  :host(.disabled) ic-button:focus-within .shortcut,\n  :host(.disabled) ic-button:focus-within .menu-item-description*/.disabled.sc-ic-menu-item-h .menu-item-info.sc-ic-menu-item,.disabled.sc-ic-menu-item-h .menu-item-label.sc-ic-menu-item,.disabled.sc-ic-menu-item-h .shortcut.sc-ic-menu-item,.disabled.sc-ic-menu-item-h .menu-item-description.sc-ic-menu-item,.disabled.sc-ic-menu-item-h ic-button.sc-ic-menu-item:focus-within .menu-item-info.sc-ic-menu-item,.disabled.sc-ic-menu-item-h ic-button.sc-ic-menu-item:focus-within .menu-item-label.sc-ic-menu-item,.disabled.sc-ic-menu-item-h ic-button.sc-ic-menu-item:focus-within .shortcut.sc-ic-menu-item,.disabled.sc-ic-menu-item-h ic-button.sc-ic-menu-item:focus-within .menu-item-description.sc-ic-menu-item{color:GrayText !important}/*!@:host(.disabled)::part(button):focus-visible,\n  :host(.disabled)::part(button):focus*/.disabled.sc-ic-menu-item-h::part(button):focus-visible,.disabled.sc-ic-menu-item-h::part(button):focus{outline-color:GrayText !important}}";

/**
 * @slot icon - Content will be placed to the left of the menu item label.
 */
class MenuItem {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.childBlur = createEvent(this, "childBlur", 7);
    this.handleMenuItemClick = createEvent(this, "handleMenuItemClick", 7);
    this.triggerPopoverMenuInstance = createEvent(this, "triggerPopoverMenuInstance", 7);
    this.handleClick = (e) => {
      if (isPropDefined(this.submenuTriggerFor)) {
        this.triggerPopoverMenuInstance.emit();
      }
      else if (this.variant === "toggle") {
        e.preventDefault();
        this.toggleChecked
          ? (this.toggleChecked = false)
          : (this.toggleChecked = true);
      }
      this.handleMenuItemClick.emit({
        label: this.label,
        hasSubMenu: !!this.el.submenuTriggerFor,
      });
    };
    this.getMenuItemAriaLabel = () => {
      let ariaLabel = this.label;
      if (isPropDefined(this.description)) {
        ariaLabel = `${ariaLabel}, ${this.description}`;
      }
      if (isPropDefined(this.keyboardShortcut)) {
        ariaLabel = `${ariaLabel}, ${this.keyboardShortcut}`;
      }
      if (this.variant === "destructive") {
        ariaLabel = `${ariaLabel}, destructive`;
      }
      if (isPropDefined(this.submenuTriggerFor)) {
        ariaLabel = `${ariaLabel}, triggers submenu`;
      }
      if (this.el.classList.contains("ic-popover-submenu-back-button")) {
        ariaLabel = "Go back to parent menu";
      }
      const parentEl = getParentElement(this.el);
      if (parentEl.tagName === "IC-MENU-GROUP" &&
        parentEl.label) {
        return `${ariaLabel}, ${parentEl.label} menu group`;
      }
      else {
        return ariaLabel;
      }
    };
    this.toggleChecked = false;
    this.description = undefined;
    this.disabled = false;
    this.href = undefined;
    this.hreflang = undefined;
    this.keyboardShortcut = undefined;
    this.label = undefined;
    this.referrerpolicy = undefined;
    this.rel = undefined;
    this.submenuTriggerFor = undefined;
    this.target = undefined;
    this.variant = "default";
  }
  componentWillLoad() {
    // This ensures that trigger menu items are always set to the default variant
    if (isPropDefined(this.submenuTriggerFor) && this.variant !== "default") {
      this.variant = "default";
    }
    removeDisabledFalse(this.disabled, this.el);
  }
  componentDidLoad() {
    onComponentRequiredPropUndefined([{ prop: this.label, propName: "label" }], "Menu Item");
  }
  handleHostClick(e) {
    if (this.disabled) {
      e.stopImmediatePropagation();
    }
  }
  render() {
    // A sub-component to layout the menu information correctly in ic-button
    const MenuItemInformation = () => {
      return (hAsync("div", { class: "menu-item-info" }, hAsync("div", { class: "menu-labels" }, hAsync("ic-typography", { class: "menu-item-label" }, this.label), this.keyboardShortcut && (hAsync("ic-typography", { variant: "caption", class: "shortcut" }, this.keyboardShortcut))), this.description && (hAsync("ic-typography", { class: "menu-item-description", variant: "caption" }, this.description))));
    };
    return (hAsync(Host, { class: {
        ["disabled"]: this.disabled,
      } }, hAsync("li", { role: this.variant === "toggle" ? "menuitemcheckbox" : "menuitem", "aria-disabled": `${this.disabled}`, "aria-checked": this.variant === "toggle" && this.toggleChecked === true
        ? true
        : this.variant === "toggle" && this.toggleChecked === false
          ? false
          : undefined }, hAsync("ic-button", { fullWidth: true, variant: "tertiary", onClick: this.handleClick, href: isPropDefined(this.href), hreflang: isPropDefined(this.hreflang), target: isPropDefined(this.target), rel: isPropDefined(this.rel), referrerpolicy: this.referrerpolicy !== undefined ? this.referrerpolicy : null, "aria-disabled": `${this.disabled}`, "aria-label": this.getMenuItemAriaLabel(), ariaControlsId: isPropDefined(this.submenuTriggerFor)
        ? `ic-popover-submenu-${this.submenuTriggerFor}`
        : false, "aria-haspopup": isPropDefined(this.submenuTriggerFor) ||
        this.el.classList.contains("ic-popover-submenu-back-button")
        ? "menu"
        : false, ariaOwnsId: isPropDefined(this.submenuTriggerFor)
        ? `ic-popover-submenu-${this.submenuTriggerFor}`
        : false }, hAsync("div", { class: "focus-border" }, isSlotUsed$1(this.el, "icon") && (hAsync("span", { class: "icon" }, hAsync("slot", { name: "icon" }))), hAsync(MenuItemInformation, null), this.variant === "toggle" && (hAsync("span", { class: {
        ["check-icon"]: true,
        ["hide"]: !this.toggleChecked,
      }, "aria-hidden": "true", innerHTML: checkIcon })), isPropDefined(this.submenuTriggerFor) && (hAsync("span", { class: { ["submenu-icon"]: true }, "aria-hidden": "true", innerHTML: chevronIcon })))))));
  }
  static get delegatesFocus() { return true; }
  get el() { return getElement(this); }
  static get style() { return icMenuItemCss; }
  static get cmpMeta() { return {
    "$flags$": 25,
    "$tagName$": "ic-menu-item",
    "$members$": {
      "description": [1],
      "disabled": [4],
      "href": [1],
      "hreflang": [1],
      "keyboardShortcut": [1, "keyboard-shortcut"],
      "label": [1],
      "referrerpolicy": [1],
      "rel": [1],
      "submenuTriggerFor": [1, "submenu-trigger-for"],
      "target": [1],
      "variant": [1537],
      "toggleChecked": [32]
    },
    "$listeners$": [[2, "click", "handleHostClick"]],
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["variant", "variant"]]
  }; }
}

const icNavigationButtonCss = "/*!@html*/html.sc-ic-navigation-button{line-height:1.15;-webkit-text-size-adjust:100%}/*!@body*/body.sc-ic-navigation-button{margin:0}/*!@main*/main.sc-ic-navigation-button{display:block}/*!@h1*/h1.sc-ic-navigation-button{font-size:2em;margin:0.67em 0}/*!@hr*/hr.sc-ic-navigation-button{box-sizing:content-box;height:0;overflow:visible}/*!@pre*/pre.sc-ic-navigation-button{font-family:monospace, monospace;font-size:1em}/*!@a*/a.sc-ic-navigation-button{background-color:transparent}/*!@abbr[title]*/abbr[title].sc-ic-navigation-button{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}/*!@b,\nstrong*/b.sc-ic-navigation-button,strong.sc-ic-navigation-button{font-weight:bolder}/*!@code,\nkbd,\nsamp*/code.sc-ic-navigation-button,kbd.sc-ic-navigation-button,samp.sc-ic-navigation-button{font-family:monospace, monospace;font-size:1em}/*!@small*/small.sc-ic-navigation-button{font-size:80%}/*!@sub,\nsup*/sub.sc-ic-navigation-button,sup.sc-ic-navigation-button{font-size:75%;line-height:0;position:relative;vertical-align:baseline}/*!@sub*/sub.sc-ic-navigation-button{bottom:-0.25em}/*!@sup*/sup.sc-ic-navigation-button{top:-0.5em}/*!@img*/img.sc-ic-navigation-button{border-style:none}/*!@button,\ninput,\noptgroup,\nselect,\ntextarea*/button.sc-ic-navigation-button,input.sc-ic-navigation-button,optgroup.sc-ic-navigation-button,select.sc-ic-navigation-button,textarea.sc-ic-navigation-button{font-family:inherit;font-size:100%;line-height:1.15;margin:0}/*!@button,\ninput*/button.sc-ic-navigation-button,input.sc-ic-navigation-button{overflow:visible}/*!@button,\nselect*/button.sc-ic-navigation-button,select.sc-ic-navigation-button{text-transform:none}/*!@button,\n[type=\"button\"],\n[type=\"reset\"],\n[type=\"submit\"]*/button.sc-ic-navigation-button,[type=\"button\"].sc-ic-navigation-button,[type=\"reset\"].sc-ic-navigation-button,[type=\"submit\"].sc-ic-navigation-button{-webkit-appearance:button}/*!@button::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner*/button.sc-ic-navigation-button::-moz-focus-inner,[type=\"button\"].sc-ic-navigation-button::-moz-focus-inner,[type=\"reset\"].sc-ic-navigation-button::-moz-focus-inner,[type=\"submit\"].sc-ic-navigation-button::-moz-focus-inner{border-style:none;padding:0}/*!@button:-moz-focusring,\n[type=\"button\"]:-moz-focusring,\n[type=\"reset\"]:-moz-focusring,\n[type=\"submit\"]:-moz-focusring*/button.sc-ic-navigation-button:-moz-focusring,[type=\"button\"].sc-ic-navigation-button:-moz-focusring,[type=\"reset\"].sc-ic-navigation-button:-moz-focusring,[type=\"submit\"].sc-ic-navigation-button:-moz-focusring{outline:1px dotted ButtonText}/*!@fieldset*/fieldset.sc-ic-navigation-button{padding:0.35em 0.75em 0.625em}/*!@legend*/legend.sc-ic-navigation-button{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}/*!@progress*/progress.sc-ic-navigation-button{vertical-align:baseline}/*!@textarea*/textarea.sc-ic-navigation-button{overflow:auto}/*!@[type=\"checkbox\"],\n[type=\"radio\"]*/[type=\"checkbox\"].sc-ic-navigation-button,[type=\"radio\"].sc-ic-navigation-button{box-sizing:border-box;padding:0}/*!@[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button*/[type=\"number\"].sc-ic-navigation-button::-webkit-inner-spin-button,[type=\"number\"].sc-ic-navigation-button::-webkit-outer-spin-button{height:auto}/*!@[type=\"search\"]*/[type=\"search\"].sc-ic-navigation-button{-webkit-appearance:textfield;outline-offset:-2px}/*!@[type=\"search\"]::-webkit-search-decoration*/[type=\"search\"].sc-ic-navigation-button::-webkit-search-decoration{-webkit-appearance:none}/*!@::-webkit-file-upload-button*/.sc-ic-navigation-button::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}/*!@details*/details.sc-ic-navigation-button{display:block}/*!@summary*/summary.sc-ic-navigation-button{display:list-item}/*!@template*/template.sc-ic-navigation-button{display:none}/*!@[hidden]*/[hidden].sc-ic-navigation-button{display:none}/*!@html,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo*/html.sc-ic-navigation-button,body.sc-ic-navigation-button,div.sc-ic-navigation-button,span.sc-ic-navigation-button,applet.sc-ic-navigation-button,object.sc-ic-navigation-button,iframe.sc-ic-navigation-button,h1.sc-ic-navigation-button,h2.sc-ic-navigation-button,h3.sc-ic-navigation-button,h4.sc-ic-navigation-button,h5.sc-ic-navigation-button,h6.sc-ic-navigation-button,p.sc-ic-navigation-button,blockquote.sc-ic-navigation-button,pre.sc-ic-navigation-button,a.sc-ic-navigation-button,abbr.sc-ic-navigation-button,acronym.sc-ic-navigation-button,address.sc-ic-navigation-button,big.sc-ic-navigation-button,cite.sc-ic-navigation-button,code.sc-ic-navigation-button,del.sc-ic-navigation-button,dfn.sc-ic-navigation-button,em.sc-ic-navigation-button,img.sc-ic-navigation-button,ins.sc-ic-navigation-button,kbd.sc-ic-navigation-button,q.sc-ic-navigation-button,s.sc-ic-navigation-button,samp.sc-ic-navigation-button,small.sc-ic-navigation-button,strike.sc-ic-navigation-button,strong.sc-ic-navigation-button,sub.sc-ic-navigation-button,sup.sc-ic-navigation-button,tt.sc-ic-navigation-button,var.sc-ic-navigation-button,b.sc-ic-navigation-button,u.sc-ic-navigation-button,i.sc-ic-navigation-button,center.sc-ic-navigation-button,dl.sc-ic-navigation-button,dt.sc-ic-navigation-button,dd.sc-ic-navigation-button,ol.sc-ic-navigation-button,ul.sc-ic-navigation-button,li.sc-ic-navigation-button,fieldset.sc-ic-navigation-button,form.sc-ic-navigation-button,label.sc-ic-navigation-button,legend.sc-ic-navigation-button,table.sc-ic-navigation-button,caption.sc-ic-navigation-button,tbody.sc-ic-navigation-button,tfoot.sc-ic-navigation-button,thead.sc-ic-navigation-button,tr.sc-ic-navigation-button,th.sc-ic-navigation-button,td.sc-ic-navigation-button,article.sc-ic-navigation-button,aside.sc-ic-navigation-button,canvas.sc-ic-navigation-button,details.sc-ic-navigation-button,embed.sc-ic-navigation-button,figure.sc-ic-navigation-button,figcaption.sc-ic-navigation-button,footer.sc-ic-navigation-button,header.sc-ic-navigation-button,hgroup.sc-ic-navigation-button,menu.sc-ic-navigation-button,nav.sc-ic-navigation-button,output.sc-ic-navigation-button,ruby.sc-ic-navigation-button,section.sc-ic-navigation-button,summary.sc-ic-navigation-button,time.sc-ic-navigation-button,mark.sc-ic-navigation-button,audio.sc-ic-navigation-button,video.sc-ic-navigation-button{margin:0;padding:0;border:0;font-size:100%;font-style:inherit;vertical-align:baseline}/*!@:host*/.sc-ic-navigation-button-h{display:block;margin-right:var(--ic-space-xs);list-style:none}/*!@:host(.in-side-menu)*/.in-side-menu.sc-ic-navigation-button-h{margin-right:0}/*!@:host::part(button)*/.sc-ic-navigation-button-h::part(button){height:100%;min-height:2.5rem}";

/**
 * @slot icon - Content will be placed to the left of the button label.
 * @slot badge - Badge component overlaying the top right of the button.
 */
class NavigationButton {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.inheritedAttributes = {};
    this.initialAppearance = getThemeForegroundColor();
    this.mode = "navbar";
    this.download = false;
    this.href = undefined;
    this.hreflang = undefined;
    this.label = undefined;
    this.referrerpolicy = undefined;
    this.rel = undefined;
    this.target = undefined;
  }
  componentWillLoad() {
    this.inheritedAttributes = inheritAttributes(this.el, [
      ...IC_INHERITED_ARIA,
      "title",
    ]);
  }
  componentDidLoad() {
    onComponentRequiredPropUndefined([{ prop: this.label, propName: "label" }], "Navigation Button");
  }
  componentWillRender() {
    const iconEl = this.el.querySelector(`[slot="icon"]`);
    iconEl !== null && iconEl.setAttribute("viewBox", "0 0 24 24");
  }
  navBarMenuOpenHandler() {
    this.mode = "menu";
  }
  navBarMenuCloseHandler() {
    this.mode = "navbar";
  }
  themeChangeHandler(ev) {
    const theme = ev.detail;
    this.initialAppearance = theme.mode;
  }
  /**
   * Sets focus on the native `button`.
   */
  async setFocus() {
    if (this.buttonEl) {
      this.buttonEl.focus();
    }
  }
  render() {
    const { href, target, rel, download, referrerpolicy } = this;
    let label = "";
    let className = "";
    let variant = "icon";
    let appearance = this.initialAppearance;
    let size = "large";
    let fullWidth = false;
    if (this.mode === "menu") {
      label = this.label;
      variant = "tertiary";
      appearance = IcThemeForegroundEnum.Default;
      size = "default";
      fullWidth = true;
      className = "popout-menu-button";
    }
    const buttonProps = {
      variant,
      appearance,
      size,
      href,
      target,
      rel,
      download,
      referrerpolicy,
      fullWidth,
    };
    return (hAsync(Host, { class: { ["in-side-menu"]: this.mode === "menu" } }, hAsync("ic-button", Object.assign({ class: className, "aria-label": variant == "icon" ? this.label : null, ref: (el) => (this.buttonEl = el) }, buttonProps, this.inheritedAttributes), label, hAsync("slot", { slot: "left-icon", name: "icon" }), isSlotUsed$1(this.el, "badge") && variant === "icon" && (hAsync("slot", { name: "badge" })))));
  }
  static get delegatesFocus() { return true; }
  get el() { return getElement(this); }
  static get style() { return icNavigationButtonCss; }
  static get cmpMeta() { return {
    "$flags$": 25,
    "$tagName$": "ic-navigation-button",
    "$members$": {
      "download": [8],
      "href": [1],
      "hreflang": [1],
      "label": [1],
      "referrerpolicy": [1],
      "rel": [1],
      "target": [1],
      "initialAppearance": [32],
      "mode": [32],
      "setFocus": [64]
    },
    "$listeners$": [[4, "icNavigationMenuOpened", "navBarMenuOpenHandler"], [4, "icNavigationMenuClosed", "navBarMenuCloseHandler"], [4, "themeChange", "themeChangeHandler"]],
    "$lazyBundleId$": "-",
    "$attrsToReflect$": []
  }; }
}

const icNavigationGroupCss = "/*!@html*/html.sc-ic-navigation-group{line-height:1.15;-webkit-text-size-adjust:100%}/*!@body*/body.sc-ic-navigation-group{margin:0}/*!@main*/main.sc-ic-navigation-group{display:block}/*!@h1*/h1.sc-ic-navigation-group{font-size:2em;margin:0.67em 0}/*!@hr*/hr.sc-ic-navigation-group{box-sizing:content-box;height:0;overflow:visible}/*!@pre*/pre.sc-ic-navigation-group{font-family:monospace, monospace;font-size:1em}/*!@a*/a.sc-ic-navigation-group{background-color:transparent}/*!@abbr[title]*/abbr[title].sc-ic-navigation-group{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}/*!@b,\nstrong*/b.sc-ic-navigation-group,strong.sc-ic-navigation-group{font-weight:bolder}/*!@code,\nkbd,\nsamp*/code.sc-ic-navigation-group,kbd.sc-ic-navigation-group,samp.sc-ic-navigation-group{font-family:monospace, monospace;font-size:1em}/*!@small*/small.sc-ic-navigation-group{font-size:80%}/*!@sub,\nsup*/sub.sc-ic-navigation-group,sup.sc-ic-navigation-group{font-size:75%;line-height:0;position:relative;vertical-align:baseline}/*!@sub*/sub.sc-ic-navigation-group{bottom:-0.25em}/*!@sup*/sup.sc-ic-navigation-group{top:-0.5em}/*!@img*/img.sc-ic-navigation-group{border-style:none}/*!@button,\ninput,\noptgroup,\nselect,\ntextarea*/button.sc-ic-navigation-group,input.sc-ic-navigation-group,optgroup.sc-ic-navigation-group,select.sc-ic-navigation-group,textarea.sc-ic-navigation-group{font-family:inherit;font-size:100%;line-height:1.15;margin:0}/*!@button,\ninput*/button.sc-ic-navigation-group,input.sc-ic-navigation-group{overflow:visible}/*!@button,\nselect*/button.sc-ic-navigation-group,select.sc-ic-navigation-group{text-transform:none}/*!@button,\n[type=\"button\"],\n[type=\"reset\"],\n[type=\"submit\"]*/button.sc-ic-navigation-group,[type=\"button\"].sc-ic-navigation-group,[type=\"reset\"].sc-ic-navigation-group,[type=\"submit\"].sc-ic-navigation-group{-webkit-appearance:button}/*!@button::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner*/button.sc-ic-navigation-group::-moz-focus-inner,[type=\"button\"].sc-ic-navigation-group::-moz-focus-inner,[type=\"reset\"].sc-ic-navigation-group::-moz-focus-inner,[type=\"submit\"].sc-ic-navigation-group::-moz-focus-inner{border-style:none;padding:0}/*!@button:-moz-focusring,\n[type=\"button\"]:-moz-focusring,\n[type=\"reset\"]:-moz-focusring,\n[type=\"submit\"]:-moz-focusring*/button.sc-ic-navigation-group:-moz-focusring,[type=\"button\"].sc-ic-navigation-group:-moz-focusring,[type=\"reset\"].sc-ic-navigation-group:-moz-focusring,[type=\"submit\"].sc-ic-navigation-group:-moz-focusring{outline:1px dotted ButtonText}/*!@fieldset*/fieldset.sc-ic-navigation-group{padding:0.35em 0.75em 0.625em}/*!@legend*/legend.sc-ic-navigation-group{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}/*!@progress*/progress.sc-ic-navigation-group{vertical-align:baseline}/*!@textarea*/textarea.sc-ic-navigation-group{overflow:auto}/*!@[type=\"checkbox\"],\n[type=\"radio\"]*/[type=\"checkbox\"].sc-ic-navigation-group,[type=\"radio\"].sc-ic-navigation-group{box-sizing:border-box;padding:0}/*!@[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button*/[type=\"number\"].sc-ic-navigation-group::-webkit-inner-spin-button,[type=\"number\"].sc-ic-navigation-group::-webkit-outer-spin-button{height:auto}/*!@[type=\"search\"]*/[type=\"search\"].sc-ic-navigation-group{-webkit-appearance:textfield;outline-offset:-2px}/*!@[type=\"search\"]::-webkit-search-decoration*/[type=\"search\"].sc-ic-navigation-group::-webkit-search-decoration{-webkit-appearance:none}/*!@::-webkit-file-upload-button*/.sc-ic-navigation-group::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}/*!@details*/details.sc-ic-navigation-group{display:block}/*!@summary*/summary.sc-ic-navigation-group{display:list-item}/*!@template*/template.sc-ic-navigation-group{display:none}/*!@[hidden]*/[hidden].sc-ic-navigation-group{display:none}/*!@html,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo*/html.sc-ic-navigation-group,body.sc-ic-navigation-group,div.sc-ic-navigation-group,span.sc-ic-navigation-group,applet.sc-ic-navigation-group,object.sc-ic-navigation-group,iframe.sc-ic-navigation-group,h1.sc-ic-navigation-group,h2.sc-ic-navigation-group,h3.sc-ic-navigation-group,h4.sc-ic-navigation-group,h5.sc-ic-navigation-group,h6.sc-ic-navigation-group,p.sc-ic-navigation-group,blockquote.sc-ic-navigation-group,pre.sc-ic-navigation-group,a.sc-ic-navigation-group,abbr.sc-ic-navigation-group,acronym.sc-ic-navigation-group,address.sc-ic-navigation-group,big.sc-ic-navigation-group,cite.sc-ic-navigation-group,code.sc-ic-navigation-group,del.sc-ic-navigation-group,dfn.sc-ic-navigation-group,em.sc-ic-navigation-group,img.sc-ic-navigation-group,ins.sc-ic-navigation-group,kbd.sc-ic-navigation-group,q.sc-ic-navigation-group,s.sc-ic-navigation-group,samp.sc-ic-navigation-group,small.sc-ic-navigation-group,strike.sc-ic-navigation-group,strong.sc-ic-navigation-group,sub.sc-ic-navigation-group,sup.sc-ic-navigation-group,tt.sc-ic-navigation-group,var.sc-ic-navigation-group,b.sc-ic-navigation-group,u.sc-ic-navigation-group,i.sc-ic-navigation-group,center.sc-ic-navigation-group,dl.sc-ic-navigation-group,dt.sc-ic-navigation-group,dd.sc-ic-navigation-group,ol.sc-ic-navigation-group,ul.sc-ic-navigation-group,li.sc-ic-navigation-group,fieldset.sc-ic-navigation-group,form.sc-ic-navigation-group,label.sc-ic-navigation-group,legend.sc-ic-navigation-group,table.sc-ic-navigation-group,caption.sc-ic-navigation-group,tbody.sc-ic-navigation-group,tfoot.sc-ic-navigation-group,thead.sc-ic-navigation-group,tr.sc-ic-navigation-group,th.sc-ic-navigation-group,td.sc-ic-navigation-group,article.sc-ic-navigation-group,aside.sc-ic-navigation-group,canvas.sc-ic-navigation-group,details.sc-ic-navigation-group,embed.sc-ic-navigation-group,figure.sc-ic-navigation-group,figcaption.sc-ic-navigation-group,footer.sc-ic-navigation-group,header.sc-ic-navigation-group,hgroup.sc-ic-navigation-group,menu.sc-ic-navigation-group,nav.sc-ic-navigation-group,output.sc-ic-navigation-group,ruby.sc-ic-navigation-group,section.sc-ic-navigation-group,summary.sc-ic-navigation-group,time.sc-ic-navigation-group,mark.sc-ic-navigation-group,audio.sc-ic-navigation-group,video.sc-ic-navigation-group{margin:0;padding:0;border:0;font-size:100%;font-style:inherit;vertical-align:baseline}/*!@:host*/.sc-ic-navigation-group-h{display:block}/*!@:host(.in-side-menu)*/.in-side-menu.sc-ic-navigation-group-h{border-bottom:var(--ic-border-width) solid var(--ic-architectural-200);padding:var(--ic-space-md) 0}/*!@:host .navigation-group*/.sc-ic-navigation-group-h .navigation-group.sc-ic-navigation-group{height:100%;width:-moz-fit-content;width:fit-content;color:var(--ic-theme-text);display:flex;align-items:center;justify-content:center;padding:0 var(--ic-space-md);transition:var(--ic-easing-transition-slow);position:relative;background:none;border:none}/*!@:host(.in-side-menu) .navigation-group*/.in-side-menu.sc-ic-navigation-group-h .navigation-group.sc-ic-navigation-group{height:2.5rem;width:100%;text-align:left}/*!@:host(.in-side-menu) .navigation-group .ic-typography-label*/.in-side-menu.sc-ic-navigation-group-h .navigation-group.sc-ic-navigation-group .ic-typography-label.sc-ic-navigation-group{width:11.875rem}/*!@:host(.in-side-menu) .navigation-group-side-menu*/.in-side-menu.sc-ic-navigation-group-h .navigation-group-side-menu.sc-ic-navigation-group{color:var(--ic-action-default);justify-content:flex-start;padding:0 var(--ic-space-md) 0 var(--ic-space-md)}/*!@:host(.in-side-menu) .navigation-group-side-menu-collapsed,\n:host(.in-side-menu) .navigation-group-side-menu-expanded*/.in-side-menu.sc-ic-navigation-group-h .navigation-group-side-menu-collapsed.sc-ic-navigation-group,.in-side-menu.sc-ic-navigation-group-h .navigation-group-side-menu-expanded.sc-ic-navigation-group{color:var(--ic-action-default);justify-content:flex-start;padding-left:var(--ic-space-md)}/*!@:host(.in-side-menu) .navigation-group-side-menu-expanded*/.in-side-menu.sc-ic-navigation-group-h .navigation-group-side-menu-expanded.sc-ic-navigation-group{margin-bottom:var(--ic-space-xs)}/*!@:host(.in-side-menu) .navigation-group-side-menu-collapsed::after,\n:host(.in-side-menu) .navigation-group-side-menu-expanded::after*/.in-side-menu.sc-ic-navigation-group-h .navigation-group-side-menu-collapsed.sc-ic-navigation-group::after,.in-side-menu.sc-ic-navigation-group-h .navigation-group-side-menu-expanded.sc-ic-navigation-group::after{border-style:solid;border-width:0.125em 0.125em 0 0;content:\"\";display:inline-block;height:0.45em;left:0.75em;position:relative;top:-0.1em;transform:rotate(135deg);vertical-align:top;width:0.45em}/*!@:host(.in-side-menu) .navigation-group-side-menu-expanded::after*/.in-side-menu.sc-ic-navigation-group-h .navigation-group-side-menu-expanded.sc-ic-navigation-group::after{top:0.15em;transform:rotate(-45deg)}/*!@:host .navigation-group:hover,\n:host .navigation-group:active,\n:host .selected*/.sc-ic-navigation-group-h .navigation-group.sc-ic-navigation-group:hover,.sc-ic-navigation-group-h .navigation-group.sc-ic-navigation-group:active,.sc-ic-navigation-group-h .selected.sc-ic-navigation-group{background-color:var(--ic-architectural-20);color:var(--ic-color-primary-text);outline:none;cursor:pointer}/*!@:host(:not(.in-side-menu)) .navigation-group:focus*/.sc-ic-navigation-group-h:not(.in-side-menu) .navigation-group.sc-ic-navigation-group:focus{box-shadow:var(--ic-border-focus);border-radius:var(--ic-border-radius);outline:var(--ic-hc-focus-outline);z-index:var(--ic-z-index-navigation-item);transition:box-shadow var(--ic-easing-transition-fast)}/*!@:host(.in-side-menu) .navigation-group-side-menu:hover,\n:host(.in-side-menu) .navigation-group-side-menu:active,\n:host(.in-side-menu) .navigation-group-side-menu:focus*/.in-side-menu.sc-ic-navigation-group-h .navigation-group-side-menu.sc-ic-navigation-group:hover,.in-side-menu.sc-ic-navigation-group-h .navigation-group-side-menu.sc-ic-navigation-group:active,.in-side-menu.sc-ic-navigation-group-h .navigation-group-side-menu.sc-ic-navigation-group:focus{background-color:var(--ic-architectural-20);color:var(--ic-action-default);cursor:auto;box-shadow:none;outline:none}/*!@:host(.in-side-menu) .navigation-group-side-menu:focus*/.in-side-menu.sc-ic-navigation-group-h .navigation-group-side-menu.sc-ic-navigation-group:focus{outline:var(--ic-hc-focus-outline)}/*!@:host(.in-side-menu) .navigation-group-side-menu-expanded:hover:not(:focus),\n:host(.in-side-menu) .navigation-group-side-menu-collapsed:hover:not(:focus)*/.in-side-menu.sc-ic-navigation-group-h .navigation-group-side-menu-expanded.sc-ic-navigation-group:hover:not(:focus),.in-side-menu.sc-ic-navigation-group-h .navigation-group-side-menu-collapsed.sc-ic-navigation-group:hover:not(:focus){background-color:var(--ic-action-dark-bg-hover);color:var(--ic-action-default);cursor:pointer}/*!@:host(.in-side-menu) .navigation-group-side-menu-expanded:active:not(:focus),\n:host(.in-side-menu) .navigation-group-side-menu-collapsed:active:not(:focus)*/.in-side-menu.sc-ic-navigation-group-h .navigation-group-side-menu-expanded.sc-ic-navigation-group:active:not(:focus),.in-side-menu.sc-ic-navigation-group-h .navigation-group-side-menu-collapsed.sc-ic-navigation-group:active:not(:focus){background-color:var(--ic-action-dark-bg-active);color:var(--ic-action-default)}/*!@:host(.in-side-menu) .navigation-group-side-menu-expanded:focus,\n:host(.in-side-menu) .navigation-group-side-menu-collapsed:focus*/.in-side-menu.sc-ic-navigation-group-h .navigation-group-side-menu-expanded.sc-ic-navigation-group:focus,.in-side-menu.sc-ic-navigation-group-h .navigation-group-side-menu-collapsed.sc-ic-navigation-group:focus{color:var(--ic-action-default);box-shadow:var(--ic-border-focus-inset);border-radius:var(--ic-border-radius-inset);outline:var(--ic-hc-focus-outline)}/*!@:host .navigation-group-dropdown*/.sc-ic-navigation-group-h .navigation-group-dropdown.sc-ic-navigation-group{background-color:var(--ic-architectural-20);border-bottom:var(--ic-border-default);position:absolute;left:0;right:0;padding:var(--ic-space-xs) var(--ic-space-md);box-shadow:0 0.375rem 0.5rem -0.375rem rgba(0 0 0 / 20%);z-index:calc(var(--ic-z-index-navigation-item) - 1)}/*!@:host .navigation-group-dropdown-items-list*/.sc-ic-navigation-group-h .navigation-group-dropdown-items-list.sc-ic-navigation-group{list-style:none;display:flex;flex-flow:column wrap;align-content:flex-start;padding-left:var(--ic-space-md);max-height:16.5rem}/*!@:host .chevron-toggle-icon-wrapper*/.sc-ic-navigation-group-h .chevron-toggle-icon-wrapper.sc-ic-navigation-group{display:flex;align-items:center}/*!@:host .chevron-toggle-icon-wrapper svg*/.sc-ic-navigation-group-h .chevron-toggle-icon-wrapper.sc-ic-navigation-group svg.sc-ic-navigation-group{transform:rotate(90deg);height:var(--ic-space-lg);width:var(--ic-space-lg)}/*!@:host .chevron-toggle-icon-closed svg*/.sc-ic-navigation-group-h .chevron-toggle-icon-closed.sc-ic-navigation-group svg.sc-ic-navigation-group{transform:rotate(-90deg)}/*!@:host(.expanded) .grouped-links-wrapper*/.expanded.sc-ic-navigation-group-h .grouped-links-wrapper.sc-ic-navigation-group{height:var(--navigation-child-items-height, auto) !important;transition:var(--ic-easing-transition-slow);overflow:hidden}/*!@:host(.navigation-group-side-nav) .link,\n:host(.navigation-group-side-nav) ::slotted(a)*/.navigation-group-side-nav.sc-ic-navigation-group-h .link.sc-ic-navigation-group,.sc-ic-navigation-group-h.navigation-group-side-nav .sc-ic-navigation-group-s>a{height:var(--navigation-child-items-height, auto)}/*!@:host(.collapsed) .grouped-links-wrapper*/.collapsed.sc-ic-navigation-group-h .grouped-links-wrapper.sc-ic-navigation-group{height:0;transition:var(--ic-easing-transition-slow);overflow:hidden}/*!@:host(.navigation-group-side-nav) .navigation-group*/.navigation-group-side-nav.sc-ic-navigation-group-h .navigation-group.sc-ic-navigation-group{height:var(--navigation-group-height);width:var(--navigation-group-width);justify-content:var(--navigation-group-justify-content);padding-right:var(--navigation-group-expand-toggle-padding)}/*!@:host(.navigation-group-side-nav) .navigation-group:hover,\n:host(.navigation-group-side-nav) .navigation-group:active,\n:host(.navigation-group-side-nav) .selected*/.navigation-group-side-nav.sc-ic-navigation-group-h .navigation-group.sc-ic-navigation-group:hover,.navigation-group-side-nav.sc-ic-navigation-group-h .navigation-group.sc-ic-navigation-group:active,.navigation-group-side-nav.sc-ic-navigation-group-h .selected.sc-ic-navigation-group{background-color:var(--navigation-group-hover);color:var(--navigation-group-text-hover)}/*!@:host(.navigation-group-side-nav) .navigation-group:focus*/.navigation-group-side-nav.sc-ic-navigation-group-h .navigation-group.sc-ic-navigation-group:focus{box-shadow:var(--ic-border-focus-inset);border-radius:var(--ic-border-radius-inset);background:none}/*!@:host(.navigation-group-side-nav) .ic-typography-caption*/.navigation-group-side-nav.sc-ic-navigation-group-h .ic-typography-caption.sc-ic-navigation-group{position:var(--navigation-group-title-position);left:var(--navigation-group-title-position-left);white-space:nowrap}";

class NavigationGroup {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.allGroupedNavigationItems = [];
    this.DYNAMIC_GROUPED_LINKS_HEIGHT_MS = 100;
    this.IC_NAVIGATION_ITEM = "ic-navigation-item";
    this.mouseGate = false;
    this.nodeName = "IC-NAVIGATION-GROUP";
    this.GROUPED_LINKS_WRAPPER_CLASS = ".grouped-links-wrapper";
    this.sideNavExpandHandler = (event) => {
      this.isSideNavExpanded = event.detail.sideNavExpanded;
      const linkWrapper = this.el.shadowRoot.querySelector(this.GROUPED_LINKS_WRAPPER_CLASS);
      if (!linkWrapper)
        return;
      if (this.isSideNavExpanded) {
        if (this.expanded && this.expandedNavItemsHeight) {
          this.setGroupedLinksElementHeight(linkWrapper, this.expandedNavItemsHeight);
        }
        else if (this.expanded) {
          setTimeout(() => {
            this.expandedNavItemsHeight = this.getNavigationChildItemsHeight();
            this.setGroupedLinksElementHeight(linkWrapper, this.expandedNavItemsHeight);
          }, this.DYNAMIC_GROUPED_LINKS_HEIGHT_MS);
        }
      }
      else {
        if (this.expanded && this.collapsedNavItemsHeight) {
          this.setGroupedLinksElementHeight(linkWrapper, this.collapsedNavItemsHeight);
        }
        else if (this.expanded) {
          setTimeout(() => {
            this.collapsedNavItemsHeight = this.getNavigationChildItemsHeight();
            this.setGroupedLinksElementHeight(linkWrapper, this.collapsedNavItemsHeight);
          }, this.DYNAMIC_GROUPED_LINKS_HEIGHT_MS);
        }
      }
    };
    this.topNavResizedHandler = (ev) => {
      const newSize = ev.detail.size;
      if (newSize !== this.deviceSize) {
        this.deviceSize = newSize;
        this.inTopNavSideMenu = newSize <= DEVICE_SIZES.L;
      }
    };
    this.setGroupedNavItemTabIndex = (tabIndexValue) => {
      this.el
        .querySelectorAll(this.IC_NAVIGATION_ITEM)
        .forEach((navigationItem) => {
        const navItem = navigationItem.shadowRoot.querySelector("a") ||
          navigationItem.querySelector("a");
        if (navItem) {
          navItem.setAttribute("tabindex", tabIndexValue);
        }
      });
    };
    this.toggleGroupedLinkWrapperHeight = (wrapper, expanded) => {
      if (!wrapper)
        return;
      if (expanded) {
        if (this.isSideNavExpanded) {
          this.setGroupedLinksElementHeight(wrapper, this.expandedNavItemsHeight);
        }
        else {
          this.setGroupedLinksElementHeight(wrapper, this.collapsedNavItemsHeight);
        }
        this.setGroupedNavItemTabIndex("0");
      }
      else {
        wrapper.style.setProperty("--navigation-child-items-height", "0");
        this.setGroupedNavItemTabIndex("-1");
      }
    };
    this.toggleExpanded = () => {
      this.expanded = !this.expanded;
      const linkWrapper = this.el.shadowRoot.querySelector(this.GROUPED_LINKS_WRAPPER_CLASS);
      this.toggleGroupedLinkWrapperHeight(linkWrapper, this.expanded);
    };
    this.handleClick = (ev) => {
      if (this.navigationType === "top" && ev.detail) {
        this.toggleDropdown();
      }
      else {
        this.toggleExpanded();
      }
    };
    this.handleBlur = (ev) => {
      const target = ev.relatedTarget;
      if (!this.el.contains(target)) {
        this.hideDropdown();
      }
    };
    this.handleTopNavKeydown = (ev) => {
      if (ev.key === " " || ev.key === "Enter") {
        this.toggleDropdown();
      }
      else if (!this.inTopNavSideMenu && ev.key === "Escape") {
        this.hideDropdown();
      }
    };
    this.handleKeydown = (ev) => {
      if (ev.key === "Enter" || ev.key === " " || ev.key === "Escape") {
        switch (this.navigationType) {
          case "top":
            this.handleTopNavKeydown(ev);
            break;
          case "side":
            this.toggleExpanded();
            ev.preventDefault();
            break;
          default:
            this.toggleExpanded();
            break;
        }
      }
    };
    this.handleMouseLeave = (ev) => {
      const relTarget = ev.relatedTarget;
      this.mouseGate = false;
      if (!this.el.contains(relTarget) &&
        relTarget !== this.dropdown &&
        document.activeElement !== this.el &&
        !this.el.contains(document.activeElement) &&
        relTarget.nodeName === this.nodeName &&
        this.dropdownOpen === true) {
        this.mouseGate = true;
        this.hideDropdown();
      }
      else if (!this.el.contains(relTarget) &&
        relTarget !== this.dropdown &&
        !this.el.contains(document.activeElement)) {
        this.mouseGate = false;
        setTimeout(() => {
          this.dropdownOpen ? this.hideDropdown() : null;
        }, 500);
      }
    };
    this.handleMouseEnter = (ev) => {
      const relTarget = ev.relatedTarget;
      document.addEventListener("keydown", this.handleKeydown);
      if (relTarget.nodeName === this.nodeName && this.mouseGate === true) {
        this.showDropdown();
      }
      else if (this.dropdownOpen === false &&
        relTarget !== null &&
        this.mouseGate === false) {
        this.mouseGate = true;
        setTimeout(() => {
          this.mouseGate && this.showDropdown();
        }, 500);
      }
    };
    this.renderDropdownGroupedLinks = () => (hAsync("div", { class: {
        ["navigation-group-dropdown"]: !this.inTopNavSideMenu,
        ["navigation-group-dropdown-side-menu"]: this.inTopNavSideMenu,
        ["selected"]: this.dropdownOpen && !this.inTopNavSideMenu,
      }, onMouseLeave: !this.inTopNavSideMenu ? this.handleMouseLeave : null, ref: (el) => (this.dropdown = el) }, hAsync("nav", { class: {
        ["navigation-group-dropdown-items"]: !this.inTopNavSideMenu,
      } }, hAsync("ul", null, hAsync("slot", null)))));
    this.renderGroupedLinks = () => (hAsync("ul", { class: "grouped-links-wrapper" }, hAsync("slot", null)));
    /**
     * Gets the total height of navigation links to improve
     * smoothness of expand/collapse animations
     */
    this.getNavigationChildItemsHeight = () => {
      let navigationChildItemsHeight = 0;
      this.allGroupedNavigationItems.forEach((navItem) => {
        navigationChildItemsHeight += navItem.offsetHeight;
      });
      return `${navigationChildItemsHeight}px`;
    };
    this.setInitialGroupedLinksWrapperHeight = () => {
      const linkWrapper = this.el.shadowRoot.querySelector(this.GROUPED_LINKS_WRAPPER_CLASS);
      if (!linkWrapper)
        return;
      if (!this.isSideNavExpanded &&
        !this.collapsedNavItemsHeight &&
        this.expanded) {
        this.collapsedNavItemsHeight = this.getNavigationChildItemsHeight();
        this.setGroupedLinksElementHeight(linkWrapper, this.collapsedNavItemsHeight);
      }
      if (this.isSideNavExpanded && this.expanded) {
        this.expandedNavItemsHeight = this.getNavigationChildItemsHeight();
        this.setGroupedLinksElementHeight(linkWrapper, this.expandedNavItemsHeight);
      }
    };
    this.renderNavigationItems = () => {
      if (this.dropdownOpen || (this.inTopNavSideMenu && !this.expandable)) {
        return this.renderDropdownGroupedLinks();
      }
      if (this.navigationType !== "top") {
        return this.renderGroupedLinks();
      }
      return null;
    };
    this.deviceSize = DEVICE_SIZES.XL;
    this.dropdownOpen = false;
    this.expanded = true;
    this.focusStyle = getThemeForegroundColor();
    this.inTopNavSideMenu = false;
    this.navigationType = undefined;
    this.parentEl = undefined;
    this.expandable = false;
    this.label = undefined;
  }
  disconnectedCallback() {
    if (this.navigationType === "side") {
      this.parentEl.removeEventListener("sideNavExpanded", this.sideNavExpandHandler);
    }
    else if (this.navigationType === "top") {
      this.parentEl.removeEventListener("topNavResized", this.topNavResizedHandler);
    }
  }
  componentWillLoad() {
    this.deviceSize = getCurrentDeviceSize();
    const navParentDetails = getNavItemParentDetails(this.el);
    this.navigationType = navParentDetails.navType;
    this.parentEl = navParentDetails.parent;
    if (this.deviceSize <= DEVICE_SIZES.L && this.navigationType === "top") {
      this.inTopNavSideMenu = true;
    }
    if (this.navigationType === "side") {
      this.parentEl.addEventListener("sideNavExpanded", this.sideNavExpandHandler);
    }
    else if (this.navigationType === "top") {
      this.parentEl.addEventListener("topNavResized", this.topNavResizedHandler);
    }
  }
  componentDidLoad() {
    this.allGroupedNavigationItems = Array.from(this.el.querySelectorAll(this.IC_NAVIGATION_ITEM));
    /**
     * debounce is required as the incorrect height was retrieved instantly after
     * componentDidLoad is invoked.
     */
    setTimeout(() => this.setInitialGroupedLinksWrapperHeight(), this.DYNAMIC_GROUPED_LINKS_HEIGHT_MS);
  }
  childBlurHandler() {
    this.hideDropdown();
  }
  navItemClickHandler() {
    this.hideDropdown();
  }
  themeChangeHandler(ev) {
    const theme = ev.detail;
    this.focusStyle = theme.mode;
  }
  /**
   * Sets focus on the nav item.
   */
  async setFocus() {
    if (this.groupEl) {
      this.groupEl.focus();
    }
  }
  toggleDropdown() {
    this.dropdownOpen = !this.dropdownOpen;
  }
  showDropdown() {
    if (!this.dropdownOpen) {
      this.toggleDropdown();
    }
  }
  hideDropdown() {
    document.removeEventListener("keydown", this.handleKeydown);
    if (this.dropdownOpen) {
      this.toggleDropdown();
    }
  }
  setGroupedLinksElementHeight(groupedNavItemWrapper, height) {
    groupedNavItemWrapper.style.setProperty("--navigation-child-items-height", height);
  }
  render() {
    const { label, dropdownOpen, inTopNavSideMenu, expandable } = this;
    const NavigationGroupElement = !inTopNavSideMenu || expandable ? "button" : "div";
    return (hAsync(Host, { class: {
        ["in-side-menu"]: inTopNavSideMenu,
        expanded: this.expanded,
        collapsed: !this.expanded,
        ["navigation-group-side-nav"]: this.navigationType === "side",
      }, role: "listitem" }, hAsync(NavigationGroupElement, { onMouseEnter: !inTopNavSideMenu &&
        this.navigationType === "top" &&
        this.handleMouseEnter, onMouseLeave: this.navigationType === "top" && this.handleMouseLeave, tabindex: inTopNavSideMenu && !expandable ? "-1" : "0", onBlur: this.handleBlur, onClick: expandable ? this.handleClick : null, onKeyDown: this.handleKeydown, class: {
        ["navigation-group"]: true,
        [this.focusStyle]: !inTopNavSideMenu,
        ["navigation-group-side-menu"]: inTopNavSideMenu && !expandable,
        ["navigation-group-side-menu-collapsed"]: inTopNavSideMenu && expandable && !dropdownOpen,
        ["navigation-group-side-menu-expanded"]: inTopNavSideMenu && expandable && dropdownOpen,
        ["selected"]: dropdownOpen && !inTopNavSideMenu,
      }, ref: (el) => (this.groupEl = el), "aria-expanded": dropdownOpen || this.expanded ? "true" : "false", "aria-haspopup": !inTopNavSideMenu && this.navigationType === "top"
        ? "true"
        : "false" }, hAsync("ic-typography", { variant: this.navigationType === "side" ? "caption" : "label" }, label), this.navigationType === "side" && expandable && (hAsync("div", { class: {
        "chevron-toggle-icon-wrapper": true,
        "chevron-toggle-icon-closed": this.expanded,
      }, innerHTML: chevronIcon }))), this.renderNavigationItems()));
  }
  static get delegatesFocus() { return true; }
  get el() { return getElement(this); }
  static get style() { return icNavigationGroupCss; }
  static get cmpMeta() { return {
    "$flags$": 25,
    "$tagName$": "ic-navigation-group",
    "$members$": {
      "expandable": [4],
      "label": [1],
      "deviceSize": [32],
      "dropdownOpen": [32],
      "expanded": [32],
      "focusStyle": [32],
      "inTopNavSideMenu": [32],
      "navigationType": [32],
      "parentEl": [32],
      "setFocus": [64]
    },
    "$listeners$": [[0, "childBlur", "childBlurHandler"], [0, "navItemClicked", "navItemClickHandler"], [4, "themeChange", "themeChangeHandler"]],
    "$lazyBundleId$": "-",
    "$attrsToReflect$": []
  }; }
}

const icNavigationItemCss = "/*!@html*/html.sc-ic-navigation-item{line-height:1.15;-webkit-text-size-adjust:100%}/*!@body*/body.sc-ic-navigation-item{margin:0}/*!@main*/main.sc-ic-navigation-item{display:block}/*!@h1*/h1.sc-ic-navigation-item{font-size:2em;margin:0.67em 0}/*!@hr*/hr.sc-ic-navigation-item{box-sizing:content-box;height:0;overflow:visible}/*!@pre*/pre.sc-ic-navigation-item{font-family:monospace, monospace;font-size:1em}/*!@a*/a.sc-ic-navigation-item{background-color:transparent}/*!@abbr[title]*/abbr[title].sc-ic-navigation-item{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}/*!@b,\nstrong*/b.sc-ic-navigation-item,strong.sc-ic-navigation-item{font-weight:bolder}/*!@code,\nkbd,\nsamp*/code.sc-ic-navigation-item,kbd.sc-ic-navigation-item,samp.sc-ic-navigation-item{font-family:monospace, monospace;font-size:1em}/*!@small*/small.sc-ic-navigation-item{font-size:80%}/*!@sub,\nsup*/sub.sc-ic-navigation-item,sup.sc-ic-navigation-item{font-size:75%;line-height:0;position:relative;vertical-align:baseline}/*!@sub*/sub.sc-ic-navigation-item{bottom:-0.25em}/*!@sup*/sup.sc-ic-navigation-item{top:-0.5em}/*!@img*/img.sc-ic-navigation-item{border-style:none}/*!@button,\ninput,\noptgroup,\nselect,\ntextarea*/button.sc-ic-navigation-item,input.sc-ic-navigation-item,optgroup.sc-ic-navigation-item,select.sc-ic-navigation-item,textarea.sc-ic-navigation-item{font-family:inherit;font-size:100%;line-height:1.15;margin:0}/*!@button,\ninput*/button.sc-ic-navigation-item,input.sc-ic-navigation-item{overflow:visible}/*!@button,\nselect*/button.sc-ic-navigation-item,select.sc-ic-navigation-item{text-transform:none}/*!@button,\n[type=\"button\"],\n[type=\"reset\"],\n[type=\"submit\"]*/button.sc-ic-navigation-item,[type=\"button\"].sc-ic-navigation-item,[type=\"reset\"].sc-ic-navigation-item,[type=\"submit\"].sc-ic-navigation-item{-webkit-appearance:button}/*!@button::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner*/button.sc-ic-navigation-item::-moz-focus-inner,[type=\"button\"].sc-ic-navigation-item::-moz-focus-inner,[type=\"reset\"].sc-ic-navigation-item::-moz-focus-inner,[type=\"submit\"].sc-ic-navigation-item::-moz-focus-inner{border-style:none;padding:0}/*!@button:-moz-focusring,\n[type=\"button\"]:-moz-focusring,\n[type=\"reset\"]:-moz-focusring,\n[type=\"submit\"]:-moz-focusring*/button.sc-ic-navigation-item:-moz-focusring,[type=\"button\"].sc-ic-navigation-item:-moz-focusring,[type=\"reset\"].sc-ic-navigation-item:-moz-focusring,[type=\"submit\"].sc-ic-navigation-item:-moz-focusring{outline:1px dotted ButtonText}/*!@fieldset*/fieldset.sc-ic-navigation-item{padding:0.35em 0.75em 0.625em}/*!@legend*/legend.sc-ic-navigation-item{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}/*!@progress*/progress.sc-ic-navigation-item{vertical-align:baseline}/*!@textarea*/textarea.sc-ic-navigation-item{overflow:auto}/*!@[type=\"checkbox\"],\n[type=\"radio\"]*/[type=\"checkbox\"].sc-ic-navigation-item,[type=\"radio\"].sc-ic-navigation-item{box-sizing:border-box;padding:0}/*!@[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button*/[type=\"number\"].sc-ic-navigation-item::-webkit-inner-spin-button,[type=\"number\"].sc-ic-navigation-item::-webkit-outer-spin-button{height:auto}/*!@[type=\"search\"]*/[type=\"search\"].sc-ic-navigation-item{-webkit-appearance:textfield;outline-offset:-2px}/*!@[type=\"search\"]::-webkit-search-decoration*/[type=\"search\"].sc-ic-navigation-item::-webkit-search-decoration{-webkit-appearance:none}/*!@::-webkit-file-upload-button*/.sc-ic-navigation-item::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}/*!@details*/details.sc-ic-navigation-item{display:block}/*!@summary*/summary.sc-ic-navigation-item{display:list-item}/*!@template*/template.sc-ic-navigation-item{display:none}/*!@[hidden]*/[hidden].sc-ic-navigation-item{display:none}/*!@html,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo*/html.sc-ic-navigation-item,body.sc-ic-navigation-item,div.sc-ic-navigation-item,span.sc-ic-navigation-item,applet.sc-ic-navigation-item,object.sc-ic-navigation-item,iframe.sc-ic-navigation-item,h1.sc-ic-navigation-item,h2.sc-ic-navigation-item,h3.sc-ic-navigation-item,h4.sc-ic-navigation-item,h5.sc-ic-navigation-item,h6.sc-ic-navigation-item,p.sc-ic-navigation-item,blockquote.sc-ic-navigation-item,pre.sc-ic-navigation-item,a.sc-ic-navigation-item,abbr.sc-ic-navigation-item,acronym.sc-ic-navigation-item,address.sc-ic-navigation-item,big.sc-ic-navigation-item,cite.sc-ic-navigation-item,code.sc-ic-navigation-item,del.sc-ic-navigation-item,dfn.sc-ic-navigation-item,em.sc-ic-navigation-item,img.sc-ic-navigation-item,ins.sc-ic-navigation-item,kbd.sc-ic-navigation-item,q.sc-ic-navigation-item,s.sc-ic-navigation-item,samp.sc-ic-navigation-item,small.sc-ic-navigation-item,strike.sc-ic-navigation-item,strong.sc-ic-navigation-item,sub.sc-ic-navigation-item,sup.sc-ic-navigation-item,tt.sc-ic-navigation-item,var.sc-ic-navigation-item,b.sc-ic-navigation-item,u.sc-ic-navigation-item,i.sc-ic-navigation-item,center.sc-ic-navigation-item,dl.sc-ic-navigation-item,dt.sc-ic-navigation-item,dd.sc-ic-navigation-item,ol.sc-ic-navigation-item,ul.sc-ic-navigation-item,li.sc-ic-navigation-item,fieldset.sc-ic-navigation-item,form.sc-ic-navigation-item,label.sc-ic-navigation-item,legend.sc-ic-navigation-item,table.sc-ic-navigation-item,caption.sc-ic-navigation-item,tbody.sc-ic-navigation-item,tfoot.sc-ic-navigation-item,thead.sc-ic-navigation-item,tr.sc-ic-navigation-item,th.sc-ic-navigation-item,td.sc-ic-navigation-item,article.sc-ic-navigation-item,aside.sc-ic-navigation-item,canvas.sc-ic-navigation-item,details.sc-ic-navigation-item,embed.sc-ic-navigation-item,figure.sc-ic-navigation-item,figcaption.sc-ic-navigation-item,footer.sc-ic-navigation-item,header.sc-ic-navigation-item,hgroup.sc-ic-navigation-item,menu.sc-ic-navigation-item,nav.sc-ic-navigation-item,output.sc-ic-navigation-item,ruby.sc-ic-navigation-item,section.sc-ic-navigation-item,summary.sc-ic-navigation-item,time.sc-ic-navigation-item,mark.sc-ic-navigation-item,audio.sc-ic-navigation-item,video.sc-ic-navigation-item{margin:0;padding:0;border:0;font-size:100%;font-style:inherit;vertical-align:baseline}/*!@:host*/.sc-ic-navigation-item-h{display:block}/*!@:host(:focus-within)*/.sc-ic-navigation-item-h:focus-within{z-index:var(--ic-z-index-navigation-item)}/*!@svg*/svg.sc-ic-navigation-item{width:var(--ic-space-xl);fill:var(--ic-theme-text)}/*!@.svg*/.svg.sc-ic-navigation-item{margin-left:auto}/*!@.chevron-container svg,\n.chevron-container .svg*/.chevron-container.sc-ic-navigation-item svg.sc-ic-navigation-item,.chevron-container.sc-ic-navigation-item .svg.sc-ic-navigation-item{width:var(--ic-space-lg);height:var(--ic-space-lg)}/*!@.chevron-container*/.chevron-container.sc-ic-navigation-item{flex-grow:1}/*!@:host(.expandable.navigation-item) .link,\n:host(.expandable.navigation-item) ::slotted(a)*/.expandable.navigation-item.sc-ic-navigation-item-h .link.sc-ic-navigation-item,.sc-ic-navigation-item-h.expandable.navigation-item .sc-ic-navigation-item-s>a{padding-right:0}/*!@:host(.navigation-item) .link,\n:host(.navigation-item) ::slotted(a)*/.navigation-item.sc-ic-navigation-item-h .link.sc-ic-navigation-item,.sc-ic-navigation-item-h.navigation-item .sc-ic-navigation-item-s>a{height:calc(100% - var(--ic-space-xxs));width:-moz-fit-content;width:fit-content;color:var(--ic-theme-text);display:flex;align-items:center;justify-content:center;padding:0 var(--ic-space-md) var(--ic-space-xxs);text-decoration:none;transition:var(--ic-easing-transition-fast);position:relative;white-space:nowrap}/*!@:host(.navigation-item) ::slotted(a)*/.sc-ic-navigation-item-h.navigation-item .sc-ic-navigation-item-s>a{height:100%;font:var(--ic-font-label) !important;letter-spacing:var(--ic-font-letter-spacing-0pt025) !important;padding:0 var(--ic-space-md) !important}/*!@:host(.navigation-item-selected) .link::after,\n:host(.navigation-item-selected) ::slotted(a.active)::after,\n:host(.navigation-item-top-nav) ::slotted(a.active)::after*/.navigation-item-selected.sc-ic-navigation-item-h .link.sc-ic-navigation-item::after,.sc-ic-navigation-item-h.navigation-item-selected .sc-ic-navigation-item-s>a.active::after,.sc-ic-navigation-item-h.navigation-item-top-nav .sc-ic-navigation-item-s>a.active::after{content:\"\";height:0.25rem;width:100%;position:absolute;bottom:0;background-color:var(--ic-theme-text)}/*!@:host(.navigation-item-selected.navigation-item-page-header)\n  ::slotted(a.active)::after,\n:host(.navigation-item-selected.navigation-item-page-header) .link::after,\n:host(.navigation-item.navigation-item-page-header) ::slotted(a.active)::after,\n:host(.navigation-item-top-nav-child) ::slotted(a.active)::after*/.sc-ic-navigation-item-h.navigation-item-selected.navigation-item-page-header .sc-ic-navigation-item-s>a.active::after,.navigation-item-selected.navigation-item-page-header.sc-ic-navigation-item-h .link.sc-ic-navigation-item::after,.sc-ic-navigation-item-h.navigation-item.navigation-item-page-header .sc-ic-navigation-item-s>a.active::after,.sc-ic-navigation-item-h.navigation-item-top-nav-child .sc-ic-navigation-item-s>a.active::after{content:none}/*!@:host(.navigation-item-side-menu-selected) .link,\n:host(.navigation-item-side-menu) ::slotted(a.active),\n:host(.navigation-item-top-nav-child) ::slotted(a.active)*/.navigation-item-side-menu-selected.sc-ic-navigation-item-h .link.sc-ic-navigation-item,.sc-ic-navigation-item-h.navigation-item-side-menu .sc-ic-navigation-item-s>a.active,.sc-ic-navigation-item-h.navigation-item-top-nav-child .sc-ic-navigation-item-s>a.active{box-shadow:none}/*!@:host(.navigation-item) .link:hover:not(:focus)*/.navigation-item.sc-ic-navigation-item-h .link.sc-ic-navigation-item:hover:not(:focus){background-color:var(--ic-theme-hover);cursor:pointer}/*!@:host(.navigation-item:not(.navigation-item-page-header, .navigation-item-side-menu))\n  ::slotted(a:hover:not(:focus))*/.sc-ic-navigation-item-h.navigation-item:not(.navigation-item-page-header .sc-ic-navigation-item-s>a:hover:not(:focus),.sc-ic-navigation-item-h.navigation-item-side-menu) .sc-ic-navigation-item-s>a:hover:not(:focus){background-color:var(--ic-theme-hover) !important}/*!@:host(.navigation-item:not(.navigation-item-top-nav-child, .navigation-item-side-menu, .navigation-item-top-nav-child-selected\n      .navigation-item-side-menu-selected))\n  .focus-indicator:focus-within*/.navigation-item.sc-ic-navigation-item-h:not(.navigation-item-top-nav-child .focus-indicator.sc-ic-navigation-item:focus-within,.navigation-item-side-menu.sc-ic-navigation-item-h .focus-indicator.sc-ic-navigation-item:focus-within,.navigation-item-top-nav-child-selected.sc-ic-navigation-item-h .navigation-item-side-menu-selected).sc-ic-navigation-item .focus-indicator.sc-ic-navigation-item:focus-within{box-shadow:var(--ic-border-focus);border-radius:var(--ic-border-radius)}/*!@:host(.navigation-item) .link:focus,\n:host(.navigation-item) ::slotted(a:focus)*/.navigation-item.sc-ic-navigation-item-h .link.sc-ic-navigation-item:focus,.sc-ic-navigation-item-h.navigation-item .sc-ic-navigation-item-s>a:focus{box-shadow:var(--ic-border-focus);border-radius:var(--ic-border-radius);outline:var(--ic-hc-focus-outline)}/*!@:host(.navigation-item-selected) .link:focus,\n:host(.navigation-item) ::slotted(a.active:focus)*/.navigation-item-selected.sc-ic-navigation-item-h .link.sc-ic-navigation-item:focus,.sc-ic-navigation-item-h.navigation-item .sc-ic-navigation-item-s>a.active:focus{box-shadow:var(--ic-border-focus);border-radius:var(--ic-border-radius);outline:var(--ic-hc-focus-outline)}/*!@:host(.navigation-item-selected.dark) .link:focus,\n:host(.navigation-item.dark) ::slotted(a.active:focus)*/.navigation-item-selected.dark.sc-ic-navigation-item-h .link.sc-ic-navigation-item:focus,.sc-ic-navigation-item-h.navigation-item.dark .sc-ic-navigation-item-s>a.active:focus{box-shadow:var(--ic-border-focus);border-radius:var(--ic-border-radius);outline:var(--ic-hc-focus-outline)}/*!@:host(.navigation-item) .link:active:not(:focus),\n:host(.navigation-item) ::slotted(a:active:not(:focus))*/.navigation-item.sc-ic-navigation-item-h .link.sc-ic-navigation-item:active:not(:focus),.sc-ic-navigation-item-h.navigation-item .sc-ic-navigation-item-s>a:active:not(:focus){background-color:var(--ic-theme-active)}/*!@:host(.navigation-item-side-menu) .link,\n:host(.navigation-item-side-menu) ::slotted(a)*/.navigation-item-side-menu.sc-ic-navigation-item-h .link.sc-ic-navigation-item,.sc-ic-navigation-item-h.navigation-item-side-menu .sc-ic-navigation-item-s>a{min-height:2.5rem;width:100%;box-sizing:border-box;color:var(--ic-color-primary-text);display:flex;align-items:center;justify-content:flex-start;text-decoration:none;text-wrap:wrap;white-space:normal;transition:box-shadow var(--ic-transition-duration-fast),\n    border-radius var(--ic-transition-duration-fast)}/*!@:host(.navigation-item-side-menu) ::slotted(a)*/.sc-ic-navigation-item-h.navigation-item-side-menu .sc-ic-navigation-item-s>a{font:var(--ic-font-body) !important;letter-spacing:var(--ic-font-letter-spacing-0pt005) !important;transition:box-shadow var(--ic-easing-transition-fast),\n    background-color var(--ic-easing-transition-fast)}/*!@:host(.navigation-item-side-menu) .link:hover:not(:focus)*/.navigation-item-side-menu.sc-ic-navigation-item-h .link.sc-ic-navigation-item:hover:not(:focus){background-color:var(--ic-action-dark-bg-hover)}/*!@:host(.navigation-item-side-menu) ::slotted(a:hover:not(:focus))*/.sc-ic-navigation-item-h.navigation-item-side-menu .sc-ic-navigation-item-s>a:hover:not(:focus){background-color:var(--ic-action-dark-bg-hover) !important}/*!@:host(.navigation-item-side-menu) .focus-indicator:focus-within*/.navigation-item-side-menu.sc-ic-navigation-item-h .focus-indicator.sc-ic-navigation-item:focus-within{box-shadow:none}/*!@:host(.navigation-item-side-menu) .link:focus,\n:host(.navigation-item-side-menu) ::slotted(a:focus)*/.navigation-item-side-menu.sc-ic-navigation-item-h .link.sc-ic-navigation-item:focus,.sc-ic-navigation-item-h.navigation-item-side-menu .sc-ic-navigation-item-s>a:focus{box-shadow:var(--ic-border-focus-inset) !important;width:auto;border-radius:var(--ic-border-radius-inset) !important}/*!@:host(.navigation-item-side-menu-selected) .link,\n:host(.navigation-item-side-menu-selected) ::slotted(a)*/.navigation-item-side-menu-selected.sc-ic-navigation-item-h .link.sc-ic-navigation-item,.sc-ic-navigation-item-h.navigation-item-side-menu-selected .sc-ic-navigation-item-s>a{transition:box-shadow var(--ic-easing-transition-slow),\n    background-color var(--ic-easing-transition-slow)}/*!@:host(.navigation-item-side-menu-selected) .link:focus,\n:host(.navigation-item-side-menu) ::slotted(a.active:focus),\n:host(.navigation-item-top-nav-child) ::slotted(a.active:focus)*/.navigation-item-side-menu-selected.sc-ic-navigation-item-h .link.sc-ic-navigation-item:focus,.sc-ic-navigation-item-h.navigation-item-side-menu .sc-ic-navigation-item-s>a.active:focus,.sc-ic-navigation-item-h.navigation-item-top-nav-child .sc-ic-navigation-item-s>a.active:focus{margin-left:var(--ic-space-xs) !important;padding-left:var(--ic-space-xs) !important}/*!@:host(.navigation-item-top-nav-child) .link,\n:host(.navigation-item-top-nav-child) ::slotted(a)*/.navigation-item-top-nav-child.sc-ic-navigation-item-h .link.sc-ic-navigation-item,.sc-ic-navigation-item-h.navigation-item-top-nav-child .sc-ic-navigation-item-s>a{height:2.5rem;width:-moz-fit-content;width:fit-content;min-width:9.063rem;color:var(--ic-color-primary-text);display:flex;align-items:center;justify-content:flex-start;padding:0 var(--ic-space-md) !important;text-decoration:none;position:relative;transition:box-shadow var(--ic-transition-duration-fast),\n    border-radius var(--ic-transition-duration-slow)}/*!@:host(.navigation-item-top-nav-child) ::slotted(a)*/.sc-ic-navigation-item-h.navigation-item-top-nav-child .sc-ic-navigation-item-s>a{font:var(--ic-font-body) !important;letter-spacing:var(--ic-font-letter-spacing-0pt005) !important}/*!@:host(.navigation-item-top-nav-child) .link:hover:not(:focus)*/.navigation-item-top-nav-child.sc-ic-navigation-item-h .link.sc-ic-navigation-item:hover:not(:focus){background-color:var(--ic-action-dark-bg-hover) !important}/*!@:host(.navigation-item-top-nav-child) ::slotted(a:hover):not(:focus)*/.sc-ic-navigation-item-h.navigation-item-top-nav-child .sc-ic-navigation-item-s>a:hover:not(:focus){background-color:var(--ic-action-dark-bg-hover) !important}/*!@:host(.navigation-item-top-nav-child) .link:focus,\n:host(.navigation-item-top-nav-child) ::slotted(a:focus)*/.navigation-item-top-nav-child.sc-ic-navigation-item-h .link.sc-ic-navigation-item:focus,.sc-ic-navigation-item-h.navigation-item-top-nav-child .sc-ic-navigation-item-s>a:focus{z-index:1;outline:var(--ic-hc-focus-outline);border-radius:var(--ic-border-radius-inset);box-shadow:var(--ic-border-focus-inset);transition:border-radius 0s, box-shadow var(--ic-transition-duration-fast)}/*!@:host(.navigation-item-top-nav-child) ::slotted(a.active:focus)*/.sc-ic-navigation-item-h.navigation-item-top-nav-child .sc-ic-navigation-item-s>a.active:focus{box-shadow:var(--ic-border-focus-inset);border-radius:var(--ic-border-radius-inset)}/*!@:host(.navigation-item-side-menu) .link:active:not(:focus)*/.navigation-item-side-menu.sc-ic-navigation-item-h .link.sc-ic-navigation-item:active:not(:focus){background-color:var(--ic-action-dark-bg-active)}/*!@:host(.navigation-item-top-nav-child) .link:active:not(:focus),\n:host(.navigation-item-top-nav-child) ::slotted(a:active):not(:focus)*/.navigation-item-top-nav-child.sc-ic-navigation-item-h .link.sc-ic-navigation-item:active:not(:focus),.sc-ic-navigation-item-h.navigation-item-top-nav-child .sc-ic-navigation-item-s>a:active:not(:focus){outline:var(--ic-hc-focus-outline);background-color:var(--ic-action-dark-bg-active)}/*!@:host(.navigation-item-top-nav-child) ::slotted(a:active):not(:focus),\n:host(.navigation-item-side-menu) ::slotted(a:active):not(:focus)*/.sc-ic-navigation-item-h.navigation-item-top-nav-child .sc-ic-navigation-item-s>a:active:not(:focus),.sc-ic-navigation-item-h.navigation-item-side-menu .sc-ic-navigation-item-s>a:active:not(:focus){background-color:var(--ic-action-dark-bg-active) !important}/*!@:host(.navigation-item-side-menu-selected) *,\n:host(.navigation-item-top-nav-child-selected) *,\n:host(.navigation-item-side-menu) ::slotted(a.active),\n:host(.navigation-item-top-nav-child) ::slotted(a.active)*/.navigation-item-side-menu-selected.sc-ic-navigation-item-h *.sc-ic-navigation-item,.navigation-item-top-nav-child-selected.sc-ic-navigation-item-h *.sc-ic-navigation-item,.sc-ic-navigation-item-h.navigation-item-side-menu .sc-ic-navigation-item-s>a.active,.sc-ic-navigation-item-h.navigation-item-top-nav-child .sc-ic-navigation-item-s>a.active{font-weight:700 !important}/*!@:host(.navigation-item-top-nav-child) ::slotted(a.active)::before,\n:host(.navigation-item-top-nav-child-selected) .link::before,\n:host(.navigation-item-side-menu-selected) .link::before,\n:host(.navigation-item-side-menu) ::slotted(a.active)::before,\n:host(.navigation-item-side-menu-selected) .link:focus::before,\n:host(.navigation-item-side-menu) ::slotted(a.active:focus)::before*/.sc-ic-navigation-item-h.navigation-item-top-nav-child .sc-ic-navigation-item-s>a.active::before,.navigation-item-top-nav-child-selected.sc-ic-navigation-item-h .link.sc-ic-navigation-item::before,.navigation-item-side-menu-selected.sc-ic-navigation-item-h .link.sc-ic-navigation-item::before,.sc-ic-navigation-item-h.navigation-item-side-menu .sc-ic-navigation-item-s>a.active::before,.navigation-item-side-menu-selected.sc-ic-navigation-item-h .link.sc-ic-navigation-item:focus::before,.sc-ic-navigation-item-h.navigation-item-side-menu .sc-ic-navigation-item-s>a.active:focus::before{content:\"\";position:absolute;left:0;width:var(--ic-space-xs);height:inherit;min-height:2.5rem;background-color:var(--ic-action-default);transition:left 0s}/*!@:host(.navigation-item-top-nav-child-selected) .link::before,\n:host(.navigation-item-side-menu-selected) .link::before,\n:host(.navigation-item-side-menu-selected) .link:focus::before*/.navigation-item-top-nav-child-selected.sc-ic-navigation-item-h .link.sc-ic-navigation-item::before,.navigation-item-side-menu-selected.sc-ic-navigation-item-h .link.sc-ic-navigation-item::before,.navigation-item-side-menu-selected.sc-ic-navigation-item-h .link.sc-ic-navigation-item:focus::before{margin-top:0.25rem}/*!@:host(.navigation-item-top-nav-child-selected) .link:focus*/.navigation-item-top-nav-child-selected.sc-ic-navigation-item-h .link.sc-ic-navigation-item:focus{margin-left:var(--ic-space-xs);margin-right:calc(-1 * var(--ic-space-xs));padding-left:var(--ic-space-xs) !important}/*!@:host(.navigation-item-top-nav-child-selected) .link:focus::before*/.navigation-item-top-nav-child-selected.sc-ic-navigation-item-h .link.sc-ic-navigation-item:focus::before{left:calc(-1 * var(--ic-space-xs));z-index:1}/*!@:host(.navigation-item-side-menu-selected) .link::before,\n:host(.navigation-item-side-menu) ::slotted(a.active)::before,\n:host(.navigation-item-side-menu-selected) .link:focus::before,\n:host(.navigation-item-side-menu) ::slotted(a.active:focus)::before*/.navigation-item-side-menu-selected.sc-ic-navigation-item-h .link.sc-ic-navigation-item::before,.sc-ic-navigation-item-h.navigation-item-side-menu .sc-ic-navigation-item-s>a.active::before,.navigation-item-side-menu-selected.sc-ic-navigation-item-h .link.sc-ic-navigation-item:focus::before,.sc-ic-navigation-item-h.navigation-item-side-menu .sc-ic-navigation-item-s>a.active:focus::before{z-index:1}/*!@:host(.navigation-item-side-menu-selected) .link:focus::before,\n:host(.navigation-item-side-menu) ::slotted(a.active:focus)::before,\n:host(.navigation-item-top-nav-child) ::slotted(a.active:focus)::before*/.navigation-item-side-menu-selected.sc-ic-navigation-item-h .link.sc-ic-navigation-item:focus::before,.sc-ic-navigation-item-h.navigation-item-side-menu .sc-ic-navigation-item-s>a.active:focus::before,.sc-ic-navigation-item-h.navigation-item-top-nav-child .sc-ic-navigation-item-s>a.active:focus::before{left:calc(-1 * var(--ic-space-xs))}/*!@:host(.navigation-item-side-menu-selected) .link::after*/.navigation-item-side-menu-selected.sc-ic-navigation-item-h .link.sc-ic-navigation-item::after{display:none}/*!@:host(.navigation-item-side-nav-collapsed) .link*/.navigation-item-side-nav-collapsed.sc-ic-navigation-item-h .link.sc-ic-navigation-item{height:100%}/*!@:host(.navigation-item-side-nav-collapsed) ::slotted(svg),\n:host(.navigation-item-side-nav-collapsed-with-label) ::slotted(svg)*/.sc-ic-navigation-item-h.navigation-item-side-nav-collapsed .sc-ic-navigation-item-s>svg,.sc-ic-navigation-item-h.navigation-item-side-nav-collapsed-with-label .sc-ic-navigation-item-s>svg{margin:auto;pointer-events:none}/*!@:host(.navigation-item-side-nav-collapsed) .icon,\n:host(.navigation-item-side-nav-collapsed-with-label) .icon,\n:host(.navigation-item-side-nav-collapsed-with-label) ic-typography*/.navigation-item-side-nav-collapsed.sc-ic-navigation-item-h .icon.sc-ic-navigation-item,.navigation-item-side-nav-collapsed-with-label.sc-ic-navigation-item-h .icon.sc-ic-navigation-item,.navigation-item-side-nav-collapsed-with-label.sc-ic-navigation-item-h ic-typography.sc-ic-navigation-item{align-items:center;padding:0;margin:auto 0;width:-moz-fit-content;width:fit-content;pointer-events:none}/*!@:host(.navigation-item-side-nav-collapsed-with-label) ic-typography*/.navigation-item-side-nav-collapsed-with-label.sc-ic-navigation-item-h ic-typography.sc-ic-navigation-item{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;width:100%;text-align:center}/*!@:host(.navigation-item-side-nav-collapsed-with-label) .link,\n:host(.navigation-item-side-nav-collapsed-with-label) ::slotted(a)*/.navigation-item-side-nav-collapsed-with-label.sc-ic-navigation-item-h .link.sc-ic-navigation-item,.sc-ic-navigation-item-h.navigation-item-side-nav-collapsed-with-label .sc-ic-navigation-item-s>a{display:flex;flex-direction:column;height:-moz-fit-content;height:fit-content;padding:var(--ic-space-xs) !important;gap:var(--ic-space-xxs)}/*!@:host(.navigation-item-side-nav.navigation-item-side-nav-collapsed-with-label)\n  .link,\n:host(.navigation-item-side-nav.navigation-item-side-nav-collapsed-with-label)\n  ::slotted(a)*/.navigation-item-side-nav.navigation-item-side-nav-collapsed-with-label.sc-ic-navigation-item-h .link.sc-ic-navigation-item,.sc-ic-navigation-item-h.navigation-item-side-nav.navigation-item-side-nav-collapsed-with-label .sc-ic-navigation-item-s>a{height:auto !important;gap:0;width:auto;padding:var(--ic-space-xs) !important}/*!@:host(.navigation-item-side-nav.navigation-item-side-nav-collapsed-with-label)\n  ::slotted(a)*/.sc-ic-navigation-item-h.navigation-item-side-nav.navigation-item-side-nav-collapsed-with-label .sc-ic-navigation-item-s>a{display:block;text-align:center}/*!@:host(.navigation-item-side-nav.navigation-item-side-nav-collapsed-with-label)\n  .link\n  ic-typography*/.navigation-item-side-nav.navigation-item-side-nav-collapsed-with-label.sc-ic-navigation-item-h .link.sc-ic-navigation-item ic-typography.sc-ic-navigation-item{opacity:1;min-width:-moz-min-content;min-width:min-content}/*!@:host(.navigation-item-side-nav-collapsed) svg,\n:host(.navigation-item-side-nav-collapsed-with-label) svg*/.navigation-item-side-nav-collapsed.sc-ic-navigation-item-h svg.sc-ic-navigation-item,.navigation-item-side-nav-collapsed-with-label.sc-ic-navigation-item-h svg.sc-ic-navigation-item{display:none}/*!@::slotted(svg)*/.sc-ic-navigation-item-s>svg{fill:var(--ic-theme-text);width:var(--ic-space-lg);margin-left:var(--ic-space-md)}/*!@.icon*/.icon.sc-ic-navigation-item{height:var(--ic-space-lg);width:var(--ic-space-xxl);margin-left:calc(-1 * var(--ic-space-md));flex:0 1 0%;position:relative}/*!@.icon > ::slotted(*)*/.icon>.sc-ic-navigation-item-s>*{margin-left:var(--ic-space-md) !important}/*!@:host(.navigation-item-side-nav-collapsed) .icon > ::slotted(*)*/.sc-ic-navigation-item-h.navigation-item-side-nav-collapsed .icon>.sc-ic-navigation-item-s>*{margin:auto !important}/*!@:host(.navigation-item-side-nav) .link,\n:host(.navigation-item-side-nav) ::slotted(a)*/.navigation-item-side-nav.sc-ic-navigation-item-h .link.sc-ic-navigation-item,.sc-ic-navigation-item-h.navigation-item-side-nav .sc-ic-navigation-item-s>a{height:var(--navigation-item-height, 56px);min-height:var(--navigation-item-min-height);width:var(--navigation-item-width, auto);justify-content:var(--navigation-item-justify-content);display:flex;gap:var(--ic-space-xs);box-sizing:border-box;color:var(--navigation-item-child-color) !important;text-decoration:none !important;white-space:nowrap;padding-top:var(--ic-space-md) !important;padding-bottom:var(--ic-space-md) !important;text-wrap:wrap}/*!@:host(.navigation-item-side-nav.navigation-item-top-nav-child) .link,\n:host(.navigation-item-side-nav.navigation-item-top-nav-child) ::slotted(a)*/.navigation-item-side-nav.navigation-item-top-nav-child.sc-ic-navigation-item-h .link.sc-ic-navigation-item,.sc-ic-navigation-item-h.navigation-item-side-nav.navigation-item-top-nav-child .sc-ic-navigation-item-s>a{height:var(--navigation-item-child-height);width:var(--navigation-group-width);color:var(--navigation-item-child-color) !important;display:flex;gap:0.625rem;box-sizing:border-box;min-width:0;transition:box-shadow var(--ic-easing-transition-fast);text-decoration:none !important;white-space:nowrap}/*!@:host(.navigation-item-side-nav.navigation-item-top-nav-child) .link:focus,\n:host(.navigation-item-side-nav.navigation-item-top-nav-child)\n  ::slotted(a:focus)*/.navigation-item-side-nav.navigation-item-top-nav-child.sc-ic-navigation-item-h .link.sc-ic-navigation-item:focus,.sc-ic-navigation-item-h.navigation-item-side-nav.navigation-item-top-nav-child .sc-ic-navigation-item-s>a:focus{box-shadow:var(--ic-border-focus-dark)}/*!@:host(.navigation-item-side-nav.navigation-item-side-menu) .link:active*/.navigation-item-side-nav.navigation-item-side-menu.sc-ic-navigation-item-h .link.sc-ic-navigation-item:active{background-color:var(--navigation-item-child-active)}/*!@:host(.navigation-item-side-nav.navigation-item-top-nav-child) .link:active,\n:host(.navigation-item-side-nav.navigation-item-top-nav-child)\n  ::slotted(a:active)*/.navigation-item-side-nav.navigation-item-top-nav-child.sc-ic-navigation-item-h .link.sc-ic-navigation-item:active,.sc-ic-navigation-item-h.navigation-item-side-nav.navigation-item-top-nav-child .sc-ic-navigation-item-s>a:active{background-color:var(--navigation-item-child-active)}/*!@:host(.navigation-item-side-nav) a.link ic-typography,\n:host(.navigation-item-side-nav.navigation-item-top-nav-child)\n  a.link\n  ic-typography,\n:host(.navigation-item-side-nav) div.link ic-typography,\n:host(.navigation-item-side-nav.navigation-item-top-nav-child)\n  div.link\n  ic-typography,\n.navigation-item-side-nav-slotted-text*/.navigation-item-side-nav.sc-ic-navigation-item-h a.link.sc-ic-navigation-item ic-typography.sc-ic-navigation-item,.navigation-item-side-nav.navigation-item-top-nav-child.sc-ic-navigation-item-h a.link.sc-ic-navigation-item ic-typography.sc-ic-navigation-item,.navigation-item-side-nav.sc-ic-navigation-item-h div.link.sc-ic-navigation-item ic-typography.sc-ic-navigation-item,.navigation-item-side-nav.navigation-item-top-nav-child.sc-ic-navigation-item-h div.link.sc-ic-navigation-item ic-typography.sc-ic-navigation-item,.navigation-item-side-nav-slotted-text.sc-ic-navigation-item{opacity:var(--navigation-item-label-opacity);transition:opacity var(--ic-easing-transition-slow);white-space:wrap;text-overflow:ellipsis;overflow:hidden}/*!@:host(.navigation-item-side-nav.navigation-item-selected) .link,\n:host(.navigation-item-side-nav.navigation-item) ::slotted(a.active)*/.navigation-item-side-nav.navigation-item-selected.sc-ic-navigation-item-h .link.sc-ic-navigation-item,.sc-ic-navigation-item-h.navigation-item-side-nav.navigation-item .sc-ic-navigation-item-s>a.active{box-shadow:inset 0.313rem 0 0 var(--ic-theme-text)}/*!@:host(.navigation-item-side-nav.navigation-item-selected) .link::before,\n:host(.navigation-item-side-nav) ::slotted(a.active)::before*/.navigation-item-side-nav.navigation-item-selected.sc-ic-navigation-item-h .link.sc-ic-navigation-item::before,.sc-ic-navigation-item-h.navigation-item-side-nav .sc-ic-navigation-item-s>a.active::before{content:\"\";display:block;position:absolute;inset:0 0 0 0.313rem;border-radius:0.688rem !important;transition:var(--ic-easing-transition-slow)}/*!@:host(.navigation-item-side-nav.navigation-item-selected) .link:focus::before,\n:host(.navigation-item-side-nav) ::slotted(a.active:focus)::before*/.navigation-item-side-nav.navigation-item-selected.sc-ic-navigation-item-h .link.sc-ic-navigation-item:focus::before,.sc-ic-navigation-item-h.navigation-item-side-nav .sc-ic-navigation-item-s>a.active:focus::before{box-shadow:var(--ic-border-focus-inset)}/*!@:host(:not(.navigation-item-side-nav-collapsed).navigation-item-side-nav.navigation-item-side-nav-collapsed-with-label)\n  .link*/.sc-ic-navigation-item-h:not(.navigation-item-side-nav-collapsed).navigation-item-side-nav.navigation-item-side-nav-collapsed-with-label .link.sc-ic-navigation-item{opacity:var(--navigation-item-label-opacity);height:auto}/*!@:host(.navigation-item-top-nav-child.navigation-item-side-nav-collapsed-with-label)\n  .link,\n:host(.navigation-item-top-nav-child.navigation-item-side-nav-collapsed-with-label)\n  ::slotted(a)*/.navigation-item-top-nav-child.navigation-item-side-nav-collapsed-with-label.sc-ic-navigation-item-h .link.sc-ic-navigation-item,.sc-ic-navigation-item-h.navigation-item-top-nav-child.navigation-item-side-nav-collapsed-with-label .sc-ic-navigation-item-s>a{min-width:var(--navigation-group-item-min-width);padding:var(--ic-space-xs) !important;height:auto;gap:0}/*!@:host(.navigation-item-top-nav-child.navigation-item-side-nav-collapsed-with-label)\n  ::slotted(a)*/.sc-ic-navigation-item-h.navigation-item-top-nav-child.navigation-item-side-nav-collapsed-with-label .sc-ic-navigation-item-s>a{display:block}/*!@:host(.navigation-item-side-nav.navigation-item-selected) .link::after,\n:host(.navigation-item-side-nav) ::slotted(a.active)::after*/.navigation-item-side-nav.navigation-item-selected.sc-ic-navigation-item-h .link.sc-ic-navigation-item::after,.sc-ic-navigation-item-h.navigation-item-side-nav .sc-ic-navigation-item-s>a.active::after{display:none}/*!@:host(.navigation-item-side-nav.navigation-item) .link:focus,\n:host(.navigation-item-side-nav.navigation-item) ::slotted(a:focus)*/.navigation-item-side-nav.navigation-item.sc-ic-navigation-item-h .link.sc-ic-navigation-item:focus,.sc-ic-navigation-item-h.navigation-item-side-nav.navigation-item .sc-ic-navigation-item-s>a:focus{box-shadow:var(--ic-border-focus-inset);border-radius:var(--ic-border-radius-inset);background-color:transparent}/*!@:host(.navigation-item-side-nav.navigation-item-selected) .link:focus,\n:host(.navigation-item-side-nav) ::slotted(a.active:focus)*/.navigation-item-side-nav.navigation-item-selected.sc-ic-navigation-item-h .link.sc-ic-navigation-item:focus,.sc-ic-navigation-item-h.navigation-item-side-nav .sc-ic-navigation-item-s>a.active:focus{margin:0 auto;box-shadow:inset 0.313rem 0 0 var(--ic-theme-text);border-radius:0}/*!@:host(.navigation-item-side-nav.navigation-item) .link:hover:not(:focus)*/.navigation-item-side-nav.navigation-item.sc-ic-navigation-item-h .link.sc-ic-navigation-item:hover:not(:focus){background-color:var(--ic-theme-hover) !important}/*!@:host(.navigation-item-page-header).link,\n:host(.navigation-item-page-header) a,\n:host(.navigation-item-page-header) ::slotted(a)*/.navigation-item-page-header.link.sc-ic-navigation-item-h,.navigation-item-page-header.sc-ic-navigation-item-h a.sc-ic-navigation-item,.sc-ic-navigation-item-h.navigation-item-page-header .sc-ic-navigation-item-s>a{height:2.5rem !important;color:var(--ic-color-primary-text) !important;transition:all var(--ic-easing-transition-fast) !important;box-shadow:rgba(23 89 188 / 0%) !important}/*!@:host(.navigation-item-page-header.navigation-item-selected) .link::after,\n:host(.navigation-item-page-header) ::slotted(a.active)::after*/.navigation-item-page-header.navigation-item-selected.sc-ic-navigation-item-h .link.sc-ic-navigation-item::after,.sc-ic-navigation-item-h.navigation-item-page-header .sc-ic-navigation-item-s>a.active::after{content:\" \" !important;position:absolute;bottom:0;left:0;right:0;height:var(--ic-space-xxs);background-color:var(--ic-action-default) !important}/*!@:host(.navigation-item-page-header) .link:hover,\n:host(.navigation-item-page-header) ::slotted(.link:hover),\n:host(.navigation-item-page-header) ::slotted(a:hover),\n:host(.navigation-item-page-header) .link:hover:not(:focus)*/.navigation-item-page-header.sc-ic-navigation-item-h .link.sc-ic-navigation-item:hover,.sc-ic-navigation-item-h.navigation-item-page-header .sc-ic-navigation-item-s>.link:hover,.sc-ic-navigation-item-h.navigation-item-page-header .sc-ic-navigation-item-s>a:hover,.navigation-item-page-header.sc-ic-navigation-item-h .link.sc-ic-navigation-item:hover:not(:focus){background-color:var(--ic-action-default-bg-hover) !important;cursor:pointer}/*!@:host(.navigation-item-page-header) .link:focus,\n:host(.navigation-item-page-header) ::slotted(a:focus)*/.navigation-item-page-header.sc-ic-navigation-item-h .link.sc-ic-navigation-item:focus,.sc-ic-navigation-item-h.navigation-item-page-header .sc-ic-navigation-item-s>a:focus{box-shadow:var(--ic-border-focus)}/*!@:host(.navigation-item-page-header) .link:active,\n:host(.navigation-item-page-header) ::slotted(a:active)*/.navigation-item-page-header.sc-ic-navigation-item-h .link.sc-ic-navigation-item:active,.sc-ic-navigation-item-h.navigation-item-page-header .sc-ic-navigation-item-s>a:active{background-color:var(--ic-action-default-bg-active) !important}/*!@:host(.navigation-item-page-header.navigation-item-selected) .link:focus::after,\n:host(.navigation-item-page-header) ::slotted(a.active:focus)::after*/.navigation-item-page-header.navigation-item-selected.sc-ic-navigation-item-h .link.sc-ic-navigation-item:focus::after,.sc-ic-navigation-item-h.navigation-item-page-header .sc-ic-navigation-item-s>a.active:focus::after{border-bottom-left-radius:var(--ic-border-radius);border-bottom-right-radius:var(--ic-border-radius)}/*!@:host(.navigation-item-page-header.navigation-item-selected.with-transition)\n  .link,\n:host(.navigation-item-page-header.navigation-item-selected.with-transition)\n  ::slotted(a.active)*/.navigation-item-page-header.navigation-item-selected.with-transition.sc-ic-navigation-item-h .link.sc-ic-navigation-item,.sc-ic-navigation-item-h.navigation-item-page-header.navigation-item-selected.with-transition .sc-ic-navigation-item-s>a.active{transition:all var(--ic-easing-transition-fast),\n    border-color var(--ic-transition-duration-fast)}/*!@:host(.navigation-item-page-header) ::slotted(a.active)::before,\n:host(.navigation-item-page-header) ::slotted(a.active:focus)::before,\n:host(.navigation-item-page-header.navigation-item-selected)\n  .link:focus::before*/.sc-ic-navigation-item-h.navigation-item-page-header .sc-ic-navigation-item-s>a.active::before,.sc-ic-navigation-item-h.navigation-item-page-header .sc-ic-navigation-item-s>a.active:focus::before,.navigation-item-page-header.navigation-item-selected.sc-ic-navigation-item-h .link.sc-ic-navigation-item:focus::before{display:none}/*!@.open-in-new-icon*/.open-in-new-icon.sc-ic-navigation-item{flex:1}/*!@.open-in-new-icon svg*/.open-in-new-icon.sc-ic-navigation-item svg.sc-ic-navigation-item{margin-top:var(--ic-space-xxs);padding-left:var(--ic-space-xxs)}/*!@:host(.navigation-item-side-nav) .open-in-new-icon*/.navigation-item-side-nav.sc-ic-navigation-item-h .open-in-new-icon.sc-ic-navigation-item{margin-left:calc(-1 * var(--ic-space-xs))}/*!@:host(.navigation-item-top-nav) .open-in-new-icon svg,\n:host(.navigation-item-page-header) .open-in-new-icon svg,\n:host(.navigation-item-side-nav) .open-in-new-icon svg*/.navigation-item-top-nav.sc-ic-navigation-item-h .open-in-new-icon.sc-ic-navigation-item svg.sc-ic-navigation-item,.navigation-item-page-header.sc-ic-navigation-item-h .open-in-new-icon.sc-ic-navigation-item svg.sc-ic-navigation-item,.navigation-item-side-nav.sc-ic-navigation-item-h .open-in-new-icon.sc-ic-navigation-item svg.sc-ic-navigation-item{height:0.875rem;width:0.875rem}/*!@:host(.navigation-item-side-menu) .open-in-new-icon svg,\n:host(.navigation-item-top-nav-child) .open-in-new-icon svg*/.navigation-item-side-menu.sc-ic-navigation-item-h .open-in-new-icon.sc-ic-navigation-item svg.sc-ic-navigation-item,.navigation-item-top-nav-child.sc-ic-navigation-item-h .open-in-new-icon.sc-ic-navigation-item svg.sc-ic-navigation-item{height:var(--ic-space-md);width:var(--ic-space-md)}/*!@:host(.navigation-item-page-header) .open-in-new-icon svg,\n:host(.navigation-item-top-nav-child) .open-in-new-icon svg,\n:host(.navigation-item-side-menu) .open-in-new-icon svg*/.navigation-item-page-header.sc-ic-navigation-item-h .open-in-new-icon.sc-ic-navigation-item svg.sc-ic-navigation-item,.navigation-item-top-nav-child.sc-ic-navigation-item-h .open-in-new-icon.sc-ic-navigation-item svg.sc-ic-navigation-item,.navigation-item-side-menu.sc-ic-navigation-item-h .open-in-new-icon.sc-ic-navigation-item svg.sc-ic-navigation-item{fill:var(--ic-color-primary-text)}";

/**
 * @part link - The `<a>` within ic-navigation-item
 * @slot badge - Badge component overlaying the top right of the icon.
 */
class NavigationItem {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.childBlur = createEvent(this, "childBlur", 7);
    this.navItemClicked = createEvent(this, "navItemClicked", 7);
    this.isInitialRender = true;
    this.displayDefaultNavigationItem = (href, hreflang, target, rel, referrerpolicy, download, label) => {
      const variant = this.isTopNavChild || this.inTopNavSideMenu ? "body" : "label";
      const ChevronIconComponent = this.expandable && (hAsync("div", { class: { svg: true }, innerHTML: chevronIcon }));
      const IconComponent = this.el.querySelector('[slot="icon"]') && (hAsync("div", { class: "icon" }, hAsync("slot", { name: "icon" }), isSlotUsed$1(this.el, "badge") && hAsync("slot", { name: "badge" })));
      if (href !== "") {
        return (hAsync("a", { href: href, target: target, rel: rel, hreflang: hreflang, referrerPolicy: referrerpolicy, download: download !== false ? download : null, class: "link", ref: (el) => (this.itemEl = el), part: "link" }, IconComponent, hAsync("ic-typography", { variant: variant }, label), hAsync("div", { class: "chevron-container" }, ChevronIconComponent), target === "_blank" && (hAsync("span", { class: "open-in-new-icon", innerHTML: OpenInNew }))));
      }
      return (hAsync("div", { tabindex: "0", class: "link", ref: (el) => (this.itemEl = el) }, IconComponent, hAsync("ic-typography", { variant: variant }, label), ChevronIconComponent));
    };
    this.topNavResizedHandler = (ev) => {
      const newSize = ev.detail.size;
      if (newSize !== this.deviceSize) {
        this.deviceSize = newSize;
        this.inTopNavSideMenu = newSize <= DEVICE_SIZES.L;
      }
    };
    this.sideNavExpandHandler = (ev) => {
      const { sideNavExpanded, sideNavMobile } = ev.detail;
      this.sideNavExpanded = sideNavExpanded;
      this.isSideNavMobile = sideNavMobile;
    };
    this.handleBlur = (ev) => {
      if (ev.relatedTarget !== null) {
        const target = ev.relatedTarget;
        if (target.tagName === "IC-NAVIGATION-ITEM") {
          return;
        }
      }
      this.childBlur.emit();
    };
    this.handleClick = () => {
      this.navItemClicked.emit();
    };
    this.generateTooltipLabel = () => {
      if (this.label) {
        return this.label;
      }
      if (this.navigationSlot) {
        return this.navigationSlot.textContent;
      }
      if (this.el.children[0]) {
        return this.el.children[0].textContent;
      }
      return "";
    };
    this.renderNavigationItemContent = () => {
      if (this.label) {
        return this.displayDefaultNavigationItem(this.href, this.hreflang, this.target, this.rel, this.referrerpolicy, this.download, this.label);
      }
      if (this.navigationSlot) {
        return hAsync("slot", { name: "navigation-item" });
      }
      return hAsync("slot", null);
    };
    this.deviceSize = DEVICE_SIZES.XL;
    this.focusStyle = getThemeForegroundColor();
    this.inTopNavSideMenu = false;
    this.isSideNavMobile = false;
    this.isTopNavChild = false;
    this.navigationType = undefined;
    this.parentEl = undefined;
    this.sideNavExpanded = false;
    this.collapsedIconLabel = false;
    this.displayNavigationTooltip = false;
    this.download = false;
    this.expandable = false;
    this.href = "";
    this.hreflang = undefined;
    this.label = undefined;
    this.rel = undefined;
    this.referrerpolicy = undefined;
    this.selected = false;
    this.target = undefined;
  }
  disconnectedCallback() {
    if (this.navigationType === "side") {
      this.parentEl.removeEventListener("sideNavExpanded", this.sideNavExpandHandler);
    }
    else if (this.navigationType === "top") {
      this.parentEl.removeEventListener("topNavResized", this.topNavResizedHandler);
    }
  }
  componentWillLoad() {
    const navParentDetails = getNavItemParentDetails(this.el);
    this.navigationType = navParentDetails.navType;
    this.parentEl = navParentDetails.parent;
    if (this.navigationType === "side") {
      this.parentEl.addEventListener("sideNavExpanded", this.sideNavExpandHandler);
    }
    else if (this.navigationType === "top") {
      this.parentEl.addEventListener("topNavResized", this.topNavResizedHandler);
    }
    if (getParentElementType(this.el) === "IC-NAVIGATION-GROUP" &&
      this.navigationType === "top") {
      this.isTopNavChild = true;
    }
    this.deviceSize = getCurrentDeviceSize();
    if (this.deviceSize <= DEVICE_SIZES.L && this.navigationType === "top") {
      this.inTopNavSideMenu = true;
    }
    this.navigationSlot = this.el.querySelector('[slot="navigation-item"]');
    if (this.navigationSlot) {
      this.navigationSlot.ariaLabel = this.navigationSlot.textContent.trim();
    }
  }
  componentDidUpdate() {
    this.isInitialRender = false;
  }
  themeChangeHandler(ev) {
    const theme = ev.detail;
    this.focusStyle = theme.mode;
  }
  /**
   * Sets focus on the nav item.
   */
  async setFocus() {
    if (this.itemEl) {
      this.itemEl.focus();
    }
  }
  render() {
    const { inTopNavSideMenu, isTopNavChild, selected } = this;
    return (hAsync(Host, { class: {
        ["navigation-item"]: true,
        ["navigation-item-top-nav"]: !inTopNavSideMenu && this.navigationType === "top",
        ["navigation-item-top-nav-child-selected"]: isTopNavChild && !inTopNavSideMenu && selected,
        [this.focusStyle]: (!inTopNavSideMenu && !isTopNavChild) ||
          (this.navigationType === "side" && isTopNavChild),
        ["navigation-item-selected"]: !isTopNavChild && selected,
        ["navigation-item-side-menu"]: inTopNavSideMenu,
        ["navigation-item-side-menu-selected"]: inTopNavSideMenu && selected,
        ["navigation-item-top-nav-child"]: isTopNavChild && !inTopNavSideMenu,
        ["navigation-item-page-header"]: this.navigationType === "page-header",
        ["with-transition"]: !this.isInitialRender,
        ["navigation-item-side-nav"]: this.navigationType === "side",
        ["navigation-item-side-nav-collapsed"]: (!this.sideNavExpanded || this.displayNavigationTooltip) &&
          this.navigationType === "side",
        ["navigation-item-side-nav-collapsed-with-label"]: !this.sideNavExpanded &&
          this.navigationType === "side" &&
          this.collapsedIconLabel &&
          !this.isSideNavMobile,
        ["expandable"]: this.expandable,
      }, onBlur: isTopNavChild && !inTopNavSideMenu ? this.handleBlur : null, onClick: this.handleClick, "aria-current": selected ? "page" : null, role: "listitem" }, hAsync("ic-tooltip", { label: this.generateTooltipLabel(), target: "navigation-item", placement: "right", class: {
        ["tooltip-navigation-item"]: true,
        ["tooltip-navigation-item-side-nav-collapsed"]: (!this.sideNavExpanded || this.displayNavigationTooltip) &&
          this.navigationType === "side",
        ["tooltip-long-label-navigation-item-side-nav-expanded"]: this.el.hasAttribute("[display-navigation-tooltip = 'true']"),
      } }, this.renderNavigationItemContent())));
  }
  static get delegatesFocus() { return true; }
  get el() { return getElement(this); }
  static get style() { return icNavigationItemCss; }
  static get cmpMeta() { return {
    "$flags$": 25,
    "$tagName$": "ic-navigation-item",
    "$members$": {
      "collapsedIconLabel": [4, "collapsed-icon-label"],
      "displayNavigationTooltip": [4, "display-navigation-tooltip"],
      "download": [8],
      "expandable": [4],
      "href": [1],
      "hreflang": [1],
      "label": [1],
      "rel": [1],
      "referrerpolicy": [1],
      "selected": [4],
      "target": [1],
      "deviceSize": [32],
      "focusStyle": [32],
      "inTopNavSideMenu": [32],
      "isSideNavMobile": [32],
      "isTopNavChild": [32],
      "navigationType": [32],
      "parentEl": [32],
      "sideNavExpanded": [32],
      "setFocus": [64]
    },
    "$listeners$": [[4, "themeChange", "themeChangeHandler"]],
    "$lazyBundleId$": "-",
    "$attrsToReflect$": []
  }; }
}

const icNavigationMenuCss = "/*!@:host*/.sc-ic-navigation-menu-h{display:block;position:fixed;top:0;left:0;width:100%;min-height:100% !important;background:rgb(0 0 0 / 60%);z-index:var(--ic-z-index-navigation-menu)}/*!@.popout-modal*/.popout-modal.sc-ic-navigation-menu{position:absolute;inset:0}/*!@.popout-menu*/.popout-menu.sc-ic-navigation-menu{position:fixed;top:0;right:0;width:16rem;bottom:0;background-color:var(--ic-architectural-20);color:var(--ic-color-primary-text);box-shadow:var(--ic-elevation-overlay);overflow-y:auto;overflow-x:hidden}/*!@:host(.inline) .popout-menu*/.inline.sc-ic-navigation-menu-h .popout-menu.sc-ic-navigation-menu{position:absolute}/*!@.menu-close-button-container*/.menu-close-button-container.sc-ic-navigation-menu{position:relative;left:11.875rem;padding:var(--ic-space-md) 0}/*!@.nav-group-first*/.nav-group-first.sc-ic-navigation-menu{padding-bottom:0}/*!@.menu-buttons-container*/.menu-buttons-container.sc-ic-navigation-menu{padding:var(--ic-space-sm) 0;border-bottom:var(--ic-border-width) solid var(--ic-architectural-200)}/*!@.menu-buttons-container-nav-item-above*/.menu-buttons-container-nav-item-above.sc-ic-navigation-menu{margin-top:var(--ic-space-md);border-top:var(--ic-border-width) solid var(--ic-architectural-200)}/*!@.menu-status-version-container*/.menu-status-version-container.sc-ic-navigation-menu{display:flex;flex-wrap:wrap;gap:var(--ic-space-xs);padding:var(--ic-space-md) var(--ic-space-md) var(--ic-space-xl)}/*!@.status-version-no-buttons*/.status-version-no-buttons.sc-ic-navigation-menu{border-top:var(--ic-space-1px) solid var(--ic-architectural-200)}/*!@.menu-status*/.menu-status.sc-ic-navigation-menu{background-color:var(--ic-architectural-500);color:var(--ic-color-white-text);border-radius:var(--ic-space-md);width:-moz-fit-content;width:fit-content;padding:var(--ic-space-xxs) var(--ic-space-sm)}/*!@.menu-version*/.menu-version.sc-ic-navigation-menu{border-radius:var(--ic-space-md);background-color:var(--ic-architectural-100);padding:var(--ic-space-xxs) var(--ic-space-sm)}/*!@.menu-status-text,\n.menu-version-text*/.menu-status-text.sc-ic-navigation-menu,.menu-version-text.sc-ic-navigation-menu{overflow-wrap:break-word}/*!@.navigation-landmark-text*/.navigation-landmark-text.sc-ic-navigation-menu{position:absolute;width:var(--ic-space-1px);height:var(--ic-space-1px);padding:0;margin:calc(-1 * var(--ic-space-1px));overflow:hidden}";

/**
 * @slot navigation - Content will be rendered at top of panel.
 * @slot buttons - Content will be rendered above version info and below navigation.
 */
class NavigationMenu {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.icNavigationMenuClose = createEvent(this, "icNavigationMenuClose", 7);
    this.closeButton = null;
    this.hasButtons = false;
    this.hasNavigation = false;
    this.lastTabStop = null;
    this.navGroupFirst = false;
    this.navItemAboveButtons = false;
    this.closeMenu = () => {
      this.icNavigationMenuClose.emit();
    };
    this.focusCloseButton = () => {
      if (this.closeButton.focus) {
        this.closeButton.focus();
      }
    };
    this.focusLastTabStop = () => {
      let focusEl;
      if (this.lastTabStop !== null) {
        switch (this.lastTabStop.tagName) {
          case "IC-NAVIGATION-BUTTON":
          case "IC-NAVIGATION-ITEM":
          case "IC-NAVIGATION-GROUP":
            focusEl = this.lastTabStop;
            focusEl.focus();
            break;
          case "A":
            this.lastTabStop.focus();
            break;
        }
      }
    };
    this.status = "";
    this.version = "";
  }
  componentWillLoad() {
    this.navBarEl = document.querySelector("ic-top-navigation");
    const navigationEls = getSlotContent$1(this.el, "navigation");
    if (navigationEls) {
      this.hasNavigation = true;
      const lastEl = navigationEls[navigationEls.length - 1];
      if (lastEl.tagName === "IC-NAVIGATION-ITEM") {
        this.navItemAboveButtons = true;
      }
      const firstEl = navigationEls[0];
      if (firstEl.tagName === "IC-NAVIGATION-GROUP") {
        this.navGroupFirst = true;
      }
    }
    const buttonContent = getSlotContent$1(this.el, "buttons");
    if (buttonContent !== null) {
      this.hasButtons = true;
      this.lastTabStop = buttonContent[buttonContent.length - 1];
    }
    else {
      if (this.hasNavigation) {
        const lastEl = navigationEls[navigationEls.length - 1];
        //check for slotted content i.e. react router link
        const slotContent = getSlot$1(lastEl, "navigation-item");
        if (slotContent !== null) {
          this.lastTabStop = slotContent;
        }
        else {
          this.lastTabStop = lastEl;
        }
      }
    }
  }
  componentDidLoad() {
    this.focusCloseButton();
  }
  componentWillRender() {
    this.hasNavigation = isSlotUsed$1(this.el, "navigation");
    this.hasButtons = isSlotUsed$1(this.el, "buttons");
  }
  navItemClickHandler() {
    this.closeMenu();
  }
  handleKeyDown(ev) {
    if (ev.key === "Tab") {
      if (ev.shiftKey) {
        if (document.activeElement === this.navBarEl) {
          ev.preventDefault();
          this.focusLastTabStop();
        }
      }
      else if (document.activeElement === this.lastTabStop ||
        this.lastTabStop === null) {
        ev.preventDefault();
        this.focusCloseButton();
      }
    }
    else if (ev.key === "Escape") {
      this.closeMenu();
    }
  }
  render() {
    return (hAsync(Host, null, hAsync("div", { class: "popout-modal", onClick: this.closeMenu }), hAsync("div", { class: "popout-menu", role: "dialog", "aria-modal": "true", "aria-label": `${this.hasNavigation ? "Navigation" : "App"} menu` }, hAsync("span", { "aria-hidden": "true", id: "navigation-landmark-text", class: "navigation-landmark-text" }, "Main navigation"), hAsync("nav", { "aria-labelledby": "navigation-landmark-text", "aria-hidden": this.hasNavigation ? "false" : "true" }, hAsync("div", { class: {
        ["menu-close-button-container"]: true,
        ["nav-group-first"]: this.navGroupFirst,
      } }, hAsync("ic-button", { ref: (el) => (this.closeButton = el), id: "menu-close-button", class: "menu-close-button", variant: "icon", size: "large", "aria-label": `Close ${this.hasNavigation ? "navigation" : "app"} menu`, onClick: this.closeMenu }, hAsync("svg", { slot: "icon", width: "14", height: "14", viewBox: "0 0 14 14", fill: "none", xmlns: "http://www.w3.org/2000/svg" }, hAsync("path", { d: "M14 1.41L12.59 0L7 5.59L1.41 0L0 1.41L5.59 7L0 12.59L1.41 14L7 8.41L12.59 14L14 12.59L8.41 7L14 1.41Z", fill: "#1759BC" })))), this.hasNavigation && hAsync("slot", { name: "navigation" })), this.hasButtons && (hAsync("div", { class: {
        ["menu-buttons-container"]: true,
        ["menu-buttons-container-nav-item-above"]: this.navItemAboveButtons,
      } }, hAsync("slot", { name: "buttons" }))), (this.status !== "" || this.version !== "") && (hAsync("div", { class: {
        ["menu-status-version-container"]: true,
        ["status-version-no-buttons"]: !this.hasButtons,
      } }, this.status !== "" && (hAsync("div", { class: "menu-status" }, hAsync("ic-typography", { variant: "label-uppercase", "aria-label": "app tag", class: "menu-status-text" }, this.status))), this.version !== "" && (hAsync("div", { class: "menu-version" }, hAsync("ic-typography", { variant: "label", class: "menu-version-text", "aria-label": "app version" }, this.version))))))));
  }
  get el() { return getElement(this); }
  static get style() { return icNavigationMenuCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "ic-navigation-menu",
    "$members$": {
      "status": [1],
      "version": [1]
    },
    "$listeners$": [[0, "navItemClicked", "navItemClickHandler"], [4, "keydown", "handleKeyDown"]],
    "$lazyBundleId$": "-",
    "$attrsToReflect$": []
  }; }
}

const icPageHeaderCss = "/*!@html*/html.sc-ic-page-header{line-height:1.15;-webkit-text-size-adjust:100%}/*!@body*/body.sc-ic-page-header{margin:0}/*!@main*/main.sc-ic-page-header{display:block}/*!@h1*/h1.sc-ic-page-header{font-size:2em;margin:0.67em 0}/*!@hr*/hr.sc-ic-page-header{box-sizing:content-box;height:0;overflow:visible}/*!@pre*/pre.sc-ic-page-header{font-family:monospace, monospace;font-size:1em}/*!@a*/a.sc-ic-page-header{background-color:transparent}/*!@abbr[title]*/abbr[title].sc-ic-page-header{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}/*!@b,\nstrong*/b.sc-ic-page-header,strong.sc-ic-page-header{font-weight:bolder}/*!@code,\nkbd,\nsamp*/code.sc-ic-page-header,kbd.sc-ic-page-header,samp.sc-ic-page-header{font-family:monospace, monospace;font-size:1em}/*!@small*/small.sc-ic-page-header{font-size:80%}/*!@sub,\nsup*/sub.sc-ic-page-header,sup.sc-ic-page-header{font-size:75%;line-height:0;position:relative;vertical-align:baseline}/*!@sub*/sub.sc-ic-page-header{bottom:-0.25em}/*!@sup*/sup.sc-ic-page-header{top:-0.5em}/*!@img*/img.sc-ic-page-header{border-style:none}/*!@button,\ninput,\noptgroup,\nselect,\ntextarea*/button.sc-ic-page-header,input.sc-ic-page-header,optgroup.sc-ic-page-header,select.sc-ic-page-header,textarea.sc-ic-page-header{font-family:inherit;font-size:100%;line-height:1.15;margin:0}/*!@button,\ninput*/button.sc-ic-page-header,input.sc-ic-page-header{overflow:visible}/*!@button,\nselect*/button.sc-ic-page-header,select.sc-ic-page-header{text-transform:none}/*!@button,\n[type=\"button\"],\n[type=\"reset\"],\n[type=\"submit\"]*/button.sc-ic-page-header,[type=\"button\"].sc-ic-page-header,[type=\"reset\"].sc-ic-page-header,[type=\"submit\"].sc-ic-page-header{-webkit-appearance:button}/*!@button::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner*/button.sc-ic-page-header::-moz-focus-inner,[type=\"button\"].sc-ic-page-header::-moz-focus-inner,[type=\"reset\"].sc-ic-page-header::-moz-focus-inner,[type=\"submit\"].sc-ic-page-header::-moz-focus-inner{border-style:none;padding:0}/*!@button:-moz-focusring,\n[type=\"button\"]:-moz-focusring,\n[type=\"reset\"]:-moz-focusring,\n[type=\"submit\"]:-moz-focusring*/button.sc-ic-page-header:-moz-focusring,[type=\"button\"].sc-ic-page-header:-moz-focusring,[type=\"reset\"].sc-ic-page-header:-moz-focusring,[type=\"submit\"].sc-ic-page-header:-moz-focusring{outline:1px dotted ButtonText}/*!@fieldset*/fieldset.sc-ic-page-header{padding:0.35em 0.75em 0.625em}/*!@legend*/legend.sc-ic-page-header{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}/*!@progress*/progress.sc-ic-page-header{vertical-align:baseline}/*!@textarea*/textarea.sc-ic-page-header{overflow:auto}/*!@[type=\"checkbox\"],\n[type=\"radio\"]*/[type=\"checkbox\"].sc-ic-page-header,[type=\"radio\"].sc-ic-page-header{box-sizing:border-box;padding:0}/*!@[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button*/[type=\"number\"].sc-ic-page-header::-webkit-inner-spin-button,[type=\"number\"].sc-ic-page-header::-webkit-outer-spin-button{height:auto}/*!@[type=\"search\"]*/[type=\"search\"].sc-ic-page-header{-webkit-appearance:textfield;outline-offset:-2px}/*!@[type=\"search\"]::-webkit-search-decoration*/[type=\"search\"].sc-ic-page-header::-webkit-search-decoration{-webkit-appearance:none}/*!@::-webkit-file-upload-button*/.sc-ic-page-header::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}/*!@details*/details.sc-ic-page-header{display:block}/*!@summary*/summary.sc-ic-page-header{display:list-item}/*!@template*/template.sc-ic-page-header{display:none}/*!@[hidden]*/[hidden].sc-ic-page-header{display:none}/*!@html,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo*/html.sc-ic-page-header,body.sc-ic-page-header,div.sc-ic-page-header,span.sc-ic-page-header,applet.sc-ic-page-header,object.sc-ic-page-header,iframe.sc-ic-page-header,h1.sc-ic-page-header,h2.sc-ic-page-header,h3.sc-ic-page-header,h4.sc-ic-page-header,h5.sc-ic-page-header,h6.sc-ic-page-header,p.sc-ic-page-header,blockquote.sc-ic-page-header,pre.sc-ic-page-header,a.sc-ic-page-header,abbr.sc-ic-page-header,acronym.sc-ic-page-header,address.sc-ic-page-header,big.sc-ic-page-header,cite.sc-ic-page-header,code.sc-ic-page-header,del.sc-ic-page-header,dfn.sc-ic-page-header,em.sc-ic-page-header,img.sc-ic-page-header,ins.sc-ic-page-header,kbd.sc-ic-page-header,q.sc-ic-page-header,s.sc-ic-page-header,samp.sc-ic-page-header,small.sc-ic-page-header,strike.sc-ic-page-header,strong.sc-ic-page-header,sub.sc-ic-page-header,sup.sc-ic-page-header,tt.sc-ic-page-header,var.sc-ic-page-header,b.sc-ic-page-header,u.sc-ic-page-header,i.sc-ic-page-header,center.sc-ic-page-header,dl.sc-ic-page-header,dt.sc-ic-page-header,dd.sc-ic-page-header,ol.sc-ic-page-header,ul.sc-ic-page-header,li.sc-ic-page-header,fieldset.sc-ic-page-header,form.sc-ic-page-header,label.sc-ic-page-header,legend.sc-ic-page-header,table.sc-ic-page-header,caption.sc-ic-page-header,tbody.sc-ic-page-header,tfoot.sc-ic-page-header,thead.sc-ic-page-header,tr.sc-ic-page-header,th.sc-ic-page-header,td.sc-ic-page-header,article.sc-ic-page-header,aside.sc-ic-page-header,canvas.sc-ic-page-header,details.sc-ic-page-header,embed.sc-ic-page-header,figure.sc-ic-page-header,figcaption.sc-ic-page-header,footer.sc-ic-page-header,header.sc-ic-page-header,hgroup.sc-ic-page-header,menu.sc-ic-page-header,nav.sc-ic-page-header,output.sc-ic-page-header,ruby.sc-ic-page-header,section.sc-ic-page-header,summary.sc-ic-page-header,time.sc-ic-page-header,mark.sc-ic-page-header,audio.sc-ic-page-header,video.sc-ic-page-header{margin:0;padding:0;border:0;font-size:100%;font-style:inherit;vertical-align:baseline}/*!@:host*/.sc-ic-page-header-h{display:block;z-index:var(--ic-z-index-page-header)}/*!@:host(.sticky)*/.sticky.sc-ic-page-header-h{position:sticky;top:0;box-shadow:var(--ic-elevation-overlay);z-index:var(--ic-z-index-sticky-page-header)}/*!@header*/header.sc-ic-page-header{background-color:var(--ic-architectural-40)}/*!@header.border-bottom*/header.border-bottom.sc-ic-page-header{border-bottom:var(--ic-border-default)}/*!@header.tabs*/header.tabs.sc-ic-page-header{padding-top:var(--ic-space-md)}/*!@.breadcrumb-area*/.breadcrumb-area.sc-ic-page-header{margin-bottom:var(--ic-space-md)}/*!@.main-content*/.main-content.sc-ic-page-header{display:grid;grid-template-columns:auto 1fr;grid-template-areas:\"title-area action-area\"\n    \"input-area action-area\";-moz-column-gap:var(--ic-space-md);column-gap:var(--ic-space-md);justify-content:space-between;width:100%}/*!@.title-area*/.title-area.sc-ic-page-header{display:flex;flex-direction:column;flex:1;min-width:19rem;grid-area:title-area}/*!@.header-content*/.header-content.sc-ic-page-header{display:flex;align-items:center;width:100%;flex-wrap:wrap;row-gap:var(--ic-space-xs);-moz-column-gap:var(--ic-space-md);column-gap:var(--ic-space-md)}/*!@.heading*/.heading.sc-ic-page-header{display:inline-block;overflow-wrap:break-word;-webkit-hyphens:auto;hyphens:auto}/*!@.subheading.small*/.subheading.small.sc-ic-page-header{margin-top:var(--ic-space-xs)}/*!@.action-area*/.action-area.sc-ic-page-header{display:flex;gap:var(--ic-space-md);flex-flow:row wrap;justify-self:end;justify-content:flex-end;height:-moz-fit-content;height:fit-content;grid-area:action-area}/*!@.input-area,\n.navigation-area*/.input-area.sc-ic-page-header,.navigation-area.sc-ic-page-header{margin-top:var(--ic-space-md);width:100%}/*!@.tabs-slot*/.tabs-slot.sc-ic-page-header{display:flex;overflow-x:auto;padding:0.5rem;margin:-0.5rem}/*!@.tabs-slot::-webkit-scrollbar*/.tabs-slot.sc-ic-page-header::-webkit-scrollbar{display:none}/*!@.input-area*/.input-area.sc-ic-page-header{grid-area:input-area}@media screen and (max-width: 576px){/*!@::slotted(ic-text-field)*/.sc-ic-page-header-s>ic-text-field{--input-width:100%;max-width:20rem}/*!@.main-content*/.main-content.sc-ic-page-header{grid-template-areas:\"title-area\"\n      \"action-area\"\n      \"input-area\";justify-content:flex-start}/*!@.title-area*/.title-area.sc-ic-page-header{min-width:0}/*!@.action-area*/.action-area.sc-ic-page-header{min-width:100%;margin-top:var(--ic-space-md);justify-content:start}}@media screen and (min-width: 992px){/*!@:host(.sticky-desktop)*/.sticky-desktop.sc-ic-page-header-h{position:sticky;top:0;box-shadow:var(--ic-elevation-overlay);z-index:var(--ic-z-index-sticky-page-header)}}";

/**
 * @slot breadcrumbs - Content will be rendered in the breadcrumb area, above the title and action areas.
 * @slot heading - Content will be rendered in the title area, in place of the heading.
 * @slot subheading - Content will be rendered in the title area, in place of the subheading.
 * @slot heading-adornment - Content will be rendered in the title area, adjacent to the heading.
 * @slot actions - Content will be rendered in the action area, adjacent to the title area.
 * @slot input - Content will be rendered in the input area, below the title area and adjacent to the action area.
 * @slot stepper - Content will be rendered in the navigation area, below the title and action areas. Note: stepper slot cannot be used when the tabs slot is being used.
 * @slot tabs - Content will be rendered in the navigation area, below the title and action areas. Note: the stepper slot cannot be used when the tabs slot is being used.
 */
class PageHeader {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.resizeObserver = null;
    this.resizeObserverCallback = () => {
      if (this.reverseOrder && isSlotUsed$1(this.el, "actions")) {
        this.applyReverseOrder();
      }
    };
    this.runResizeObserver = () => {
      this.resizeObserver = new ResizeObserver(() => {
        this.resizeObserverCallback();
      });
      this.resizeObserver.observe(this.el);
    };
    this.applyReverseOrder = () => {
      const currSize = getCurrentDeviceSize();
      if (currSize !== this.deviceSize) {
        this.deviceSize = currSize;
      }
      const actionArea = this.el.shadowRoot.querySelector("div.action-area");
      const actionHeights = [];
      /* For each button in the actions slot, check the height of the button and push this number into the actionHeights array and then find the greatest number in this array (i.e. find the height of the tallest button) */
      for (let i = 0; i < this.actionContent.length; i++) {
        const action = this.actionContent[i];
        let actionHeight = action.offsetHeight;
        if (actionHeight === undefined) {
          actionHeight = 0;
        }
        actionHeights.push(actionHeight);
      }
      const max = Math.max(...actionHeights);
      /* The smallest breakpoint displays buttons in the same order the user has slotted them in. When the device size is larger than the small breakpoiint then the order of the button reverses due to best practice for reading patterns. If the device size is larger than the small breakpoint and the buttons have started to wrap then they follow the order the user has slotted them in. This logic is programmed based on the height of the action-area div that wraps the actions slot. If the height of the action-area div is taller than the height of the tallest button, then it is assumed that the taller height is caused by the buttons wrapping */
      let actionAreaHeight = actionArea.offsetHeight;
      if (actionAreaHeight === undefined) {
        actionAreaHeight = 0;
      }
      const appendActionContent = () => {
        this.actionContent = this.actionContent.reverse();
        this.actionContent.forEach((btn) => {
          this.el.append(btn);
        });
        this.areButtonsReversed = !this.areButtonsReversed;
      };
      if ((this.deviceSize > DEVICE_SIZES.S &&
        actionAreaHeight <= max &&
        !this.areButtonsReversed) ||
        (((this.deviceSize > DEVICE_SIZES.S && actionAreaHeight > max) ||
          this.deviceSize <= DEVICE_SIZES.S) &&
          this.areButtonsReversed)) {
        appendActionContent();
      }
    };
    this.actionContent = undefined;
    this.areButtonsReversed = false;
    this.deviceSize = DEVICE_SIZES.XL;
    this.aligned = "left";
    this.border = true;
    this.heading = undefined;
    this.reverseOrder = false;
    this.size = "default";
    this.small = false;
    this.sticky = false;
    this.stickyDesktopOnly = false;
    this.subheading = undefined;
  }
  disconnectedCallback() {
    if (this.resizeObserver !== null) {
      this.resizeObserver.disconnect();
    }
  }
  componentWillLoad() {
    this.actionContent = Array.from(this.el.querySelectorAll(`[slot="actions"]`));
  }
  componentDidLoad() {
    checkResizeObserver$1(this.runResizeObserver);
  }
  render() {
    const { small, size, border, heading, subheading, aligned, sticky, stickyDesktopOnly, } = this;
    return (hAsync(Host, { class: {
        ["sticky"]: sticky,
        ["sticky-desktop"]: !sticky && stickyDesktopOnly,
      } }, hAsync("header", { class: {
        ["border-bottom"]: border,
        ["tabs"]: isSlotUsed$1(this.el, "tabs"),
      } }, hAsync("ic-section-container", { aligned: aligned, fullHeight: isSlotUsed$1(this.el, "tabs") }, isSlotUsed$1(this.el, "breadcrumbs") && (hAsync("div", { class: "breadcrumb-area" }, hAsync("slot", { name: "breadcrumbs" }))), hAsync("div", { class: "main-content" }, hAsync("div", { class: "title-area" }, hAsync("div", { class: "header-content" }, hAsync("slot", { name: "heading" }, hAsync("ic-typography", { variant: small || size === "small" ? "h4" : "h2", class: "heading" }, hAsync("h2", null, heading))), hAsync("slot", { name: "heading-adornment" })), hAsync("div", null, hAsync("slot", { name: "subheading" }, subheading && (hAsync("ic-typography", { variant: "body", class: {
        ["subheading"]: true,
        ["small"]: small || size === "small",
      } }, subheading))))), isSlotUsed$1(this.el, "actions") && (hAsync("div", { class: "action-area" }, hAsync("slot", { name: "actions" }))), isSlotUsed$1(this.el, "input") && (hAsync("div", { class: "input-area" }, hAsync("slot", { name: "input" })))), (isSlotUsed$1(this.el, "stepper") ||
      isSlotUsed$1(this.el, "tabs")) && (hAsync("div", { class: "navigation-area" }, isSlotUsed$1(this.el, "stepper") &&
      !isSlotUsed$1(this.el, "tabs") && hAsync("slot", { name: "stepper" }), isSlotUsed$1(this.el, "tabs") && (hAsync("nav", { "aria-label": "navigation-landmark-page-header" }, hAsync("ic-horizontal-scroll", null, hAsync("ul", { class: "tabs-slot" }, hAsync("slot", { name: "tabs" })))))))))));
  }
  get el() { return getElement(this); }
  static get style() { return icPageHeaderCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "ic-page-header",
    "$members$": {
      "aligned": [1],
      "border": [4],
      "heading": [1],
      "reverseOrder": [4, "reverse-order"],
      "size": [1],
      "small": [4],
      "sticky": [4],
      "stickyDesktopOnly": [4, "sticky-desktop-only"],
      "subheading": [1],
      "actionContent": [32],
      "areButtonsReversed": [32],
      "deviceSize": [32]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": []
  }; }
}

var paginationNextPrevious = `<svg width="8" height="10" viewBox="0 0 8 10" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M2.08748 0L0.912476 1.175L4.72914 5L0.912476 8.825L2.08748 10L7.08748 5L2.08748 0Z" fill="currentColor"/>
</svg>
`;

var paginationFirstLast = `<svg width="12" height="10" viewBox="0 0 12 10" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M11.1709 8.825L7.34589 5L11.1709 1.175L9.99589 0L4.99589 5L9.99589 10L11.1709 8.825ZM0.829224 0H2.49589V10H0.829224V0Z" fill="currentColour"/>
</svg>`;

const icPaginationCss = "/*!@html*/html.sc-ic-pagination{line-height:1.15;-webkit-text-size-adjust:100%}/*!@body*/body.sc-ic-pagination{margin:0}/*!@main*/main.sc-ic-pagination{display:block}/*!@h1*/h1.sc-ic-pagination{font-size:2em;margin:0.67em 0}/*!@hr*/hr.sc-ic-pagination{box-sizing:content-box;height:0;overflow:visible}/*!@pre*/pre.sc-ic-pagination{font-family:monospace, monospace;font-size:1em}/*!@a*/a.sc-ic-pagination{background-color:transparent}/*!@abbr[title]*/abbr[title].sc-ic-pagination{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}/*!@b,\nstrong*/b.sc-ic-pagination,strong.sc-ic-pagination{font-weight:bolder}/*!@code,\nkbd,\nsamp*/code.sc-ic-pagination,kbd.sc-ic-pagination,samp.sc-ic-pagination{font-family:monospace, monospace;font-size:1em}/*!@small*/small.sc-ic-pagination{font-size:80%}/*!@sub,\nsup*/sub.sc-ic-pagination,sup.sc-ic-pagination{font-size:75%;line-height:0;position:relative;vertical-align:baseline}/*!@sub*/sub.sc-ic-pagination{bottom:-0.25em}/*!@sup*/sup.sc-ic-pagination{top:-0.5em}/*!@img*/img.sc-ic-pagination{border-style:none}/*!@button,\ninput,\noptgroup,\nselect,\ntextarea*/button.sc-ic-pagination,input.sc-ic-pagination,optgroup.sc-ic-pagination,select.sc-ic-pagination,textarea.sc-ic-pagination{font-family:inherit;font-size:100%;line-height:1.15;margin:0}/*!@button,\ninput*/button.sc-ic-pagination,input.sc-ic-pagination{overflow:visible}/*!@button,\nselect*/button.sc-ic-pagination,select.sc-ic-pagination{text-transform:none}/*!@button,\n[type=\"button\"],\n[type=\"reset\"],\n[type=\"submit\"]*/button.sc-ic-pagination,[type=\"button\"].sc-ic-pagination,[type=\"reset\"].sc-ic-pagination,[type=\"submit\"].sc-ic-pagination{-webkit-appearance:button}/*!@button::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner*/button.sc-ic-pagination::-moz-focus-inner,[type=\"button\"].sc-ic-pagination::-moz-focus-inner,[type=\"reset\"].sc-ic-pagination::-moz-focus-inner,[type=\"submit\"].sc-ic-pagination::-moz-focus-inner{border-style:none;padding:0}/*!@button:-moz-focusring,\n[type=\"button\"]:-moz-focusring,\n[type=\"reset\"]:-moz-focusring,\n[type=\"submit\"]:-moz-focusring*/button.sc-ic-pagination:-moz-focusring,[type=\"button\"].sc-ic-pagination:-moz-focusring,[type=\"reset\"].sc-ic-pagination:-moz-focusring,[type=\"submit\"].sc-ic-pagination:-moz-focusring{outline:1px dotted ButtonText}/*!@fieldset*/fieldset.sc-ic-pagination{padding:0.35em 0.75em 0.625em}/*!@legend*/legend.sc-ic-pagination{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}/*!@progress*/progress.sc-ic-pagination{vertical-align:baseline}/*!@textarea*/textarea.sc-ic-pagination{overflow:auto}/*!@[type=\"checkbox\"],\n[type=\"radio\"]*/[type=\"checkbox\"].sc-ic-pagination,[type=\"radio\"].sc-ic-pagination{box-sizing:border-box;padding:0}/*!@[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button*/[type=\"number\"].sc-ic-pagination::-webkit-inner-spin-button,[type=\"number\"].sc-ic-pagination::-webkit-outer-spin-button{height:auto}/*!@[type=\"search\"]*/[type=\"search\"].sc-ic-pagination{-webkit-appearance:textfield;outline-offset:-2px}/*!@[type=\"search\"]::-webkit-search-decoration*/[type=\"search\"].sc-ic-pagination::-webkit-search-decoration{-webkit-appearance:none}/*!@::-webkit-file-upload-button*/.sc-ic-pagination::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}/*!@details*/details.sc-ic-pagination{display:block}/*!@summary*/summary.sc-ic-pagination{display:list-item}/*!@template*/template.sc-ic-pagination{display:none}/*!@[hidden]*/[hidden].sc-ic-pagination{display:none}/*!@html,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo*/html.sc-ic-pagination,body.sc-ic-pagination,div.sc-ic-pagination,span.sc-ic-pagination,applet.sc-ic-pagination,object.sc-ic-pagination,iframe.sc-ic-pagination,h1.sc-ic-pagination,h2.sc-ic-pagination,h3.sc-ic-pagination,h4.sc-ic-pagination,h5.sc-ic-pagination,h6.sc-ic-pagination,p.sc-ic-pagination,blockquote.sc-ic-pagination,pre.sc-ic-pagination,a.sc-ic-pagination,abbr.sc-ic-pagination,acronym.sc-ic-pagination,address.sc-ic-pagination,big.sc-ic-pagination,cite.sc-ic-pagination,code.sc-ic-pagination,del.sc-ic-pagination,dfn.sc-ic-pagination,em.sc-ic-pagination,img.sc-ic-pagination,ins.sc-ic-pagination,kbd.sc-ic-pagination,q.sc-ic-pagination,s.sc-ic-pagination,samp.sc-ic-pagination,small.sc-ic-pagination,strike.sc-ic-pagination,strong.sc-ic-pagination,sub.sc-ic-pagination,sup.sc-ic-pagination,tt.sc-ic-pagination,var.sc-ic-pagination,b.sc-ic-pagination,u.sc-ic-pagination,i.sc-ic-pagination,center.sc-ic-pagination,dl.sc-ic-pagination,dt.sc-ic-pagination,dd.sc-ic-pagination,ol.sc-ic-pagination,ul.sc-ic-pagination,li.sc-ic-pagination,fieldset.sc-ic-pagination,form.sc-ic-pagination,label.sc-ic-pagination,legend.sc-ic-pagination,table.sc-ic-pagination,caption.sc-ic-pagination,tbody.sc-ic-pagination,tfoot.sc-ic-pagination,thead.sc-ic-pagination,tr.sc-ic-pagination,th.sc-ic-pagination,td.sc-ic-pagination,article.sc-ic-pagination,aside.sc-ic-pagination,canvas.sc-ic-pagination,details.sc-ic-pagination,embed.sc-ic-pagination,figure.sc-ic-pagination,figcaption.sc-ic-pagination,footer.sc-ic-pagination,header.sc-ic-pagination,hgroup.sc-ic-pagination,menu.sc-ic-pagination,nav.sc-ic-pagination,output.sc-ic-pagination,ruby.sc-ic-pagination,section.sc-ic-pagination,summary.sc-ic-pagination,time.sc-ic-pagination,mark.sc-ic-pagination,audio.sc-ic-pagination,video.sc-ic-pagination{margin:0;padding:0;border:0;font-size:100%;font-style:inherit;vertical-align:baseline}/*!@:host*/.sc-ic-pagination-h{box-sizing:border-box;width:100%;display:flex;justify-content:center}/*!@nav*/nav.sc-ic-pagination{width:100%;display:flex;flex-flow:row wrap;justify-content:flex-start;align-items:center}/*!@ic-button*/ic-button.sc-ic-pagination{cursor:pointer}/*!@ic-button.next-previous*/ic-button.next-previous.sc-ic-pagination{--icon-width:var(--ic-space-xs);--icon-height:calc(var(--ic-space-xs) + var(--ic-space-xxxs));padding:0 var(--ic-space-xxs) 0 var(--ic-space-xxxs)}/*!@ic-button.first-last*/ic-button.first-last.sc-ic-pagination{--icon-width:calc(var(--ic-space-sm) + var(--ic-space-xxxs));--icon-height:calc(var(--ic-space-xs) + var(--ic-space-xxxs))}/*!@.disabled*/.disabled.sc-ic-pagination{color:var(--ic-architectural-200);pointer-events:none;cursor:none;-webkit-user-select:none;-moz-user-select:none;user-select:none}/*!@.hide-current-page*/.hide-current-page.sc-ic-pagination{display:none}";

class Pagination {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.icPageChange = createEvent(this, "icPageChange", 7);
    this.handleClickFirst = () => {
      this.currentPage = 1;
      this.icPageChange.emit({ value: this.currentPage });
    };
    this.handleClickPrevious = () => {
      this.currentPage--;
      this.icPageChange.emit({ value: this.currentPage });
    };
    this.handleClickNext = () => {
      this.currentPage++;
      this.icPageChange.emit({ value: this.currentPage });
    };
    this.handleClickLast = () => {
      this.currentPage = this.pages;
      this.icPageChange.emit({ value: this.currentPage });
    };
    // button rendering abstracted from component render methods for clarity
    this.firstButton = () => {
      return (hAsync("ic-button", { id: "first-page-button", "aria-label": "Go to first page", appearance: this.appearance, onClick: this.handleClickFirst, class: "page-button first-last", disabled: this.currentPage === 1 || this.disabled, variant: "icon", innerHTML: paginationFirstLast }));
    };
    this.previousButton = () => {
      return (hAsync("ic-button", { id: "previous-page-button", "aria-label": "Go to previous page", appearance: this.appearance, onClick: this.handleClickPrevious, class: "page-button next-previous flip", disabled: this.currentPage === 1 || this.disabled, variant: "icon", innerHTML: paginationNextPrevious }));
    };
    this.nextButton = () => {
      return (hAsync("ic-button", { id: "next-page-button", "aria-label": "Go to next page", appearance: this.appearance, onClick: this.handleClickNext, class: "page-button next-previous", disabled: this.currentPage === this.pages || this.disabled, variant: "icon", innerHTML: paginationNextPrevious }));
    };
    this.lastButton = () => {
      return (hAsync("ic-button", { id: "last-page-button", "aria-label": "Go to last page", appearance: this.appearance, onClick: this.handleClickLast, class: "page-button first-last flip", disabled: this.currentPage === this.pages || this.disabled, variant: "icon", innerHTML: paginationFirstLast }));
    };
    this.renderStartEllipsis = () => {
      return (hAsync("ic-pagination-item", { appearance: this.appearance, type: "ellipsis", id: "start-ellipsis", disabled: this.disabled }));
    };
    this.renderEndEllipsis = () => {
      return (hAsync("ic-pagination-item", { appearance: this.appearance, type: "ellipsis", id: "end-ellipsis", disabled: this.disabled }));
    };
    this.renderStartItems = () => {
      return this.startItems.map((page) => {
        return (hAsync("ic-pagination-item", { appearance: this.appearance, selected: page === this.currentPage, id: `pagination-item-${page}`, type: "page", page: page, disabled: this.disabled }));
      });
    };
    this.renderEndItems = () => {
      return this.endItems.map((page) => {
        return (hAsync("ic-pagination-item", { appearance: this.appearance, selected: page === this.currentPage, id: `pagination-item-${page}`, type: "page", page: page, disabled: this.disabled }));
      });
    };
    this.renderMiddleItems = () => {
      return this.midItems.map((page) => {
        return (hAsync("ic-pagination-item", { appearance: this.appearance, selected: page === this.currentPage, id: `pagination-item-${page}`, type: "page", page: page, disabled: this.disabled }));
      });
    };
    this.endEllipsis = false;
    this.endItems = [];
    this.midItems = [];
    this.startEllipsis = false;
    this.startItems = [];
    this.adjacentCount = 1;
    this.appearance = "default";
    this.boundaryCount = 1;
    this.defaultPage = 1;
    this.disabled = false;
    this.hideCurrentPage = false;
    this.hideFirstAndLastPageButton = false;
    this.label = "Page";
    this.pages = undefined;
    this.type = "simple";
    this.currentPage = this.defaultPage;
  }
  watchNumberPagesHandler() {
    this.watchPageChangeHandler();
  }
  watchPageChangeHandler() {
    if (this.type === "simple") {
      return;
    }
    this.startEllipsis = false;
    this.endEllipsis = false;
    this.startItems = [];
    this.endItems = [];
    this.midItems = [];
    const startItems = [];
    let startItemCount = 0;
    const endItems = [];
    let endStart = this.pages;
    const midItems = [];
    let midStart;
    let midEnd;
    let startEllipsis = false;
    let endEllipsis = false;
    if (this.pages <= this.boundaryCount * 2 + this.adjacentCount * 2 + 3) {
      this.startEllipsis = false;
      this.endEllipsis = false;
      for (let i = 1; i <= this.pages; i++) {
        startItems.push(i);
      }
      this.startItems = startItems;
      return;
    }
    startItemCount = this.boundaryCount === 0 ? 1 : this.boundaryCount;
    endStart =
      this.boundaryCount === 0
        ? this.pages
        : this.pages - this.boundaryCount + 1;
    if (this.currentPage <= this.adjacentCount + this.boundaryCount + 2) {
      startEllipsis = false;
      endEllipsis = true;
      let numItems = 2 * this.adjacentCount + 1;
      if (this.boundaryCount === 0) {
        numItems--;
      }
      midStart = startItemCount + 1;
      midEnd = midStart + numItems;
    }
    else {
      startEllipsis = true;
      if (this.currentPage >
        this.pages - (this.adjacentCount + this.boundaryCount + 2)) {
        let numItems = 2 * this.adjacentCount + 1;
        if (this.boundaryCount === 0) {
          numItems--;
        }
        midEnd =
          this.boundaryCount === 0
            ? this.pages - 1
            : this.pages - this.boundaryCount;
        midStart = midEnd - numItems;
      }
      else {
        endEllipsis = true;
        midStart = this.currentPage - this.adjacentCount;
        midEnd = this.currentPage + this.adjacentCount;
      }
    }
    //create array of start items
    if (this.boundaryCount > 0 ||
      (this.boundaryCount === 0 && startEllipsis === false)) {
      for (let i = 1; i <= startItemCount; i++) {
        startItems.push(i);
      }
    }
    //create array of end items
    if (this.boundaryCount > 0 ||
      (this.boundaryCount === 0 && endEllipsis === false)) {
      for (let i = endStart; i <= this.pages; i++) {
        endItems.push(i);
      }
    }
    //create array of mid items
    for (let i = midStart; i <= midEnd; i++) {
      midItems.push(i);
    }
    this.startEllipsis = startEllipsis;
    this.endEllipsis = endEllipsis;
    this.startItems = startItems;
    this.endItems = endItems;
    this.midItems = midItems;
  }
  componentWillLoad() {
    this.watchPageChangeHandler();
    if (this.boundaryCount > 2) {
      this.boundaryCount = 2;
    }
    if (this.adjacentCount > 2) {
      this.adjacentCount = 2;
    }
    removeDisabledFalse(this.disabled, this.el);
  }
  componentDidLoad() {
    onComponentRequiredPropUndefined([{ prop: this.pages, propName: "pages" }], "Pagination");
  }
  paginationItemClickHandler(ev) {
    const page = ev.detail.page;
    this.currentPage = page;
    this.icPageChange.emit({ value: this.currentPage });
  }
  /**
   * Sets the currently displayed page.
   */
  async setCurrentPage(page) {
    if (typeof page === "number" && page > 0 && page <= this.pages) {
      this.currentPage = page;
    }
    else {
      console.error("Current page must be a number greater than zero but less than or equal to the total number of pages");
    }
  }
  render() {
    const { type, pages, currentPage, hideCurrentPage, disabled, hideFirstAndLastPageButton, label, } = this;
    return (hAsync(Host, null, type === "simple" && (hAsync("nav", { class: {
        ["disabled"]: disabled,
      }, role: "navigation", "aria-label": "Pagination Navigation" }, hideFirstAndLastPageButton ? null : this.firstButton(), this.previousButton(), hAsync("ic-pagination-item", { pages: pages, appearance: this.appearance, type: "simple-current", page: currentPage, label: label, class: { ["hide-current-page"]: hideCurrentPage } }), this.nextButton(), hideFirstAndLastPageButton ? null : this.lastButton())), type === "complex" && (hAsync("nav", { class: {
        ["disabled"]: disabled,
      }, role: "navigation", "aria-label": "Pagination Navigation" }, hideFirstAndLastPageButton ? null : this.firstButton(), this.previousButton(), this.renderStartItems(), this.startEllipsis && this.renderStartEllipsis(), this.renderMiddleItems(), this.endEllipsis && this.renderEndEllipsis(), this.renderEndItems(), this.nextButton(), hideFirstAndLastPageButton ? null : this.lastButton()))));
  }
  get el() { return getElement(this); }
  static get watchers() { return {
    "pages": ["watchNumberPagesHandler"],
    "currentPage": ["watchPageChangeHandler"]
  }; }
  static get style() { return icPaginationCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "ic-pagination",
    "$members$": {
      "adjacentCount": [1026, "adjacent-count"],
      "appearance": [1],
      "boundaryCount": [1026, "boundary-count"],
      "defaultPage": [2, "default-page"],
      "disabled": [4],
      "hideCurrentPage": [4, "hide-current-page"],
      "hideFirstAndLastPageButton": [4, "hide-first-and-last-page-button"],
      "label": [1],
      "pages": [2],
      "type": [1],
      "currentPage": [1026, "current-page"],
      "endEllipsis": [32],
      "endItems": [32],
      "midItems": [32],
      "startEllipsis": [32],
      "startItems": [32],
      "setCurrentPage": [64]
    },
    "$listeners$": [[0, "paginationItemClick", "paginationItemClickHandler"]],
    "$lazyBundleId$": "-",
    "$attrsToReflect$": []
  }; }
}

const icPaginationBarCss = "/*!@:host()*/.sc-ic-pagination-bar-h{display:block}/*!@.pagination-bar*/.pagination-bar.sc-ic-pagination-bar{height:3.5rem;display:flex;align-items:center;justify-content:flex-end;gap:var(--ic-space-xl);padding:var(--ic-space-xs) var(--ic-space-md);box-sizing:border-box}/*!@.pagination-bar-left*/.pagination-bar-left.sc-ic-pagination-bar{justify-content:flex-start}/*!@.item-controls*/.item-controls.sc-ic-pagination-bar{display:flex;align-items:center;gap:var(--ic-space-xl)}/*!@.pagination-bar-space-between .item-controls*/.pagination-bar-space-between.sc-ic-pagination-bar .item-controls.sc-ic-pagination-bar{margin-right:auto}/*!@.items-per-page-holder*/.items-per-page-holder.sc-ic-pagination-bar{display:flex;align-items:center;gap:var(--ic-space-xs)}/*!@.items-per-page-input*/.items-per-page-input.sc-ic-pagination-bar{--input-width:5rem}/*!@.pagination-controls*/.pagination-controls.sc-ic-pagination-bar{display:flex;align-items:center;gap:var(--ic-space-xl)}/*!@.pagination-controls-wrap*/.pagination-controls-wrap.sc-ic-pagination-bar{flex-direction:column;align-items:flex-end;gap:var(--ic-space-xs)}/*!@.pagination-bar-space-between .pagination-controls*/.pagination-bar-space-between.sc-ic-pagination-bar .pagination-controls.sc-ic-pagination-bar{margin-left:auto}/*!@.go-to-page-holder*/.go-to-page-holder.sc-ic-pagination-bar{display:flex;align-items:center;gap:var(--ic-space-xs)}/*!@.go-to-page-input*/.go-to-page-input.sc-ic-pagination-bar{--input-width:var(--ic-space-xl)}/*!@.go-to-page-button*/.go-to-page-button.sc-ic-pagination-bar{--min-width:var(--ic-space-xl)}/*!@.pagination-text-default,\n.pagination-text-dark,\n.pagination-text-light*/.pagination-text-default.sc-ic-pagination-bar,.pagination-text-dark.sc-ic-pagination-bar,.pagination-text-light.sc-ic-pagination-bar{white-space:nowrap}/*!@.pagination-text-light*/.pagination-text-light.sc-ic-pagination-bar{color:var(--ic-color-white-text)}@media screen and (max-width: 768px){/*!@.pagination-bar*/.pagination-bar.sc-ic-pagination-bar{flex-direction:column;align-items:flex-end;height:-moz-fit-content;height:fit-content;gap:var(--ic-space-xs)}/*!@.pagination-bar-left*/.pagination-bar-left.sc-ic-pagination-bar{align-items:flex-start}}@media screen and (max-width: 320px){/*!@.item-controls,\n  .pagination-controls*/.item-controls.sc-ic-pagination-bar,.pagination-controls.sc-ic-pagination-bar{flex-direction:column;align-items:flex-end;gap:var(--ic-space-xs)}/*!@.pagination-bar-left .item-controls,\n  .pagination-bar-left .pagination-controls,\n  .pagination-bar-space-between .item-controls,\n  .pagination-bar-space-between .pagination-controls*/.pagination-bar-left.sc-ic-pagination-bar .item-controls.sc-ic-pagination-bar,.pagination-bar-left.sc-ic-pagination-bar .pagination-controls.sc-ic-pagination-bar,.pagination-bar-space-between.sc-ic-pagination-bar .item-controls.sc-ic-pagination-bar,.pagination-bar-space-between.sc-ic-pagination-bar .pagination-controls.sc-ic-pagination-bar{align-items:flex-start}}";

class PaginationBar {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.icPageChange = createEvent(this, "icPageChange", 7);
    this.icItemsPerPageChange = createEvent(this, "icItemsPerPageChange", 7);
    this.PAGINATION = "ic-pagination";
    this.TEXT_FIELD = "ic-text-field";
    this.TOOLTIP = "ic-tooltip";
    this.PAGE_INPUT_FIELD_ID = "go-to-page-input";
    this.INVALID_PAGE_ERROR = "Please enter a valid page";
    this.NAN_ERROR = "Please enter a number";
    this.resizeObserver = null;
    this.changeItemsPerPage = () => {
      const select = this.el.shadowRoot.querySelector("ic-select");
      const value = select.value;
      this.itemsPerPage = value;
      this.setNumberPages();
      this.setUpperBound();
      const pagination = this.el.shadowRoot.querySelector(this.PAGINATION);
      if (this.currentPage > this.totalPages) {
        pagination.setCurrentPage(this.totalPages);
        this.currentPage = this.totalPages;
      }
      this.icItemsPerPageChange.emit({ value: Number(this.itemsPerPage) });
      this.icPageChange.emit({ value: this.currentPage });
    };
    this.changePage = (page) => {
      this.currentPage = page;
      this.lowerBound =
        page !== 1 ? (page - 1) * Number(this.itemsPerPage) + 1 : page;
      this.setUpperBound();
    };
    this.goToPage = () => {
      const input = this.el.shadowRoot.querySelector(this.TEXT_FIELD);
      const page = Number(input.value);
      const tooltip = this.el.shadowRoot.querySelector("ic-tooltip");
      if (page <= this.totalPages && page > 0) {
        this.changePage(page);
        const pagination = this.el.shadowRoot.querySelector(this.PAGINATION);
        pagination.setCurrentPage(page);
        this.currentPage = page;
        input.value = "";
        this.icPageChange.emit({ value: page });
        tooltip.displayTooltip(false, false);
        input.validationStatus = "";
      }
      else {
        this.inputError = this.INVALID_PAGE_ERROR;
        input.validationStatus = "error";
        input.setFocus();
      }
    };
    this.handleBlur = () => {
      var _a, _b;
      const textField = (_a = this.el.shadowRoot) === null || _a === void 0 ? void 0 : _a.querySelector(this.TEXT_FIELD);
      const tooltip = (_b = this.el.shadowRoot) === null || _b === void 0 ? void 0 : _b.querySelector(this.TOOLTIP);
      if ((Number(textField.value) <= this.totalPages &&
        Number(textField.value) > 0) ||
        textField.value === "") {
        textField.validationStatus = "";
      }
      tooltip.displayTooltip(false, false);
    };
    this.handleFocus = () => {
      var _a, _b;
      const textField = (_a = this.el.shadowRoot) === null || _a === void 0 ? void 0 : _a.querySelector(this.TEXT_FIELD);
      const tooltip = (_b = this.el.shadowRoot) === null || _b === void 0 ? void 0 : _b.querySelector(this.TOOLTIP);
      if (textField.validationStatus === "error") {
        tooltip.displayTooltip(true, true);
      }
    };
    this.handleInputChange = () => {
      const tooltip = this.el.shadowRoot.querySelector(this.TOOLTIP);
      const textField = this.el.shadowRoot.querySelector(this.TEXT_FIELD);
      const inputValue = parseInt(textField.value);
      if (inputValue > this.totalPages || inputValue <= 0) {
        this.inputError = this.INVALID_PAGE_ERROR;
        tooltip.displayTooltip(true, true);
        textField.validationStatus = "error";
        textField.focus();
      }
    };
    this.handleKeydown = (ev) => {
      const tooltip = this.el.shadowRoot.querySelector(this.TOOLTIP);
      const textField = this.el.shadowRoot.querySelector(this.TEXT_FIELD);
      if (ev.key === "Enter") {
        if (textField.validationStatus === "error") {
          tooltip.displayTooltip(true, true);
        }
        else {
          this.goToPage();
        }
      }
      else {
        tooltip.displayTooltip(false, false);
        textField.validationStatus = "";
      }
    };
    this.handleKeyUp = (ev) => {
      const tooltip = this.el.shadowRoot.querySelector(this.TOOLTIP);
      const textField = this.el.shadowRoot.querySelector(this.TEXT_FIELD);
      const inputValue = parseInt(textField.value);
      if (Number.isNaN(inputValue) &&
        ev.key !== "Backspace" &&
        ev.key !== "Enter" &&
        ev.key !== "Tab" &&
        ev.key !== "Shift") {
        this.inputError = this.NAN_ERROR;
        tooltip.displayTooltip(true, false);
        textField.validationStatus = "error";
      }
    };
    this.paginationShouldWrap = () => {
      const pagination = this.el.shadowRoot.querySelector(this.PAGINATION);
      if (this.paginationControl === "simple") {
        if (pagination.clientHeight > 63) {
          this.paginationWrapped = true;
        }
        else {
          this.paginationWrapped = false;
        }
      }
    };
    this.resizeObserverCallback = (currSize) => {
      if (currSize - this.paginationWidth > 50 ||
        currSize - this.paginationWidth < -50) {
        this.paginationWidth = currSize;
        this.paginationShouldWrap();
      }
    };
    this.runResizeObserver = () => {
      this.resizeObserver = new ResizeObserver(() => {
        const currSize = this.paginationBarEl.clientWidth;
        this.resizeObserverCallback(currSize);
      });
      this.resizeObserver.observe(this.paginationBarEl);
    };
    this.setDefaultItemsPerPage = () => {
      this.itemsPerPage = this.itemsPerPageOptions[0].value;
    };
    this.setDefaultItemsPerPageOptions = () => {
      this.itemsPerPageOptions =
        this.totalItems <= 100
          ? [
            { label: "10", value: "10" },
            { label: "25", value: "25" },
            { label: "50", value: "50" },
            { label: "All", value: String(this.totalItems) },
          ]
          : [
            { label: "25", value: "25" },
            { label: "100", value: "100" },
            { label: "1000", value: "1000" },
            { label: "All", value: String(this.totalItems) },
          ];
    };
    this.setGoToPageInputStyles = () => {
      var _a, _b;
      const textField = (_a = this.el.shadowRoot) === null || _a === void 0 ? void 0 : _a.querySelector(`.${this.PAGE_INPUT_FIELD_ID}`);
      if (textField !== undefined) {
        const input = (_b = textField === null || textField === void 0 ? void 0 : textField.shadowRoot) === null || _b === void 0 ? void 0 : _b.querySelector("input");
        if (input !== undefined) {
          input.style.textAlign = "center";
          input.style.padding = "0";
        }
      }
    };
    this.setNumberPages = () => {
      this.totalPages = Math.ceil(this.totalItems / Number(this.itemsPerPage));
    };
    this.setUpperBound = () => {
      this.upperBound = Math.min(this.lowerBound + Number(this.itemsPerPage) - 1, this.totalItems);
    };
    this.trimItemsPerPageOptions = () => {
      this.itemsPerPageOptions = this.itemsPerPageOptions.slice(0, 3);
      this.itemsPerPageOptions.push({
        label: "All",
        value: String(this.totalItems),
      });
      for (let i = 0; i < this.itemsPerPageOptions.length - 1; i++) {
        if (this.totalItems <= Number(this.itemsPerPageOptions[i].value)) {
          this.itemsPerPageOptions.splice(i, this.itemsPerPageOptions.length - (i + 1));
        }
      }
    };
    this.currentPage = 1;
    this.inputError = "Please enter a valid page";
    this.itemsPerPage = undefined;
    this.lowerBound = 1;
    this.paginationWidth = undefined;
    this.paginationWrapped = false;
    this.totalPages = undefined;
    this.upperBound = undefined;
    this.alignment = "right";
    this.appearance = "default";
    this.itemLabel = "Item";
    this.itemsPerPageOptions = undefined;
    this.paginationControl = "simple";
    this.paginationType = "page";
    this.pageLabel = "Page";
    this.showGoToPageControl = false;
    this.showItemsPerPage = true;
    this.showItemsPerPageControl = false;
    this.totalItems = undefined;
  }
  disconnectedCallback() {
    if (this.resizeObserver !== null) {
      this.resizeObserver.disconnect();
    }
  }
  componentWillLoad() {
    if (this.itemsPerPageOptions === undefined ||
      this.itemsPerPageOptions === null) {
      this.setDefaultItemsPerPageOptions();
    }
    this.trimItemsPerPageOptions();
    this.setDefaultItemsPerPage();
    this.setNumberPages();
    this.setUpperBound();
  }
  componentDidLoad() {
    this.paginationWidth = this.paginationBarEl.clientWidth;
    checkResizeObserver(this.runResizeObserver);
    this.setGoToPageInputStyles();
    this.paginationShouldWrap();
  }
  pageChangeHandler(ev) {
    const page = ev.detail.value;
    this.changePage(page);
  }
  render() {
    const { appearance, alignment, itemsPerPageOptions, PAGE_INPUT_FIELD_ID, paginationControl, paginationType, showItemsPerPage, showItemsPerPageControl, showGoToPageControl, } = this;
    const focusElFromLabel = (el) => {
      var _a;
      (_a = this.paginationBarEl.querySelector(el)) === null || _a === void 0 ? void 0 : _a.setFocus();
    };
    return (hAsync("div", { class: {
        ["pagination-bar"]: true,
        [`pagination-bar-${alignment}`]: true,
      }, ref: (el) => (this.paginationBarEl = el) }, (showItemsPerPage || showItemsPerPageControl) && (hAsync("div", { class: "item-controls" }, showItemsPerPageControl && (hAsync("div", { class: "items-per-page-holder" }, hAsync("ic-typography", { class: {
        [`pagination-text-${appearance}`]: true,
        ["items-per-page-control-label"]: true,
      }, variant: "label", onClick: () => focusElFromLabel("ic-select") }, this.itemLabel, "s per ", this.pageLabel.toLowerCase()), hAsync("ic-select", { small: true, label: "items-per-page-input", class: "items-per-page-input", hideLabel: true, options: itemsPerPageOptions, value: this.itemsPerPage, onIcChange: () => this.changeItemsPerPage() }))), showItemsPerPage && paginationType === "data" ? (hAsync("ic-typography", { class: {
        [`pagination-text-${appearance}`]: true,
        ["item-pagination-label"]: true,
      }, variant: "label", "aria-live": "polite" }, this.lowerBound, " - ", this.upperBound, " of ", this.totalItems, " ", this.itemLabel.toLowerCase(), this.totalItems > 1 ? "s" : "")) : (showItemsPerPage && (hAsync("ic-typography", { class: {
        [`pagination-text-${appearance}`]: true,
        ["page-pagination-label"]: true,
      }, variant: "label", "aria-live": "polite" }, this.pageLabel, " ", this.currentPage, " of ", this.totalPages))))), hAsync("div", { class: {
        ["pagination-controls"]: true,
        ["pagination-controls-wrap"]: this.paginationWrapped,
      } }, hAsync("div", { class: "pagination-holder" }, hAsync("ic-pagination", { appearance: appearance, type: paginationControl, pages: this.totalPages })), showGoToPageControl && (hAsync("div", { class: "go-to-page-holder" }, hAsync("ic-typography", { class: { [`pagination-text-${appearance}`]: true }, variant: "label", onClick: () => focusElFromLabel("ic-text-field") }, "Go to ", this.pageLabel.toLowerCase()), hAsync("ic-tooltip", { label: this.inputError, target: `#${PAGE_INPUT_FIELD_ID}`, disableHover: true, disableClick: true }, hAsync("ic-text-field", { type: "number", size: "small", label: PAGE_INPUT_FIELD_ID, class: PAGE_INPUT_FIELD_ID, id: PAGE_INPUT_FIELD_ID, hideLabel: true, onKeyDown: (ev) => this.handleKeydown(ev), onKeyUp: (ev) => this.handleKeyUp(ev), onInput: () => this.handleInputChange(), max: this.totalPages, min: "1", validationInlineInternal: true, onBlur: () => this.handleBlur(), onFocus: () => this.handleFocus() })), hAsync("ic-button", { appearance: appearance, variant: "secondary", onClick: () => this.goToPage(), size: "small", class: "go-to-page-button" }, "Go"))))));
  }
  get el() { return getElement(this); }
  static get style() { return icPaginationBarCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "ic-pagination-bar",
    "$members$": {
      "alignment": [1],
      "appearance": [1],
      "itemLabel": [1, "item-label"],
      "itemsPerPageOptions": [1040],
      "paginationControl": [1, "pagination-control"],
      "paginationType": [1, "pagination-type"],
      "pageLabel": [1, "page-label"],
      "showGoToPageControl": [4, "show-go-to-page-control"],
      "showItemsPerPage": [4, "show-items-per-page"],
      "showItemsPerPageControl": [4, "show-items-per-page-control"],
      "totalItems": [2, "total-items"],
      "currentPage": [32],
      "inputError": [32],
      "itemsPerPage": [32],
      "lowerBound": [32],
      "paginationWidth": [32],
      "paginationWrapped": [32],
      "totalPages": [32],
      "upperBound": [32]
    },
    "$listeners$": [[0, "icPageChange", "pageChangeHandler"]],
    "$lazyBundleId$": "-",
    "$attrsToReflect$": []
  }; }
}

const icPaginationItemCss = "/*!@html*/html.sc-ic-pagination-item{line-height:1.15;-webkit-text-size-adjust:100%}/*!@body*/body.sc-ic-pagination-item{margin:0}/*!@main*/main.sc-ic-pagination-item{display:block}/*!@h1*/h1.sc-ic-pagination-item{font-size:2em;margin:0.67em 0}/*!@hr*/hr.sc-ic-pagination-item{box-sizing:content-box;height:0;overflow:visible}/*!@pre*/pre.sc-ic-pagination-item{font-family:monospace, monospace;font-size:1em}/*!@a*/a.sc-ic-pagination-item{background-color:transparent}/*!@abbr[title]*/abbr[title].sc-ic-pagination-item{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}/*!@b,\nstrong*/b.sc-ic-pagination-item,strong.sc-ic-pagination-item{font-weight:bolder}/*!@code,\nkbd,\nsamp*/code.sc-ic-pagination-item,kbd.sc-ic-pagination-item,samp.sc-ic-pagination-item{font-family:monospace, monospace;font-size:1em}/*!@small*/small.sc-ic-pagination-item{font-size:80%}/*!@sub,\nsup*/sub.sc-ic-pagination-item,sup.sc-ic-pagination-item{font-size:75%;line-height:0;position:relative;vertical-align:baseline}/*!@sub*/sub.sc-ic-pagination-item{bottom:-0.25em}/*!@sup*/sup.sc-ic-pagination-item{top:-0.5em}/*!@img*/img.sc-ic-pagination-item{border-style:none}/*!@button,\ninput,\noptgroup,\nselect,\ntextarea*/button.sc-ic-pagination-item,input.sc-ic-pagination-item,optgroup.sc-ic-pagination-item,select.sc-ic-pagination-item,textarea.sc-ic-pagination-item{font-family:inherit;font-size:100%;line-height:1.15;margin:0}/*!@button,\ninput*/button.sc-ic-pagination-item,input.sc-ic-pagination-item{overflow:visible}/*!@button,\nselect*/button.sc-ic-pagination-item,select.sc-ic-pagination-item{text-transform:none}/*!@button,\n[type=\"button\"],\n[type=\"reset\"],\n[type=\"submit\"]*/button.sc-ic-pagination-item,[type=\"button\"].sc-ic-pagination-item,[type=\"reset\"].sc-ic-pagination-item,[type=\"submit\"].sc-ic-pagination-item{-webkit-appearance:button}/*!@button::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner*/button.sc-ic-pagination-item::-moz-focus-inner,[type=\"button\"].sc-ic-pagination-item::-moz-focus-inner,[type=\"reset\"].sc-ic-pagination-item::-moz-focus-inner,[type=\"submit\"].sc-ic-pagination-item::-moz-focus-inner{border-style:none;padding:0}/*!@button:-moz-focusring,\n[type=\"button\"]:-moz-focusring,\n[type=\"reset\"]:-moz-focusring,\n[type=\"submit\"]:-moz-focusring*/button.sc-ic-pagination-item:-moz-focusring,[type=\"button\"].sc-ic-pagination-item:-moz-focusring,[type=\"reset\"].sc-ic-pagination-item:-moz-focusring,[type=\"submit\"].sc-ic-pagination-item:-moz-focusring{outline:1px dotted ButtonText}/*!@fieldset*/fieldset.sc-ic-pagination-item{padding:0.35em 0.75em 0.625em}/*!@legend*/legend.sc-ic-pagination-item{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}/*!@progress*/progress.sc-ic-pagination-item{vertical-align:baseline}/*!@textarea*/textarea.sc-ic-pagination-item{overflow:auto}/*!@[type=\"checkbox\"],\n[type=\"radio\"]*/[type=\"checkbox\"].sc-ic-pagination-item,[type=\"radio\"].sc-ic-pagination-item{box-sizing:border-box;padding:0}/*!@[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button*/[type=\"number\"].sc-ic-pagination-item::-webkit-inner-spin-button,[type=\"number\"].sc-ic-pagination-item::-webkit-outer-spin-button{height:auto}/*!@[type=\"search\"]*/[type=\"search\"].sc-ic-pagination-item{-webkit-appearance:textfield;outline-offset:-2px}/*!@[type=\"search\"]::-webkit-search-decoration*/[type=\"search\"].sc-ic-pagination-item::-webkit-search-decoration{-webkit-appearance:none}/*!@::-webkit-file-upload-button*/.sc-ic-pagination-item::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}/*!@details*/details.sc-ic-pagination-item{display:block}/*!@summary*/summary.sc-ic-pagination-item{display:list-item}/*!@template*/template.sc-ic-pagination-item{display:none}/*!@[hidden]*/[hidden].sc-ic-pagination-item{display:none}/*!@html,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo*/html.sc-ic-pagination-item,body.sc-ic-pagination-item,div.sc-ic-pagination-item,span.sc-ic-pagination-item,applet.sc-ic-pagination-item,object.sc-ic-pagination-item,iframe.sc-ic-pagination-item,h1.sc-ic-pagination-item,h2.sc-ic-pagination-item,h3.sc-ic-pagination-item,h4.sc-ic-pagination-item,h5.sc-ic-pagination-item,h6.sc-ic-pagination-item,p.sc-ic-pagination-item,blockquote.sc-ic-pagination-item,pre.sc-ic-pagination-item,a.sc-ic-pagination-item,abbr.sc-ic-pagination-item,acronym.sc-ic-pagination-item,address.sc-ic-pagination-item,big.sc-ic-pagination-item,cite.sc-ic-pagination-item,code.sc-ic-pagination-item,del.sc-ic-pagination-item,dfn.sc-ic-pagination-item,em.sc-ic-pagination-item,img.sc-ic-pagination-item,ins.sc-ic-pagination-item,kbd.sc-ic-pagination-item,q.sc-ic-pagination-item,s.sc-ic-pagination-item,samp.sc-ic-pagination-item,small.sc-ic-pagination-item,strike.sc-ic-pagination-item,strong.sc-ic-pagination-item,sub.sc-ic-pagination-item,sup.sc-ic-pagination-item,tt.sc-ic-pagination-item,var.sc-ic-pagination-item,b.sc-ic-pagination-item,u.sc-ic-pagination-item,i.sc-ic-pagination-item,center.sc-ic-pagination-item,dl.sc-ic-pagination-item,dt.sc-ic-pagination-item,dd.sc-ic-pagination-item,ol.sc-ic-pagination-item,ul.sc-ic-pagination-item,li.sc-ic-pagination-item,fieldset.sc-ic-pagination-item,form.sc-ic-pagination-item,label.sc-ic-pagination-item,legend.sc-ic-pagination-item,table.sc-ic-pagination-item,caption.sc-ic-pagination-item,tbody.sc-ic-pagination-item,tfoot.sc-ic-pagination-item,thead.sc-ic-pagination-item,tr.sc-ic-pagination-item,th.sc-ic-pagination-item,td.sc-ic-pagination-item,article.sc-ic-pagination-item,aside.sc-ic-pagination-item,canvas.sc-ic-pagination-item,details.sc-ic-pagination-item,embed.sc-ic-pagination-item,figure.sc-ic-pagination-item,figcaption.sc-ic-pagination-item,footer.sc-ic-pagination-item,header.sc-ic-pagination-item,hgroup.sc-ic-pagination-item,menu.sc-ic-pagination-item,nav.sc-ic-pagination-item,output.sc-ic-pagination-item,ruby.sc-ic-pagination-item,section.sc-ic-pagination-item,summary.sc-ic-pagination-item,time.sc-ic-pagination-item,mark.sc-ic-pagination-item,audio.sc-ic-pagination-item,video.sc-ic-pagination-item{margin:0;padding:0;border:0;font-size:100%;font-style:inherit;vertical-align:baseline}/*!@a*/a.sc-ic-pagination-item{text-align:center}/*!@.item-container*/.item-container.sc-ic-pagination-item{display:flex;justify-content:center;align-items:center;width:calc(var(--ic-space-xl) + var(--ic-space-sm));height:var(--ic-space-xl);margin:var(--ic-space-xxs) var(--ic-space-xxxs);cursor:pointer;text-decoration:none}/*!@button*/button.sc-ic-pagination-item{background:none;border:none;outline:inherit;position:relative}/*!@.ellipsis*/.ellipsis.sc-ic-pagination-item{pointer-events:none;color:var(--ic-color-secondary-text)}/*!@.item-container:focus*/.item-container.sc-ic-pagination-item:focus{box-shadow:var(--ic-border-focus);outline:var(--ic-hc-focus-outline);border-radius:var(--ic-border-radius);transition:var(--ic-easing-transition-fast)}/*!@.page*/.page.sc-ic-pagination-item{color:var(--ic-action-default)}/*!@.simple-current*/.simple-current.sc-ic-pagination-item{width:calc(var(--ic-space-xxl) + var(--ic-space-md));height:var(--ic-space-lg);cursor:default}/*!@.item-container.page:hover:not(.selected):not(:focus)*/.item-container.page.sc-ic-pagination-item:hover:not(.selected):not(:focus){border-radius:var(--ic-border-radius);background-color:var(--ic-action-default-bg-hover)}/*!@.item-container.page:active:not(.selected):not(:focus)*/.item-container.page.sc-ic-pagination-item:active:not(.selected):not(:focus){background-color:var(--ic-action-default-bg-active)}/*!@.selected*/.selected.sc-ic-pagination-item{pointer-events:none;outline:none}/*!@.selected::after*/.selected.sc-ic-pagination-item::after{content:\"\";height:var(--ic-space-xxs);width:100%;position:absolute;bottom:0;background-color:var(--ic-action-default)}/*!@.page-selected*/.page-selected.sc-ic-pagination-item{color:var(--ic-color-primary-text)}/*!@.item-container.page.light:hover:not(.selected):not(:focus)*/.item-container.page.light.sc-ic-pagination-item:hover:not(.selected):not(:focus){background-color:var(--ic-action-light-bg-hover)}/*!@.item-container.page.light:active:not(.selected):not(:focus)*/.item-container.page.light.sc-ic-pagination-item:active:not(.selected):not(:focus){background-color:var(--ic-action-light-bg-active)}/*!@ic-typography.light*/ic-typography.light.sc-ic-pagination-item{color:var(--ic-color-white-text)}/*!@.selected.light::after*/.selected.light.sc-ic-pagination-item::after{content:\"\";height:var(--ic-space-xxs);width:100%;position:absolute;bottom:0;background-color:var(--ic-action-light)}/*!@.item-container.page.dark:hover:not(.selected):not(:focus)*/.item-container.page.dark.sc-ic-pagination-item:hover:not(.selected):not(:focus){background-color:var(--ic-action-dark-bg-hover)}/*!@.item-container.page.dark:active:not(.selected):not(:focus)*/.item-container.page.dark.sc-ic-pagination-item:active:not(.selected):not(:focus){background-color:var(--ic-action-dark-bg-active)}/*!@ic-typography.dark*/ic-typography.dark.sc-ic-pagination-item{color:var(--ic-color-primary-text)}/*!@.selected.dark::after*/.selected.dark.sc-ic-pagination-item::after{content:\"\";height:var(--ic-space-xxs);width:100%;position:absolute;bottom:0;background-color:var(--ic-action-dark)}/*!@.disabled*/.disabled.sc-ic-pagination-item{color:var(--ic-architectural-200);pointer-events:none;cursor:none;-webkit-user-select:none;-moz-user-select:none;user-select:none}@media (forced-colors: active){/*!@.selected::after*/.selected.sc-ic-pagination-item::after{background-color:Highlight}/*!@.selected.light::after*/.selected.light.sc-ic-pagination-item::after{background-color:Highlight}/*!@.selected.dark::after*/.selected.dark.sc-ic-pagination-item::after{background-color:Highlight}}";

class PaginationItem {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.paginationItemClick = createEvent(this, "paginationItemClick", 7);
    this.handleClick = () => {
      this.paginationItemClick.emit({ page: this.page });
    };
    this.appearance = undefined;
    this.ariaOverride = false;
    this.disabled = false;
    this.label = "Page ";
    this.page = undefined;
    this.pages = undefined;
    this.selected = false;
    this.type = undefined;
  }
  componentWillLoad() {
    removeDisabledFalse(this.disabled, this.el);
  }
  render() {
    const { page, selected, type, disabled, appearance, label, ariaOverride, pages, } = this;
    return (hAsync("a", null, type === "ellipsis" ? (hAsync("div", { class: {
        ["item-container"]: true,
        ["ellipsis"]: true,
        ["disabled"]: disabled,
      } }, hAsync("ic-typography", { class: {
        [`${appearance}`]: true,
      }, variant: "label" }, "..."))) : type === "page" ? (hAsync("button", { disabled: disabled, onClick: this.handleClick, tabindex: selected ? "-1" : "0", role: "button", "aria-current": selected && "Current page", "aria-label": selected ? `${label}: ${page}` : `Go to page ${page}`, class: {
        ["selected"]: !disabled && selected,
        ["disabled"]: disabled,
        ["item-container"]: true,
        [`${appearance}`]: true,
        ["page"]: type === "page",
      } }, hAsync("ic-typography", { variant: "label", class: {
        ["page-selected"]: selected,
        ["disabled"]: disabled,
        [`${appearance}`]: true,
      } }, page))) : (hAsync("ic-typography", { "aria-live": "polite", "aria-label": ariaOverride ? `Page ${page} of ${pages}` : `${label} ${page}`, class: `simple-current ${appearance}`, variant: "label" }, label, " ", page))));
  }
  get el() { return getElement(this); }
  static get style() { return icPaginationItemCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "ic-pagination-item",
    "$members$": {
      "appearance": [1],
      "ariaOverride": [4, "aria-override"],
      "disabled": [4],
      "label": [1],
      "page": [2],
      "pages": [2],
      "selected": [4],
      "type": [1]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": []
  }; }
}

const icPopoverMenuCss = "/*!@html*/html.sc-ic-popover-menu{line-height:1.15;-webkit-text-size-adjust:100%}/*!@body*/body.sc-ic-popover-menu{margin:0}/*!@main*/main.sc-ic-popover-menu{display:block}/*!@h1*/h1.sc-ic-popover-menu{font-size:2em;margin:0.67em 0}/*!@hr*/hr.sc-ic-popover-menu{box-sizing:content-box;height:0;overflow:visible}/*!@pre*/pre.sc-ic-popover-menu{font-family:monospace, monospace;font-size:1em}/*!@a*/a.sc-ic-popover-menu{background-color:transparent}/*!@abbr[title]*/abbr[title].sc-ic-popover-menu{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}/*!@b,\nstrong*/b.sc-ic-popover-menu,strong.sc-ic-popover-menu{font-weight:bolder}/*!@code,\nkbd,\nsamp*/code.sc-ic-popover-menu,kbd.sc-ic-popover-menu,samp.sc-ic-popover-menu{font-family:monospace, monospace;font-size:1em}/*!@small*/small.sc-ic-popover-menu{font-size:80%}/*!@sub,\nsup*/sub.sc-ic-popover-menu,sup.sc-ic-popover-menu{font-size:75%;line-height:0;position:relative;vertical-align:baseline}/*!@sub*/sub.sc-ic-popover-menu{bottom:-0.25em}/*!@sup*/sup.sc-ic-popover-menu{top:-0.5em}/*!@img*/img.sc-ic-popover-menu{border-style:none}/*!@button,\ninput,\noptgroup,\nselect,\ntextarea*/button.sc-ic-popover-menu,input.sc-ic-popover-menu,optgroup.sc-ic-popover-menu,select.sc-ic-popover-menu,textarea.sc-ic-popover-menu{font-family:inherit;font-size:100%;line-height:1.15;margin:0}/*!@button,\ninput*/button.sc-ic-popover-menu,input.sc-ic-popover-menu{overflow:visible}/*!@button,\nselect*/button.sc-ic-popover-menu,select.sc-ic-popover-menu{text-transform:none}/*!@button,\n[type=\"button\"],\n[type=\"reset\"],\n[type=\"submit\"]*/button.sc-ic-popover-menu,[type=\"button\"].sc-ic-popover-menu,[type=\"reset\"].sc-ic-popover-menu,[type=\"submit\"].sc-ic-popover-menu{-webkit-appearance:button}/*!@button::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner*/button.sc-ic-popover-menu::-moz-focus-inner,[type=\"button\"].sc-ic-popover-menu::-moz-focus-inner,[type=\"reset\"].sc-ic-popover-menu::-moz-focus-inner,[type=\"submit\"].sc-ic-popover-menu::-moz-focus-inner{border-style:none;padding:0}/*!@button:-moz-focusring,\n[type=\"button\"]:-moz-focusring,\n[type=\"reset\"]:-moz-focusring,\n[type=\"submit\"]:-moz-focusring*/button.sc-ic-popover-menu:-moz-focusring,[type=\"button\"].sc-ic-popover-menu:-moz-focusring,[type=\"reset\"].sc-ic-popover-menu:-moz-focusring,[type=\"submit\"].sc-ic-popover-menu:-moz-focusring{outline:1px dotted ButtonText}/*!@fieldset*/fieldset.sc-ic-popover-menu{padding:0.35em 0.75em 0.625em}/*!@legend*/legend.sc-ic-popover-menu{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}/*!@progress*/progress.sc-ic-popover-menu{vertical-align:baseline}/*!@textarea*/textarea.sc-ic-popover-menu{overflow:auto}/*!@[type=\"checkbox\"],\n[type=\"radio\"]*/[type=\"checkbox\"].sc-ic-popover-menu,[type=\"radio\"].sc-ic-popover-menu{box-sizing:border-box;padding:0}/*!@[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button*/[type=\"number\"].sc-ic-popover-menu::-webkit-inner-spin-button,[type=\"number\"].sc-ic-popover-menu::-webkit-outer-spin-button{height:auto}/*!@[type=\"search\"]*/[type=\"search\"].sc-ic-popover-menu{-webkit-appearance:textfield;outline-offset:-2px}/*!@[type=\"search\"]::-webkit-search-decoration*/[type=\"search\"].sc-ic-popover-menu::-webkit-search-decoration{-webkit-appearance:none}/*!@::-webkit-file-upload-button*/.sc-ic-popover-menu::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}/*!@details*/details.sc-ic-popover-menu{display:block}/*!@summary*/summary.sc-ic-popover-menu{display:list-item}/*!@template*/template.sc-ic-popover-menu{display:none}/*!@[hidden]*/[hidden].sc-ic-popover-menu{display:none}/*!@html,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo*/html.sc-ic-popover-menu,body.sc-ic-popover-menu,div.sc-ic-popover-menu,span.sc-ic-popover-menu,applet.sc-ic-popover-menu,object.sc-ic-popover-menu,iframe.sc-ic-popover-menu,h1.sc-ic-popover-menu,h2.sc-ic-popover-menu,h3.sc-ic-popover-menu,h4.sc-ic-popover-menu,h5.sc-ic-popover-menu,h6.sc-ic-popover-menu,p.sc-ic-popover-menu,blockquote.sc-ic-popover-menu,pre.sc-ic-popover-menu,a.sc-ic-popover-menu,abbr.sc-ic-popover-menu,acronym.sc-ic-popover-menu,address.sc-ic-popover-menu,big.sc-ic-popover-menu,cite.sc-ic-popover-menu,code.sc-ic-popover-menu,del.sc-ic-popover-menu,dfn.sc-ic-popover-menu,em.sc-ic-popover-menu,img.sc-ic-popover-menu,ins.sc-ic-popover-menu,kbd.sc-ic-popover-menu,q.sc-ic-popover-menu,s.sc-ic-popover-menu,samp.sc-ic-popover-menu,small.sc-ic-popover-menu,strike.sc-ic-popover-menu,strong.sc-ic-popover-menu,sub.sc-ic-popover-menu,sup.sc-ic-popover-menu,tt.sc-ic-popover-menu,var.sc-ic-popover-menu,b.sc-ic-popover-menu,u.sc-ic-popover-menu,i.sc-ic-popover-menu,center.sc-ic-popover-menu,dl.sc-ic-popover-menu,dt.sc-ic-popover-menu,dd.sc-ic-popover-menu,ol.sc-ic-popover-menu,ul.sc-ic-popover-menu,li.sc-ic-popover-menu,fieldset.sc-ic-popover-menu,form.sc-ic-popover-menu,label.sc-ic-popover-menu,legend.sc-ic-popover-menu,table.sc-ic-popover-menu,caption.sc-ic-popover-menu,tbody.sc-ic-popover-menu,tfoot.sc-ic-popover-menu,thead.sc-ic-popover-menu,tr.sc-ic-popover-menu,th.sc-ic-popover-menu,td.sc-ic-popover-menu,article.sc-ic-popover-menu,aside.sc-ic-popover-menu,canvas.sc-ic-popover-menu,details.sc-ic-popover-menu,embed.sc-ic-popover-menu,figure.sc-ic-popover-menu,figcaption.sc-ic-popover-menu,footer.sc-ic-popover-menu,header.sc-ic-popover-menu,hgroup.sc-ic-popover-menu,menu.sc-ic-popover-menu,nav.sc-ic-popover-menu,output.sc-ic-popover-menu,ruby.sc-ic-popover-menu,section.sc-ic-popover-menu,summary.sc-ic-popover-menu,time.sc-ic-popover-menu,mark.sc-ic-popover-menu,audio.sc-ic-popover-menu,video.sc-ic-popover-menu{margin:0;padding:0;border:0;font-size:100%;font-style:inherit;vertical-align:baseline}@media (prefers-reduced-motion: no-preference){/*!@:host .opening-from-parent*/.sc-ic-popover-menu-h .opening-from-parent.sc-ic-popover-menu{animation:slide-in var(--ic-transition-duration-slow) ease-in-out}/*!@:host .opening-from-child*/.sc-ic-popover-menu-h .opening-from-child.sc-ic-popover-menu{animation:slide-out var(--ic-transition-duration-slow) ease-in-out}}/*!@:host*/.sc-ic-popover-menu-h{border-radius:var(--ic-border-radius);color:var(--ic-color-primary-text);background-color:var(--ic-architectural-white);position:relative;z-index:var(--ic-z-index-popover);box-sizing:border-box;box-shadow:var(--ic-elevation-overlay);display:none}/*!@:host(.on-dialog)*/.on-dialog.sc-ic-popover-menu-h{inset:auto !important}/*!@:host(.on-dialog-fix-translate)*/.on-dialog-fix-translate.sc-ic-popover-menu-h{transform:translate(0, var(--ic-space-xs)) !important}/*!@:host(.on-dialog-translate-y)*/.on-dialog-translate-y.sc-ic-popover-menu-h{transform:translate(0, calc(-1 * var(--translate-y))) !important}/*!@.menu*/.menu.sc-ic-popover-menu{border:var(--ic-border-default);border-radius:var(--ic-border-radius);background-color:var(--ic-architectural-white);visibility:hidden;height:0}/*!@.button*/.button.sc-ic-popover-menu{text-decoration:none;list-style-type:none}/*!@:host(:focus-within)*/.sc-ic-popover-menu-h:focus-within{box-shadow:var(--ic-border-focus)}/*!@.menu:focus-visible*/.menu.sc-ic-popover-menu:focus-visible{outline:none}/*!@:host(.open)*/.open.sc-ic-popover-menu-h{display:block;min-width:calc(20rem - var(--ic-space-xl));width:var(--popover-width, 20rem);max-width:calc(100vw - var(--ic-space-xl))}/*!@:host(.open) .menu*/.open.sc-ic-popover-menu-h .menu.sc-ic-popover-menu{visibility:visible;height:-moz-fit-content;height:fit-content;max-height:var(--max-height, -moz-fit-content);max-height:var(--max-height, fit-content);overflow-y:auto;overflow-x:hidden}/*!@.parent-label*/.parent-label.sc-ic-popover-menu{color:var(--ic-color-tertiary-text);margin:var(--ic-space-xs) var(--ic-space-xs) 0}@keyframes slide-in{from{opacity:0;transform:translateX(10rem)}to{opacity:1;transform:translateX(0)}}@keyframes slide-out{from{opacity:0;transform:translateX(-10rem)}to{opacity:1;transform:translateX(0)}}";

class PopoverMenu {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.ARIA_LABEL = "aria-label";
    this.popoverMenuEls = [];
    this.setButtonFocus = () => {
      var _a;
      (_a = this.popoverMenuEls[this.currentFocus]) === null || _a === void 0 ? void 0 : _a.focus();
    };
    // Checks that the popover menu has an anchor
    this.findAnchorEl = (anchor) => {
      let anchorElement = null;
      if (anchor === null || anchor === undefined) {
        this.submenuId === undefined &&
          console.error("No anchor specified for popover component");
      }
      else {
        anchorElement = document.querySelector(anchor.indexOf("#") === 0 ? anchor : "#" + anchor);
        if (anchorElement === null) {
          console.error(`Popover anchor element '${anchor}' not found`);
        }
      }
      return anchorElement;
    };
    this.isNotPopoverMenuEl = (ev) => {
      const target = ev.target;
      return (target.id !== this.anchor &&
        target.tagName !== "IC-MENU-ITEM" &&
        target.tagName !== "IC-MENU-GROUP" &&
        target.tagName !== "IC-POPOVER-MENU");
    };
    this.closeMenu = () => {
      var _a;
      this.open = false;
      (_a = this.anchorEl) === null || _a === void 0 ? void 0 : _a.focus();
    };
    this.getNextItemToSelect = (currentItem, movingDown) => {
      const numButtons = this.popoverMenuEls.length - 1;
      if (currentItem < 1) {
        currentItem = 0;
      }
      let nextItem = movingDown ? currentItem + 1 : currentItem - 1;
      // Check if wrap around necessary
      if (nextItem < 0) {
        nextItem = numButtons;
      }
      else if (nextItem > numButtons) {
        nextItem = 0;
      }
      return nextItem;
    };
    this.addMenuItems = (elements) => {
      for (let i = 0; i < elements.length; i++) {
        const el = elements[i];
        if (el.tagName === "IC-MENU-ITEM") {
          this.popoverMenuEls.push(el);
        }
        else if (el.tagName === "IC-MENU-GROUP") {
          const groupSlotWrapper = el.shadowRoot.querySelector("ul");
          const menuGroupElements = getSlotElements$1(groupSlotWrapper);
          this.addMenuItems(menuGroupElements);
        }
      }
    };
    this.getMenuAriaLabel = () => {
      const ariaLabel = this.el.getAttribute(this.ARIA_LABEL);
      if (isPropDefined(this.submenuId)) {
        return `${ariaLabel}, within nested level ${this.submenuLevel} ${this.parentLabel} submenu,`;
      }
      else {
        return ariaLabel;
      }
    };
    this.handleBackButtonClick = () => {
      this.parentPopover.openFromChild();
      this.open = false;
    };
    this.initPopperJS = () => {
      this.popperInstance = createPopper(this.anchorEl, this.el, {
        placement: "bottom-start",
        modifiers: [
          {
            name: "offset",
            options: {
              offset: [0, 4],
            },
          },
          {
            name: "flip",
            options: {
              fallbackPlacements: ["top-start", "top-end", "bottom-end"],
              rootBoundary: "viewport",
            },
          },
        ],
      });
    };
    this.openingFromChild = false;
    this.openingFromParent = false;
    this.anchor = undefined;
    this.parentLabel = undefined;
    this.parentPopover = undefined;
    this.submenuId = undefined;
    this.submenuLevel = 1;
    this.open = undefined;
  }
  watchOpenHandler() {
    if (this.open) {
      if (this.parentPopover !== undefined &&
        !this.popoverMenuEls.some((menuItem) => menuItem.id)) {
        this.popoverMenuEls.unshift(this.backButton);
      }
      this.currentFocus = isPropDefined(this.submenuId) ? 1 : 0;
      // Needed so that anchorEl isn't always focused
      setTimeout(this.setButtonFocus, 50);
    }
    else {
      if (this.popperInstance) {
        this.popperInstance.destroy();
        this.popperInstance = null;
      }
    }
  }
  disconnectedCallback() {
    if (this.popperInstance !== undefined) {
      this.popperInstance.destroy();
    }
  }
  componentDidLoad() {
    const slotWrapper = this.el.shadowRoot.querySelector("ul.button");
    const popoverMenuElements = getSlotElements$1(slotWrapper);
    if (popoverMenuElements !== null) {
      this.addMenuItems(popoverMenuElements);
    }
    if (this.submenuId === undefined &&
      this.el.getAttribute(this.ARIA_LABEL) === null) {
      console.error(`No aria-label specified for popover menu component - aria-label required`);
    }
  }
  componentWillRender() {
    this.anchorEl = this.findAnchorEl(this.anchor);
  }
  componentDidRender() {
    if (this.open && !this.popperInstance) {
      this.initPopperJS();
    }
  }
  handleMenuItemClick(ev) {
    if (!ev.detail.hasSubMenu && ev.detail.label !== "Back") {
      this.closeMenu();
    }
  }
  // This is listening for the event emitted when a menu item is acting as a trigger button
  handleSubmenuChange(ev) {
    // Finds the trigger menu item that has emitted the event
    const target = ev.target;
    this.open = false;
    // Find the popover menu that the menu item triggers (i.e. submenu-trigger-for === submenu-id).
    const childEl = document.querySelector(`ic-popover-menu[submenu-id=${target.submenuTriggerFor}]`);
    // Set the parent popover menu of the submenu and open the submenu
    childEl.parentPopover = this.el;
    childEl.anchor = this.anchor;
    childEl.ariaLabel = this.el.getAttribute(this.ARIA_LABEL);
    childEl.openFromParent();
    childEl.submenuLevel = this.submenuLevel + 1;
    // Set the label in the submenu using the label of the menu item that has emitted the event
    childEl.parentLabel = target.label;
  }
  handleClick(ev) {
    if (this.open && this.isNotPopoverMenuEl(ev)) {
      // If menu is open and the next click on the document is not a popover El, close the popover
      this.closeMenu();
    }
  }
  // Manages the keyboard navigation in the popover menu
  handleKeyDown(ev) {
    switch (ev.key) {
      case "ArrowDown":
        ev.preventDefault();
        this.currentFocus = this.getNextItemToSelect(this.currentFocus, true);
        this.setButtonFocus();
        break;
      case "ArrowUp":
        ev.preventDefault();
        this.currentFocus = this.getNextItemToSelect(this.currentFocus, false);
        this.setButtonFocus();
        break;
      case "Home":
        //Sets home focus as first element, or back button
        this.currentFocus = 0;
        this.setButtonFocus();
        break;
      case "End":
        //Sets end focus as last element
        this.currentFocus = this.popoverMenuEls.length - 1;
        this.setButtonFocus();
        break;
      case "Escape":
      case "Tab":
        if (this.open) {
          this.closeMenu();
          this.el.blur();
        }
        break;
    }
  }
  /**
   * @internal Opens the menu from the child menu.
   */
  async openFromChild() {
    this.open = true;
    this.openingFromChild = true;
    setTimeout(() => (this.openingFromChild = false), 1000);
  }
  /**
   * @internal Opens the menu from the parent menu.
   */
  async openFromParent() {
    this.open = true;
    this.openingFromParent = true;
    setTimeout(() => (this.openingFromParent = false), 1000);
  }
  render() {
    return (hAsync(Host, { class: { open: this.open } }, hAsync("div", { id: this.parentPopover === undefined
        ? `ic-popover-submenu-${this.submenuId}`
        : "", class: {
        menu: true,
      }, tabindex: open ? "0" : "-1" }, hAsync("div", { class: {
        "opening-from-parent": this.openingFromParent,
        "opening-from-child": this.openingFromChild,
      } }, isPropDefined(this.submenuId) && (hAsync("div", null, hAsync("ic-menu-item", { class: "ic-popover-submenu-back-button", ref: (el) => (this.backButton = el), label: "Back", onClick: this.handleBackButtonClick, id: `ic-popover-submenu-back-button-${this.submenuLevel}` }, hAsync("svg", { slot: "icon", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", class: "submenu-back-icon" }, hAsync("path", { d: "M20 11H7.83L13.42 5.41L12 4L4 12L12 20L13.41 18.59L7.83 13H20V11Z", fill: "currentColor" }))), hAsync("ic-typography", { variant: "subtitle-small", class: "parent-label" }, this.parentLabel))), hAsync("ul", { class: "button", "aria-label": this.getMenuAriaLabel(), role: "menu", "aria-owns": isPropDefined(this.submenuId)
        ? `ic-popover-submenu-back-button-${this.submenuLevel}`
        : false, "aria-controls": isPropDefined(this.submenuId)
        ? `ic-popover-submenu-back-button-${this.submenuLevel}`
        : false }, hAsync("slot", null))))));
  }
  static get delegatesFocus() { return true; }
  get el() { return getElement(this); }
  static get watchers() { return {
    "open": ["watchOpenHandler"]
  }; }
  static get style() { return icPopoverMenuCss; }
  static get cmpMeta() { return {
    "$flags$": 25,
    "$tagName$": "ic-popover-menu",
    "$members$": {
      "anchor": [1],
      "parentLabel": [1, "parent-label"],
      "parentPopover": [16],
      "submenuId": [1, "submenu-id"],
      "submenuLevel": [2, "submenu-level"],
      "open": [1540],
      "openingFromChild": [32],
      "openingFromParent": [32],
      "openFromChild": [64],
      "openFromParent": [64]
    },
    "$listeners$": [[0, "handleMenuItemClick", "handleMenuItemClick"], [2, "triggerPopoverMenuInstance", "handleSubmenuChange"], [4, "click", "handleClick"], [4, "keydown", "handleKeyDown"]],
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["open", "open"]]
  }; }
}

const icRadioGroupCss = "/*!@html*/html.sc-ic-radio-group{line-height:1.15;-webkit-text-size-adjust:100%}/*!@body*/body.sc-ic-radio-group{margin:0}/*!@main*/main.sc-ic-radio-group{display:block}/*!@h1*/h1.sc-ic-radio-group{font-size:2em;margin:0.67em 0}/*!@hr*/hr.sc-ic-radio-group{box-sizing:content-box;height:0;overflow:visible}/*!@pre*/pre.sc-ic-radio-group{font-family:monospace, monospace;font-size:1em}/*!@a*/a.sc-ic-radio-group{background-color:transparent}/*!@abbr[title]*/abbr[title].sc-ic-radio-group{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}/*!@b,\nstrong*/b.sc-ic-radio-group,strong.sc-ic-radio-group{font-weight:bolder}/*!@code,\nkbd,\nsamp*/code.sc-ic-radio-group,kbd.sc-ic-radio-group,samp.sc-ic-radio-group{font-family:monospace, monospace;font-size:1em}/*!@small*/small.sc-ic-radio-group{font-size:80%}/*!@sub,\nsup*/sub.sc-ic-radio-group,sup.sc-ic-radio-group{font-size:75%;line-height:0;position:relative;vertical-align:baseline}/*!@sub*/sub.sc-ic-radio-group{bottom:-0.25em}/*!@sup*/sup.sc-ic-radio-group{top:-0.5em}/*!@img*/img.sc-ic-radio-group{border-style:none}/*!@button,\ninput,\noptgroup,\nselect,\ntextarea*/button.sc-ic-radio-group,input.sc-ic-radio-group,optgroup.sc-ic-radio-group,select.sc-ic-radio-group,textarea.sc-ic-radio-group{font-family:inherit;font-size:100%;line-height:1.15;margin:0}/*!@button,\ninput*/button.sc-ic-radio-group,input.sc-ic-radio-group{overflow:visible}/*!@button,\nselect*/button.sc-ic-radio-group,select.sc-ic-radio-group{text-transform:none}/*!@button,\n[type=\"button\"],\n[type=\"reset\"],\n[type=\"submit\"]*/button.sc-ic-radio-group,[type=\"button\"].sc-ic-radio-group,[type=\"reset\"].sc-ic-radio-group,[type=\"submit\"].sc-ic-radio-group{-webkit-appearance:button}/*!@button::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner*/button.sc-ic-radio-group::-moz-focus-inner,[type=\"button\"].sc-ic-radio-group::-moz-focus-inner,[type=\"reset\"].sc-ic-radio-group::-moz-focus-inner,[type=\"submit\"].sc-ic-radio-group::-moz-focus-inner{border-style:none;padding:0}/*!@button:-moz-focusring,\n[type=\"button\"]:-moz-focusring,\n[type=\"reset\"]:-moz-focusring,\n[type=\"submit\"]:-moz-focusring*/button.sc-ic-radio-group:-moz-focusring,[type=\"button\"].sc-ic-radio-group:-moz-focusring,[type=\"reset\"].sc-ic-radio-group:-moz-focusring,[type=\"submit\"].sc-ic-radio-group:-moz-focusring{outline:1px dotted ButtonText}/*!@fieldset*/fieldset.sc-ic-radio-group{padding:0.35em 0.75em 0.625em}/*!@legend*/legend.sc-ic-radio-group{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}/*!@progress*/progress.sc-ic-radio-group{vertical-align:baseline}/*!@textarea*/textarea.sc-ic-radio-group{overflow:auto}/*!@[type=\"checkbox\"],\n[type=\"radio\"]*/[type=\"checkbox\"].sc-ic-radio-group,[type=\"radio\"].sc-ic-radio-group{box-sizing:border-box;padding:0}/*!@[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button*/[type=\"number\"].sc-ic-radio-group::-webkit-inner-spin-button,[type=\"number\"].sc-ic-radio-group::-webkit-outer-spin-button{height:auto}/*!@[type=\"search\"]*/[type=\"search\"].sc-ic-radio-group{-webkit-appearance:textfield;outline-offset:-2px}/*!@[type=\"search\"]::-webkit-search-decoration*/[type=\"search\"].sc-ic-radio-group::-webkit-search-decoration{-webkit-appearance:none}/*!@::-webkit-file-upload-button*/.sc-ic-radio-group::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}/*!@details*/details.sc-ic-radio-group{display:block}/*!@summary*/summary.sc-ic-radio-group{display:list-item}/*!@template*/template.sc-ic-radio-group{display:none}/*!@[hidden]*/[hidden].sc-ic-radio-group{display:none}/*!@html,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo*/html.sc-ic-radio-group,body.sc-ic-radio-group,div.sc-ic-radio-group,span.sc-ic-radio-group,applet.sc-ic-radio-group,object.sc-ic-radio-group,iframe.sc-ic-radio-group,h1.sc-ic-radio-group,h2.sc-ic-radio-group,h3.sc-ic-radio-group,h4.sc-ic-radio-group,h5.sc-ic-radio-group,h6.sc-ic-radio-group,p.sc-ic-radio-group,blockquote.sc-ic-radio-group,pre.sc-ic-radio-group,a.sc-ic-radio-group,abbr.sc-ic-radio-group,acronym.sc-ic-radio-group,address.sc-ic-radio-group,big.sc-ic-radio-group,cite.sc-ic-radio-group,code.sc-ic-radio-group,del.sc-ic-radio-group,dfn.sc-ic-radio-group,em.sc-ic-radio-group,img.sc-ic-radio-group,ins.sc-ic-radio-group,kbd.sc-ic-radio-group,q.sc-ic-radio-group,s.sc-ic-radio-group,samp.sc-ic-radio-group,small.sc-ic-radio-group,strike.sc-ic-radio-group,strong.sc-ic-radio-group,sub.sc-ic-radio-group,sup.sc-ic-radio-group,tt.sc-ic-radio-group,var.sc-ic-radio-group,b.sc-ic-radio-group,u.sc-ic-radio-group,i.sc-ic-radio-group,center.sc-ic-radio-group,dl.sc-ic-radio-group,dt.sc-ic-radio-group,dd.sc-ic-radio-group,ol.sc-ic-radio-group,ul.sc-ic-radio-group,li.sc-ic-radio-group,fieldset.sc-ic-radio-group,form.sc-ic-radio-group,label.sc-ic-radio-group,legend.sc-ic-radio-group,table.sc-ic-radio-group,caption.sc-ic-radio-group,tbody.sc-ic-radio-group,tfoot.sc-ic-radio-group,thead.sc-ic-radio-group,tr.sc-ic-radio-group,th.sc-ic-radio-group,td.sc-ic-radio-group,article.sc-ic-radio-group,aside.sc-ic-radio-group,canvas.sc-ic-radio-group,details.sc-ic-radio-group,embed.sc-ic-radio-group,figure.sc-ic-radio-group,figcaption.sc-ic-radio-group,footer.sc-ic-radio-group,header.sc-ic-radio-group,hgroup.sc-ic-radio-group,menu.sc-ic-radio-group,nav.sc-ic-radio-group,output.sc-ic-radio-group,ruby.sc-ic-radio-group,section.sc-ic-radio-group,summary.sc-ic-radio-group,time.sc-ic-radio-group,mark.sc-ic-radio-group,audio.sc-ic-radio-group,video.sc-ic-radio-group{margin:0;padding:0;border:0;font-size:100%;font-style:inherit;vertical-align:baseline}/*!@:host*/.sc-ic-radio-group-h{display:block}/*!@ic-input-label.error*/ic-input-label.error.sc-ic-radio-group{color:var(--ic-status-error)}/*!@ic-input-validation*/ic-input-validation.sc-ic-radio-group{margin-top:var(--ic-space-sm)}/*!@:host(.small) ic-input-validation*/.small.sc-ic-radio-group-h ic-input-validation.sc-ic-radio-group{margin-top:calc(var(--ic-space-sm) / 2)}/*!@ic-input-label ic-typography*/ic-input-label.sc-ic-radio-group ic-typography.sc-ic-radio-group{margin-bottom:var(--ic-space-sm)}/*!@:host(.small) ic-input-label ic-typography*/.small.sc-ic-radio-group-h ic-input-label.sc-ic-radio-group ic-typography.sc-ic-radio-group{margin-bottom:calc(var(--ic-space-sm) / 2)}/*!@:host .radio-buttons-container*/.sc-ic-radio-group-h .radio-buttons-container.sc-ic-radio-group{display:flex;flex-direction:column;gap:var(--ic-space-xxs)}/*!@:host(.small) .radio-buttons-container*/.small.sc-ic-radio-group-h .radio-buttons-container.sc-ic-radio-group{gap:var(--ic-space-xxxs)}/*!@:host .radio-buttons-container.horizontal*/.sc-ic-radio-group-h .radio-buttons-container.horizontal.sc-ic-radio-group{display:flex;flex-direction:row;gap:calc(var(--ic-space-xl) + var(--ic-space-xs))}/*!@:host(.small) .radio-buttons-container.horizontal*/.small.sc-ic-radio-group-h .radio-buttons-container.horizontal.sc-ic-radio-group{gap:var(--ic-space-xl)}";

class RadioGroup {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.icChange = createEvent(this, "icChange", 7);
    this.resizeObserver = null;
    this.runResizeObserver = () => {
      this.resizeObserver = new ResizeObserver(() => {
        this.checkOrientation();
      });
      this.resizeObserver.observe(this.el);
    };
    this.handleKeyDown = (event) => {
      switch (event.key) {
        case "ArrowDown":
        case "ArrowRight":
          this.radioOptions[this.getNextItemToSelect(this.selectedChild, true)].click();
          event.preventDefault();
          break;
        case "ArrowUp":
        case "ArrowLeft":
          this.radioOptions[this.getNextItemToSelect(this.selectedChild, false)].click();
          event.preventDefault();
      }
    };
    this.getNextItemToSelect = (currentItem, movingDown) => {
      const numRadios = this.radioOptions.length - 1;
      if (currentItem < 1) {
        currentItem = 0;
      }
      let nextItem = movingDown ? currentItem + 1 : currentItem - 1;
      //check if wrap around necessary
      if (nextItem < 0) {
        nextItem = numRadios;
      }
      else if (nextItem > numRadios) {
        nextItem = 0;
      }
      //if next item is disabled then find next
      if (this.radioOptions[nextItem].disabled) {
        nextItem = this.getNextItemToSelect(nextItem, movingDown);
      }
      return nextItem;
    };
    this.checkedValue = "";
    this.currentOrientation = undefined;
    this.initialOrientation = undefined;
    this.selectedChild = -1;
    this.disabled = false;
    this.helperText = undefined;
    this.hideLabel = false;
    this.label = undefined;
    this.name = undefined;
    this.orientation = "vertical";
    this.required = false;
    this.size = "default";
    this.small = false;
    this.validationStatus = "";
    this.validationText = "";
  }
  orientationChangeHandler() {
    this.initialOrientation = this.orientation;
  }
  disconnectedCallback() {
    if (this.resizeObserver !== null) {
      this.resizeObserver.disconnect();
    }
  }
  componentWillLoad() {
    removeDisabledFalse(this.disabled, this.el);
    this.orientationChangeHandler();
    this.currentOrientation = this.initialOrientation;
  }
  componentDidLoad() {
    this.radioOptions = Array.from(this.el.querySelectorAll("ic-radio-option"));
    this.radioOptions.forEach((radioOption, index) => {
      if (!radioOption.selected) {
        radioOption.selected = this.checkedValue === radioOption.value;
      }
      radioOption.name = this.name;
      radioOption.groupLabel = this.label;
      if (radioOption.selected) {
        this.selectedChild = index;
        this.checkedValue = radioOption.value;
      }
    });
    this.radioOptions[0].shadowRoot.querySelector("input").tabIndex =
      this.selectedChild > 0 ? -1 : 0;
    if (this.initialOrientation === "horizontal" &&
      this.radioOptions !== undefined &&
      (this.radioOptions.length > 2 ||
        (this.radioOptions.length === 2 &&
          (isSlotUsed$1(this.radioOptions[0], "additional-field") ||
            isSlotUsed$1(this.radioOptions[1], "additional-field"))))) {
      this.currentOrientation = "vertical";
    }
    checkResizeObserver$1(this.runResizeObserver);
    onComponentRequiredPropUndefined([
      { prop: this.label, propName: "label" },
      { prop: this.name, propName: "name" },
    ], "Radio Group");
  }
  selectHandler(event) {
    var _a;
    this.checkedValue = event.detail.value;
    const selectedOption = event.target;
    this.icChange.emit({
      value: this.checkedValue,
      selectedOption: {
        radio: selectedOption,
        textFieldValue: (_a = selectedOption === null || selectedOption === void 0 ? void 0 : selectedOption.querySelector("ic-text-field")) === null || _a === void 0 ? void 0 : _a.value,
      },
    });
    if (this.radioOptions !== undefined) {
      this.radioOptions.forEach((radioOption, index) => {
        radioOption.selected = this.checkedValue === radioOption.value;
        if (radioOption.selected) {
          this.selectedChild = index;
        }
      });
      this.radioOptions[0].shadowRoot.querySelector("input").tabIndex =
        this.selectedChild > 0 ? -1 : 0;
    }
  }
  changeHandler() {
    const selectedOption = this.radioOptions.findIndex((radioOption) => radioOption.selected);
    if (selectedOption < 0) {
      this.radioOptions[0].shadowRoot.querySelector("input").tabIndex = 0;
      this.selectedChild = selectedOption;
    }
  }
  checkOrientation() {
    if (this.initialOrientation === "horizontal") {
      let totalWidth = 0;
      const radioOptionGap = 40;
      for (let i = 0; i < this.radioOptions.length; i++) {
        totalWidth += this.radioOptions[i].clientWidth;
        if (i < this.radioOptions.length - 1) {
          totalWidth += radioOptionGap;
        }
      }
      if (this.currentOrientation === "horizontal" &&
        totalWidth > this.radioContainer.clientWidth) {
        this.currentOrientation = "vertical";
      }
      else if (this.currentOrientation === "vertical" &&
        totalWidth < this.radioContainer.clientWidth) {
        this.currentOrientation = "horizontal";
      }
    }
  }
  render() {
    renderHiddenInput(true, this.el, this.name, this.checkedValue, this.disabled);
    return (hAsync(Host, { onKeyDown: this.handleKeyDown, class: { small: this.small || this.size === "small" } }, hAsync("div", { role: "radiogroup", "aria-label": `${this.label}${this.required ? ", required" : ""}` }, !this.hideLabel && (hAsync("ic-input-label", { class: { [`${this.validationStatus}`]: true }, label: this.label, helperText: this.helperText, required: this.required, disabled: this.disabled })), hAsync("div", { class: {
        "radio-buttons-container": true,
        horizontal: this.currentOrientation === "horizontal",
      }, ref: (el) => (this.radioContainer = el) }, hAsync("slot", null))), hasValidationStatus(this.validationStatus, this.disabled) && (hAsync("ic-input-validation", { ariaLiveMode: "polite", status: this.validationStatus, message: this.validationText }))));
  }
  get el() { return getElement(this); }
  static get watchers() { return {
    "orientation": ["orientationChangeHandler"]
  }; }
  static get style() { return icRadioGroupCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "ic-radio-group",
    "$members$": {
      "disabled": [4],
      "helperText": [1, "helper-text"],
      "hideLabel": [4, "hide-label"],
      "label": [1],
      "name": [1],
      "orientation": [1],
      "required": [4],
      "size": [1],
      "small": [4],
      "validationStatus": [1, "validation-status"],
      "validationText": [1, "validation-text"],
      "checkedValue": [32],
      "currentOrientation": [32],
      "initialOrientation": [32],
      "selectedChild": [32]
    },
    "$listeners$": [[0, "icCheck", "selectHandler"], [0, "icSelectedChange", "changeHandler"]],
    "$lazyBundleId$": "-",
    "$attrsToReflect$": []
  }; }
}

const icRadioOptionCss = "/*!@html*/html.sc-ic-radio-option{line-height:1.15;-webkit-text-size-adjust:100%}/*!@body*/body.sc-ic-radio-option{margin:0}/*!@main*/main.sc-ic-radio-option{display:block}/*!@h1*/h1.sc-ic-radio-option{font-size:2em;margin:0.67em 0}/*!@hr*/hr.sc-ic-radio-option{box-sizing:content-box;height:0;overflow:visible}/*!@pre*/pre.sc-ic-radio-option{font-family:monospace, monospace;font-size:1em}/*!@a*/a.sc-ic-radio-option{background-color:transparent}/*!@abbr[title]*/abbr[title].sc-ic-radio-option{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}/*!@b,\nstrong*/b.sc-ic-radio-option,strong.sc-ic-radio-option{font-weight:bolder}/*!@code,\nkbd,\nsamp*/code.sc-ic-radio-option,kbd.sc-ic-radio-option,samp.sc-ic-radio-option{font-family:monospace, monospace;font-size:1em}/*!@small*/small.sc-ic-radio-option{font-size:80%}/*!@sub,\nsup*/sub.sc-ic-radio-option,sup.sc-ic-radio-option{font-size:75%;line-height:0;position:relative;vertical-align:baseline}/*!@sub*/sub.sc-ic-radio-option{bottom:-0.25em}/*!@sup*/sup.sc-ic-radio-option{top:-0.5em}/*!@img*/img.sc-ic-radio-option{border-style:none}/*!@button,\ninput,\noptgroup,\nselect,\ntextarea*/button.sc-ic-radio-option,input.sc-ic-radio-option,optgroup.sc-ic-radio-option,select.sc-ic-radio-option,textarea.sc-ic-radio-option{font-family:inherit;font-size:100%;line-height:1.15;margin:0}/*!@button,\ninput*/button.sc-ic-radio-option,input.sc-ic-radio-option{overflow:visible}/*!@button,\nselect*/button.sc-ic-radio-option,select.sc-ic-radio-option{text-transform:none}/*!@button,\n[type=\"button\"],\n[type=\"reset\"],\n[type=\"submit\"]*/button.sc-ic-radio-option,[type=\"button\"].sc-ic-radio-option,[type=\"reset\"].sc-ic-radio-option,[type=\"submit\"].sc-ic-radio-option{-webkit-appearance:button}/*!@button::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner*/button.sc-ic-radio-option::-moz-focus-inner,[type=\"button\"].sc-ic-radio-option::-moz-focus-inner,[type=\"reset\"].sc-ic-radio-option::-moz-focus-inner,[type=\"submit\"].sc-ic-radio-option::-moz-focus-inner{border-style:none;padding:0}/*!@button:-moz-focusring,\n[type=\"button\"]:-moz-focusring,\n[type=\"reset\"]:-moz-focusring,\n[type=\"submit\"]:-moz-focusring*/button.sc-ic-radio-option:-moz-focusring,[type=\"button\"].sc-ic-radio-option:-moz-focusring,[type=\"reset\"].sc-ic-radio-option:-moz-focusring,[type=\"submit\"].sc-ic-radio-option:-moz-focusring{outline:1px dotted ButtonText}/*!@fieldset*/fieldset.sc-ic-radio-option{padding:0.35em 0.75em 0.625em}/*!@legend*/legend.sc-ic-radio-option{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}/*!@progress*/progress.sc-ic-radio-option{vertical-align:baseline}/*!@textarea*/textarea.sc-ic-radio-option{overflow:auto}/*!@[type=\"checkbox\"],\n[type=\"radio\"]*/[type=\"checkbox\"].sc-ic-radio-option,[type=\"radio\"].sc-ic-radio-option{box-sizing:border-box;padding:0}/*!@[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button*/[type=\"number\"].sc-ic-radio-option::-webkit-inner-spin-button,[type=\"number\"].sc-ic-radio-option::-webkit-outer-spin-button{height:auto}/*!@[type=\"search\"]*/[type=\"search\"].sc-ic-radio-option{-webkit-appearance:textfield;outline-offset:-2px}/*!@[type=\"search\"]::-webkit-search-decoration*/[type=\"search\"].sc-ic-radio-option::-webkit-search-decoration{-webkit-appearance:none}/*!@::-webkit-file-upload-button*/.sc-ic-radio-option::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}/*!@details*/details.sc-ic-radio-option{display:block}/*!@summary*/summary.sc-ic-radio-option{display:list-item}/*!@template*/template.sc-ic-radio-option{display:none}/*!@[hidden]*/[hidden].sc-ic-radio-option{display:none}/*!@html,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo*/html.sc-ic-radio-option,body.sc-ic-radio-option,div.sc-ic-radio-option,span.sc-ic-radio-option,applet.sc-ic-radio-option,object.sc-ic-radio-option,iframe.sc-ic-radio-option,h1.sc-ic-radio-option,h2.sc-ic-radio-option,h3.sc-ic-radio-option,h4.sc-ic-radio-option,h5.sc-ic-radio-option,h6.sc-ic-radio-option,p.sc-ic-radio-option,blockquote.sc-ic-radio-option,pre.sc-ic-radio-option,a.sc-ic-radio-option,abbr.sc-ic-radio-option,acronym.sc-ic-radio-option,address.sc-ic-radio-option,big.sc-ic-radio-option,cite.sc-ic-radio-option,code.sc-ic-radio-option,del.sc-ic-radio-option,dfn.sc-ic-radio-option,em.sc-ic-radio-option,img.sc-ic-radio-option,ins.sc-ic-radio-option,kbd.sc-ic-radio-option,q.sc-ic-radio-option,s.sc-ic-radio-option,samp.sc-ic-radio-option,small.sc-ic-radio-option,strike.sc-ic-radio-option,strong.sc-ic-radio-option,sub.sc-ic-radio-option,sup.sc-ic-radio-option,tt.sc-ic-radio-option,var.sc-ic-radio-option,b.sc-ic-radio-option,u.sc-ic-radio-option,i.sc-ic-radio-option,center.sc-ic-radio-option,dl.sc-ic-radio-option,dt.sc-ic-radio-option,dd.sc-ic-radio-option,ol.sc-ic-radio-option,ul.sc-ic-radio-option,li.sc-ic-radio-option,fieldset.sc-ic-radio-option,form.sc-ic-radio-option,label.sc-ic-radio-option,legend.sc-ic-radio-option,table.sc-ic-radio-option,caption.sc-ic-radio-option,tbody.sc-ic-radio-option,tfoot.sc-ic-radio-option,thead.sc-ic-radio-option,tr.sc-ic-radio-option,th.sc-ic-radio-option,td.sc-ic-radio-option,article.sc-ic-radio-option,aside.sc-ic-radio-option,canvas.sc-ic-radio-option,details.sc-ic-radio-option,embed.sc-ic-radio-option,figure.sc-ic-radio-option,figcaption.sc-ic-radio-option,footer.sc-ic-radio-option,header.sc-ic-radio-option,hgroup.sc-ic-radio-option,menu.sc-ic-radio-option,nav.sc-ic-radio-option,output.sc-ic-radio-option,ruby.sc-ic-radio-option,section.sc-ic-radio-option,summary.sc-ic-radio-option,time.sc-ic-radio-option,mark.sc-ic-radio-option,audio.sc-ic-radio-option,video.sc-ic-radio-option{margin:0;padding:0;border:0;font-size:100%;font-style:inherit;vertical-align:baseline}/*!@:host*/.sc-ic-radio-option-h{display:flex;flex-direction:column;width:-moz-fit-content;width:fit-content}/*!@:host([additional-field-display=\"static\"]) ::slotted(ic-text-field)*/.sc-ic-radio-option-h[additional-field-display=\"static\"] .sc-ic-radio-option-s>ic-text-field{margin-top:calc(var(--ic-space-sm) / 2);margin-left:var(--ic-space-xl)}/*!@:host(.disabled)*/.disabled.sc-ic-radio-option-h{color:var(--ic-architectural-200)}/*!@.container input:focus + span.checkmark,\n:host(:focus) .container input:checked + span.checkmark*/.container.sc-ic-radio-option input.sc-ic-radio-option:focus+span.checkmark.sc-ic-radio-option,.sc-ic-radio-option-h:focus .container.sc-ic-radio-option input.sc-ic-radio-option:checked+span.checkmark.sc-ic-radio-option{box-shadow:var(--ic-border-focus)}/*!@.container*/.container.sc-ic-radio-option{display:grid;grid-template-columns:min-content auto;position:relative;cursor:pointer;align-items:center;margin:var(--ic-space-xxs) 0 var(--ic-space-xxs) var(--ic-space-xxs)}/*!@.container.disabled,\n.container.disabled input:disabled*/.container.disabled.sc-ic-radio-option,.container.disabled.sc-ic-radio-option input.sc-ic-radio-option:disabled{cursor:default}/*!@.container input*/.container.sc-ic-radio-option input.sc-ic-radio-option{-webkit-appearance:none;-moz-appearance:none;appearance:none;display:inline-block;position:absolute;cursor:pointer;height:var(--ic-space-lg);width:var(--ic-space-lg);border-radius:50%;border:none}/*!@.checkmark*/.checkmark.sc-ic-radio-option{display:block;position:relative;top:0;left:0;height:var(--ic-space-lg);width:var(--ic-space-lg);background-color:transparent;border:var(--ic-border-default);border-radius:50%;transition:var(--ic-easing-transition-fast);box-sizing:border-box}/*!@.container input:checked ~ .checkmark::after*/.container.sc-ic-radio-option input.sc-ic-radio-option:checked~.checkmark.sc-ic-radio-option::after{display:inline-block}/*!@.container:hover input ~ .checkmark*/.container.sc-ic-radio-option:hover input.sc-ic-radio-option~.checkmark.sc-ic-radio-option{background-color:var(--ic-action-default-bg-hover);box-shadow:0 0 0 0.25rem var(--ic-action-default-bg-hover);border:var(--ic-border-width) solid var(--ic-action-default)}/*!@.container:active input ~ .checkmark*/.container.sc-ic-radio-option:active input.sc-ic-radio-option~.checkmark.sc-ic-radio-option{background-color:var(--ic-action-default-bg-active);border:var(--ic-border-width) solid var(--ic-action-default-active);box-shadow:0 0 0 0.25rem var(--ic-action-default-bg-active)}/*!@.container:active input:checked ~ .checkmark*/.container.sc-ic-radio-option:active input.sc-ic-radio-option:checked~.checkmark.sc-ic-radio-option{background-color:var(--ic-action-default-bg-active);border:0.125rem solid var(--ic-action-default-active);box-shadow:0 0 0 0.25rem var(--ic-action-default-bg-active)}/*!@.container:active input:checked ~ .checkmark::after*/.container.sc-ic-radio-option:active input.sc-ic-radio-option:checked~.checkmark.sc-ic-radio-option::after{background-color:var(--ic-action-default-active)}/*!@.container input:checked ~ .checkmark*/.container.sc-ic-radio-option input.sc-ic-radio-option:checked~.checkmark.sc-ic-radio-option{border:0.125rem solid var(--ic-action-default)}/*!@.container input:checked:disabled ~ .checkmark*/.container.sc-ic-radio-option input.sc-ic-radio-option:checked:disabled~.checkmark.sc-ic-radio-option{background-color:transparent;border:0.125rem solid var(--ic-architectural-200)}/*!@.container input:disabled ~ .checkmark*/.container.sc-ic-radio-option input.sc-ic-radio-option:disabled~.checkmark.sc-ic-radio-option{border:var(--ic-border-width) dashed var(--ic-architectural-200)}/*!@.container input:disabled ~ .checkmark::after*/.container.sc-ic-radio-option input.sc-ic-radio-option:disabled~.checkmark.sc-ic-radio-option::after{background:var(--ic-architectural-200)}/*!@.container:hover input:disabled ~ .checkmark*/.container.sc-ic-radio-option:hover input.sc-ic-radio-option:disabled~.checkmark.sc-ic-radio-option{background-color:transparent;box-shadow:none;border:0.125rem solid none}/*!@.container:active input:disabled ~ .checkmark::after*/.container.sc-ic-radio-option:active input.sc-ic-radio-option:disabled~.checkmark.sc-ic-radio-option::after{background-color:var(--ic-architectural-200)}/*!@.container .checkmark::after*/.container.sc-ic-radio-option .checkmark.sc-ic-radio-option::after{content:\"\";position:absolute;display:none;top:calc(50% - var(--ic-space-xs));left:calc(50% - var(--ic-space-xs));width:var(--ic-space-md);height:var(--ic-space-md);border-radius:50%;background:var(--ic-action-default)}/*!@.radio-label*/.radio-label.sc-ic-radio-option{margin-left:var(--ic-space-md)}/*!@.additional-field-wrapper*/.additional-field-wrapper.sc-ic-radio-option{margin-left:var(--ic-space-xs)}/*!@.branch-corner*/.branch-corner.sc-ic-radio-option{color:var(--ic-action-default);height:var(--ic-space-md);width:var(--ic-space-xl);border-radius:0 0 0 0.188rem;border-bottom:0.125rem solid var(--ic-action-default);border-left:0.125rem solid var(--ic-action-default);margin-left:calc(-1 * var(--ic-space-1px))}/*!@.dynamic-container*/.dynamic-container.sc-ic-radio-option{display:flex;position:relative;margin:var(--ic-space-xxxs) 0 var(--ic-space-xxs) var(--ic-space-md);gap:var(--ic-space-xs)}/*!@.dynamic-container.hidden*/.dynamic-container.hidden.sc-ic-radio-option{display:none}/*!@.dynamic-text*/.dynamic-text.sc-ic-radio-option{color:var(--ic-action-default);margin-top:calc(var(--ic-space-sm) / 2);margin-bottom:var(--ic-space-xs);border-radius:2%}@media (max-width: 576px){/*!@::slotted(ic-text-field)*/.sc-ic-radio-option-s>ic-text-field{--input-width:100%}}@media (forced-colors: active){/*!@.container input:checked ~ .checkmark,\n  .container:active input:checked ~ .checkmark*/.container.sc-ic-radio-option input.sc-ic-radio-option:checked~.checkmark.sc-ic-radio-option,.container.sc-ic-radio-option:active input.sc-ic-radio-option:checked~.checkmark.sc-ic-radio-option{border-color:Highlight}/*!@.container input:checked ~ .checkmark::after,\n  .container:active input:checked ~ .checkmark::after*/.container.sc-ic-radio-option input.sc-ic-radio-option:checked~.checkmark.sc-ic-radio-option::after,.container.sc-ic-radio-option:active input.sc-ic-radio-option:checked~.checkmark.sc-ic-radio-option::after{background-color:Highlight}/*!@.container input:disabled ~ .checkmark,\n  .container input:checked:disabled ~ .checkmark*/.container.sc-ic-radio-option input.sc-ic-radio-option:disabled~.checkmark.sc-ic-radio-option,.container.sc-ic-radio-option input.sc-ic-radio-option:checked:disabled~.checkmark.sc-ic-radio-option{border-color:GrayText}/*!@.container input:disabled ~ .checkmark::after,\n  .container:active input:disabled ~ .checkmark::after*/.container.sc-ic-radio-option input.sc-ic-radio-option:disabled~.checkmark.sc-ic-radio-option::after,.container.sc-ic-radio-option:active input.sc-ic-radio-option:disabled~.checkmark.sc-ic-radio-option::after{background-color:GrayText}}";

/**
 * @slot additional-field - Content to displayed alongside a radio option.
 */
class RadioOption {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.icCheck = createEvent(this, "icCheck", 7);
    this.radioOptionSelect = createEvent(this, "radioOptionSelect", 7);
    this.icSelectedChange = createEvent(this, "icSelectedChange", 7);
    this.defaultRadioValue = "";
    this.hasAdditionalField = false;
    this.skipFocus = false;
    this.handleClick = () => {
      if (!this.disabled) {
        if (this.skipFocus === false) {
          this.radioElement.focus();
        }
        this.skipFocus = false;
        if (this.hasAdditionalField) {
          const textfield = this.el.querySelector("ic-text-field");
          this.value =
            textfield.value !== "" ? textfield.value : this.defaultRadioValue;
        }
        this.icCheck.emit({
          value: this.value,
        });
        this.radioOptionSelect.emit({
          value: this.value,
        });
      }
    };
    this.swallowClick = (event) => {
      event.stopPropagation();
    };
    this.handleFormReset = () => {
      this.skipFocus = true;
      this.selected = this.initiallySelected;
    };
    this.additionalFieldDisplay = "static";
    this.disabled = false;
    this.dynamicText = "This selection requires additional answers";
    this.form = undefined;
    this.formaction = undefined;
    this.formenctype = undefined;
    this.formmethod = undefined;
    this.formnovalidate = undefined;
    this.formtarget = undefined;
    this.groupLabel = undefined;
    this.label = undefined;
    this.name = undefined;
    this.value = undefined;
    this.selected = false;
    this.initiallySelected = this.selected;
  }
  watchSelectedHandler() {
    this.icSelectedChange.emit();
  }
  disconnectedCallback() {
    removeFormResetListener(this.el, this.handleFormReset);
  }
  componentWillLoad() {
    const additionalFieldContent = getSlotContent$1(this.el, "additional-field");
    if (additionalFieldContent !== null) {
      this.hasAdditionalField = true;
      const Element = additionalFieldContent[0];
      if (Element.tagName === "IC-TEXT-FIELD") {
        const textField = Element;
        textField.hiddenInput = false;
      }
    }
    this.defaultRadioValue = this.value;
    addFormResetListener(this.el, this.handleFormReset);
    removeDisabledFalse(this.disabled, this.el);
  }
  componentDidLoad() {
    onComponentRequiredPropUndefined([{ prop: this.value, propName: "value" }], "Radio Option");
  }
  componentDidRender() {
    if (this.additionalFieldDisplay === "static") {
      const textfield = this.el.querySelector("ic-text-field");
      if (!this.selected) {
        textfield && textfield.setAttribute("disabled", "");
      }
      else {
        textfield && textfield.removeAttribute("disabled");
      }
    }
  }
  textfieldValueHandler(event) {
    const textFieldValue = event.detail.value;
    if (this.selected) {
      if (textFieldValue !== "") {
        this.value = event.detail.value;
        this.icCheck.emit({
          value: this.value,
        });
        this.radioOptionSelect.emit({
          value: this.value,
        });
      }
      else {
        this.value = this.defaultRadioValue;
        this.icCheck.emit({
          value: this.defaultRadioValue,
        });
        this.radioOptionSelect.emit({
          value: this.defaultRadioValue,
        });
      }
    }
    event.stopImmediatePropagation();
  }
  /**
   * Sets focus on the radio option.
   */
  async setFocus() {
    if (this.el.shadowRoot.querySelector("input")) {
      this.el.shadowRoot.querySelector("input").focus();
    }
  }
  render() {
    const id = `ic-radio-option-${isPropDefined(this.label) ? this.label : this.value}-${this.groupLabel}`;
    return (hAsync(Host, { onClick: this.handleClick, class: { disabled: this.disabled } }, hAsync("div", { class: { ["container"]: true, ["disabled"]: this.disabled } }, hAsync("div", null, hAsync("input", { role: "radio", tabindex: this.selected ? "0" : "-1", type: "radio", name: this.name, id: id, value: this.value, disabled: this.disabled ? true : null, checked: this.selected, ref: (el) => (this.radioElement = el), form: this.form, formaction: this.formaction, formenctype: this.formenctype, formmethod: this.formmethod, formnovalidate: this.formnovalidate, formtarget: this.formtarget }), hAsync("span", { class: "checkmark" })), hAsync("ic-typography", { class: "radio-label", variant: "body" }, hAsync("label", { htmlFor: id }, this.label))), this.hasAdditionalField && (hAsync("div", { onClick: this.swallowClick, class: {
        "dynamic-container": true,
        hidden: this.additionalFieldDisplay === "dynamic" && !this.selected,
      } }, this.additionalFieldDisplay === "dynamic" && (hAsync("div", { class: "branch-corner" })), hAsync("div", null, this.additionalFieldDisplay === "dynamic" && (hAsync("ic-typography", { variant: "caption" }, hAsync("p", { class: "dynamic-text" }, this.dynamicText))), hAsync("div", { class: {
        "additional-field-wrapper": this.additionalFieldDisplay === "static",
      } }, hAsync("slot", { name: "additional-field" })))))));
  }
  static get delegatesFocus() { return true; }
  get el() { return getElement(this); }
  static get watchers() { return {
    "selected": ["watchSelectedHandler"]
  }; }
  static get style() { return icRadioOptionCss; }
  static get cmpMeta() { return {
    "$flags$": 25,
    "$tagName$": "ic-radio-option",
    "$members$": {
      "additionalFieldDisplay": [513, "additional-field-display"],
      "disabled": [4],
      "dynamicText": [1, "dynamic-text"],
      "form": [1],
      "formaction": [1],
      "formenctype": [1],
      "formmethod": [1],
      "formnovalidate": [4],
      "formtarget": [1],
      "groupLabel": [1, "group-label"],
      "label": [1],
      "name": [1],
      "value": [1025],
      "selected": [1540],
      "initiallySelected": [32],
      "setFocus": [64]
    },
    "$listeners$": [[0, "icChange", "textfieldValueHandler"]],
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["additionalFieldDisplay", "additional-field-display"], ["selected", "selected"]]
  }; }
}

var clearIcon = `<svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M15.8327 5.34199L14.6577 4.16699L9.99935 8.82533L5.34102 4.16699L4.16602 5.34199L8.82435 10.0003L4.16602 14.6587L5.34102 15.8337L9.99935 11.1753L14.6577 15.8337L15.8327 14.6587L11.1743 10.0003L15.8327 5.34199Z" fill="currentColor"/>
</svg>
`;

var searchIcon = `<svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg" aria-hidden="true">
    <path d="M13.1292 11.8792H12.4708L12.2375 11.6542C13.0542 10.7042 13.5458 9.47083 13.5458 8.12916C13.5458 5.13749 11.1208 2.71249 8.12916 2.71249C5.13749 2.71249 2.71249 5.13749 2.71249 8.12916C2.71249 11.1208 5.13749 13.5458 8.12916 13.5458C9.47083 13.5458 10.7042 13.0542 11.6542 12.2375L11.8792 12.4708V13.1292L16.0458 17.2875L17.2875 16.0458L13.1292 11.8792ZM8.12916 11.8792C6.05416 11.8792 4.37916 10.2042 4.37916 8.12916C4.37916 6.05416 6.05416 4.37916 8.12916 4.37916C10.2042 4.37916 11.8792 6.05416 11.8792 8.12916C11.8792 10.2042 10.2042 11.8792 8.12916 11.8792Z" fill="currentColor"/>
</svg>`;

const icSearchBarCss = "/*!@html*/html.sc-ic-search-bar{line-height:1.15;-webkit-text-size-adjust:100%}/*!@body*/body.sc-ic-search-bar{margin:0}/*!@main*/main.sc-ic-search-bar{display:block}/*!@h1*/h1.sc-ic-search-bar{font-size:2em;margin:0.67em 0}/*!@hr*/hr.sc-ic-search-bar{box-sizing:content-box;height:0;overflow:visible}/*!@pre*/pre.sc-ic-search-bar{font-family:monospace, monospace;font-size:1em}/*!@a*/a.sc-ic-search-bar{background-color:transparent}/*!@abbr[title]*/abbr[title].sc-ic-search-bar{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}/*!@b,\nstrong*/b.sc-ic-search-bar,strong.sc-ic-search-bar{font-weight:bolder}/*!@code,\nkbd,\nsamp*/code.sc-ic-search-bar,kbd.sc-ic-search-bar,samp.sc-ic-search-bar{font-family:monospace, monospace;font-size:1em}/*!@small*/small.sc-ic-search-bar{font-size:80%}/*!@sub,\nsup*/sub.sc-ic-search-bar,sup.sc-ic-search-bar{font-size:75%;line-height:0;position:relative;vertical-align:baseline}/*!@sub*/sub.sc-ic-search-bar{bottom:-0.25em}/*!@sup*/sup.sc-ic-search-bar{top:-0.5em}/*!@img*/img.sc-ic-search-bar{border-style:none}/*!@button,\ninput,\noptgroup,\nselect,\ntextarea*/button.sc-ic-search-bar,input.sc-ic-search-bar,optgroup.sc-ic-search-bar,select.sc-ic-search-bar,textarea.sc-ic-search-bar{font-family:inherit;font-size:100%;line-height:1.15;margin:0}/*!@button,\ninput*/button.sc-ic-search-bar,input.sc-ic-search-bar{overflow:visible}/*!@button,\nselect*/button.sc-ic-search-bar,select.sc-ic-search-bar{text-transform:none}/*!@button,\n[type=\"button\"],\n[type=\"reset\"],\n[type=\"submit\"]*/button.sc-ic-search-bar,[type=\"button\"].sc-ic-search-bar,[type=\"reset\"].sc-ic-search-bar,[type=\"submit\"].sc-ic-search-bar{-webkit-appearance:button}/*!@button::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner*/button.sc-ic-search-bar::-moz-focus-inner,[type=\"button\"].sc-ic-search-bar::-moz-focus-inner,[type=\"reset\"].sc-ic-search-bar::-moz-focus-inner,[type=\"submit\"].sc-ic-search-bar::-moz-focus-inner{border-style:none;padding:0}/*!@button:-moz-focusring,\n[type=\"button\"]:-moz-focusring,\n[type=\"reset\"]:-moz-focusring,\n[type=\"submit\"]:-moz-focusring*/button.sc-ic-search-bar:-moz-focusring,[type=\"button\"].sc-ic-search-bar:-moz-focusring,[type=\"reset\"].sc-ic-search-bar:-moz-focusring,[type=\"submit\"].sc-ic-search-bar:-moz-focusring{outline:1px dotted ButtonText}/*!@fieldset*/fieldset.sc-ic-search-bar{padding:0.35em 0.75em 0.625em}/*!@legend*/legend.sc-ic-search-bar{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}/*!@progress*/progress.sc-ic-search-bar{vertical-align:baseline}/*!@textarea*/textarea.sc-ic-search-bar{overflow:auto}/*!@[type=\"checkbox\"],\n[type=\"radio\"]*/[type=\"checkbox\"].sc-ic-search-bar,[type=\"radio\"].sc-ic-search-bar{box-sizing:border-box;padding:0}/*!@[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button*/[type=\"number\"].sc-ic-search-bar::-webkit-inner-spin-button,[type=\"number\"].sc-ic-search-bar::-webkit-outer-spin-button{height:auto}/*!@[type=\"search\"]*/[type=\"search\"].sc-ic-search-bar{-webkit-appearance:textfield;outline-offset:-2px}/*!@[type=\"search\"]::-webkit-search-decoration*/[type=\"search\"].sc-ic-search-bar::-webkit-search-decoration{-webkit-appearance:none}/*!@::-webkit-file-upload-button*/.sc-ic-search-bar::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}/*!@details*/details.sc-ic-search-bar{display:block}/*!@summary*/summary.sc-ic-search-bar{display:list-item}/*!@template*/template.sc-ic-search-bar{display:none}/*!@[hidden]*/[hidden].sc-ic-search-bar{display:none}/*!@html,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo*/html.sc-ic-search-bar,body.sc-ic-search-bar,div.sc-ic-search-bar,span.sc-ic-search-bar,applet.sc-ic-search-bar,object.sc-ic-search-bar,iframe.sc-ic-search-bar,h1.sc-ic-search-bar,h2.sc-ic-search-bar,h3.sc-ic-search-bar,h4.sc-ic-search-bar,h5.sc-ic-search-bar,h6.sc-ic-search-bar,p.sc-ic-search-bar,blockquote.sc-ic-search-bar,pre.sc-ic-search-bar,a.sc-ic-search-bar,abbr.sc-ic-search-bar,acronym.sc-ic-search-bar,address.sc-ic-search-bar,big.sc-ic-search-bar,cite.sc-ic-search-bar,code.sc-ic-search-bar,del.sc-ic-search-bar,dfn.sc-ic-search-bar,em.sc-ic-search-bar,img.sc-ic-search-bar,ins.sc-ic-search-bar,kbd.sc-ic-search-bar,q.sc-ic-search-bar,s.sc-ic-search-bar,samp.sc-ic-search-bar,small.sc-ic-search-bar,strike.sc-ic-search-bar,strong.sc-ic-search-bar,sub.sc-ic-search-bar,sup.sc-ic-search-bar,tt.sc-ic-search-bar,var.sc-ic-search-bar,b.sc-ic-search-bar,u.sc-ic-search-bar,i.sc-ic-search-bar,center.sc-ic-search-bar,dl.sc-ic-search-bar,dt.sc-ic-search-bar,dd.sc-ic-search-bar,ol.sc-ic-search-bar,ul.sc-ic-search-bar,li.sc-ic-search-bar,fieldset.sc-ic-search-bar,form.sc-ic-search-bar,label.sc-ic-search-bar,legend.sc-ic-search-bar,table.sc-ic-search-bar,caption.sc-ic-search-bar,tbody.sc-ic-search-bar,tfoot.sc-ic-search-bar,thead.sc-ic-search-bar,tr.sc-ic-search-bar,th.sc-ic-search-bar,td.sc-ic-search-bar,article.sc-ic-search-bar,aside.sc-ic-search-bar,canvas.sc-ic-search-bar,details.sc-ic-search-bar,embed.sc-ic-search-bar,figure.sc-ic-search-bar,figcaption.sc-ic-search-bar,footer.sc-ic-search-bar,header.sc-ic-search-bar,hgroup.sc-ic-search-bar,menu.sc-ic-search-bar,nav.sc-ic-search-bar,output.sc-ic-search-bar,ruby.sc-ic-search-bar,section.sc-ic-search-bar,summary.sc-ic-search-bar,time.sc-ic-search-bar,mark.sc-ic-search-bar,audio.sc-ic-search-bar,video.sc-ic-search-bar{margin:0;padding:0;border:0;font-size:100%;font-style:inherit;vertical-align:baseline}/*!@:host(.search)*/.search.sc-ic-search-bar-h{--divider-height:1.5rem}/*!@:host(.search.small)*/.search.small.sc-ic-search-bar-h{--divider-height:1rem}/*!@:host(.fullwidth)*/.fullwidth.sc-ic-search-bar-h{width:100%}/*!@:host(.search) .disabled:hover*/.search.sc-ic-search-bar-h .disabled.sc-ic-search-bar:hover{border-color:var(--ic-architectural-200)}/*!@:host(.search.disabled) .disabled svg*/.search.disabled.sc-ic-search-bar-h .disabled.sc-ic-search-bar svg.sc-ic-search-bar{color:var(--ic-architectural-200)}/*!@:host(.search) .disabled svg*/.search.sc-ic-search-bar-h .disabled.sc-ic-search-bar svg.sc-ic-search-bar{color:var(--ic-architectural-400)}/*!@.clear-button-container*/.clear-button-container.sc-ic-search-bar{align-items:center;margin-right:var(--ic-space-1px);display:none;visibility:hidden}/*!@.clear-button*/.clear-button.sc-ic-search-bar{border-radius:var(--ic-border-radius);transition:box-shadow var(--ic-easing-transition),\n    border-radius var(--ic-easing-transition)}/*!@.clear-button:focus,\n.clear-button:active*/.clear-button.sc-ic-search-bar:focus,.clear-button.sc-ic-search-bar:active{background-color:var(--ic-focus-blue);box-shadow:inset 0 0 0 0.125rem var(--ic-focus-glow);border-radius:0.25rem}/*!@.clear-button:focus,\n.clear-button:active **/.clear-button.sc-ic-search-bar:focus,.clear-button.sc-ic-search-bar:active *.sc-ic-search-bar{fill:white}/*!@.clear-button-visible*/.clear-button-visible.sc-ic-search-bar{visibility:visible;display:flex}/*!@.search-submit-button-container*/.search-submit-button-container.sc-ic-search-bar{display:flex;align-items:center}/*!@.search-submit-button-disabled .ic-tooltip-container*/.search-submit-button-disabled.sc-ic-search-bar .ic-tooltip-container.sc-ic-search-bar{display:none !important}/*!@.search-submit-button:focus,\n.search-submit-button:active*/.search-submit-button.sc-ic-search-bar:focus,.search-submit-button.sc-ic-search-bar:active{background-color:var(--ic-focus-blue) !important;box-shadow:inset 0 0 0 0.125rem var(--ic-focus-glow) !important;border-radius:var(--ic-space-xxs)}/*!@.search-submit-button:focus,\n.search-submit-button:active **/.search-submit-button.sc-ic-search-bar:focus,.search-submit-button.sc-ic-search-bar:active *.sc-ic-search-bar{fill:white}/*!@.divider*/.divider.sc-ic-search-bar{width:var(--ic-border-width);background-color:var(--ic-action-dark-active);height:var(--divider-height)}/*!@:host(.dark) .divider*/.dark.sc-ic-search-bar-h .divider.sc-ic-search-bar{background-color:var(--ic-architectural-200)}/*!@.menu-container*/.menu-container.sc-ic-search-bar{width:var(--input-width, 20rem);position:relative;top:var(--ic-space-xxxs)}/*!@.menu-container.fullwidth*/.menu-container.fullwidth.sc-ic-search-bar{width:100%}/*!@.no-results*/.no-results.sc-ic-search-bar{cursor:not-allowed}/*!@.search-results-status*/.search-results-status.sc-ic-search-bar{border:0;clip:rect(0, 0, 0, 0, 0);height:var(--ic-space-1px);margin-bottom:calc(-1 * var(--ic-space-1px));margin-right:calc(-1 * var(--ic-space-1px));overflow:hidden;padding:0;position:absolute;white-space:nowrap;width:var(--ic-space-1px)}";

let inputIds$3 = 0;
// eslint-disable-next-line @typescript-eslint/no-unused-vars
class SearchBar {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.icChange = createEvent(this, "icChange", 7);
    this.icClear = createEvent(this, "icClear", 7);
    this.icInput = createEvent(this, "icInput", 7);
    this.icInputBlur = createEvent(this, "icInputBlur", 7);
    this.icInputFocus = createEvent(this, "icInputFocus", 7);
    this.icOptionSelect = createEvent(this, "icOptionSelect", 7);
    this.icMenuChange = createEvent(this, "icMenuChange", 7);
    this.icClearBlur = createEvent(this, "icClearBlur", 7);
    this.icRetryLoad = createEvent(this, "icRetryLoad", 7);
    this.icSubmitSearch = createEvent(this, "icSubmitSearch", 7);
    this.icSubmitSearchBlur = createEvent(this, "icSubmitSearchBlur", 7);
    this.icSearchBarBlur = createEvent(this, "icSearchBarBlur", 7);
    this.icSearchBarFocus = createEvent(this, "icSearchBarFocus", 7);
    this.assistiveHintEl = null;
    this.hasTimedOut = false;
    this.inputId = `ic-search-bar-input-${inputIds$3++}`;
    this.menuCloseFromMenuChangeEvent = false;
    this.menuId = `${this.inputId}-menu`;
    this.preLoad = true;
    this.preventSubmit = false;
    this.prevNoOption = false;
    this.retryButtonClick = false;
    this.truncateValue = false;
    this.handleClear = (ev) => {
      const keyboardEvent = ev;
      const mouseEvent = ev;
      if (mouseEvent.type === "click" ||
        keyboardEvent.code === "Enter" ||
        keyboardEvent.code === "Space") {
        this.value = "";
        this.inputEl.value = "";
        this.loading = false;
        clearTimeout(this.timeoutTimer);
        this.filteredOptions = this.options;
        this.el.setFocus();
        this.icClear.emit();
        ev.preventDefault();
        this.preventSubmit = true;
      }
    };
    this.onInput = (ev) => {
      this.value = ev.target.value;
      const noOptions = [
        { [this.labelField]: this.emptyOptionListText, [this.valueField]: "" },
      ];
      if (this.options.length > 0) {
        this.setMenuChange(true);
        this.preLoad = false;
        if (this.disableFilter === false) {
          const rawFilteredOptions = getFilteredMenuOptions(this.options, false, this.value, "anywhere", this.labelField);
          this.filteredOptions =
            rawFilteredOptions.length > 0 ? rawFilteredOptions : noOptions;
        }
      }
      if (!this.showClearButton) {
        this.handleShowClearButton(true);
      }
      this.debounceAriaLiveUpdate();
    };
    this.onInputBlur = (ev) => {
      const value = ev.target.value;
      const nextFocus = ev.relatedTarget;
      this.icInputBlur.emit({ value: value, relatedTarget: nextFocus });
    };
    this.onInputFocus = (ev) => {
      const value = ev.target.value;
      this.icInputFocus.emit({ value: value });
      this.handleShowClearButton(true);
    };
    this.handleClearBlur = (ev) => {
      const nextFocus = ev.relatedTarget;
      this.icClearBlur.emit({ relatedTarget: nextFocus });
      this.clearButtonFocused = false;
    };
    this.handleSubmitSearchBlur = (ev) => {
      const nextFocus = ev.relatedTarget;
      this.icSubmitSearchBlur.emit({ relatedTarget: nextFocus });
      this.searchSubmitFocused = false;
    };
    this.handleMouseDown = (ev) => {
      ev.preventDefault();
    };
    this.handleSubmitSearchFocus = () => {
      this.searchSubmitFocused = true;
    };
    this.handleSubmitSearch = () => {
      this.highlightedValue && (this.value = this.highlightedValue);
      this.highlightedValue = undefined;
      this.icSubmitSearch.emit({ value: this.value });
      const form = this.el.closest("FORM");
      if (this.searchSubmitButton && !!form && !this.preventSubmit) {
        handleHiddenFormButtonClick(form, this.searchSubmitButton);
      }
    };
    this.handleSubmitSearchKeyDown = (ev) => {
      if (ev.key === " ") {
        ev.preventDefault();
        this.handleSubmitSearch();
      }
    };
    this.handleRetry = (ev) => {
      this.retryViaKeyPress = ev.detail.keyPressed === "Enter";
      this.icRetryLoad.emit({ value: ev.detail.value });
      this.triggerLoading();
      this.retryButtonClick = true;
    };
    this.triggerLoading = () => {
      const loadingOption = [
        {
          [this.labelField]: this.loadingLabel,
          [this.valueField]: "",
          loading: true,
        },
      ];
      if (this.filteredOptions !== loadingOption)
        this.filteredOptions = loadingOption;
      if (this.timeout) {
        this.timeoutTimer = window.setTimeout(() => {
          this.filteredOptions = [
            {
              [this.labelField]: this.loadingErrorLabel,
              [this.valueField]: "",
              timedOut: true,
            },
          ];
        }, this.timeout);
      }
    };
    this.handleOptionSelect = (ev) => {
      if (ev.detail.label === this.emptyOptionListText) {
        this.el.setFocus();
        return;
      }
      this.value = ev.detail.value;
      this.icOptionSelect.emit({ value: this.value });
    };
    this.handleMenuOptionHighlight = (ev) => {
      var _a;
      const optionValue = (_a = ev.detail.optionId) === null || _a === void 0 ? void 0 : _a.replace(`${this.menuId}-`, "");
      optionValue && (this.highlightedValue = optionValue);
      if (ev.detail.optionId) {
        this.ariaActiveDescendant = ev.detail.optionId;
      }
      else {
        this.ariaActiveDescendant = undefined;
      }
    };
    this.handleMenuChange = (ev) => {
      this.setMenuChange(ev.detail.open);
      if (!ev.detail.open) {
        this.handleMenuCloseFromMenuChange(true);
        if (ev.detail.focusInput === undefined || ev.detail.focusInput) {
          this.el.setFocus();
        }
      }
    };
    this.setMenuChange = (open) => {
      if (this.open !== open) {
        this.open = open;
        this.icMenuChange.emit({ open });
      }
    };
    this.handleHostFocus = () => {
      if (this.options && this.value && !this.menuCloseFromMenuChangeEvent) {
        this.setMenuChange(true);
      }
      this.handleTruncateValue(false);
      this.icSearchBarFocus.emit();
    };
    this.handleHostBlur = (ev) => {
      const nextFocus = ev.relatedTarget;
      if (this.open &&
        this.options &&
        nextFocus !== this.menu &&
        !this.retryViaKeyPress &&
        !this.retryButtonClick) {
        this.setMenuChange(false);
      }
      if (this.retryButtonClick || this.retryViaKeyPress) {
        this.inputEl.setFocus();
      }
      this.handleShowClearButton(false);
      this.handleMenuCloseFromMenuChange(false);
      this.handleTruncateValue(true);
      this.icSearchBarBlur.emit({ relatedTarget: nextFocus, value: this.value });
      this.retryViaKeyPress = false;
      this.retryButtonClick = false;
    };
    this.handleShowClearButton = (visible) => {
      this.showClearButton = visible;
    };
    this.handleFocusClearButton = () => {
      this.clearButtonFocused = true;
    };
    this.handleMenuCloseFromMenuChange = (fromEvent) => {
      this.menuCloseFromMenuChangeEvent = fromEvent;
    };
    this.handleTruncateValue = (truncate) => {
      this.truncateValue = truncate;
    };
    this.renderAssistiveHintEl = () => {
      var _a, _b;
      const input = (_b = (_a = this.el.shadowRoot
        .querySelector("ic-text-field")) === null || _a === void 0 ? void 0 : _a.shadowRoot) === null || _b === void 0 ? void 0 : _b.querySelector(`#${this.inputId}`);
      if (input &&
        Object.keys(input).length > 0 &&
        this.hasOptionsOrFilterDisabled()) {
        this.assistiveHintEl = document.createElement("span");
        this.assistiveHintEl.innerText = this.hintText;
        this.assistiveHintEl.id = `${this.inputId}-assistive-hint`;
        this.assistiveHintEl.style.display = "none";
        if (input.after !== undefined) {
          input.after(this.assistiveHintEl);
        }
      }
    };
    this.updateSearchResultAriaLive = () => {
      const searchResultsStatusEl = this.el.shadowRoot.querySelector(".search-results-status");
      if (searchResultsStatusEl) {
        if (!this.open ||
          this.value === "" ||
          this.value.length < this.charactersUntilSuggestion) {
          searchResultsStatusEl.innerText = "";
        }
        else if (this.hasOptionsOrFilterDisabled() &&
          this.filteredOptions.length > 0 &&
          this.open &&
          !this.filteredOptions[0].loading) {
          if (this.hadNoOptions()) {
            searchResultsStatusEl.innerText = this.emptyOptionListText;
          }
          else {
            searchResultsStatusEl.innerText = `${this.filteredOptions.length} result${this.filteredOptions.length > 1 ? "s" : ""} available`;
          }
        }
      }
    };
    this.hasOptionsOrFilterDisabled = () => this.options.length > 0 || this.disableFilter;
    this.hadNoOptions = () => this.filteredOptions.length === 1 &&
      this.filteredOptions[0][this.labelField] === this.emptyOptionListText &&
      this.searchMode === "navigation";
    this.isSubmitDisabled = () => {
      const valueNotSet = this.value === undefined || this.value === null || this.value === "";
      const valueLengthLess = this.value.length < this.charactersUntilSuggestion;
      return (valueNotSet ||
        valueLengthLess ||
        this.disabled ||
        this.hadNoOptions() ||
        this.hasTimedOut ||
        this.loading);
    };
    this.highlightFirstOptionAfterNoResults = () => {
      if (this.prevNoOption && this.menu && !this.hasTimedOut) {
        this.menu.handleSetFirstOption();
        this.prevNoOption = false;
      }
      const prevNoOptionsList = this.filteredOptions.find((filteredOption) => filteredOption[this.labelField] === this.emptyOptionListText ||
        filteredOption[this.labelField] === this.loadingErrorLabel ||
        filteredOption[this.labelField] === this.loadingLabel);
      if (prevNoOptionsList) {
        this.prevNoOption = true;
      }
    };
    this.ariaActiveDescendant = undefined;
    this.clearButtonFocused = false;
    this.highlightedValue = undefined;
    this.open = false;
    this.searchSubmitFocused = false;
    this.showClearButton = false;
    this.autocapitalize = "off";
    this.autocomplete = "off";
    this.autocorrect = "off";
    this.autofocus = false;
    this.charactersUntilSuggestion = 2;
    this.disabled = false;
    this.disableFilter = false;
    this.debounce = 0;
    this.emptyOptionListText = "No results found";
    this.focusOnLoad = false;
    this.fullWidth = false;
    this.helperText = "";
    this.hideLabel = false;
    this.hintText = "When autocomplete results are available use the up and down arrows to choose and press enter to select";
    this.label = undefined;
    this.labelField = "label";
    this.loading = false;
    this.loadingErrorLabel = "Loading Error";
    this.loadingLabel = "Loading...";
    this.name = this.inputId;
    this.placeholder = "Search";
    this.readonly = false;
    this.required = false;
    this.searchMode = "navigation";
    this.size = "default";
    this.small = false;
    this.spellcheck = false;
    this.timeout = undefined;
    this.valueField = "value";
    this.filteredOptions = [];
    this.options = [];
    this.value = "";
  }
  loadingHandler(newValue) {
    if (newValue && !this.hasTimedOut) {
      this.preLoad = false;
      this.triggerLoading();
    }
  }
  filteredOptionsHandler(newOptions) {
    this.hasTimedOut = newOptions.some((opt) => opt.timedOut);
  }
  watchOptionsHandler(newOptions) {
    if (this.disableFilter && !this.hasTimedOut) {
      this.loading = false;
      clearTimeout(this.timeoutTimer);
      if (newOptions.length > 0) {
        this.filteredOptions = newOptions;
      }
      else {
        if (this.hadNoOptions()) {
          return;
        }
        this.setMenuChange(true);
        !this.preLoad &&
          (this.filteredOptions = [
            {
              [this.labelField]: this.emptyOptionListText,
              [this.valueField]: "",
            },
          ]);
        this.preLoad = true;
      }
    }
    this.debounceAriaLiveUpdate();
  }
  watchValueHandler(newValue) {
    if (this.inputEl &&
      this.options &&
      !!getLabelFromValue(newValue, this.options, this.valueField, this.labelField)) {
      this.inputEl.value = getLabelFromValue(newValue, this.options, this.valueField, this.labelField);
    }
    else if (this.inputEl && this.inputEl.value !== newValue) {
      this.inputEl.value = newValue;
    }
  }
  disconnectedCallback() {
    if (this.assistiveHintEl) {
      this.assistiveHintEl.remove();
    }
  }
  componentWillLoad() {
    this.watchValueHandler(this.value);
    removeDisabledFalse(this.disabled, this.el);
    if (this.small) {
      this.size = "small";
    }
  }
  componentDidLoad() {
    if (this.focusOnLoad) {
      this.el.setFocus();
    }
    if (this.hasOptionsOrFilterDisabled()) {
      this.renderAssistiveHintEl();
      if (this.disableFilter) {
        this.filteredOptions = this.options;
      }
    }
    onComponentRequiredPropUndefined([{ prop: this.label, propName: "label" }], "Search Bar");
    if (this.inputEl !== undefined) {
      this.anchorEl = this.inputEl.shadowRoot.querySelector("ic-input-component-container");
    }
  }
  componentWillRender() {
    this.highlightFirstOptionAfterNoResults();
  }
  handleKeyDown(ev) {
    const keyEv = ev.detail.event;
    if (this.menu && this.open) {
      this.menu.handleKeyboardOpen(keyEv);
    }
  }
  handleKeyUp(ev) {
    if (ev.key === "Enter") {
      if (this.preventSubmit || this.isSubmitDisabled()) {
        return;
      }
      this.handleSubmitSearch();
      this.setMenuChange(false);
    }
    if (ev.key === "Escape") {
      this.setMenuChange(false);
    }
    if (this.preventSubmit) {
      this.preventSubmit = false;
    }
  }
  /**
   * Sets focus on the native `input`.
   */
  async setFocus() {
    this.retryViaKeyPress = false;
    this.retryButtonClick = false;
    if (this.inputEl) {
      this.inputEl.setFocus();
    }
  }
  debounceAriaLiveUpdate() {
    clearTimeout(this.debounceAriaLive);
    this.debounceAriaLive = window.setTimeout(() => {
      this.updateSearchResultAriaLive();
    }, 500);
  }
  render() {
    const { inputId, name, label, required, small, size, placeholder, helperText, disabled, value, readonly, spellcheck, fullWidth, options, open, hideLabel, menuId, ariaActiveDescendant, truncateValue, autofocus, autocapitalize, autocomplete, filteredOptions, } = this;
    const disabledMode = readonly || disabled ? true : false;
    const describedBy = getInputDescribedByText(inputId, helperText !== "", false).trim();
    let describedById;
    if (describedBy !== "" && this.hasOptionsOrFilterDisabled()) {
      describedById = `${describedBy} ${this.inputId}-assistive-hint`;
    }
    else if (this.hasOptionsOrFilterDisabled()) {
      describedById = `${this.inputId}-assistive-hint`;
    }
    else if (describedBy !== "") {
      describedById = describedBy;
    }
    else {
      describedById = undefined;
    }
    const disabledText = disabledMode && !readonly;
    const hasSuggestedSearch = value && this.hasOptionsOrFilterDisabled();
    const menuOpen = hasSuggestedSearch && open && filteredOptions.length > 0;
    const menuRendered = menuOpen && value.length >= this.charactersUntilSuggestion;
    const isOrHasLoaded = this.filteredOptions.length === 1 &&
      (this.filteredOptions[0][this.labelField] === this.loadingLabel ||
        filteredOptions[0][this.labelField] === this.loadingErrorLabel);
    let expanded;
    if (options.length > 0) {
      if (menuOpen) {
        expanded = "true";
      }
      else {
        expanded = "false";
      }
    }
    else {
      expanded = undefined;
    }
    renderHiddenInput(true, this.el, name, value, disabledMode);
    return (hAsync(Host, { class: {
        ["search"]: true,
        ["fullwidth"]: fullWidth,
        ["disabled"]: disabled,
        ["small"]: size === "small",
      }, onFocus: this.handleHostFocus, onBlur: this.handleHostBlur }, hAsync("ic-text-field", { ref: (el) => (this.inputEl = el), inputId: inputId, label: label, helperText: helperText, required: required, disabled: disabledText, readonly: readonly, size: size, hideLabel: hideLabel, fullWidth: fullWidth, name: name, truncateValue: truncateValue, value: options &&
        !!getLabelFromValue(value, options, this.valueField, this.labelField)
        ? getLabelFromValue(value, options, this.valueField, this.labelField)
        : value, placeholder: placeholder, onInput: this.onInput, onBlur: this.onInputBlur, onFocus: this.onInputFocus, "aria-label": hideLabel ? label : "", "aria-describedby": describedById, "aria-owns": menuRendered ? menuId : undefined, "aria-haspopup": options.length > 0 ? "listbox" : undefined, ariaExpanded: expanded, ariaActiveDescendant: ariaActiveDescendant, "aria-autocomplete": hasSuggestedSearch ? "list" : undefined, role: hasSuggestedSearch ? "combobox" : undefined, autocomplete: autocomplete, autocapitalize: autocapitalize, autoFocus: autofocus, spellcheck: spellcheck, inputmode: "search", debounce: this.debounce }, hAsync("div", { class: {
        "clear-button-container": true,
        "clear-button-visible": value && !disabledMode && this.showClearButton,
      }, slot: "clear-button" }, hAsync("ic-button", { id: "clear-button", class: "clear-button", "aria-label": "Clear", innerHTML: clearIcon, onClick: this.handleClear, onMouseDown: this.handleMouseDown, size: size, onFocus: this.handleFocusClearButton, onBlur: this.handleClearBlur, onKeyDown: this.handleClear, type: "submit", variant: "icon", appearance: this.clearButtonFocused
        ? IcThemeForegroundEnum.Light
        : IcThemeForegroundEnum.Dark }), hAsync("div", { class: "divider" })), hAsync("div", { class: {
        "search-submit-button-container": true,
        "search-submit-button-disabled": this.isSubmitDisabled(),
      }, slot: "search-submit-button" }, hAsync("ic-button", { id: "search-submit-button", "aria-label": "Search", ref: (el) => (this.searchSubmitButton = el), class: {
        ["search-submit-button"]: true,
        ["search-submit-button-small"]: !!small,
      }, disabled: this.isSubmitDisabled(), innerHTML: searchIcon, size: size, onClick: this.handleSubmitSearch, onMouseDown: this.handleMouseDown, onBlur: this.handleSubmitSearchBlur, onFocus: this.handleSubmitSearchFocus, onKeyDown: this.handleSubmitSearchKeyDown, type: "submit", variant: "icon", appearance: this.searchSubmitFocused
        ? IcThemeForegroundEnum.Light
        : IcThemeForegroundEnum.Default })), hAsync("div", { class: {
        "menu-container": true,
        fullwidth: fullWidth,
      }, slot: "menu" }, menuRendered && (hAsync("ic-menu", { class: {
        "no-results": this.hadNoOptions() || isOrHasLoaded,
      }, activationType: "manual", anchorEl: this.anchorEl, autoFocusOnSelected: false, searchMode: this.searchMode, inputEl: this.inputEl, inputLabel: label, ref: (el) => (this.menu = el), small: size === "small", fullWidth: fullWidth, menuId: menuId, open: !!menuRendered, options: filteredOptions, onMenuOptionSelect: this.handleOptionSelect, onMenuStateChange: this.handleMenuChange, onMenuOptionId: this.handleMenuOptionHighlight, onRetryButtonClicked: this.handleRetry, parentEl: this.el, value: value, labelField: this.labelField, valueField: this.valueField })))), hAsync("div", { "aria-live": "polite", role: "status", class: "search-results-status" })));
  }
  static get delegatesFocus() { return true; }
  get el() { return getElement(this); }
  static get watchers() { return {
    "loading": ["loadingHandler"],
    "filteredOptions": ["filteredOptionsHandler"],
    "options": ["watchOptionsHandler"],
    "value": ["watchValueHandler"]
  }; }
  static get style() { return icSearchBarCss; }
  static get cmpMeta() { return {
    "$flags$": 25,
    "$tagName$": "ic-search-bar",
    "$members$": {
      "autocapitalize": [1],
      "autocomplete": [1],
      "autocorrect": [1],
      "autofocus": [4],
      "charactersUntilSuggestion": [2, "characters-until-suggestion"],
      "disabled": [4],
      "disableFilter": [4, "disable-filter"],
      "debounce": [2],
      "emptyOptionListText": [1, "empty-option-list-text"],
      "focusOnLoad": [4, "focus-on-load"],
      "fullWidth": [4, "full-width"],
      "helperText": [1, "helper-text"],
      "hideLabel": [4, "hide-label"],
      "hintText": [1, "hint-text"],
      "label": [1],
      "labelField": [1, "label-field"],
      "loading": [1028],
      "loadingErrorLabel": [1, "loading-error-label"],
      "loadingLabel": [1, "loading-label"],
      "name": [1],
      "placeholder": [1],
      "readonly": [4],
      "required": [4],
      "searchMode": [1, "search-mode"],
      "size": [1],
      "small": [4],
      "spellcheck": [4],
      "timeout": [2],
      "valueField": [1, "value-field"],
      "options": [16],
      "value": [1537],
      "ariaActiveDescendant": [32],
      "clearButtonFocused": [32],
      "highlightedValue": [32],
      "open": [32],
      "searchSubmitFocused": [32],
      "showClearButton": [32],
      "filteredOptions": [32],
      "setFocus": [64]
    },
    "$listeners$": [[0, "icKeydown", "handleKeyDown"], [0, "keyup", "handleKeyUp"]],
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["value", "value"]]
  }; }
}

const icSectionContainerCss = "/*!@html*/html.sc-ic-section-container{line-height:1.15;-webkit-text-size-adjust:100%}/*!@body*/body.sc-ic-section-container{margin:0}/*!@main*/main.sc-ic-section-container{display:block}/*!@h1*/h1.sc-ic-section-container{font-size:2em;margin:0.67em 0}/*!@hr*/hr.sc-ic-section-container{box-sizing:content-box;height:0;overflow:visible}/*!@pre*/pre.sc-ic-section-container{font-family:monospace, monospace;font-size:1em}/*!@a*/a.sc-ic-section-container{background-color:transparent}/*!@abbr[title]*/abbr[title].sc-ic-section-container{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}/*!@b,\nstrong*/b.sc-ic-section-container,strong.sc-ic-section-container{font-weight:bolder}/*!@code,\nkbd,\nsamp*/code.sc-ic-section-container,kbd.sc-ic-section-container,samp.sc-ic-section-container{font-family:monospace, monospace;font-size:1em}/*!@small*/small.sc-ic-section-container{font-size:80%}/*!@sub,\nsup*/sub.sc-ic-section-container,sup.sc-ic-section-container{font-size:75%;line-height:0;position:relative;vertical-align:baseline}/*!@sub*/sub.sc-ic-section-container{bottom:-0.25em}/*!@sup*/sup.sc-ic-section-container{top:-0.5em}/*!@img*/img.sc-ic-section-container{border-style:none}/*!@button,\ninput,\noptgroup,\nselect,\ntextarea*/button.sc-ic-section-container,input.sc-ic-section-container,optgroup.sc-ic-section-container,select.sc-ic-section-container,textarea.sc-ic-section-container{font-family:inherit;font-size:100%;line-height:1.15;margin:0}/*!@button,\ninput*/button.sc-ic-section-container,input.sc-ic-section-container{overflow:visible}/*!@button,\nselect*/button.sc-ic-section-container,select.sc-ic-section-container{text-transform:none}/*!@button,\n[type=\"button\"],\n[type=\"reset\"],\n[type=\"submit\"]*/button.sc-ic-section-container,[type=\"button\"].sc-ic-section-container,[type=\"reset\"].sc-ic-section-container,[type=\"submit\"].sc-ic-section-container{-webkit-appearance:button}/*!@button::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner*/button.sc-ic-section-container::-moz-focus-inner,[type=\"button\"].sc-ic-section-container::-moz-focus-inner,[type=\"reset\"].sc-ic-section-container::-moz-focus-inner,[type=\"submit\"].sc-ic-section-container::-moz-focus-inner{border-style:none;padding:0}/*!@button:-moz-focusring,\n[type=\"button\"]:-moz-focusring,\n[type=\"reset\"]:-moz-focusring,\n[type=\"submit\"]:-moz-focusring*/button.sc-ic-section-container:-moz-focusring,[type=\"button\"].sc-ic-section-container:-moz-focusring,[type=\"reset\"].sc-ic-section-container:-moz-focusring,[type=\"submit\"].sc-ic-section-container:-moz-focusring{outline:1px dotted ButtonText}/*!@fieldset*/fieldset.sc-ic-section-container{padding:0.35em 0.75em 0.625em}/*!@legend*/legend.sc-ic-section-container{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}/*!@progress*/progress.sc-ic-section-container{vertical-align:baseline}/*!@textarea*/textarea.sc-ic-section-container{overflow:auto}/*!@[type=\"checkbox\"],\n[type=\"radio\"]*/[type=\"checkbox\"].sc-ic-section-container,[type=\"radio\"].sc-ic-section-container{box-sizing:border-box;padding:0}/*!@[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button*/[type=\"number\"].sc-ic-section-container::-webkit-inner-spin-button,[type=\"number\"].sc-ic-section-container::-webkit-outer-spin-button{height:auto}/*!@[type=\"search\"]*/[type=\"search\"].sc-ic-section-container{-webkit-appearance:textfield;outline-offset:-2px}/*!@[type=\"search\"]::-webkit-search-decoration*/[type=\"search\"].sc-ic-section-container::-webkit-search-decoration{-webkit-appearance:none}/*!@::-webkit-file-upload-button*/.sc-ic-section-container::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}/*!@details*/details.sc-ic-section-container{display:block}/*!@summary*/summary.sc-ic-section-container{display:list-item}/*!@template*/template.sc-ic-section-container{display:none}/*!@[hidden]*/[hidden].sc-ic-section-container{display:none}/*!@html,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo*/html.sc-ic-section-container,body.sc-ic-section-container,div.sc-ic-section-container,span.sc-ic-section-container,applet.sc-ic-section-container,object.sc-ic-section-container,iframe.sc-ic-section-container,h1.sc-ic-section-container,h2.sc-ic-section-container,h3.sc-ic-section-container,h4.sc-ic-section-container,h5.sc-ic-section-container,h6.sc-ic-section-container,p.sc-ic-section-container,blockquote.sc-ic-section-container,pre.sc-ic-section-container,a.sc-ic-section-container,abbr.sc-ic-section-container,acronym.sc-ic-section-container,address.sc-ic-section-container,big.sc-ic-section-container,cite.sc-ic-section-container,code.sc-ic-section-container,del.sc-ic-section-container,dfn.sc-ic-section-container,em.sc-ic-section-container,img.sc-ic-section-container,ins.sc-ic-section-container,kbd.sc-ic-section-container,q.sc-ic-section-container,s.sc-ic-section-container,samp.sc-ic-section-container,small.sc-ic-section-container,strike.sc-ic-section-container,strong.sc-ic-section-container,sub.sc-ic-section-container,sup.sc-ic-section-container,tt.sc-ic-section-container,var.sc-ic-section-container,b.sc-ic-section-container,u.sc-ic-section-container,i.sc-ic-section-container,center.sc-ic-section-container,dl.sc-ic-section-container,dt.sc-ic-section-container,dd.sc-ic-section-container,ol.sc-ic-section-container,ul.sc-ic-section-container,li.sc-ic-section-container,fieldset.sc-ic-section-container,form.sc-ic-section-container,label.sc-ic-section-container,legend.sc-ic-section-container,table.sc-ic-section-container,caption.sc-ic-section-container,tbody.sc-ic-section-container,tfoot.sc-ic-section-container,thead.sc-ic-section-container,tr.sc-ic-section-container,th.sc-ic-section-container,td.sc-ic-section-container,article.sc-ic-section-container,aside.sc-ic-section-container,canvas.sc-ic-section-container,details.sc-ic-section-container,embed.sc-ic-section-container,figure.sc-ic-section-container,figcaption.sc-ic-section-container,footer.sc-ic-section-container,header.sc-ic-section-container,hgroup.sc-ic-section-container,menu.sc-ic-section-container,nav.sc-ic-section-container,output.sc-ic-section-container,ruby.sc-ic-section-container,section.sc-ic-section-container,summary.sc-ic-section-container,time.sc-ic-section-container,mark.sc-ic-section-container,audio.sc-ic-section-container,video.sc-ic-section-container{margin:0;padding:0;border:0;font-size:100%;font-style:inherit;vertical-align:baseline}@media only screen and (max-width: 576px){/*!@:host*/.sc-ic-section-container-h{--section-container-margin:var(--ic-space-xs);--section-container-max-width:var(--ic-breakpoint-sm)}}@media only screen and (min-width: 577px){/*!@:host*/.sc-ic-section-container-h{--section-container-margin:var(--ic-space-md);--section-container-max-width:var(--ic-breakpoint-md)}}@media only screen and (min-width: 769px){/*!@:host*/.sc-ic-section-container-h{--section-container-margin:var(--ic-space-md);--section-container-max-width:var(--ic-breakpoint-lg)}}@media only screen and (min-width: 993px){/*!@:host*/.sc-ic-section-container-h{--section-container-margin:var(--ic-space-md);--section-container-max-width:var(--ic-breakpoint-xl)}}@media only screen and (min-width: 1201px){/*!@:host*/.sc-ic-section-container-h{--section-container-margin:var(--ic-space-lg);--section-container-max-width:var(--ic-breakpoint-xl)}}/*!@:host*/.sc-ic-section-container-h{display:block;padding-top:var(--ic-space-md);padding-bottom:var(--ic-space-md);box-sizing:border-box}/*!@:host(.aligned-center)*/.aligned-center.sc-ic-section-container-h{max-width:var(--section-container-max-width);margin-left:auto;margin-right:auto;padding-left:var(--section-container-margin);padding-right:var(--section-container-margin)}/*!@:host(.aligned-left)*/.aligned-left.sc-ic-section-container-h{max-width:var(--section-container-max-width);margin-left:var(--section-container-margin);margin-right:auto;padding-right:var(--section-container-margin)}/*!@:host(.aligned-full-width)*/.aligned-full-width.sc-ic-section-container-h{margin-left:var(--section-container-margin);margin-right:var(--section-container-margin)}/*!@:host(.vertical-padding)*/.vertical-padding.sc-ic-section-container-h{padding-top:var(--ic-space-md);padding-bottom:var(--ic-space-md)}/*!@:host(.no-vertical-padding)*/.no-vertical-padding.sc-ic-section-container-h{padding-top:0;padding-bottom:0}";

class SectionContainer {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.aligned = "left";
    this.fullHeight = false;
  }
  render() {
    const { aligned, fullHeight } = this;
    return (hAsync(Host, { class: {
        ["aligned-left"]: aligned === "left",
        ["aligned-center"]: aligned === "center",
        ["aligned-full-width"]: aligned === "full-width",
        ["no-vertical-padding"]: fullHeight,
      } }, hAsync("slot", null)));
  }
  static get style() { return icSectionContainerCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "ic-section-container",
    "$members$": {
      "aligned": [1],
      "fullHeight": [4, "full-height"]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": []
  }; }
}

var Expand = `<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
<path d="M7 9.5L12 14.5L17 9.5H7Z" fill="currentColor" />
</svg>
`;

var Clear = `<svg width="16" height="16" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg">
<path d="M12.6666 4.27334L11.7266 3.33334L7.99998 7.06001L4.27331 3.33334L3.33331 4.27334L7.05998 8.00001L3.33331 11.7267L4.27331 12.6667L7.99998 8.94001L11.7266 12.6667L12.6666 11.7267L8.93998 8.00001L12.6666 4.27334Z" fill="currentColor" />
</svg>
`;

const icSelectCss = "/*!@html*/html.sc-ic-select{line-height:1.15;-webkit-text-size-adjust:100%}/*!@body*/body.sc-ic-select{margin:0}/*!@main*/main.sc-ic-select{display:block}/*!@h1*/h1.sc-ic-select{font-size:2em;margin:0.67em 0}/*!@hr*/hr.sc-ic-select{box-sizing:content-box;height:0;overflow:visible}/*!@pre*/pre.sc-ic-select{font-family:monospace, monospace;font-size:1em}/*!@a*/a.sc-ic-select{background-color:transparent}/*!@abbr[title]*/abbr[title].sc-ic-select{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}/*!@b,\nstrong*/b.sc-ic-select,strong.sc-ic-select{font-weight:bolder}/*!@code,\nkbd,\nsamp*/code.sc-ic-select,kbd.sc-ic-select,samp.sc-ic-select{font-family:monospace, monospace;font-size:1em}/*!@small*/small.sc-ic-select{font-size:80%}/*!@sub,\nsup*/sub.sc-ic-select,sup.sc-ic-select{font-size:75%;line-height:0;position:relative;vertical-align:baseline}/*!@sub*/sub.sc-ic-select{bottom:-0.25em}/*!@sup*/sup.sc-ic-select{top:-0.5em}/*!@img*/img.sc-ic-select{border-style:none}/*!@button,\ninput,\noptgroup,\nselect,\ntextarea*/button.sc-ic-select,input.sc-ic-select,optgroup.sc-ic-select,select.sc-ic-select,textarea.sc-ic-select{font-family:inherit;font-size:100%;line-height:1.15;margin:0}/*!@button,\ninput*/button.sc-ic-select,input.sc-ic-select{overflow:visible}/*!@button,\nselect*/button.sc-ic-select,select.sc-ic-select{text-transform:none}/*!@button,\n[type=\"button\"],\n[type=\"reset\"],\n[type=\"submit\"]*/button.sc-ic-select,[type=\"button\"].sc-ic-select,[type=\"reset\"].sc-ic-select,[type=\"submit\"].sc-ic-select{-webkit-appearance:button}/*!@button::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner*/button.sc-ic-select::-moz-focus-inner,[type=\"button\"].sc-ic-select::-moz-focus-inner,[type=\"reset\"].sc-ic-select::-moz-focus-inner,[type=\"submit\"].sc-ic-select::-moz-focus-inner{border-style:none;padding:0}/*!@button:-moz-focusring,\n[type=\"button\"]:-moz-focusring,\n[type=\"reset\"]:-moz-focusring,\n[type=\"submit\"]:-moz-focusring*/button.sc-ic-select:-moz-focusring,[type=\"button\"].sc-ic-select:-moz-focusring,[type=\"reset\"].sc-ic-select:-moz-focusring,[type=\"submit\"].sc-ic-select:-moz-focusring{outline:1px dotted ButtonText}/*!@fieldset*/fieldset.sc-ic-select{padding:0.35em 0.75em 0.625em}/*!@legend*/legend.sc-ic-select{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}/*!@progress*/progress.sc-ic-select{vertical-align:baseline}/*!@textarea*/textarea.sc-ic-select{overflow:auto}/*!@[type=\"checkbox\"],\n[type=\"radio\"]*/[type=\"checkbox\"].sc-ic-select,[type=\"radio\"].sc-ic-select{box-sizing:border-box;padding:0}/*!@[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button*/[type=\"number\"].sc-ic-select::-webkit-inner-spin-button,[type=\"number\"].sc-ic-select::-webkit-outer-spin-button{height:auto}/*!@[type=\"search\"]*/[type=\"search\"].sc-ic-select{-webkit-appearance:textfield;outline-offset:-2px}/*!@[type=\"search\"]::-webkit-search-decoration*/[type=\"search\"].sc-ic-select::-webkit-search-decoration{-webkit-appearance:none}/*!@::-webkit-file-upload-button*/.sc-ic-select::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}/*!@details*/details.sc-ic-select{display:block}/*!@summary*/summary.sc-ic-select{display:list-item}/*!@template*/template.sc-ic-select{display:none}/*!@[hidden]*/[hidden].sc-ic-select{display:none}/*!@html,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo*/html.sc-ic-select,body.sc-ic-select,div.sc-ic-select,span.sc-ic-select,applet.sc-ic-select,object.sc-ic-select,iframe.sc-ic-select,h1.sc-ic-select,h2.sc-ic-select,h3.sc-ic-select,h4.sc-ic-select,h5.sc-ic-select,h6.sc-ic-select,p.sc-ic-select,blockquote.sc-ic-select,pre.sc-ic-select,a.sc-ic-select,abbr.sc-ic-select,acronym.sc-ic-select,address.sc-ic-select,big.sc-ic-select,cite.sc-ic-select,code.sc-ic-select,del.sc-ic-select,dfn.sc-ic-select,em.sc-ic-select,img.sc-ic-select,ins.sc-ic-select,kbd.sc-ic-select,q.sc-ic-select,s.sc-ic-select,samp.sc-ic-select,small.sc-ic-select,strike.sc-ic-select,strong.sc-ic-select,sub.sc-ic-select,sup.sc-ic-select,tt.sc-ic-select,var.sc-ic-select,b.sc-ic-select,u.sc-ic-select,i.sc-ic-select,center.sc-ic-select,dl.sc-ic-select,dt.sc-ic-select,dd.sc-ic-select,ol.sc-ic-select,ul.sc-ic-select,li.sc-ic-select,fieldset.sc-ic-select,form.sc-ic-select,label.sc-ic-select,legend.sc-ic-select,table.sc-ic-select,caption.sc-ic-select,tbody.sc-ic-select,tfoot.sc-ic-select,thead.sc-ic-select,tr.sc-ic-select,th.sc-ic-select,td.sc-ic-select,article.sc-ic-select,aside.sc-ic-select,canvas.sc-ic-select,details.sc-ic-select,embed.sc-ic-select,figure.sc-ic-select,figcaption.sc-ic-select,footer.sc-ic-select,header.sc-ic-select,hgroup.sc-ic-select,menu.sc-ic-select,nav.sc-ic-select,output.sc-ic-select,ruby.sc-ic-select,section.sc-ic-select,summary.sc-ic-select,time.sc-ic-select,mark.sc-ic-select,audio.sc-ic-select,video.sc-ic-select{margin:0;padding:0;border:0;font-size:100%;font-style:inherit;vertical-align:baseline}/*!@:host*/.sc-ic-select-h{display:block;position:relative}/*!@:host(.full-width)*/.full-width.sc-ic-select-h{width:100%}/*!@ic-input-component-container:hover*/ic-input-component-container.sc-ic-select:hover{--border-color:var(--ic-action-dark-hover)}/*!@ic-input-component-container:active*/ic-input-component-container.sc-ic-select:active{--border-color:var(--ic-action-dark-active);color:var(--ic-action-dark-active)}/*!@ic-input-component-container.menu-open*/ic-input-component-container.menu-open.sc-ic-select{--border-color:var(--ic-architectural-400);color:var(--ic-action-dark)}/*!@ic-input-validation .status-icon,\nic-input-validation .statustext*/ic-input-validation.sc-ic-select .status-icon.sc-ic-select,ic-input-validation.sc-ic-select .statustext.sc-ic-select{visibility:visible}/*!@ic-input-validation.menu-open .status-icon,\nic-input-validation.menu-open .statustext*/ic-input-validation.menu-open.sc-ic-select .status-icon.sc-ic-select,ic-input-validation.menu-open.sc-ic-select .statustext.sc-ic-select{visibility:hidden;transition:visibility 0s}/*!@ic-input-label*/ic-input-label.sc-ic-select{margin-bottom:var(--ic-space-xs) !important}/*!@select*/select.sc-ic-select{border:0;border-radius:var(--ic-border-radius);background-color:var(--ic-architectural-white);color:var(--ic-color-primary-text);line-height:1.5rem;letter-spacing:0.005rem;width:100%;height:100%;padding-left:0.375rem;-webkit-appearance:none;-moz-appearance:none;appearance:none;background-repeat:no-repeat;background-position:right 0.375rem center;background-image:url(\"data:image/svg+xml;utf8,<svg fill='black' height='24' viewBox='0 0 24 24' width='24' xmlns='http://www.w3.org/2000/svg'><path d='M7 10l5 5 5-5z'/><path d='M0 0h24v24H0z' fill='none'/></svg>\")}/*!@select option,\n.select-option-selected*/select.sc-ic-select option.sc-ic-select,.select-option-selected.sc-ic-select{color:var(--ic-color-primary-text)}/*!@select:disabled*/select.sc-ic-select:disabled{color:var(--ic-architectural-200);background-image:url(\"data:image/svg+xml;utf8,<svg fill='grey' height='24' viewBox='0 0 24 24' width='24' xmlns='http://www.w3.org/2000/svg'><path d='M7 10l5 5 5-5z'/><path d='M0 0h24v24H0z' fill='none'/></svg>\")}/*!@select:focus*/select.sc-ic-select:focus{border:0;outline:0}/*!@select:not([disabled])*/select.sc-ic-select:not([disabled]){cursor:pointer}/*!@.select-container*/.select-container.sc-ic-select{width:100%;display:flex;align-items:center;position:relative}/*!@.select-input*/.select-input.sc-ic-select{width:100%;height:100%;padding:0 0.375rem;display:flex;cursor:pointer;align-items:center;justify-content:space-between;background:none;border:none}/*!@.select-input:focus*/.select-input.sc-ic-select:focus{outline:var(--ic-hc-focus-outline)}/*!@:host(:not(.disabled)) ic-input-component-container:hover .select-input*/.sc-ic-select-h:not(.disabled) ic-input-component-container.sc-ic-select:hover .select-input.sc-ic-select{background-color:var(--ic-architectural-white)}/*!@.select-input[disabled]*/.select-input[disabled].sc-ic-select{pointer-events:none}/*!@:host(.searchable) .select-input*/.searchable.sc-ic-select-h .select-input.sc-ic-select{cursor:auto}/*!@.searchable-select-container*/.searchable-select-container.sc-ic-select{align-items:center;display:flex;width:100%;position:relative}/*!@.expand-icon*/.expand-icon.sc-ic-select{height:var(--ic-space-lg);padding-left:var(--ic-space-xs);color:var(--ic-action-dark)}/*!@.expand-icon > svg*/.expand-icon.sc-ic-select>svg.sc-ic-select{display:inline-block;width:var(--ic-space-lg);height:var(--ic-space-lg)}/*!@:host(.disabled) .expand-icon,\n:host(.disabled) .expand-icon > svg > path*/.disabled.sc-ic-select-h .expand-icon.sc-ic-select,.disabled.sc-ic-select-h .expand-icon.sc-ic-select>svg.sc-ic-select>path.sc-ic-select{color:var(--ic-architectural-200)}/*!@:host(.searchable) .expand-icon*/.searchable.sc-ic-select-h .expand-icon.sc-ic-select{padding-left:var(--ic-space-xxs);height:2.25rem}/*!@:host(.searchable) .expand-icon > svg*/.searchable.sc-ic-select-h .expand-icon.sc-ic-select>svg.sc-ic-select{height:2.25rem;padding:0 0.375rem}/*!@:host(.searchable:not(.disabled)) .expand-icon > svg*/.searchable.sc-ic-select-h:not(.disabled) .expand-icon.sc-ic-select>svg.sc-ic-select{cursor:pointer}/*!@.expand-icon-open*/.expand-icon-open.sc-ic-select{color:var(--ic-action-dark)}/*!@.expand-icon-filled*/.expand-icon-filled.sc-ic-select{color:var(--ic-action-dark)}/*!@.expand-icon-open,\n:host(.searchable) .expand-icon-open*/.expand-icon-open.sc-ic-select,.searchable.sc-ic-select-h .expand-icon-open.sc-ic-select{transform:rotateX(180deg)}/*!@:host(.disabled) .value-text,\n.placeholder*/.disabled.sc-ic-select-h .value-text.sc-ic-select,.placeholder.sc-ic-select{color:var(--ic-color-tertiary-text)}/*!@.select-input-end*/.select-input-end.sc-ic-select{display:flex;align-items:center}/*!@.clear-button-container*/.clear-button-container.sc-ic-select{display:flex;gap:var(--ic-space-xxs);padding-left:2.375rem}/*!@:host(.small) .clear-button-container*/.small.sc-ic-select-h .clear-button-container.sc-ic-select{padding-left:1.875rem}/*!@.divider*/.divider.sc-ic-select{width:var(--ic-border-width);background-color:var(--ic-architectural-400);margin:var(--ic-space-xxs) 0;border-radius:var(--ic-space-1px);height:var(--ic-space-lg)}/*!@:host(.small) .divider*/.small.sc-ic-select-h .divider.sc-ic-select{height:var(--ic-space-md)}/*!@.clear-button*/.clear-button.sc-ic-select{position:absolute;right:2.75rem;border-radius:var(--ic-border-radius);transition:box-shadow var(--ic-easing-transition),\n    border-radius var(--ic-easing-transition)}/*!@.clear-button:focus*/.clear-button.sc-ic-select:focus{background-color:var(--ic-focus-blue);box-shadow:inset 0 0 0 0.125rem var(--ic-focus-glow);border-radius:0.25rem}/*!@.clear-button:focus **/.clear-button.sc-ic-select:focus *.sc-ic-select{fill:white}/*!@.searchable-select-results-status*/.searchable-select-results-status.sc-ic-select{border:0;clip:rect(0, 0, 0, 0, 0);height:var(--ic-space-1px);overflow:hidden;padding:0;position:absolute;white-space:nowrap;width:var(--ic-space-1px)}";

let inputIds$2 = 0;
// eslint-disable-next-line @typescript-eslint/no-unused-vars
class Select {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.icBlur = createEvent(this, "icBlur", 7);
    this.icChange = createEvent(this, "icChange", 7);
    this.icClear = createEvent(this, "icClear", 7);
    this.icFocus = createEvent(this, "icFocus", 7);
    this.icInput = createEvent(this, "icInput", 7);
    this.icOptionSelect = createEvent(this, "icOptionSelect", 7);
    this.icRetryLoad = createEvent(this, "icRetryLoad", 7);
    this.hasSetDefaultValue = false;
    this.inheritedAttributes = {};
    this.initialOptionsEmpty = false;
    this.inputId = `ic-select-input-${inputIds$2++}`;
    this.menuId = `${this.inputId}-menu`;
    this.searchableMenuItemSelected = false;
    this.ungroupedOptions = [];
    this.handleRetry = (ev) => {
      var _a;
      if (ev.detail.keyPressed)
        (_a = this.searchableSelectElement) === null || _a === void 0 ? void 0 : _a.focus();
      this.blurredBecauseButtonPressed = true;
      this.retryButtonClick = true;
      this.hasSetDefaultValue = true;
      this.icRetryLoad.emit({ value: this.hiddenInputValue });
    };
    this.emitIcChange = (value) => {
      if (!this.searchable) {
        this.value = value;
      }
      clearTimeout(this.debounceIcChange);
      this.debounceIcChange = window.setTimeout(() => {
        this.icChange.emit({ value: value });
      }, this.currDebounce);
    };
    this.emitImmediateIcChange = (value) => {
      this.value = value;
      clearTimeout(this.debounceIcChange);
      this.icChange.emit({ value: value });
    };
    /**
     * Processes the provided array of IcMenuOptions, removing duplicates and reporting them with a console.warn
     * @param options array of IcMenuOptions
     * @returns a new options object, with all entries possessing a duplicate 'value' field removed
     */
    this.deduplicateOptions = (options) => {
      const uniqueValues = [];
      const dedupedOptions = [];
      let dedupedChildren;
      options.forEach((option) => {
        if (option.children) {
          //If an option has children, we will loop through them
          dedupedChildren = [];
          option.children.forEach((child) => {
            if (uniqueValues.includes(child.value)) {
              console.warn(`ic-select with label ${this.label} was populated with duplicate option (value: ${child.value}) which has been removed.`);
            }
            else {
              uniqueValues.push(child.value);
              dedupedChildren.push(child);
            }
          });
          // construct a modified option, inserting the deduplicated children alongside the original information
          const modifiedParent = Object.assign(Object.assign({}, option), { children: dedupedChildren });
          dedupedOptions.push(modifiedParent);
        }
        else {
          // If an option does not have children, assess to see if it's value has been included already
          if (uniqueValues.includes(option.value)) {
            console.warn(`ic-select with label ${this.label} was populated with duplicate option (value: ${option.value}) which has been removed.`);
          }
          else {
            uniqueValues.push(option.value);
            dedupedOptions.push(option);
          }
        }
      });
      return dedupedOptions;
    };
    /**
     * Loop through options array and for all options with no value, infer it from the label
     */
    this.setOptionsValuesFromLabels = () => {
      if (this.options.length > 0 && this.options.map) {
        this.options.map((option) => {
          if (!option.value) {
            option.value = option.label;
          }
        });
      }
    };
    this.setUngroupedOptions = (event) => {
      this.ungroupedOptions = event.detail.options;
    };
    this.setTextColor = () => {
      if (this.nativeSelectElement.selectedIndex === 0) {
        this.nativeSelectElement.className = "placeholder";
      }
      else {
        this.nativeSelectElement.className = "select-option-selected";
      }
    };
    this.setMenuChange = (open) => {
      if (this.open !== open) {
        this.open = open;
      }
    };
    this.getLabelFromValue = (value) => {
      return getLabelFromValue(value, this.uniqueOptions);
    };
    this.getFilteredChildMenuOptions = (option) => {
      let children = option.children;
      if (this.searchable) {
        children = getFilteredMenuOptions(option.children, this.includeDescriptionsInSearch, this.searchableSelectInputValue, this.searchMatchPosition);
      }
      else {
        children = getFilteredMenuOptions(option.children, false, this.pressedCharacters, "start");
      }
      const newOption = Object.assign({}, option);
      newOption.children = children;
      return newOption;
    };
    this.handleNativeSelectChange = () => {
      this.icOptionSelect.emit({ value: this.nativeSelectElement.value });
      this.emitImmediateIcChange(this.nativeSelectElement.value);
      this.setTextColor();
    };
    this.handleCustomSelectChange = (event) => {
      if (this.searchable && event.detail.label === this.emptyOptionListText) {
        this.searchableSelectElement.focus();
        return;
      }
      if (this.searchable) {
        this.value = event.detail.value;
        this.searchableMenuItemSelected = true;
        // After editing the input, if selecting the same option as before, set the input value to label again
        if (this.value === this.currValue) {
          this.searchableSelectInputValue = this.getLabelFromValue(this.value);
        }
        this.inputValueToFilter = null;
        this.hiddenInputValue = this.getValueFromLabel(this.searchableSelectInputValue);
      }
      this.ariaActiveDescendant = event.detail.optionId;
      this.icOptionSelect.emit({ value: event.detail.value });
      this.emitIcChange(event.detail.value);
    };
    this.handleMenuChange = (event) => {
      this.open = event.detail.open;
      this.pressedCharacters = "";
      this.searchable && this.handleFocusIndicatorDisplay();
    };
    // clears the debounce delay when navigating the menu with arrow keys etc
    // to prevent delay in change event, which should only occur when typing in input
    this.handleMenuKeyPress = (ev) => {
      ev.cancelBubble = true;
      this.handleCharacterKeyDown(ev.detail.key);
    };
    this.handleMenuValueChange = (ev) => {
      this.value = ev.detail.value;
    };
    this.handleFocusIndicatorDisplay = () => {
      const focusIndicator = this.el.shadowRoot.querySelector(".focus-indicator");
      if (this.open) {
        focusIndicator.classList.add("focus-indicator-enabled");
      }
      else {
        focusIndicator.classList.remove("focus-indicator-enabled");
      }
    };
    this.handleMouseDown = (event) => {
      if (!this.open) {
        event.preventDefault();
      }
    };
    this.isExternalFiltering = () => this.searchable && this.disableFilter;
    this.handleClick = (event) => {
      var _a;
      if (!this.open) {
        if (this.isExternalFiltering()) {
          this.menu.options = this.filteredOptions;
        }
        else if (!this.hasTimedOut &&
          !this.loading &&
          !((_a = this.noOptions) === null || _a === void 0 ? void 0 : _a.length) &&
          (!this.searchable || this.searchableMenuItemSelected)) {
          this.noOptions = null;
          this.menu.options = this.uniqueOptions;
        }
      }
      if (event.detail !== 0) {
        this.menu.handleClickOpen();
      }
    };
    this.handleExpandIconMouseDown = (event) => {
      if (!this.disabled) {
        event.preventDefault();
        this.searchableSelectElement.focus();
        this.handleClick(event);
      }
    };
    this.handleClear = (event) => {
      event.stopPropagation();
      this.hasTimedOut = false;
      clearTimeout(this.timeoutTimer);
      this.noOptions = null;
      this.emitImmediateIcChange(null);
      this.icClear.emit();
      if (this.searchable) {
        this.searchableSelectElement.value = null;
        this.searchableSelectInputValue = null;
        this.filteredOptions = this.uniqueOptions;
        this.hiddenInputValue = null;
        this.searchableSelectElement.focus();
      }
      else {
        this.customSelectElement.focus();
      }
    };
    this.handleCharacterKeyDown = (key) => {
      // Only close menu when space is pressed if not being used alongside character keys to quickly select options
      if (this.open &&
        key === " " &&
        this.pressedCharacters.length === 0 &&
        !this.hasTimedOut &&
        !this.loading) {
        this.setMenuChange(false);
      }
      if (key.length === 1 && !this.searchable) {
        window.clearTimeout(this.characterKeyPressTimer);
        this.characterKeyPressTimer = window.setTimeout(() => (this.pressedCharacters = ""), 1000);
        this.pressedCharacters += key;
        this.handleFilter();
        if (!this.noOptions) {
          this.emitImmediateIcChange(this.filteredOptions[0].value);
        }
      }
      else {
        this.pressedCharacters = "";
      }
    };
    this.handleNativeSelectKeyDown = (event) => {
      if ((event.key !== "Escape" && event.key !== "Tab") || this.open) {
        event.cancelBubble = true;
      }
      this.handleCharacterKeyDown(event.key);
    };
    this.handleKeyDown = (event) => {
      if ((event.key !== "Escape" && event.key !== "Tab") || this.open) {
        event.cancelBubble = true;
      }
      const isArrowKey = event.key === "ArrowDown" || event.key === "ArrowUp";
      if (!this.open) {
        if (this.isExternalFiltering() && (event.key === "Enter" || isArrowKey)) {
          this.menu.options = this.filteredOptions;
        }
        else {
          if (!this.hasTimedOut) {
            this.noOptions = null;
            this.menu.options = this.uniqueOptions;
          }
        }
      }
      if (this.open && event.key === "Enter") {
        this.setMenuChange(false);
      }
      else {
        if (!(isArrowKey && this.noOptions !== null)) {
          if (!(event.key === " " && this.pressedCharacters.length > 0)) {
            // Keyboard events get passed onto ic-menu
            this.menu.handleKeyboardOpen(event);
          }
          this.handleCharacterKeyDown(event.key);
        }
      }
    };
    this.handleClearButtonFocus = () => {
      this.clearButtonFocused = true;
    };
    this.handleClearButtonBlur = (ev) => {
      var _a;
      const retryButton = (_a = this.menu) === null || _a === void 0 ? void 0 : _a.querySelector("#retry-button");
      if (!(this.searchableSelectElement &&
        ev.relatedTarget === this.searchableSelectElement) &&
        !(retryButton && ev.relatedTarget === retryButton)) {
        this.setMenuChange(false);
        this.handleFocusIndicatorDisplay();
      }
      this.clearButtonFocused = false;
    };
    this.handleFilter = () => {
      var _a;
      const options = this.deduplicateOptions(this.searchable ? [...this.uniqueOptions] : this.ungroupedOptions);
      let isGrouped = false;
      let newFilteredOptions = [];
      options.map((option) => {
        if (option.children)
          isGrouped = true;
      });
      let menuOptionsFiltered;
      if (this.searchable) {
        menuOptionsFiltered = getFilteredMenuOptions(options, this.includeDescriptionsInSearch, this.inputValueToFilter, this.searchMatchPosition);
        this.searchableMenuItemSelected = false;
      }
      else {
        menuOptionsFiltered = getFilteredMenuOptions(options, false, this.pressedCharacters, "start");
      }
      if (!isGrouped &&
        ((_a = menuOptionsFiltered[0]) === null || _a === void 0 ? void 0 : _a.label) !== this.emptyOptionListText) {
        newFilteredOptions = menuOptionsFiltered;
      }
      else if (isGrouped) {
        options.map((option) => {
          if (this.includeGroupTitlesInSearch) {
            if (menuOptionsFiltered.indexOf(option) !== -1) {
              newFilteredOptions.push(option);
            }
            else {
              newFilteredOptions.push(this.getFilteredChildMenuOptions(option));
            }
          }
          else {
            newFilteredOptions.push(this.getFilteredChildMenuOptions(option));
          }
        });
      }
      let noChildOptionsWhenFiltered = false;
      if (isGrouped) {
        noChildOptionsWhenFiltered = true;
        newFilteredOptions.map((option) => {
          if (option.children.length > 0) {
            noChildOptionsWhenFiltered = false;
          }
        });
      }
      if (newFilteredOptions.length > 0 && !noChildOptionsWhenFiltered) {
        this.noOptions = null;
        this.filteredOptions = newFilteredOptions;
      }
      else {
        this.noOptions = [{ label: this.emptyOptionListText, value: "" }];
        this.filteredOptions = this.noOptions;
      }
    };
    /**
     * Put the select component into loading state.
     * Replace options with the loading message. If timeout is enabled, set the timeout and once passed, replace options with the loading error message
     */
    this.triggerLoading = () => {
      this.hasTimedOut = false;
      this.noOptions = [{ label: this.loadingLabel, value: "", loading: true }];
      if (this.filteredOptions !== this.noOptions && this.searchable) {
        this.filteredOptions = this.noOptions;
      }
      else if (this.uniqueOptions !== this.noOptions && !this.searchable) {
        this.uniqueOptions = this.noOptions;
      }
      if (this.timeout) {
        this.timeoutTimer = window.setTimeout(() => {
          this.loading = false;
          this.hasTimedOut = true;
          this.noOptions = [
            { label: this.loadingErrorLabel, value: "", timedOut: true },
          ];
          this.filteredOptions = this.noOptions;
          if (!this.searchable)
            this.uniqueOptions = this.noOptions;
        }, this.timeout);
      }
    };
    this.getValueFromLabel = (label) => {
      var _a;
      return (_a = this.uniqueOptions.find((option) => option.label === label)) === null || _a === void 0 ? void 0 : _a.value;
    };
    this.handleSearchableSelectInput = (event) => {
      this.searchableSelectInputValue = event.target.value;
      this.icInput.emit({ value: this.searchableSelectInputValue });
      this.emitIcChange(this.searchableSelectInputValue);
      this.hiddenInputValue = this.searchableSelectInputValue;
      this.inputValueToFilter = this.searchableSelectInputValue;
      this.setMenuChange(true);
      if (!this.disableFilter) {
        this.handleFilter();
        this.debounceAriaLiveUpdate();
      }
    };
    this.updateSearchableSelectResultAriaLive = () => {
      const searchableSelectResultsStatusEl = this.el.shadowRoot.querySelector(".searchable-select-results-status");
      if (searchableSelectResultsStatusEl) {
        if (this.noOptions !== null) {
          searchableSelectResultsStatusEl.innerText = this.emptyOptionListText;
        }
        else {
          searchableSelectResultsStatusEl.innerText = "";
        }
      }
    };
    this.getDefaultValue = (value) => this.getLabelFromValue(value) || value || null;
    this.onFocus = () => {
      this.icFocus.emit();
    };
    this.onBlur = (event) => {
      var _a;
      const target = event.relatedTarget;
      if (target !== null &&
        target.tagName === "UL" &&
        target.className.includes("menu")) {
        return;
      }
      const retryButton = (_a = this.menu) === null || _a === void 0 ? void 0 : _a.querySelector("#retry-button");
      const isSearchableAndNoFocusedInternalElements = this.searchable &&
        event.relatedTarget !== this.menu &&
        !Array.from(this.menu.querySelectorAll("[role='option']")).includes(event.relatedTarget) &&
        !(this.clearButton && event.relatedTarget === this.clearButton) &&
        !(retryButton && event.relatedTarget === retryButton);
      if (isSearchableAndNoFocusedInternalElements) {
        if (!this.retryButtonClick) {
          this.setMenuChange(false);
        }
        this.handleFocusIndicatorDisplay();
      }
      this.retryButtonClick = false;
      this.icBlur.emit();
    };
    this.onTimeoutBlur = (ev) => {
      if (ev.detail.ev.relatedTarget !==
        this.searchableSelectElement &&
        !this.blurredBecauseButtonPressed) {
        this.setMenuChange(false);
        this.handleFocusIndicatorDisplay();
        this.icBlur.emit();
      }
      this.blurredBecauseButtonPressed = false;
    };
    this.handleFormReset = () => {
      this.value = this.initialValue;
      if (this.searchable) {
        this.searchableSelectInputValue = this.getDefaultValue(this.value);
        this.hiddenInputValue = this.value;
      }
    };
    this.ariaActiveDescendant = undefined;
    this.clearButtonFocused = false;
    this.debounceIcChange = undefined;
    this.hiddenInputValue = undefined;
    this.noOptions = null;
    this.open = false;
    this.pressedCharacters = "";
    this.searchableSelectInputValue = null;
    this.charactersUntilSuggestions = 0;
    this.disabled = false;
    this.disableFilter = false;
    this.emptyOptionListText = "No results found";
    this.form = undefined;
    this.formaction = undefined;
    this.formenctype = undefined;
    this.formmethod = undefined;
    this.formnovalidate = undefined;
    this.formtarget = undefined;
    this.fullWidth = false;
    this.helperText = "";
    this.hideLabel = false;
    this.includeDescriptionsInSearch = false;
    this.includeGroupTitlesInSearch = false;
    this.label = undefined;
    this.loadingErrorLabel = "Loading Error";
    this.loadingLabel = "Loading...";
    this.name = this.inputId;
    this.placeholder = "Select an option";
    this.readonly = false;
    this.required = false;
    this.searchable = false;
    this.searchMatchPosition = "anywhere";
    this.selectOnEnter = false;
    this.showClearButton = false;
    this.size = "default";
    this.small = false;
    this.timeout = undefined;
    this.validationStatus = "";
    this.validationText = "";
    this.loading = false;
    this.options = [];
    this.filteredOptions = this.options;
    this.uniqueOptions = this.options;
    this.debounce = 0;
    this.currDebounce = this.debounce;
    this.value = undefined;
    this.initialValue = this.value;
    this.inputValueToFilter = this.value;
    this.currValue = this.value;
  }
  loadingHandler(newValue) {
    newValue && this.triggerLoading();
  }
  watchOptionsHandler() {
    if (!this.hasTimedOut) {
      this.loading = false;
      clearTimeout(this.timeoutTimer);
      if (this.isExternalFiltering()) {
        if (this.options.length > 0) {
          this.setOptionsValuesFromLabels();
          this.noOptions = null;
          this.uniqueOptions = this.deduplicateOptions(this.options);
          this.filteredOptions = this.uniqueOptions;
        }
        else {
          this.noOptions = [{ label: this.emptyOptionListText, value: "" }];
          this.uniqueOptions = this.noOptions;
          this.filteredOptions = this.noOptions;
        }
        this.updateSearchableSelectResultAriaLive();
        this.setDefaultValue();
      }
      else {
        this.setOptionsValuesFromLabels();
        this.uniqueOptions = this.deduplicateOptions(this.options);
        this.filteredOptions = this.uniqueOptions;
        if (this.initialOptionsEmpty) {
          this.setDefaultValue();
          this.initialOptionsEmpty = false;
        }
      }
    }
    else {
      if (!this.searchable)
        this.options = this.noOptions;
    }
  }
  debounceChangedHandler(newValue) {
    this.updateOnChangeDebounce(newValue);
  }
  valueChangedHandler() {
    if (this.value !== this.currValue) {
      this.currValue = this.value;
    }
    if (this.searchable) {
      this.searchableSelectInputValue =
        this.getLabelFromValue(this.currValue) || this.currValue;
    }
  }
  disconnectedCallback() {
    removeFormResetListener(this.el, this.handleFormReset);
  }
  componentWillLoad() {
    this.inheritedAttributes = inheritAttributes(this.el, [
      ...IC_INHERITED_ARIA,
      "tabindex",
      "title",
    ]);
    removeDisabledFalse(this.disabled, this.el);
    this.setOptionsValuesFromLabels();
    addFormResetListener(this.el, this.handleFormReset);
    if (!this.options.length) {
      this.initialOptionsEmpty = true;
      this.noOptions = [{ label: this.emptyOptionListText, value: "" }];
      this.uniqueOptions = this.noOptions;
      this.filteredOptions = this.noOptions;
    }
    else {
      this.setDefaultValue();
      this.uniqueOptions = this.deduplicateOptions(this.options);
    }
  }
  componentDidLoad() {
    onComponentRequiredPropUndefined([{ prop: this.label, propName: "label" }], "Select");
    if (this.loading) {
      this.triggerLoading();
    }
    this.hiddenInputValue = this.searchable && this.currValue;
  }
  componentDidRender() {
    if (this.nativeSelectElement && !this.disabled) {
      this.setTextColor();
    }
  }
  /**
   * Sets focus on the input box.
   */
  async setFocus() {
    if (this.nativeSelectElement) {
      this.nativeSelectElement.focus();
    }
    else if (this.customSelectElement) {
      this.customSelectElement.focus();
    }
    else if (this.searchableSelectElement) {
      this.searchableSelectElement.focus();
    }
  }
  updateOnChangeDebounce(newValue) {
    if (this.currDebounce !== newValue) {
      this.currDebounce = newValue;
    }
  }
  debounceAriaLiveUpdate() {
    clearTimeout(this.debounceAria);
    window.setTimeout(() => {
      this.updateSearchableSelectResultAriaLive();
    }, 800);
  }
  setDefaultValue() {
    if (!this.hasSetDefaultValue && this.currValue) {
      this.searchableSelectInputValue = this.getDefaultValue(this.currValue);
      this.initialValue = this.currValue;
      this.hasSetDefaultValue = true;
    }
  }
  render() {
    const { small, size, disabled, fullWidth, helperText, hideLabel, label, menuId, name, options, placeholder, readonly, required, searchable, showClearButton, validationStatus, validationText, currValue, } = this;
    renderHiddenInput(true, this.el, name, this.searchable ? this.hiddenInputValue : currValue, disabled);
    const invalid = validationStatus === IcInformationStatus.Error ? "true" : "false";
    const describedBy = getInputDescribedByText(this.inputId, helperText !== "", hasValidationStatus(this.validationStatus, this.disabled)).trim();
    return (hAsync(Host, { class: {
        disabled: disabled,
        searchable: searchable,
        small: small || size === "small",
        "full-width": fullWidth,
      }, onBlur: this.onBlur }, hAsync("ic-input-container", { readonly: readonly }, !hideLabel && (hAsync("ic-input-label", { for: this.inputId, label: label, helperText: helperText, required: required, disabled: disabled, readonly: readonly })), hAsync("ic-input-component-container", { ref: (el) => (this.anchorEl = el), class: { "menu-open": this.open }, small: small || size === "small", fullWidth: fullWidth, disabled: disabled, readonly: readonly, validationStatus: validationStatus }, readonly ? (hAsync("ic-typography", null, hAsync("p", null, this.getLabelFromValue(currValue)))) : isMobileOrTablet() ? (hAsync("select", Object.assign({ ref: (el) => (this.nativeSelectElement = el), disabled: disabled, onChange: this.handleNativeSelectChange, required: required, id: this.inputId, "aria-label": label, "aria-describedby": describedBy, "aria-invalid": invalid, onBlur: this.onBlur, onFocus: this.onFocus, onKeyDown: this.handleNativeSelectKeyDown, form: this.form }, this.inheritedAttributes), hAsync("option", { value: "", selected: true, disabled: !showClearButton }, placeholder), options.map((option) => {
      if (option.children) {
        return (hAsync("optgroup", { label: option.label }, option.children.map((option) => (hAsync("option", { value: option.value, disabled: option.disabled, selected: option.value === currValue }, option.label)))));
      }
      else {
        return (hAsync("option", { value: option.value, disabled: option.disabled, selected: option.value === currValue }, option.label));
      }
    }))) : searchable ? (hAsync("div", { class: "searchable-select-container" }, hAsync("input", { class: "select-input", role: "combobox", autocomplete: "off", "aria-label": label, "aria-describedby": describedBy, "aria-activedescendant": this.ariaActiveDescendant, "aria-autocomplete": "list", "aria-expanded": this.open ? "true" : "false", "aria-invalid": invalid, "aria-required": required ? "true" : "false", "aria-controls": menuId, ref: (el) => (this.searchableSelectElement = el), id: this.inputId, value: this.searchableSelectInputValue, placeholder: placeholder, disabled: disabled, onInput: this.handleSearchableSelectInput, onClick: this.handleClick, onKeyDown: this.handleKeyDown, onFocus: this.onFocus, onBlur: this.onBlur, form: this.form, formaction: this.formaction, formenctype: this.formenctype, formmethod: this.formmethod, formnovalidate: this.formnovalidate, formtarget: this.formtarget }), this.searchableSelectInputValue &&
      (showClearButton || searchable) && (hAsync("div", { class: "clear-button-container" }, hAsync("ic-button", { id: "clear-button", ref: (el) => (this.clearButton = el), "aria-label": this.searchableSelectInputValue && currValue === null
        ? "Clear input"
        : "Clear selection", class: "clear-button", innerHTML: Clear, onClick: this.handleClear, onFocus: this.handleClearButtonFocus, onBlur: this.handleClearButtonBlur, size: size, variant: "icon", appearance: this.clearButtonFocused
        ? IcThemeForegroundEnum.Light
        : IcThemeForegroundEnum.Dark }), hAsync("div", { class: "divider" }))), hAsync("span", { onMouseDown: this.handleExpandIconMouseDown, class: {
        "expand-icon": true,
        "expand-icon-open": this.open,
        "expand-icon-filled": !(currValue == null || currValue === ""),
      }, innerHTML: Expand, "aria-hidden": "true" }), hAsync("div", { "aria-live": "polite", role: "status", class: "searchable-select-results-status" }))) : (hAsync("div", { class: "select-container" }, hAsync("button", { class: "select-input", ref: (el) => (this.customSelectElement = el), id: this.inputId, "aria-label": `${label}, ${this.getLabelFromValue(currValue) || placeholder}${required ? ", required" : ""}`, "aria-describedby": describedBy, "aria-invalid": invalid, "aria-haspopup": "listbox", "aria-expanded": this.open ? "true" : "false", "aria-owns": menuId, "aria-controls": menuId, disabled: disabled, onBlur: this.onBlur, onFocus: this.onFocus, onClick: this.handleClick, onMouseDown: this.handleMouseDown, onKeyDown: this.handleKeyDown }, hAsync("ic-typography", { variant: "body", class: {
        "value-text": true,
        placeholder: this.getLabelFromValue(currValue) === undefined,
      } }, hAsync("p", null, this.getLabelFromValue(currValue) || placeholder)), hAsync("div", { class: "select-input-end" }, currValue && showClearButton && (hAsync("div", { class: "divider" })), hAsync("span", { class: {
        "expand-icon": true,
        "expand-icon-open": this.open,
        "expand-icon-filled": !(currValue == null || currValue === ""),
      }, innerHTML: Expand, "aria-hidden": "true" }))), currValue && showClearButton && (hAsync("ic-button", { id: "clear-button", "aria-label": "Clear selection", class: "clear-button", innerHTML: Clear, onClick: this.handleClear, onFocus: this.handleClearButtonFocus, onBlur: this.handleClearButtonBlur, size: size, variant: "icon", appearance: this.clearButtonFocused
        ? IcThemeForegroundEnum.Light
        : IcThemeForegroundEnum.Dark }))))), !isMobileOrTablet() && (hAsync("ic-menu", { class: {
        "no-results": this.loading ||
          this.hasTimedOut ||
          (this.noOptions !== null &&
            this.noOptions[0] &&
            this.noOptions[0].label === this.emptyOptionListText),
      }, ref: (el) => (this.menu = el), inputEl: searchable
        ? this.searchableSelectElement
        : this.customSelectElement, inputLabel: label, anchorEl: this.anchorEl, small: small || size === "small", menuId: menuId, open: this.open, options: searchable ? this.filteredOptions : this.uniqueOptions, value: currValue, fullWidth: fullWidth, selectOnEnter: this.selectOnEnter, onMenuStateChange: this.handleMenuChange, onMenuOptionSelect: this.handleCustomSelectChange, onMenuKeyPress: this.handleMenuKeyPress, onMenuValueChange: this.handleMenuValueChange, onUngroupedOptionsSet: this.setUngroupedOptions, onRetryButtonClicked: this.handleRetry, parentEl: this.el, onTimeoutBlur: this.onTimeoutBlur, activationType: this.searchable || this.selectOnEnter ? "manual" : "automatic" })), hasValidationStatus(this.validationStatus, this.disabled) && (hAsync("ic-input-validation", { class: { "menu-open": this.open }, ariaLiveMode: "polite", status: validationStatus, message: validationText, for: this.inputId })))));
  }
  static get delegatesFocus() { return true; }
  get el() { return getElement(this); }
  static get watchers() { return {
    "loading": ["loadingHandler"],
    "options": ["watchOptionsHandler"],
    "debounce": ["debounceChangedHandler"],
    "value": ["valueChangedHandler"]
  }; }
  static get style() { return icSelectCss; }
  static get cmpMeta() { return {
    "$flags$": 25,
    "$tagName$": "ic-select",
    "$members$": {
      "charactersUntilSuggestions": [2, "characters-until-suggestions"],
      "disabled": [516],
      "disableFilter": [4, "disable-filter"],
      "emptyOptionListText": [1, "empty-option-list-text"],
      "form": [1],
      "formaction": [1],
      "formenctype": [1],
      "formmethod": [1],
      "formnovalidate": [4],
      "formtarget": [1],
      "fullWidth": [4, "full-width"],
      "helperText": [1, "helper-text"],
      "hideLabel": [4, "hide-label"],
      "includeDescriptionsInSearch": [4, "include-descriptions-in-search"],
      "includeGroupTitlesInSearch": [4, "include-group-titles-in-search"],
      "label": [1],
      "loadingErrorLabel": [1, "loading-error-label"],
      "loadingLabel": [1, "loading-label"],
      "name": [1],
      "placeholder": [1],
      "readonly": [4],
      "required": [4],
      "searchable": [4],
      "searchMatchPosition": [1, "search-match-position"],
      "selectOnEnter": [4, "select-on-enter"],
      "showClearButton": [4, "show-clear-button"],
      "size": [1],
      "small": [4],
      "timeout": [2],
      "validationStatus": [1, "validation-status"],
      "validationText": [1, "validation-text"],
      "loading": [1028],
      "options": [16],
      "debounce": [2],
      "value": [1025],
      "ariaActiveDescendant": [32],
      "clearButtonFocused": [32],
      "debounceIcChange": [32],
      "hiddenInputValue": [32],
      "noOptions": [32],
      "open": [32],
      "pressedCharacters": [32],
      "searchableSelectInputValue": [32],
      "filteredOptions": [32],
      "uniqueOptions": [32],
      "currDebounce": [32],
      "initialValue": [32],
      "inputValueToFilter": [32],
      "currValue": [32],
      "setFocus": [64]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["disabled", "disabled"]]
  }; }
}

var menuIcon = `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
  <path d="M0 0h24v24H0V0z" fill="none" />
  <path d="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z" />
  <title>menu icon</title>
</svg>
`;

const icSideNavigationCss = "/*!@:host*/.sc-ic-side-navigation-h{display:block;--side-navigation-position:fixed;--side-navigation-position-left:0;--side-navigation-position-top:var(--ic-space-xxl);--side-navigation-height:var(--ic-space-xxl);--sm-side-navigation-top-bar-height:3.5rem;--sm-side-navigation-collapsed-labels-width:6rem;--sm-side-navigation-expand-transition-duration:var(\n    --ic-transition-duration-slow\n  );--side-navigation-width:20rem;--sm-side-navigation-bottom-bar-height:3.5rem;z-index:var(--ic-z-index-side-navigation)}/*!@:host > **/.sc-ic-side-navigation-h>*.sc-ic-side-navigation{box-sizing:border-box}/*!@.side-navigation*/.side-navigation.sc-ic-side-navigation{display:flex;flex-direction:column;width:var(--side-navigation-width);color:var(--ic-theme-text);position:var(--side-navigation-position);top:var(--side-navigation-position-top);left:calc(var(--side-navigation-width) * -1);bottom:0;background-color:var(--ic-theme-primary);z-index:var(--ic-z-index-side-navigation)}/*!@:host(.inline) .side-navigation*/.inline.sc-ic-side-navigation-h .side-navigation.sc-ic-side-navigation{position:absolute;height:100%}/*!@:host(.anchor-right) .side-navigation*/.anchor-right.sc-ic-side-navigation-h .side-navigation.sc-ic-side-navigation{right:calc(var(--side-navigation-width) * -1)}/*!@.classification-spacing*/.classification-spacing.sc-ic-side-navigation{margin-bottom:var(--ic-space-lg)}/*!@.navigation-list*/.navigation-list.sc-ic-side-navigation{padding:0;margin:0;list-style:none}/*!@.side-navigation-inner*/.side-navigation-inner.sc-ic-side-navigation{background-color:var(--ic-theme-primary);display:flex;flex-direction:column;flex:1 1 0;overflow:auto}/*!@:host(.inline) .side-navigation-inner*/.inline.sc-ic-side-navigation-h .side-navigation-inner.sc-ic-side-navigation{flex:1}/*!@:host(.xs-menu-open) .side-navigation*/.xs-menu-open.sc-ic-side-navigation-h .side-navigation.sc-ic-side-navigation{transition:left var(--ic-easing-transition-slow);left:0}/*!@:host(:has(.xs-menu-open, .xs-menu-close)) ::slotted(ic-navigation-item)*/.sc-ic-side-navigation-h:has(.xs-menu-open .sc-ic-side-navigation-s>ic-navigation-item,.sc-ic-side-navigation-h.xs-menu-close) .sc-ic-side-navigation-s>ic-navigation-item{--navigation-item-side-nav-right:var(--ic-space-xl)}/*!@:host(.xs-menu-close) .side-navigation*/.xs-menu-close.sc-ic-side-navigation-h .side-navigation.sc-ic-side-navigation{left:calc(var(--side-navigation-width) * -1);transition:left var(--ic-easing-transition-slow)}/*!@:host(.xs-menu-close) .side-navigation > **/.xs-menu-close.sc-ic-side-navigation-h .side-navigation.sc-ic-side-navigation>*.sc-ic-side-navigation{visibility:hidden}/*!@:host(.anchor-right.xs-menu-open) .side-navigation*/.anchor-right.xs-menu-open.sc-ic-side-navigation-h .side-navigation.sc-ic-side-navigation{right:0;left:auto}/*!@:host(.anchor-right.xs-menu-close) .side-navigation*/.anchor-right.xs-menu-close.sc-ic-side-navigation-h .side-navigation.sc-ic-side-navigation{right:calc(var(--side-navigation-width) * -1);left:auto;transition:right var(--ic-easing-transition-slow)}/*!@.bottom-wrapper*/.bottom-wrapper.sc-ic-side-navigation{border-top:var(--ic-keyline-lighten);bottom:0;left:0;z-index:2;box-shadow:-0.188rem -0.188rem 0.5rem rgb(0 0 0 / 20%);background-color:var(--ic-theme-primary);display:flex;flex-direction:column}/*!@:host(.inline) .bottom-wrapper*/.inline.sc-ic-side-navigation-h .bottom-wrapper.sc-ic-side-navigation{position:sticky}/*!@:host(.dark) .bottom-wrapper*/.dark.sc-ic-side-navigation-h .bottom-wrapper.sc-ic-side-navigation{border-top:var(--ic-keyline-darken)}/*!@.top-bar*/.top-bar.sc-ic-side-navigation{display:flex;flex-direction:row;align-items:center;min-height:var(--side-navigation-height);padding:var(--ic-space-xs);box-sizing:border-box;background-color:var(--ic-theme-primary);position:fixed;top:0;left:0;right:0;border-bottom:var(--ic-keyline-darken);box-shadow:var(--ic-elevation-overlay);z-index:2;overflow:hidden;visibility:visible}/*!@:host(.inline) .top-bar*/.inline.sc-ic-side-navigation-h .top-bar.sc-ic-side-navigation{position:absolute}/*!@.top-bar.dark a:focus*/.top-bar.dark.sc-ic-side-navigation a.sc-ic-side-navigation:focus{box-shadow:var(--ic-border-focus)}/*!@.top-bar.light*/.top-bar.light.sc-ic-side-navigation{border-bottom:var(--ic-keyline-lighten)}/*!@.app-title-wrapper*/.app-title-wrapper.sc-ic-side-navigation{display:flex;margin-left:var(--ic-space-xs);border-left:var(--ic-keyline-darken);padding-left:var(--ic-space-xxs);color:var(--ic-theme-text);align-items:center}/*!@.app-title-wrapper ic-typography h1*/.app-title-wrapper.sc-ic-side-navigation ic-typography.sc-ic-side-navigation h1.sc-ic-side-navigation{margin:0}@media screen and (min-width: 340px){/*!@.app-title-wrapper ic-typography*/.app-title-wrapper.sc-ic-side-navigation ic-typography.sc-ic-side-navigation{margin-left:var(--ic-space-xs)}}/*!@:host .title-link*/.sc-ic-side-navigation-h .title-link.sc-ic-side-navigation{display:flex;align-items:center;transition:box-shadow var(--ic-easing-transition-fast),\n    background-color var(--ic-easing-transition-fast);text-decoration:none;padding:var(--ic-space-xxs);color:var(--ic-theme-text)}/*!@:host .title-link:visited,\n:host .title-link:active*/.sc-ic-side-navigation-h .title-link.sc-ic-side-navigation:visited,.sc-ic-side-navigation-h .title-link.sc-ic-side-navigation:active{color:var(--ic-theme-text)}/*!@slot[name=\"app-title\"]::slotted(a),\nslot[name=\"app-icon\"]::slotted(a)*/slot[name=\"app-title\"].sc-ic-side-navigation-s>a,slot[name=\"app-icon\"].sc-ic-side-navigation-s>a{color:var(--ic-theme-text);outline:none;text-decoration:none;display:flex}/*!@slot[name=\"app-title\"]::slotted(ic-typography),\nslot[name=\"app-title\"]::slotted(a)*/slot[name=\"app-title\"].sc-ic-side-navigation-s>ic-typography,slot[name=\"app-title\"].sc-ic-side-navigation-s>a{margin-left:var(--ic-space-xs) !important}/*!@slot[name=\"app-title\"]::slotted(a)*/slot[name=\"app-title\"].sc-ic-side-navigation-s>a{font:var(--ic-font-subtitle-small)}@media screen and (min-width: 577px){/*!@:host(.sm-collapsed) slot[name=\"app-title\"]::slotted(ic-typography),\n  :host(.sm-collapsed) slot[name=\"app-title\"]::slotted(a)*/.sc-ic-side-navigation-h.sm-collapsed slot[name=\"app-title\"].sc-ic-side-navigation-s>ic-typography,.sc-ic-side-navigation-h.sm-collapsed slot[name=\"app-title\"].sc-ic-side-navigation-s>a{position:absolute;left:-9999px;opacity:0;transition:opacity var(--ic-easing-transition-slow)}/*!@:host(.sm-expanded) slot[name=\"app-title\"]::slotted(a)*/.sc-ic-side-navigation-h.sm-expanded slot[name=\"app-title\"].sc-ic-side-navigation-s>a{font:var(--ic-font-h3) !important;font-weight:var(--ic-font-weight-semibold) !important;margin-left:var(--ic-space-xs) !important}}/*!@:host .title-link:hover*/.sc-ic-side-navigation-h .title-link.sc-ic-side-navigation:hover{border-radius:var(--ic-border-radius);background-color:var(--ic-theme-hover)}/*!@:host .title-link:active*/.sc-ic-side-navigation-h .title-link.sc-ic-side-navigation:active{background-color:var(--ic-theme-active)}/*!@:host .title-link:focus,\n:host .title-link:focus-within*/.sc-ic-side-navigation-h .title-link.sc-ic-side-navigation:focus,.sc-ic-side-navigation-h .title-link.sc-ic-side-navigation:focus-within{border-radius:var(--ic-border-radius);box-shadow:var(--ic-border-focus);outline:var(--ic-hc-focus-outline);background-color:transparent}/*!@:host .title-link ic-typography*/.sc-ic-side-navigation-h .title-link.sc-ic-side-navigation ic-typography.sc-ic-side-navigation{display:-webkit-box;-webkit-line-clamp:2;-webkit-box-orient:vertical;overflow:hidden}/*!@.app-title-wrapper ::slotted(svg)*/.app-title-wrapper .sc-ic-side-navigation-s>svg{fill:var(--ic-theme-text)}/*!@.app-icon-container*/.app-icon-container.sc-ic-side-navigation{display:none}/*!@.button-label*/.button-label.sc-ic-side-navigation{display:flex;align-items:center}/*!@.mobile-top-bar-menu-icon*/.mobile-top-bar-menu-icon.sc-ic-side-navigation{display:flex}/*!@.menu-button*/.menu-button.sc-ic-side-navigation{width:6.5rem}/*!@.app-status-wrapper*/.app-status-wrapper.sc-ic-side-navigation{inset:0 var(--ic-space-sm) 0 3.5rem;width:auto;display:flex;gap:var(--ic-space-xs);padding:var(--ic-space-sm) 0;justify-content:flex-end;align-items:flex-end;pointer-events:none;height:-moz-fit-content;height:fit-content;margin:0 var(--ic-space-xs)}/*!@.app-status-wrapper .app-version*/.app-status-wrapper.sc-ic-side-navigation .app-version.sc-ic-side-navigation{display:flex;overflow-wrap:break-word;padding-bottom:var(--ic-space-xxs)}/*!@.app-status-wrapper .app-status*/.app-status-wrapper.sc-ic-side-navigation .app-status.sc-ic-side-navigation{display:flex;border-radius:1rem;background-color:var(--ic-theme-text);color:var(--ic-color-primary-text);padding:var(--ic-space-xxs) var(--ic-space-lg);min-width:1rem}/*!@.app-status-wrapper .app-status-text*/.app-status-wrapper.sc-ic-side-navigation .app-status-text.sc-ic-side-navigation{overflow-wrap:break-word}/*!@:host(.dark) .app-status-wrapper .app-status*/.dark.sc-ic-side-navigation-h .app-status-wrapper.sc-ic-side-navigation .app-status.sc-ic-side-navigation{color:var(--ic-color-white-text)}/*!@.navigation-landmark-title*/.navigation-landmark-title.sc-ic-side-navigation{position:absolute;width:var(--ic-space-1px);height:var(--ic-space-1px);padding:0;margin:calc(-1 * var(--ic-space-1px));overflow:hidden}/*!@::slotted(ic-navigation-group)*/.sc-ic-side-navigation-s>ic-navigation-group{--navigation-group-height:2.75rem;--navigation-group-width:100%;--navigation-group-justify-content:space-between;--navigation-group-hover:var(--ic-theme-hover);--navigation-group-text-hover:var(--ic-theme-text);--navigation-item-child-height:3.5rem;--navigation-item-child-active:var(--ic-action-dark-bg-active);--navigation-item-child-color:var(--ic-theme-text);--navigation-group-expand-toggle-padding:0.25rem}/*!@::slotted(ic-navigation-item),\n::slotted(ic-navigation-group)*/.sc-ic-side-navigation-s>ic-navigation-item,.sc-ic-side-navigation-s>ic-navigation-group{--navigation-item-justify-content:flex-start;--navigation-item-min-height:56px;--navigation-item-height:100%}/*!@.bottom-side-nav*/.bottom-side-nav.sc-ic-side-navigation{position:relative;align-content:flex-end;min-height:var(--sm-side-navigation-top-bar-height)}/*!@.bottom-side-nav ic-divider*/.bottom-side-nav.sc-ic-side-navigation ic-divider.sc-ic-side-navigation{position:absolute;top:0;width:100%}/*!@.primary-navigation*/.primary-navigation.sc-ic-side-navigation{flex:1;display:flex;flex-direction:column;overflow-y:auto;scrollbar-width:none}/*!@.primary-navigation::-webkit-scrollbar*/.primary-navigation.sc-ic-side-navigation::-webkit-scrollbar{display:none}/*!@.primary-navigation,\n.secondary-navigation*/.primary-navigation.sc-ic-side-navigation,.secondary-navigation.sc-ic-side-navigation{overflow-x:hidden}/*!@.bottom-side-nav .menu-expand-button*/.bottom-side-nav.sc-ic-side-navigation .menu-expand-button.sc-ic-side-navigation{position:absolute;display:none}/*!@.menu-visibility-visible*/.menu-visibility-visible.sc-ic-side-navigation{visibility:visible;width:100%}/*!@.app-title-show*/.app-title-show.sc-ic-side-navigation{min-width:15.5rem}/*!@:host(.side-display)*/.side-display.sc-ic-side-navigation-h{display:flex;flex-direction:column;height:100vh;position:var(--side-navigation-position);left:0;top:0;bottom:0}/*!@:host(.side-display) .app-icon-container*/.side-display.sc-ic-side-navigation-h .app-icon-container.sc-ic-side-navigation{height:40px;display:flex;align-items:center}/*!@:host(.side-display) .top-bar*/.side-display.sc-ic-side-navigation-h .top-bar.sc-ic-side-navigation{--side-navigation-height:var(--sm-side-navigation-top-bar-height);position:relative;padding:0;box-shadow:-0.188rem 0.188rem 0.5rem rgb(0 0 0 / 20%)}/*!@:host(.inline.side-display) .top-bar*/.inline.side-display.sc-ic-side-navigation-h .top-bar.sc-ic-side-navigation{position:sticky}/*!@:host(.anchor-right.side-display) .top-bar*/.anchor-right.side-display.sc-ic-side-navigation-h .top-bar.sc-ic-side-navigation{box-shadow:0.188rem 0.188rem 0.5rem rgb(0 0 0 / 20%)}/*!@:host(.anchor-right.side-display) .bottom-wrapper*/.anchor-right.side-display.sc-ic-side-navigation-h .bottom-wrapper.sc-ic-side-navigation{box-shadow:0.188rem -0.188rem 0.5rem rgb(0 0 0 / 20%)}/*!@:host(.side-display) .side-navigation,\n:host(.side-display) .top-bar*/.side-display.sc-ic-side-navigation-h .side-navigation.sc-ic-side-navigation,.side-display.sc-ic-side-navigation-h .top-bar.sc-ic-side-navigation{width:var(--sm-side-navigation-top-bar-height)}/*!@:host(.sm-collapsed.side-display)*/.sm-collapsed.side-display.sc-ic-side-navigation-h{width:var(--sm-side-navigation-top-bar-height);transition:width var(--ic-easing-transition-slow)}/*!@:host(.sm-collapsed.collapsed-labels.side-display)*/.sm-collapsed.collapsed-labels.side-display.sc-ic-side-navigation-h{width:var(--sm-side-navigation-collapsed-labels-width)}/*!@:host(.sm-expanded.side-display)*/.sm-expanded.side-display.sc-ic-side-navigation-h{width:var(--side-navigation-width);transition:width var(--ic-easing-transition-slow);box-shadow:var(--ic-elevation-overlay)}/*!@:host(.side-display) .side-navigation*/.side-display.sc-ic-side-navigation-h .side-navigation.sc-ic-side-navigation{--side-navigation-position-top:0;flex:1;position:relative;top:auto;left:auto;bottom:auto}/*!@:host(.inline.side-display) .side-navigation*/.inline.side-display.sc-ic-side-navigation-h .side-navigation.sc-ic-side-navigation{position:relative}/*!@:host(.anchor-right.side-display) .side-navigation*/.anchor-right.side-display.sc-ic-side-navigation-h .side-navigation.sc-ic-side-navigation{left:auto;right:0}/*!@:host(.side-display) .app-title-wrapper*/.side-display.sc-ic-side-navigation-h .app-title-wrapper.sc-ic-side-navigation{margin-left:0;border-left:none;padding:var(--ic-space-xs) var(--ic-space-sm)}/*!@:host(.side-display) .app-title-wrapper ::slotted(svg)*/.sc-ic-side-navigation-h.side-display .app-title-wrapper .sc-ic-side-navigation-s>svg{height:var(--ic-space-lg);width:var(--ic-space-lg)}/*!@:host(.side-display) .app-title-wrapper ic-typography*/.side-display.sc-ic-side-navigation-h .app-title-wrapper.sc-ic-side-navigation ic-typography.sc-ic-side-navigation{font-weight:var(--ic-font-weight-semibold)}/*!@:host(.sm-collapsed.side-display) .app-title-wrapper ic-typography*/.sm-collapsed.side-display.sc-ic-side-navigation-h .app-title-wrapper.sc-ic-side-navigation ic-typography.sc-ic-side-navigation{position:absolute;left:-9999px;opacity:0;transition:opacity var(--ic-easing-transition-slow)}/*!@:host(.sm-expanded.side-display) ic-typography*/.sm-expanded.side-display.sc-ic-side-navigation-h ic-typography.sc-ic-side-navigation{position:relative;left:0}/*!@:host(.sm-expanded.side-display) :is(.side-navigation, .top-bar)*/.sm-expanded.side-display.sc-ic-side-navigation-h .sc-ic-side-navigation:is(.side-navigation,.top-bar).sc-ic-side-navigation{width:var(--side-navigation-width);transition:width var(--ic-easing-transition-slow)}/*!@:host(.sm-collapsed.side-display) :is(.side-navigation, .top-bar)*/.sm-collapsed.side-display.sc-ic-side-navigation-h .sc-ic-side-navigation:is(.side-navigation,.top-bar).sc-ic-side-navigation{width:var(--sm-side-navigation-top-bar-height);transition:width var(--ic-easing-transition-slow)}/*!@:host(.anchor-right.sm-expanded.side-display) :is(.side-navigation, .top-bar)*/.anchor-right.sm-expanded.side-display.sc-ic-side-navigation-h .sc-ic-side-navigation:is(.side-navigation,.top-bar).sc-ic-side-navigation{left:auto;right:0}/*!@:host(.side-display) .app-status-wrapper,\n:host(.sm-collapsed.side-display) .app-status-wrapper*/.side-display.sc-ic-side-navigation-h .app-status-wrapper.sc-ic-side-navigation,.sm-collapsed.side-display.sc-ic-side-navigation-h .app-status-wrapper.sc-ic-side-navigation{display:none;margin-left:0}/*!@:host(.sm-expanded.side-display) .app-status-wrapper*/.sm-expanded.side-display.sc-ic-side-navigation-h .app-status-wrapper.sc-ic-side-navigation{display:flex;max-width:16rem;margin-right:calc(var(--ic-space-xxxs) + var(--ic-space-xs))}/*!@:host(.side-display) .bottom-side-nav*/.side-display.sc-ic-side-navigation-h .bottom-side-nav.sc-ic-side-navigation{justify-items:flex-end;align-items:flex-end;justify-content:flex-end;display:flex;outline:none}/*!@:host(.side-display) .bottom-side-nav .menu-expand-button*/.side-display.sc-ic-side-navigation-h .bottom-side-nav.sc-ic-side-navigation .menu-expand-button.sc-ic-side-navigation{padding-left:var(--ic-space-md);height:var(--sm-side-navigation-top-bar-height);width:100%;color:var(--ic-theme-text);background-color:transparent;outline:var(--ic-hc-focus-outline);border:none;cursor:pointer;display:flex;transition:var(--ic-easing-transition-fast)}/*!@:host(.sm-expanded.side-display) .bottom-side-nav .menu-expand-button*/.sm-expanded.side-display.sc-ic-side-navigation-h .bottom-side-nav.sc-ic-side-navigation .menu-expand-button.sc-ic-side-navigation{height:100%}/*!@:host(.side-display) .bottom-side-nav .menu-expand-button svg*/.side-display.sc-ic-side-navigation-h .bottom-side-nav.sc-ic-side-navigation .menu-expand-button.sc-ic-side-navigation svg.sc-ic-side-navigation{justify-items:flex-start;align-self:center;display:inline-block;width:var(--ic-space-lg);height:var(--ic-space-lg)}/*!@:host(.side-display) .bottom-side-nav .menu-expand-button:hover*/.side-display.sc-ic-side-navigation-h .bottom-side-nav.sc-ic-side-navigation .menu-expand-button.sc-ic-side-navigation:hover{background-color:var(--ic-theme-hover)}/*!@:host(.side-display) .bottom-side-nav .menu-expand-button:focus*/.side-display.sc-ic-side-navigation-h .bottom-side-nav.sc-ic-side-navigation .menu-expand-button.sc-ic-side-navigation:focus{box-shadow:var(--ic-border-focus-inset);border-radius:var(--ic-border-radius-inset);background-color:transparent}/*!@:host(.sm-collapsed.side-display) .bottom-side-nav .menu-expand-button svg*/.sm-collapsed.side-display.sc-ic-side-navigation-h .bottom-side-nav.sc-ic-side-navigation .menu-expand-button.sc-ic-side-navigation svg.sc-ic-side-navigation{transform:scaleX(1);transition:transform var(--ic-easing-transition-slow)}/*!@:host(.sm-expanded.side-display) .bottom-side-nav .menu-expand-button svg*/.sm-expanded.side-display.sc-ic-side-navigation-h .bottom-side-nav.sc-ic-side-navigation .menu-expand-button.sc-ic-side-navigation svg.sc-ic-side-navigation{transform:scaleX(-1);transition:transform var(--ic-easing-transition-slow);align-self:flex-end;margin-bottom:0.875rem}/*!@:host(.anchor-right.sm-collapsed.side-display)\n  .bottom-side-nav\n  .menu-expand-button\n  svg*/.anchor-right.sm-collapsed.side-display.sc-ic-side-navigation-h .bottom-side-nav.sc-ic-side-navigation .menu-expand-button.sc-ic-side-navigation svg.sc-ic-side-navigation{transform:scaleX(-1)}/*!@:host(.anchor-right.sm-expanded.side-display)\n  .bottom-side-nav\n  .menu-expand-button\n  svg*/.anchor-right.sm-expanded.side-display.sc-ic-side-navigation-h .bottom-side-nav.sc-ic-side-navigation .menu-expand-button.sc-ic-side-navigation svg.sc-ic-side-navigation{transform:scaleX(1)}/*!@:host(.sm-collapsed.side-display) ::slotted(ic-navigation-item)*/.sc-ic-side-navigation-h.sm-collapsed.side-display .sc-ic-side-navigation-s>ic-navigation-item{--navigation-item-label-opacity:1}/*!@:host(.sm-collapsed.side-display) ::slotted(ic-navigation-item),\n:host(.sm-collapsed.side-display) ::slotted(ic-navigation-group)*/.sc-ic-side-navigation-h.sm-collapsed.side-display .sc-ic-side-navigation-s>ic-navigation-item,.sc-ic-side-navigation-h.sm-collapsed.side-display .sc-ic-side-navigation-s>ic-navigation-group{--navigation-item-label-opacity:0;--navigation-item-min-height:56px;--navigation-item-height:56px}/*!@:host(.sm-expanded.side-display) ::slotted(ic-navigation-item),\n:host(.sm-expanded.side-display) ::slotted(ic-navigation-group)*/.sc-ic-side-navigation-h.sm-expanded.side-display .sc-ic-side-navigation-s>ic-navigation-item,.sc-ic-side-navigation-h.sm-expanded.side-display .sc-ic-side-navigation-s>ic-navigation-group{--navigation-item-label-opacity:1;--navigation-item-height:100%;--navigation-item-min-height:56px;--navigation-item-width:320px;--navigation-item-side-nav-right:var(--ic-space-xl)}/*!@:host(.sm-collapsed.side-display) ::slotted(ic-navigation-group)*/.sc-ic-side-navigation-h.sm-collapsed.side-display .sc-ic-side-navigation-s>ic-navigation-group{--navigation-group-title-position:absolute;--navigation-group-title-position-left:-9999px;--navigation-group-title-opacity:none}/*!@:host(.sm-expanded.side-display) ::slotted(ic-navigation-group)*/.sc-ic-side-navigation-h.sm-expanded.side-display .sc-ic-side-navigation-s>ic-navigation-group{--navigation-group-title-position:relative;--navigation-group-title-position-left:0;--navigation-group-expand-toggle-padding:0.25rem;--navigation-group-title-opacity:flex}/*!@:host(.sm-collapsed.collapsed-labels.side-display) .side-navigation,\n:host(.sm-collapsed.collapsed-labels.side-display) .top-bar*/.sm-collapsed.collapsed-labels.side-display.sc-ic-side-navigation-h .side-navigation.sc-ic-side-navigation,.sm-collapsed.collapsed-labels.side-display.sc-ic-side-navigation-h .top-bar.sc-ic-side-navigation{width:var(--sm-side-navigation-collapsed-labels-width)}/*!@:host(.sm-collapsed.collapsed-labels.side-display) .menu-expand-button*/.sm-collapsed.collapsed-labels.side-display.sc-ic-side-navigation-h .menu-expand-button.sc-ic-side-navigation{padding:0}/*!@:host(.sm-collapsed.collapsed-labels.side-display) .app-title-wrapper*/.sm-collapsed.collapsed-labels.side-display.sc-ic-side-navigation-h .app-title-wrapper.sc-ic-side-navigation{width:100%;justify-content:center}/*!@:host(.sm-collapsed.collapsed-labels.side-display)\n  ::slotted(ic-navigation-group)*/.sc-ic-side-navigation-h.sm-collapsed.collapsed-labels.side-display .sc-ic-side-navigation-s>ic-navigation-group{--navigation-group-justify-content:center;--navigation-item-label-opacity:1;--navigation-group-item-min-width:100%;--navigation-group-expand-toggle-padding:1rem}/*!@:host(.collapsed-labels.side-display) .bottom-side-nav .menu-expand-button*/.collapsed-labels.side-display.sc-ic-side-navigation-h .bottom-side-nav.sc-ic-side-navigation .menu-expand-button.sc-ic-side-navigation{justify-content:center}/*!@:host(.side-display) .collapsed-icon-labels-start*/.side-display.sc-ic-side-navigation-h .collapsed-icon-labels-start.sc-ic-side-navigation{visibility:hidden;opacity:0}/*!@:host(.side-display) .collapsed-icon-labels-end*/.side-display.sc-ic-side-navigation-h .collapsed-icon-labels-end.sc-ic-side-navigation{visibility:visible;opacity:1;transition:visibility 0s, opacity var(--ic-easing-transition-slow)}@media screen and (min-width: 340px){/*!@.app-icon-container*/.app-icon-container.sc-ic-side-navigation{display:flex}}@media screen and (min-width: 993px){/*!@:host(.side-display)*/.side-display.sc-ic-side-navigation-h{position:sticky;left:auto;top:0;bottom:0}/*!@:host(.sm-expanded.side-display)*/.sm-expanded.side-display.sc-ic-side-navigation-h{box-shadow:none}}@media (forced-colors: active){/*!@.side-navigation,\n  .top-bar*/.side-navigation.sc-ic-side-navigation,.top-bar.sc-ic-side-navigation{border-right:var(--ic-hc-border)}/*!@slot[name=\"app-icon\"]::slotted(svg)*/slot[name=\"app-icon\"].sc-ic-side-navigation-s>svg{fill:currentcolor}}";

/**
 * @slot app-icon - Content will be rendered adjacent to the app title at the very top of the side navigation.
 * @slot app-title - Handle routing by nesting a route in the app title.
 * @slot primary-navigation - Content will be rendered at the top of the side navigation.
 * @slot secondary-navigation - Content will be rendered at the bottom of the side navigation.
 */
class SideNavigation {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.ANIMATION_DURATION = parseInt(getCssProperty$1("--ic-transition-duration-slow")) || 0;
    this.IC_NAVIGATION_ITEM = "ic-navigation-item";
    this.resizeObserver = null;
    this.COLLAPSED_ICON_LABELS_END = "collapsed-icon-labels-end";
    this.COLLAPSED_ICON_LABELS_START = "collapsed-icon-labels-start";
    this.menuButton = null;
    this.emitSideNavigationExpanded = (objDetails) => {
      const event = new CustomEvent("sideNavExpanded", {
        detail: {
          sideNavExpanded: objDetails.sideNavExpanded,
          sideNavMobile: objDetails.sideNavMobile,
        },
      });
      this.el.dispatchEvent(event);
    };
    this.toggleMenu = () => {
      this.menuOpen = !this.menuOpen;
      this.setMobileMenuAriaAttributes(this.menuOpen);
      this.arrangeSlottedNavigationItem(this.menuOpen);
      this.setToggleMenuFlyoutMenuVisibility(this.menuOpen);
      this.emitSideNavigationExpanded({
        sideNavExpanded: this.menuOpen,
        sideNavMobile: true,
      });
    };
    this.setToggleMenuFlyoutMenuVisibility = (menuOpen) => {
      const sideNav = this.el.shadowRoot.querySelector("#side-navigation");
      const sideNavInner = sideNav.querySelector(".side-navigation-inner");
      const bottomWrapper = sideNav.querySelector(".bottom-wrapper");
      const menuVisibilityVisible = "menu-visibility-visible";
      if (menuOpen) {
        bottomWrapper.classList.add(menuVisibilityVisible);
        sideNavInner.classList.add(menuVisibilityVisible);
      }
      else {
        setTimeout(() => {
          sideNavInner.classList.remove(menuVisibilityVisible);
          bottomWrapper.classList.remove(menuVisibilityVisible);
        }, this.ANIMATION_DURATION);
      }
    };
    this.setMobileMenuAriaAttributes = (menuOpen) => {
      if (this.menuButton !== null) {
        if (menuOpen) {
          this.menuButton.setAttribute("aria-expanded", "true");
          this.menuButton.setAttribute("aria-label", "Close navigation menu");
        }
        else {
          this.menuButton.setAttribute("aria-expanded", "false");
          this.menuButton.setAttribute("aria-label", "Open navigation menu");
        }
      }
    };
    this.setAndRemoveNoWrapAfterMenuExpanded = () => {
      const appTitle = this.el.shadowRoot.querySelector(".title-link ic-typography") ||
        this.el.querySelector("[slot='app-title']");
      appTitle.classList.add("ic-typography-no-wrap");
      setTimeout(() => {
        appTitle.classList.remove("ic-typography-no-wrap");
      }, this.ANIMATION_DURATION);
    };
    this.toggleMenuExpanded = () => {
      this.menuExpanded = !this.menuExpanded;
      if (this.menuExpanded) {
        this.setAndRemoveNoWrapAfterMenuExpanded();
        this.el.shadowRoot
          .querySelector(".app-title-inner-wrapper")
          .classList.add("app-title-show");
      }
      else {
        this.el.style.setProperty("--navigation-item-width", "320px");
        this.el.shadowRoot
          .querySelector(".app-title-inner-wrapper")
          .classList.remove("app-title-show");
        this.el.addEventListener("transitionend", (e) => {
          if (e.propertyName === "width") {
            this.el.style.setProperty("--navigation-item-width", null);
          }
        });
      }
      this.arrangeSlottedNavigationItem(this.menuExpanded);
      this.displayTooltipWithExpandedLongLabel(this.menuExpanded);
      if (this.collapsedIconLabels) {
        this.animateCollapsedIconLabels();
      }
      this.setExpandedButtonHeight();
      this.emitSideNavigationExpanded({ sideNavExpanded: this.menuExpanded });
    };
    /**
     * In order to style nested slotted elements (e.g. using React Router components), this method
     * rearranges the a tag and labels and adds inline styling expand/collaped animations as external CSS classes are not
     * do not take affect.
     * @param menuExpanded boolean - true or false depending on side navigation state
     */
    this.arrangeSlottedNavigationItem = (menuExpanded) => {
      const navItems = this.el.querySelectorAll("ic-navigation-item");
      navItems.forEach((navItem) => {
        const isNamedSlot = isSlotUsed$1(navItem, "navigation-item");
        const isUnnamedSlot = navItem.children[0] && !navItem.children[0].getAttribute("slot");
        if (isNamedSlot || isUnnamedSlot) {
          let navItemSlot;
          if (isNamedSlot) {
            navItemSlot = navItem.querySelector("[slot='navigation-item']");
          }
          else {
            navItemSlot = navItem.children[0];
          }
          const iconWrapper = document.createElement("div");
          const icon = navItemSlot.querySelector("svg");
          const label = navItem.textContent.trim();
          const icTypography = document.createElement("ic-typography");
          icTypography.classList.add("ic-typography-label", "hydrated", "navigation-item-side-nav-slotted-text");
          iconWrapper.style.height = "var(--ic-space-lg)";
          iconWrapper.append(icon);
          navItemSlot.textContent = "";
          icTypography.textContent = label;
          navItemSlot.append(iconWrapper);
          navItemSlot.append(icTypography);
          if (this.collapsedIconLabels) {
            this.styleSlottedCollapsedIconLabels(menuExpanded, icTypography);
          }
          else {
            this.styleSlottedIconLabels(menuExpanded, icTypography);
          }
        }
      });
    };
    this.styleSlottedCollapsedIconLabels = (menuExpanded, icTypography) => {
      if (menuExpanded) {
        icTypography.style.marginTop = "0";
        icTypography.style.whiteSpace = "nowrap";
        icTypography.style.overflow = "hidden";
        icTypography.style.textOverflow = "ellipsis";
      }
      else {
        icTypography.style.marginTop = "10px";
        icTypography.style.whiteSpace = "nowrap";
        icTypography.style.overflow = "hidden";
        icTypography.style.textOverflow = "ellipsis";
      }
    };
    this.setExpandedButtonHeight = () => {
      const appStatusWrapper = this.el.shadowRoot.querySelector("#side-navigation > .bottom-wrapper > .bottom-side-nav > .app-status-wrapper");
      if (appStatusWrapper.offsetHeight !== 0) {
        this.el.style.setProperty("--sm-side-navigation-bottom-bar-height", `${appStatusWrapper.offsetHeight}px`);
      }
    };
    this.styleSlottedIconLabels = (menuExpanded, icTypography) => {
      if (menuExpanded) {
        icTypography.style.opacity = "1";
        icTypography.style.visibility = "visible";
        icTypography.style.transition =
          "visibility 0s, opacity var(--ic-easing-transition-slow)";
      }
      else {
        icTypography.style.opacity = "0";
        icTypography.style.visibility = "hidden";
        icTypography.style.transition =
          "visibility 0s, opacity var(--ic-easing-transition-slow)";
      }
    };
    this.transitionHandler = (type) => {
      const primaryNavigationWrapper = this.el.shadowRoot.querySelector(".primary-navigation");
      const secondaryNavigationWrapper = this.el.shadowRoot.querySelector(".bottom-wrapper > .secondary-navigation");
      const classToRemove = type === "start"
        ? this.COLLAPSED_ICON_LABELS_END
        : this.COLLAPSED_ICON_LABELS_START;
      const classToAdd = type === "start"
        ? this.COLLAPSED_ICON_LABELS_START
        : this.COLLAPSED_ICON_LABELS_END;
      if (primaryNavigationWrapper) {
        primaryNavigationWrapper.classList.remove(classToRemove);
        primaryNavigationWrapper.classList.add(classToAdd);
      }
      if (secondaryNavigationWrapper) {
        secondaryNavigationWrapper.classList.remove(classToRemove);
        secondaryNavigationWrapper.classList.add(classToAdd);
      }
    };
    this.transitionEndHandler = () => {
      this.transitionHandler("end");
    };
    this.animateCollapsedIconLabels = () => {
      this.transitionHandler("start");
      this.transitionEndHandler();
      this.el.addEventListener("transitionend", this.transitionEndHandler);
    };
    this.paddingIconWidth = (navItems) => {
      const navItemLink = (navItems[0].shadowRoot &&
        (navItems[0].shadowRoot.querySelector("ic-tooltip a") ||
          navItems[0].shadowRoot.querySelector("ic-tooltip div"))) ||
        navItems[0].querySelector("a") ||
        navItems[0].querySelector("div");
      const navItemSVG = navItems[0].querySelector("svg");
      const navStyles = {
        gap: window.getComputedStyle(navItemLink).gap,
        iconWidth: window.getComputedStyle(navItemSVG).width,
        paddingLeft: window.getComputedStyle(navItemLink).paddingLeft,
      };
      return Object.values(navStyles).reduce((prev, curr) => {
        return (prev += parseInt(curr));
      }, 0);
    };
    this.displayTooltipWithExpandedLongLabel = (menuExpanded) => {
      let timer;
      if (menuExpanded) {
        timer = setTimeout(() => {
          const sideNavWidth = this.el.clientWidth;
          const navigationItems = Array.from(this.el.querySelectorAll(this.IC_NAVIGATION_ITEM));
          const paddingIconDelta = navigationItems.length
            ? this.paddingIconWidth(navigationItems)
            : 0;
          navigationItems.forEach((navigationItem) => {
            var _a, _b;
            const icTypographyScrollWidth = ((_a = (navigationItem.shadowRoot &&
              navigationItem.shadowRoot.querySelector("ic-tooltip .link ic-typography.ic-typography-label"))) === null || _a === void 0 ? void 0 : _a.scrollWidth) ||
              ((_b = navigationItem.querySelector("ic-typography.ic-typography-label")) === null || _b === void 0 ? void 0 : _b.scrollWidth);
            if (icTypographyScrollWidth > sideNavWidth - paddingIconDelta) {
              navigationItem.setAttribute("display-navigation-tooltip", "true");
            }
          });
        }, this.ANIMATION_DURATION);
      }
      else {
        clearTimeout(timer);
        const navigationItems = Array.from(this.el.querySelectorAll(this.IC_NAVIGATION_ITEM));
        navigationItems.forEach((navigationItem) => {
          navigationItem.setAttribute("display-navigation-tooltip", "false");
        });
      }
    };
    this.setMenuExpanded = (expanded) => {
      this.menuExpanded = expanded;
    };
    /**
     * As the mobile top bar is fixed, a padding top is required
     * to push main content down the height of the mobile top bar
     * @param value - padding-top css value
     */
    this.setParentPaddingTop = (value) => {
      this.el.parentElement.style.setProperty("padding-top", value);
    };
    this.setParentPaddingLeft = (value) => {
      this.el.parentElement.style.setProperty("padding-left", value);
    };
    this.renderAppTitle = (isAppNameSubtitleVariant) => {
      const displayShortAppTitle = this.deviceSize <= DEVICE_SIZES.S && !isEmptyString(this.shortAppTitle);
      return (hAsync("ic-typography", { variant: displayShortAppTitle || isAppNameSubtitleVariant
          ? "subtitle-small"
          : "h3", "aria-label": displayShortAppTitle
          ? `${this.appTitle} (${this.shortAppTitle})`
          : undefined }, hAsync("h1", null, displayShortAppTitle ? this.shortAppTitle : this.appTitle)));
    };
    this.resizeObserverCallback = (currSize) => {
      this.deviceSize = currSize;
      if (currSize === DEVICE_SIZES.S && !this.disableTopBarBehaviour) {
        if (!this.disableAutoParentStyling) {
          const topBarHeight = this.el.shadowRoot.querySelector(".top-bar").scrollHeight;
          this.setParentPaddingTop(`${topBarHeight}px`);
          this.setParentPaddingLeft("0");
          if (this.inline) {
            this.el.parentElement.style.setProperty("height", `calc(100% - ${topBarHeight}px)`);
          }
        }
        this.emitSideNavigationExpanded({
          sideNavExpanded: this.menuExpanded,
          sideNavMobile: true,
        });
      }
      else {
        if (!this.disableAutoParentStyling) {
          this.setParentPaddingTop("0");
          this.el.parentElement.style.setProperty("height", "100%");
        }
        this.emitSideNavigationExpanded({
          sideNavExpanded: this.menuExpanded,
          sideNavMobile: false,
        });
      }
      let paddingLeft;
      if (this.collapsedIconLabels) {
        paddingLeft = "calc(var(--ic-space-xxl) * 2)";
      }
      else {
        paddingLeft = "calc(var(--ic-space-xxl) + var(--ic-space-xs))";
      }
      if (currSize > DEVICE_SIZES.L) {
        if (!this.disableAutoParentStyling) {
          this.setParentPaddingTop("0");
          this.setParentPaddingLeft("0");
        }
      }
      else if ((currSize > DEVICE_SIZES.S || this.disableTopBarBehaviour) &&
        currSize <= DEVICE_SIZES.M &&
        this.static &&
        !this.disableAutoParentStyling) {
        this.setParentPaddingLeft(paddingLeft);
      }
      else if ((currSize > DEVICE_SIZES.S || this.disableTopBarBehaviour) &&
        currSize <= DEVICE_SIZES.L &&
        !this.disableAutoParentStyling) {
        if (this.static && this.menuExpanded) {
          this.setParentPaddingLeft("calc(var(--ic-space-xl) * 10)");
        }
        else {
          this.setParentPaddingLeft(paddingLeft);
        }
      }
    };
    this.runResizeObserver = () => {
      this.resizeObserver = new ResizeObserver(() => {
        const currSize = getCurrentDeviceSize();
        this.deviceSizeAppTitle = currSize;
        this.resizeObserverCallback(currSize);
      });
      this.resizeObserver.observe(document.body, { box: "content-box" });
    };
    this.setCollapsedIconLabels = () => {
      const navigationItems = Array.from(this.el.querySelectorAll(this.IC_NAVIGATION_ITEM));
      navigationItems.forEach((navigationItem) => {
        navigationItem.setAttribute("collapsed-icon-label", "true");
      });
    };
    this.styleSlottedCollapsedIconLabel = () => {
      const dynamicSlottedIcTypographyComps = Array.from(this.el.querySelectorAll(".navigation-item-side-nav-slotted-text"));
      dynamicSlottedIcTypographyComps.forEach((icTypography) => {
        var _a, _b;
        if ((_b = (_a = icTypography === null || icTypography === void 0 ? void 0 : icTypography.parentElement) === null || _a === void 0 ? void 0 : _a.parentElement) === null || _b === void 0 ? void 0 : _b.classList.contains("navigation-item-side-nav-collapsed-with-label")) {
          icTypography.style.whiteSpace = "nowrap";
          icTypography.style.overflow = "hidden";
          icTypography.style.textOverflow = "ellipsis";
          icTypography.style.marginTop = "10px";
        }
      });
    };
    this.renderTopBar = ({ isSDevice, foregroundColor, menuOpen, href, isAppNameSubtitleVariant, }) => {
      const hasTitle = this.appTitle !== "" && isPropDefined(this.appTitle);
      const Component = isSlotUsed$1(this.el, "app-title") ? "div" : "a";
      const attrs = Component == "a" && {
        href: href,
      };
      return (hAsync("div", { class: {
          "top-bar": true,
          [this.foregroundColor]: true,
        } }, isSDevice && (hAsync("nav", { "aria-labelledby": "menu-navigation-toggle-button-landmark", "aria-hidden": "false" }, hAsync("ic-button", { "aria-label": "Open navigation menu", class: "menu-button", id: "menu-button", variant: "secondary", size: "small", "full-width": "true", appearance: foregroundColor, onClick: this.toggleMenu, ariaOwnsId: "side-navigation", "aria-haspopup": "true", "aria-expanded": "false", ref: (el) => (this.menuButton = el) }, hAsync("span", { class: "mobile-top-bar-menu-icon", slot: "icon", innerHTML: menuOpen ? closeIcon : menuIcon }), menuOpen ? "Close" : "Menu"), hAsync("span", { id: "menu-navigation-toggle-button-landmark", class: "navigation-landmark-title", "aria-hidden": "true" }, "Navigation menu toggle button"))), hAsync("div", { class: "app-title-wrapper" }, (hasTitle || isSlotUsed$1(this.el, "app-title")) && (hAsync(Component, Object.assign({}, attrs, { class: "title-link" }), hAsync("div", { class: "app-icon-container", "aria-hidden": "true" }, hAsync("slot", { name: "app-icon" })), hAsync("div", { class: "app-title-inner-wrapper" }, isSlotUsed$1(this.el, "app-title") ? (hAsync("slot", { name: "app-title" })) : (this.renderAppTitle(isAppNameSubtitleVariant))))))));
    };
    this.deviceSize = DEVICE_SIZES.XL;
    this.deviceSizeAppTitle = DEVICE_SIZES.S;
    this.foregroundColor = getThemeForegroundColor();
    this.hasSecondaryNavigation = false;
    this.menuExpanded = false;
    this.menuOpen = false;
    this.appTitle = undefined;
    this.collapsedIconLabels = false;
    this.disableAutoParentStyling = false;
    this.disableTopBarBehaviour = false;
    this.expanded = false;
    this.href = "/";
    this.inline = false;
    this.shortAppTitle = "";
    this.static = false;
    this.status = undefined;
    this.version = undefined;
  }
  componentWillLoad() {
    if (this.expanded) {
      this.setMenuExpanded(true);
    }
    else {
      this.setMenuExpanded(false);
    }
    if (this.collapsedIconLabels) {
      this.setCollapsedIconLabels();
    }
    this.hasSecondaryNavigation = isSlotUsed$1(this.el, "secondary-navigation");
  }
  componentDidLoad() {
    this.emitSideNavigationExpanded({
      sideNavExpanded: this.menuExpanded,
      sideNavMobile: this.deviceSize === DEVICE_SIZES.S && !this.disableTopBarBehaviour,
    });
    checkResizeObserver$1(this.runResizeObserver);
    this.styleSlottedCollapsedIconLabel();
    this.arrangeSlottedNavigationItem(this.menuExpanded);
    this.displayTooltipWithExpandedLongLabel(this.menuExpanded);
    this.setExpandedButtonHeight();
    !isSlotUsed$1(this.el, "app-title") &&
      onComponentRequiredPropUndefined([{ prop: this.appTitle, propName: "app-title" }], "Side Navigation");
  }
  disconnectedCallback() {
    if (this.resizeObserver !== null) {
      this.resizeObserver.disconnect();
    }
    this.el.removeEventListener("transitionend", this.transitionEndHandler);
  }
  themeChangeHandler(ev) {
    const theme = ev.detail;
    this.foregroundColor = theme.mode;
  }
  render() {
    const { appTitle, menuOpen, foregroundColor, menuExpanded, href, status, version, collapsedIconLabels, inline, } = this;
    const isSDevice = !this.disableTopBarBehaviour && this.deviceSize === DEVICE_SIZES.S;
    const isMdDevice = this.deviceSize === DEVICE_SIZES.M;
    const isLgDevice = this.deviceSize >= DEVICE_SIZES.L;
    const isAppNameSubtitleVariant = this.deviceSizeAppTitle === DEVICE_SIZES.S;
    const displayExpandBtn = isMdDevice || this.disableTopBarBehaviour || (isLgDevice && !this.static);
    const topBarProps = {
      isSDevice,
      foregroundColor,
      menuOpen,
      href,
      isAppNameSubtitleVariant,
      appTitle,
    };
    return (hAsync(Host, { class: {
        "xs-menu-open": menuOpen && isSDevice,
        "xs-menu-close": !menuOpen && isSDevice,
        "sm-collapsed": !isSDevice && !menuExpanded,
        "sm-expanded": !isSDevice && menuExpanded,
        "side-display": this.deviceSize > DEVICE_SIZES.S || this.disableTopBarBehaviour,
        [IcThemeForegroundEnum.Dark]: foregroundColor === IcThemeForegroundEnum.Dark,
        ["collapsed-labels"]: !isSDevice && !menuExpanded && collapsedIconLabels,
        ["inline"]: inline,
      } }, isSDevice && this.renderTopBar(Object.assign({}, topBarProps)), hAsync("div", { class: "side-navigation", id: "side-navigation" }, !isSDevice && this.renderTopBar(Object.assign({}, topBarProps)), hAsync("div", { class: "side-navigation-inner" }, isSlotUsed$1(this.el, "primary-navigation") && (hAsync("nav", { class: "primary-navigation", "aria-labelledby": "primary-navigation-landmark" }, hAsync("span", { "aria-hidden": "true", class: "navigation-landmark-title", id: "primary-navigation-landmark" }, "Primary"), hAsync("ul", { class: "navigation-list" }, hAsync("slot", { name: "primary-navigation" }))))), hAsync("div", { class: {
        ["bottom-wrapper"]: true,
        ["classification-spacing"]: hasClassificationBanner(),
      } }, isSlotUsed$1(this.el, "secondary-navigation") && (hAsync("nav", { class: "secondary-navigation", "aria-labelledby": "secondary-navigation-landmark" }, hAsync("span", { "aria-hidden": "true", class: "navigation-landmark-title", id: "secondary-navigation-landmark" }, "Secondary"), hAsync("ul", { class: "navigation-list" }, hAsync("slot", { name: "secondary-navigation" })))), hAsync("div", { class: "bottom-side-nav" }, this.hasSecondaryNavigation && hAsync("ic-divider", null), displayExpandBtn && (hAsync("button", { class: "menu-expand-button", innerHTML: chevronIcon, onClick: this.toggleMenuExpanded, "aria-label": `${menuExpanded ? "Collapse" : "Expand"} side navigation` })), hAsync("div", { class: "app-status-wrapper" }, status !== "" && (hAsync("div", { class: {
        ["app-status"]: true,
      } }, hAsync("ic-typography", { "aria-label": "app tag", variant: "label-uppercase", class: "app-status-text" }, status))), version !== "" && (hAsync("ic-typography", { variant: "label", class: "app-version", "aria-label": "app version" }, version))))))));
  }
  get el() { return getElement(this); }
  static get style() { return icSideNavigationCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "ic-side-navigation",
    "$members$": {
      "appTitle": [1, "app-title"],
      "collapsedIconLabels": [4, "collapsed-icon-labels"],
      "disableAutoParentStyling": [4, "disable-auto-parent-styling"],
      "disableTopBarBehaviour": [4, "disable-top-bar-behaviour"],
      "expanded": [4],
      "href": [1],
      "inline": [4],
      "shortAppTitle": [1, "short-app-title"],
      "static": [4],
      "status": [1],
      "version": [1],
      "deviceSize": [32],
      "deviceSizeAppTitle": [32],
      "foregroundColor": [32],
      "hasSecondaryNavigation": [32],
      "menuExpanded": [32],
      "menuOpen": [32]
    },
    "$listeners$": [[4, "themeChange", "themeChangeHandler"]],
    "$lazyBundleId$": "-",
    "$attrsToReflect$": []
  }; }
}

const icSkeletonCss = "/*!@html*/html.sc-ic-skeleton{line-height:1.15;-webkit-text-size-adjust:100%}/*!@body*/body.sc-ic-skeleton{margin:0}/*!@main*/main.sc-ic-skeleton{display:block}/*!@h1*/h1.sc-ic-skeleton{font-size:2em;margin:0.67em 0}/*!@hr*/hr.sc-ic-skeleton{box-sizing:content-box;height:0;overflow:visible}/*!@pre*/pre.sc-ic-skeleton{font-family:monospace, monospace;font-size:1em}/*!@a*/a.sc-ic-skeleton{background-color:transparent}/*!@abbr[title]*/abbr[title].sc-ic-skeleton{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}/*!@b,\nstrong*/b.sc-ic-skeleton,strong.sc-ic-skeleton{font-weight:bolder}/*!@code,\nkbd,\nsamp*/code.sc-ic-skeleton,kbd.sc-ic-skeleton,samp.sc-ic-skeleton{font-family:monospace, monospace;font-size:1em}/*!@small*/small.sc-ic-skeleton{font-size:80%}/*!@sub,\nsup*/sub.sc-ic-skeleton,sup.sc-ic-skeleton{font-size:75%;line-height:0;position:relative;vertical-align:baseline}/*!@sub*/sub.sc-ic-skeleton{bottom:-0.25em}/*!@sup*/sup.sc-ic-skeleton{top:-0.5em}/*!@img*/img.sc-ic-skeleton{border-style:none}/*!@button,\ninput,\noptgroup,\nselect,\ntextarea*/button.sc-ic-skeleton,input.sc-ic-skeleton,optgroup.sc-ic-skeleton,select.sc-ic-skeleton,textarea.sc-ic-skeleton{font-family:inherit;font-size:100%;line-height:1.15;margin:0}/*!@button,\ninput*/button.sc-ic-skeleton,input.sc-ic-skeleton{overflow:visible}/*!@button,\nselect*/button.sc-ic-skeleton,select.sc-ic-skeleton{text-transform:none}/*!@button,\n[type=\"button\"],\n[type=\"reset\"],\n[type=\"submit\"]*/button.sc-ic-skeleton,[type=\"button\"].sc-ic-skeleton,[type=\"reset\"].sc-ic-skeleton,[type=\"submit\"].sc-ic-skeleton{-webkit-appearance:button}/*!@button::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner*/button.sc-ic-skeleton::-moz-focus-inner,[type=\"button\"].sc-ic-skeleton::-moz-focus-inner,[type=\"reset\"].sc-ic-skeleton::-moz-focus-inner,[type=\"submit\"].sc-ic-skeleton::-moz-focus-inner{border-style:none;padding:0}/*!@button:-moz-focusring,\n[type=\"button\"]:-moz-focusring,\n[type=\"reset\"]:-moz-focusring,\n[type=\"submit\"]:-moz-focusring*/button.sc-ic-skeleton:-moz-focusring,[type=\"button\"].sc-ic-skeleton:-moz-focusring,[type=\"reset\"].sc-ic-skeleton:-moz-focusring,[type=\"submit\"].sc-ic-skeleton:-moz-focusring{outline:1px dotted ButtonText}/*!@fieldset*/fieldset.sc-ic-skeleton{padding:0.35em 0.75em 0.625em}/*!@legend*/legend.sc-ic-skeleton{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}/*!@progress*/progress.sc-ic-skeleton{vertical-align:baseline}/*!@textarea*/textarea.sc-ic-skeleton{overflow:auto}/*!@[type=\"checkbox\"],\n[type=\"radio\"]*/[type=\"checkbox\"].sc-ic-skeleton,[type=\"radio\"].sc-ic-skeleton{box-sizing:border-box;padding:0}/*!@[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button*/[type=\"number\"].sc-ic-skeleton::-webkit-inner-spin-button,[type=\"number\"].sc-ic-skeleton::-webkit-outer-spin-button{height:auto}/*!@[type=\"search\"]*/[type=\"search\"].sc-ic-skeleton{-webkit-appearance:textfield;outline-offset:-2px}/*!@[type=\"search\"]::-webkit-search-decoration*/[type=\"search\"].sc-ic-skeleton::-webkit-search-decoration{-webkit-appearance:none}/*!@::-webkit-file-upload-button*/.sc-ic-skeleton::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}/*!@details*/details.sc-ic-skeleton{display:block}/*!@summary*/summary.sc-ic-skeleton{display:list-item}/*!@template*/template.sc-ic-skeleton{display:none}/*!@[hidden]*/[hidden].sc-ic-skeleton{display:none}/*!@html,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo*/html.sc-ic-skeleton,body.sc-ic-skeleton,div.sc-ic-skeleton,span.sc-ic-skeleton,applet.sc-ic-skeleton,object.sc-ic-skeleton,iframe.sc-ic-skeleton,h1.sc-ic-skeleton,h2.sc-ic-skeleton,h3.sc-ic-skeleton,h4.sc-ic-skeleton,h5.sc-ic-skeleton,h6.sc-ic-skeleton,p.sc-ic-skeleton,blockquote.sc-ic-skeleton,pre.sc-ic-skeleton,a.sc-ic-skeleton,abbr.sc-ic-skeleton,acronym.sc-ic-skeleton,address.sc-ic-skeleton,big.sc-ic-skeleton,cite.sc-ic-skeleton,code.sc-ic-skeleton,del.sc-ic-skeleton,dfn.sc-ic-skeleton,em.sc-ic-skeleton,img.sc-ic-skeleton,ins.sc-ic-skeleton,kbd.sc-ic-skeleton,q.sc-ic-skeleton,s.sc-ic-skeleton,samp.sc-ic-skeleton,small.sc-ic-skeleton,strike.sc-ic-skeleton,strong.sc-ic-skeleton,sub.sc-ic-skeleton,sup.sc-ic-skeleton,tt.sc-ic-skeleton,var.sc-ic-skeleton,b.sc-ic-skeleton,u.sc-ic-skeleton,i.sc-ic-skeleton,center.sc-ic-skeleton,dl.sc-ic-skeleton,dt.sc-ic-skeleton,dd.sc-ic-skeleton,ol.sc-ic-skeleton,ul.sc-ic-skeleton,li.sc-ic-skeleton,fieldset.sc-ic-skeleton,form.sc-ic-skeleton,label.sc-ic-skeleton,legend.sc-ic-skeleton,table.sc-ic-skeleton,caption.sc-ic-skeleton,tbody.sc-ic-skeleton,tfoot.sc-ic-skeleton,thead.sc-ic-skeleton,tr.sc-ic-skeleton,th.sc-ic-skeleton,td.sc-ic-skeleton,article.sc-ic-skeleton,aside.sc-ic-skeleton,canvas.sc-ic-skeleton,details.sc-ic-skeleton,embed.sc-ic-skeleton,figure.sc-ic-skeleton,figcaption.sc-ic-skeleton,footer.sc-ic-skeleton,header.sc-ic-skeleton,hgroup.sc-ic-skeleton,menu.sc-ic-skeleton,nav.sc-ic-skeleton,output.sc-ic-skeleton,ruby.sc-ic-skeleton,section.sc-ic-skeleton,summary.sc-ic-skeleton,time.sc-ic-skeleton,mark.sc-ic-skeleton,audio.sc-ic-skeleton,video.sc-ic-skeleton{margin:0;padding:0;border:0;font-size:100%;font-style:inherit;vertical-align:baseline}@keyframes loading{0%{background-color:var(--ic-architectural-100)}50%{background-color:var(--ic-architectural-200)}100%{background-color:var(--ic-architectural-100)}}@keyframes loading-light{0%{background-color:var(--ic-architectural-600)}50%{background-color:var(--ic-architectural-400)}100%{background-color:var(--ic-architectural-600)}}/*!@:host*/.sc-ic-skeleton-h{display:inline-block}/*!@:host(.skeleton)*/.skeleton.sc-ic-skeleton-h{background-color:var(--ic-architectural-100);border-radius:var(--ic-border-radius);animation:loading 1200ms infinite;display:inline-block}/*!@:host(.skeleton) > **/.skeleton.sc-ic-skeleton-h>*.sc-ic-skeleton{opacity:0;visibility:hidden}/*!@:host(.circle)*/.circle.sc-ic-skeleton-h{border-radius:50%}/*!@:host(.light)*/.light.sc-ic-skeleton-h{background-color:var(--ic-architectural-600);animation:loading-light 1200ms infinite}@media (forced-colors: active){/*!@:host(.skeleton)*/.skeleton.sc-ic-skeleton-h{-ms-high-contrast-adjust:none;forced-color-adjust:none;background:currentcolor}}";

class Skeleton {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.default = undefined;
    this.hasChild = undefined;
    this.heightOnly = undefined;
    this.widthOnly = undefined;
    this.appearance = "default";
    this.light = false;
    this.variant = "rectangle";
  }
  componentWillLoad() {
    if (this.el.style.height === "" && this.el.style.width === "") {
      this.default = true;
    }
    else if (!(this.el.style.height === "") && this.el.style.width === "") {
      this.heightOnly = true;
    }
    else if (!(this.el.style.width === "") && this.el.style.height === "") {
      this.widthOnly = true;
    }
  }
  render() {
    const { variant, light, appearance } = this;
    this.hasChild = !!this.el.firstElementChild;
    const defaultSkeletonStyle = {
      height: variant == "text" ? "1em" : variant == "circle" ? "25px" : "93px",
      width: variant == "circle" ? "25px" : "260px",
    };
    const heightSetStyle = {
      height: this.el.style.height,
      width: variant == "circle" ? "25px" : "260px",
    };
    const widthSetStyle = {
      height: variant == "text" ? "1em" : variant == "circle" ? "25px" : "93px",
      width: this.el.style.width,
    };
    return (hAsync(Host, { class: {
        ["skeleton"]: true,
        ["circle"]: variant == "circle",
        ["light"]: light || appearance === "light",
      }, style: (!this.hasChild && this.default && defaultSkeletonStyle) ||
        (this.heightOnly && heightSetStyle) ||
        (this.widthOnly && widthSetStyle), "aria-disabled": "true" }, hAsync("slot", null)));
  }
  get el() { return getElement(this); }
  static get style() { return icSkeletonCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "ic-skeleton",
    "$members$": {
      "appearance": [1],
      "light": [4],
      "variant": [1],
      "default": [32],
      "hasChild": [32],
      "heightOnly": [32],
      "widthOnly": [32]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": []
  }; }
}

const icStatusTagCss = "/*!@html*/html.sc-ic-status-tag{line-height:1.15;-webkit-text-size-adjust:100%}/*!@body*/body.sc-ic-status-tag{margin:0}/*!@main*/main.sc-ic-status-tag{display:block}/*!@h1*/h1.sc-ic-status-tag{font-size:2em;margin:0.67em 0}/*!@hr*/hr.sc-ic-status-tag{box-sizing:content-box;height:0;overflow:visible}/*!@pre*/pre.sc-ic-status-tag{font-family:monospace, monospace;font-size:1em}/*!@a*/a.sc-ic-status-tag{background-color:transparent}/*!@abbr[title]*/abbr[title].sc-ic-status-tag{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}/*!@b,\nstrong*/b.sc-ic-status-tag,strong.sc-ic-status-tag{font-weight:bolder}/*!@code,\nkbd,\nsamp*/code.sc-ic-status-tag,kbd.sc-ic-status-tag,samp.sc-ic-status-tag{font-family:monospace, monospace;font-size:1em}/*!@small*/small.sc-ic-status-tag{font-size:80%}/*!@sub,\nsup*/sub.sc-ic-status-tag,sup.sc-ic-status-tag{font-size:75%;line-height:0;position:relative;vertical-align:baseline}/*!@sub*/sub.sc-ic-status-tag{bottom:-0.25em}/*!@sup*/sup.sc-ic-status-tag{top:-0.5em}/*!@img*/img.sc-ic-status-tag{border-style:none}/*!@button,\ninput,\noptgroup,\nselect,\ntextarea*/button.sc-ic-status-tag,input.sc-ic-status-tag,optgroup.sc-ic-status-tag,select.sc-ic-status-tag,textarea.sc-ic-status-tag{font-family:inherit;font-size:100%;line-height:1.15;margin:0}/*!@button,\ninput*/button.sc-ic-status-tag,input.sc-ic-status-tag{overflow:visible}/*!@button,\nselect*/button.sc-ic-status-tag,select.sc-ic-status-tag{text-transform:none}/*!@button,\n[type=\"button\"],\n[type=\"reset\"],\n[type=\"submit\"]*/button.sc-ic-status-tag,[type=\"button\"].sc-ic-status-tag,[type=\"reset\"].sc-ic-status-tag,[type=\"submit\"].sc-ic-status-tag{-webkit-appearance:button}/*!@button::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner*/button.sc-ic-status-tag::-moz-focus-inner,[type=\"button\"].sc-ic-status-tag::-moz-focus-inner,[type=\"reset\"].sc-ic-status-tag::-moz-focus-inner,[type=\"submit\"].sc-ic-status-tag::-moz-focus-inner{border-style:none;padding:0}/*!@button:-moz-focusring,\n[type=\"button\"]:-moz-focusring,\n[type=\"reset\"]:-moz-focusring,\n[type=\"submit\"]:-moz-focusring*/button.sc-ic-status-tag:-moz-focusring,[type=\"button\"].sc-ic-status-tag:-moz-focusring,[type=\"reset\"].sc-ic-status-tag:-moz-focusring,[type=\"submit\"].sc-ic-status-tag:-moz-focusring{outline:1px dotted ButtonText}/*!@fieldset*/fieldset.sc-ic-status-tag{padding:0.35em 0.75em 0.625em}/*!@legend*/legend.sc-ic-status-tag{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}/*!@progress*/progress.sc-ic-status-tag{vertical-align:baseline}/*!@textarea*/textarea.sc-ic-status-tag{overflow:auto}/*!@[type=\"checkbox\"],\n[type=\"radio\"]*/[type=\"checkbox\"].sc-ic-status-tag,[type=\"radio\"].sc-ic-status-tag{box-sizing:border-box;padding:0}/*!@[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button*/[type=\"number\"].sc-ic-status-tag::-webkit-inner-spin-button,[type=\"number\"].sc-ic-status-tag::-webkit-outer-spin-button{height:auto}/*!@[type=\"search\"]*/[type=\"search\"].sc-ic-status-tag{-webkit-appearance:textfield;outline-offset:-2px}/*!@[type=\"search\"]::-webkit-search-decoration*/[type=\"search\"].sc-ic-status-tag::-webkit-search-decoration{-webkit-appearance:none}/*!@::-webkit-file-upload-button*/.sc-ic-status-tag::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}/*!@details*/details.sc-ic-status-tag{display:block}/*!@summary*/summary.sc-ic-status-tag{display:list-item}/*!@template*/template.sc-ic-status-tag{display:none}/*!@[hidden]*/[hidden].sc-ic-status-tag{display:none}/*!@html,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo*/html.sc-ic-status-tag,body.sc-ic-status-tag,div.sc-ic-status-tag,span.sc-ic-status-tag,applet.sc-ic-status-tag,object.sc-ic-status-tag,iframe.sc-ic-status-tag,h1.sc-ic-status-tag,h2.sc-ic-status-tag,h3.sc-ic-status-tag,h4.sc-ic-status-tag,h5.sc-ic-status-tag,h6.sc-ic-status-tag,p.sc-ic-status-tag,blockquote.sc-ic-status-tag,pre.sc-ic-status-tag,a.sc-ic-status-tag,abbr.sc-ic-status-tag,acronym.sc-ic-status-tag,address.sc-ic-status-tag,big.sc-ic-status-tag,cite.sc-ic-status-tag,code.sc-ic-status-tag,del.sc-ic-status-tag,dfn.sc-ic-status-tag,em.sc-ic-status-tag,img.sc-ic-status-tag,ins.sc-ic-status-tag,kbd.sc-ic-status-tag,q.sc-ic-status-tag,s.sc-ic-status-tag,samp.sc-ic-status-tag,small.sc-ic-status-tag,strike.sc-ic-status-tag,strong.sc-ic-status-tag,sub.sc-ic-status-tag,sup.sc-ic-status-tag,tt.sc-ic-status-tag,var.sc-ic-status-tag,b.sc-ic-status-tag,u.sc-ic-status-tag,i.sc-ic-status-tag,center.sc-ic-status-tag,dl.sc-ic-status-tag,dt.sc-ic-status-tag,dd.sc-ic-status-tag,ol.sc-ic-status-tag,ul.sc-ic-status-tag,li.sc-ic-status-tag,fieldset.sc-ic-status-tag,form.sc-ic-status-tag,label.sc-ic-status-tag,legend.sc-ic-status-tag,table.sc-ic-status-tag,caption.sc-ic-status-tag,tbody.sc-ic-status-tag,tfoot.sc-ic-status-tag,thead.sc-ic-status-tag,tr.sc-ic-status-tag,th.sc-ic-status-tag,td.sc-ic-status-tag,article.sc-ic-status-tag,aside.sc-ic-status-tag,canvas.sc-ic-status-tag,details.sc-ic-status-tag,embed.sc-ic-status-tag,figure.sc-ic-status-tag,figcaption.sc-ic-status-tag,footer.sc-ic-status-tag,header.sc-ic-status-tag,hgroup.sc-ic-status-tag,menu.sc-ic-status-tag,nav.sc-ic-status-tag,output.sc-ic-status-tag,ruby.sc-ic-status-tag,section.sc-ic-status-tag,summary.sc-ic-status-tag,time.sc-ic-status-tag,mark.sc-ic-status-tag,audio.sc-ic-status-tag,video.sc-ic-status-tag{margin:0;padding:0;border:0;font-size:100%;font-style:inherit;vertical-align:baseline}/*!@.tag*/.tag.sc-ic-status-tag{padding:var(--ic-space-xxs) var(--ic-space-sm);font-size:0.875rem;border-radius:var(--ic-space-md);display:inline-block;min-width:2.5rem;text-align:center;color:var(--ic-color-primary-text)}/*!@.small*/.small.sc-ic-status-tag{padding:var(--ic-space-xxxs) var(--ic-space-sm);border-radius:calc(var(--ic-space-md) - var(--ic-space-xxxs))}/*!@.filled-neutral*/.filled-neutral.sc-ic-status-tag{background-color:var(--ic-architectural-700);color:var(--ic-architectural-white)}/*!@.filled-success*/.filled-success.sc-ic-status-tag{background-color:var(--ic-status-success);color:var(--ic-architectural-white)}/*!@.filled-warning*/.filled-warning.sc-ic-status-tag{background-color:var(--ic-status-warning-contrast)}/*!@.filled-danger*/.filled-danger.sc-ic-status-tag{background-color:var(--ic-status-error);color:var(--ic-architectural-white)}/*!@.outlined-neutral*/.outlined-neutral.sc-ic-status-tag{background-color:var(--ic-architectural-200);border:var(--ic-border-width) solid var(--ic-architectural-400)}/*!@.outlined-success*/.outlined-success.sc-ic-status-tag{background-color:var(--ic-status-success-light);border:var(--ic-border-width) solid var(--ic-status-success)}/*!@.outlined-warning*/.outlined-warning.sc-ic-status-tag{background-color:var(--ic-status-warning-light);border:var(--ic-border-width) solid var(--ic-status-warning-dark)}/*!@.outlined-danger*/.outlined-danger.sc-ic-status-tag{background-color:var(--ic-status-error-light);border:var(--ic-border-width) solid var(--ic-status-error)}@media (forced-colors: active){/*!@.tag*/.tag.sc-ic-status-tag{border:var(--ic-hc-border);-ms-high-contrast-adjust:none;forced-color-adjust:none}}";

class StatusTag {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.announced = false;
    this.appearance = undefined;
    this.label = undefined;
    this.size = "default";
    this.small = false;
    this.status = "neutral";
    this.variant = "filled";
  }
  componentWillLoad() {
    if (this.appearance === "outlined") {
      this.variant = "outlined";
    }
  }
  componentDidLoad() {
    onComponentRequiredPropUndefined([{ prop: this.label, propName: "label" }], "Status Tag");
  }
  render() {
    const { label, status, appearance, variant, small, size, announced } = this;
    return (hAsync(Host, { role: announced ? "status" : null, "aria-label": "Status" }, hAsync("strong", { class: {
        ["tag"]: true,
        [`${appearance}-${status}`]: appearance !== undefined,
        [`${variant}-${status}`]: true,
        ["small"]: small || size === "small",
      } }, hAsync("ic-typography", { variant: "label-uppercase", "apply-vertical-margins": false }, hAsync("span", null, label)))));
  }
  static get style() { return icStatusTagCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "ic-status-tag",
    "$members$": {
      "announced": [4],
      "appearance": [1],
      "label": [1],
      "size": [1],
      "small": [4],
      "status": [1],
      "variant": [1]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": []
  }; }
}

var warningIcon = `<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M7.99935 4.32666L13.0193 13H2.97935L7.99935 4.32666ZM7.99935 1.66666L0.666016 14.3333H15.3327L7.99935 1.66666ZM8.66602 11H7.33268V12.3333H8.66602V11ZM8.66602 6.99999H7.33268V9.66666H8.66602V6.99999Z" fill="currentColor"/>
</svg>`;

const icStepCss = "/*!@:host*/.sc-ic-step-h{display:flex;flex:auto}/*!@.step*/.step.sc-ic-step{display:flex;flex:1 1 0}/*!@.step-icon*/.step-icon.sc-ic-step{display:flex;justify-content:center}/*!@.step-title,\n.step-subtitle,\n.step-status,\n.next-step*/.step-title.sc-ic-step,.step-subtitle.sc-ic-step,.step-status.sc-ic-step,.next-step.sc-ic-step{white-space:pre-line}/*!@.visually-hidden*/.visually-hidden.sc-ic-step{position:absolute;left:-625rem;top:auto;width:1px;height:1px;overflow:hidden}/*!@:host(.compact)*/.compact.sc-ic-step-h{-moz-column-gap:var(--ic-space-sm);column-gap:var(--ic-space-sm);--compact-step-inner-color:var(--ic-status-info);--compact-step-circular-line-width:var(--ic-space-xxs)}/*!@:host(.compact) .step*/.compact.sc-ic-step-h .step.sc-ic-step{-moz-column-gap:var(--ic-space-sm);column-gap:var(--ic-space-sm)}/*!@:host(.compact) .step:not(.current)*/.compact.sc-ic-step-h .step.sc-ic-step:not(.current){display:none;opacity:0;visibility:hidden}/*!@.compact-step-progress-indicator*/.compact-step-progress-indicator.sc-ic-step{margin:var(--ic-space-xs) 0 0}/*!@:host(.compact) .step-title-area*/.compact.sc-ic-step-h .step-title-area.sc-ic-step{display:flex;flex-direction:column;width:14.25rem}/*!@.info-line*/.info-line.sc-ic-step{display:flex;-moz-column-gap:var(--ic-space-xs);column-gap:var(--ic-space-xs)}/*!@.step-status*/.step-status.sc-ic-step{display:flex;color:var(--ic-color-secondary-text);-moz-column-gap:var(--ic-space-xxxs);column-gap:var(--ic-space-xxxs)}/*!@.compact-step-completed .step-status*/.compact-step-completed.sc-ic-step .step-status.sc-ic-step{color:var(--ic-status-success)}/*!@.compact-step-disabled :is(.step-title, .step-status)*/.compact-step-disabled.sc-ic-step .sc-ic-step:is(.step-title,.step-status).sc-ic-step{color:var(--ic-color-tertiary-text)}/*!@.step-num*/.step-num.sc-ic-step{color:var(--ic-color-secondary-text);white-space:nowrap}/*!@:host(.compact) .step-icon*/.compact.sc-ic-step-h .step-icon.sc-ic-step{margin:var(--ic-space-xxxs)}/*!@:host(.compact) .step-icon svg*/.compact.sc-ic-step-h .step-icon.sc-ic-step svg.sc-ic-step{width:var(--ic-space-md);height:var(--ic-space-md)}/*!@:host(.default) .step*/.default.sc-ic-step-h .step.sc-ic-step{flex-direction:column}/*!@:host(.default.last-step)*/.default.last-step.sc-ic-step-h{flex-grow:initial}/*!@.step-top*/.step-top.sc-ic-step{display:flex;width:100%;align-items:center;align-self:flex-start;height:2.5rem}/*!@:host(.default) .step-icon*/.default.sc-ic-step-h .step-icon.sc-ic-step{border-radius:50%}/*!@.step-icon-inner*/.step-icon-inner.sc-ic-step{width:var(--ic-space-xl);height:var(--ic-space-xl);display:flex;justify-content:center;align-items:center;border-radius:50%}/*!@:host(.default) .current*/.default.sc-ic-step-h .current.sc-ic-step{color:var(--ic-status-info)}/*!@:host(.default) .step-title-area*/.default.sc-ic-step-h .step-title-area.sc-ic-step{margin:var(--ic-space-xs) 0;padding-right:var(--ic-space-xs);width:100%}/*!@:host(.default) .step-title,\n.step-subtitle*/.default.sc-ic-step-h .step-title.sc-ic-step,.step-subtitle.sc-ic-step{width:-moz-fit-content;width:fit-content}/*!@.step-subtitle*/.step-subtitle.sc-ic-step{color:var(--ic-color-tertiary-text)}/*!@.current .step-subtitle*/.current.sc-ic-step .step-subtitle.sc-ic-step{color:var(--ic-color-primary-text)}/*!@:host(.default) .completed*/.default.sc-ic-step-h .completed.sc-ic-step{color:var(--ic-status-success)}/*!@.active .step-icon-inner*/.active.sc-ic-step .step-icon-inner.sc-ic-step{box-shadow:inset var(--ic-architectural-200) 0 0 0 0.125rem}/*!@.current .step-icon-inner*/.current.sc-ic-step .step-icon-inner.sc-ic-step{background-color:var(--ic-status-info);color:white}/*!@.disabled*/.disabled.sc-ic-step{color:var(--ic-architectural-200)}/*!@.disabled .step-icon-inner*/.disabled.sc-ic-step .step-icon-inner.sc-ic-step{border:var(--ic-border-width) dashed var(--ic-architectural-200);width:calc(var(--ic-space-xl) - var(--ic-space-xxxs));height:calc(var(--ic-space-xl) - var(--ic-space-xxxs))}/*!@.disabled .step-title-area*/.disabled.sc-ic-step .step-title-area.sc-ic-step{color:var(--ic-color-tertiary-text)}/*!@.completed .step-icon-inner*/.completed.sc-ic-step .step-icon-inner.sc-ic-step{background:var(--ic-status-success);box-shadow:inset var(--ic-status-success) 0 0 0 var(--ic-space-xxxs);border-radius:100%}/*!@:host(.default) .current .step-icon*/.default.sc-ic-step-h .current.sc-ic-step .step-icon.sc-ic-step{border:var(--ic-space-xxxs) solid var(--ic-status-info);padding:var(--ic-space-xxxs);margin:0 calc(-1 * var(--ic-space-xxxs))}/*!@.step-connect*/.step-connect.sc-ic-step{height:var(--ic-space-xxxs);background-color:var(--ic-architectural-200);margin:0 var(--ic-space-xs);border-radius:var(--ic-space-xxs);width:100%}/*!@.aligned-full-width.step-connect*/.aligned-full-width.step-connect.sc-ic-step{min-width:6.25rem;width:100%}/*!@.disabled .step-connect*/.disabled.sc-ic-step .step-connect.sc-ic-step{height:0;background-color:rgb(0 0 0 / 0%);border-top:0.125rem dashed var(--ic-architectural-200);border-radius:0}/*!@.completed .step-connect*/.completed.sc-ic-step .step-connect.sc-ic-step{background-color:var(--ic-status-success)}/*!@.step-connect-inner*/.step-connect-inner.sc-ic-step{width:70%;display:flex;flex:auto;height:var(--ic-space-xxxs);border-radius:var(--ic-space-xxs);background-color:var(--ic-status-info)}/*!@.step-icon-inner .check-icon*/.step-icon-inner.sc-ic-step .check-icon.sc-ic-step{padding-top:var(--ic-space-xxs)}/*!@.step-icon-inner .check-icon svg*/.step-icon-inner.sc-ic-step .check-icon.sc-ic-step svg.sc-ic-step{width:var(--ic-space-md);height:auto}/*!@.step-icon-inner .check-icon > svg > path*/.step-icon-inner.sc-ic-step .check-icon.sc-ic-step>svg.sc-ic-step>path.sc-ic-step{fill:var(--ic-color-white-text)}@media (forced-colors: active){/*!@.compact-step-disabled :is(.step-title, .step-status)*/.compact-step-disabled.sc-ic-step .sc-ic-step:is(.step-title,.step-status).sc-ic-step{color:GrayText}/*!@.step-connect:not(.disabled .step-connect)*/.step-connect.sc-ic-step:not(.disabled .step-connect).sc-ic-step{border:var(--ic-hc-border)}/*!@.active .step-icon-inner,\n  .completed .step-icon-inner,\n  .current .step-icon-inner*/.active.sc-ic-step .step-icon-inner.sc-ic-step,.completed.sc-ic-step .step-icon-inner.sc-ic-step,.current.sc-ic-step .step-icon-inner.sc-ic-step{forced-color-adjust:none;box-shadow:inset canvastext 0 0 0 0.125rem;background-color:transparent;color:canvastext}/*!@:host(.default) .current .step-icon*/.default.sc-ic-step-h .current.sc-ic-step .step-icon.sc-ic-step{padding:0;border:none}/*!@.disabled,\n  .disabled .step-title-area*/.disabled.sc-ic-step,.disabled.sc-ic-step .step-title-area.sc-ic-step{color:GrayText}/*!@.step-connect-inner,\n  .completed .step-connect*/.step-connect-inner.sc-ic-step,.completed.sc-ic-step .step-connect.sc-ic-step{background-color:canvastext}/*!@.step-icon-inner .check-icon > svg > path*/.step-icon-inner.sc-ic-step .check-icon.sc-ic-step>svg.sc-ic-step>path.sc-ic-step{fill:canvastext}}";

class Step {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.compactStepStyling = undefined;
    this.current = false;
    this.lastStep = undefined;
    this.lastStepNum = undefined;
    this.nextStepTitle = undefined;
    this.progress = undefined;
    this.stepNum = undefined;
    this.stepStatus = undefined;
    this.stepSubtitle = undefined;
    this.stepTitle = undefined;
    this.variant = undefined;
    this.stepType = "active";
  }
  stepTypeChangeHandler() {
    if (this.variant === "compact" && this.stepType === "current") {
      this.current = true;
    }
    else {
      this.current = false;
    }
  }
  render() {
    // ARIA LABEL
    let ariaLabel = "";
    if (this.stepType === "completed") {
      ariaLabel = ". Completed step";
    }
    else if (this.stepType === "disabled") {
      ariaLabel = ". Non-required step";
    }
    else if (this.stepStatus === "required") {
      ariaLabel = ". Required step";
    }
    else if (this.stepStatus === "optional") {
      ariaLabel = ". Optional step";
    }
    // STEP STATUS
    let stepStatus;
    if (isPropDefined(this.stepStatus)) {
      stepStatus = this.stepStatus[0].toUpperCase() + this.stepStatus.slice(1);
    }
    // STEP TYPE
    let stepType;
    if (this.stepType === "disabled" ||
      this.compactStepStyling === "disabled") {
      stepType = "Not required";
    }
    else if (this.compactStepStyling === "completed") {
      stepType = "Completed";
    }
    // STATUS ICON FOR COMPACT STEP
    let statusIcon;
    if (this.stepType === "completed" ||
      this.compactStepStyling === "completed") {
      statusIcon = (hAsync("span", { class: "check-icon step-icon", "aria-hidden": "true", innerHTML: checkIcon }));
    }
    else if (this.stepType === "disabled" ||
      this.compactStepStyling === "disabled") {
      statusIcon = (hAsync("span", { class: "warning-icon step-icon", "aria-hidden": "true", innerHTML: warningIcon }));
    }
    // COMPACT STEP COMPONENT
    const compactStep = (hAsync("div", { class: {
        ["step"]: true,
        ["current"]: this.current,
        [`compact-step-${this.compactStepStyling}`]: !!this.compactStepStyling,
      } }, hAsync("ic-loading-indicator", { class: {
        "compact-step-progress-indicator": true,
        "not-required": this.stepType === "disabled" ||
          this.compactStepStyling === "disabled",
      }, "aria-hidden": "true", size: "small", "inner-label": this.stepNum, progress: this.progress }), hAsync("div", { class: "step-title-area" }, hAsync("ic-typography", { variant: "h4", class: "step-title" }, this.stepTitle), hAsync("div", { class: "info-line" }, hAsync("ic-typography", { variant: "caption", class: "step-num" }, `${this.stepNum} of ${this.lastStepNum}`, hAsync("span", { class: "visually-hidden" }, " steps")), (this.stepSubtitle ||
      this.stepType === "completed" ||
      this.stepType === "disabled" ||
      (this.variant === "compact" &&
        !!this.compactStepStyling &&
        this.compactStepStyling !== "active") ||
      !!this.stepStatus) && (hAsync("div", { class: "step-status" }, statusIcon !== undefined && statusIcon, (this.stepSubtitle || stepType) && (hAsync("ic-typography", { variant: "caption" }, this.stepSubtitle !== null &&
      isPropDefined(this.stepSubtitle)
      ? this.stepSubtitle
      : this.stepType === "disabled" ||
        (this.variant === "compact" &&
          this.compactStepStyling === "disabled") ||
        this.stepType === "completed" ||
        (this.variant === "compact" &&
          this.compactStepStyling === "completed")
        ? stepType
        : this.stepStatus && stepStatus))))), this.lastStep ? (hAsync("ic-typography", { variant: "subtitle-small", class: "next-step" }, "Last step")) : (isPropDefined(this.nextStepTitle) && (hAsync("ic-typography", { variant: "subtitle-small", class: "next-step" }, "Next", hAsync("span", { class: "visually-hidden" }, " step is"), ":", " ", this.nextStepTitle))))));
    // ICON FOR DEFAULT STEP
    let icon;
    if (this.stepType !== "completed") {
      icon = (hAsync("ic-typography", { variant: "subtitle-small" }, hAsync("span", { class: "step-icon-inner", "aria-hidden": "true" }, this.stepNum)));
    }
    else {
      icon = (hAsync("div", { class: "step-icon-inner", "aria-hidden": "true" }, hAsync("span", { class: "check-icon", innerHTML: checkIcon })));
    }
    // STEP CONNECT FOR DEFAULT STEP
    const partialBar = this.stepType === "current" && (hAsync("div", { class: "step-connect-inner" }));
    const finalStep = !this.lastStep && (hAsync("div", { class: {
        ["step-connect"]: true,
        ["aligned-full-width"]: this.el.parentElement.classList.contains("default") &&
          !this.el.parentElement.classList.contains("aligned-left"),
      } }, partialBar));
    // DEFAULT STEP COMPONENT
    const defaultStep = (hAsync("div", { class: {
        ["step"]: true,
        [`${this.stepType}`]: true,
      } }, hAsync("div", { class: "step-top" }, hAsync("div", { class: "step-icon" }, icon), finalStep), (this.stepTitle || this.stepSubtitle || this.stepStatus) && (hAsync("div", { class: "step-title-area" }, this.stepTitle && (hAsync("ic-typography", { variant: "subtitle-large", class: "step-title" }, this.stepTitle)), this.stepTitle && (this.stepSubtitle || this.stepStatus) && (hAsync("ic-typography", { variant: "caption", class: "step-subtitle" }, this.stepSubtitle !== null && isPropDefined(this.stepSubtitle)
      ? this.stepSubtitle
      : stepStatus))))));
    return (hAsync(Host, { role: "listitem", "aria-label": `Step ${this.stepNum}${ariaLabel}`, "aria-current": (this.current || this.stepType === "current") && "step", class: {
        ["aligned-full-width"]: this.el.parentElement.classList.contains("default") &&
          !this.el.parentElement.classList.contains("aligned-left"),
        [`${this.variant}`]: true,
      } }, this.variant === "compact" ? compactStep : defaultStep));
  }
  get el() { return getElement(this); }
  static get watchers() { return {
    "stepType": ["stepTypeChangeHandler"]
  }; }
  static get style() { return icStepCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "ic-step",
    "$members$": {
      "compactStepStyling": [1, "compact-step-styling"],
      "current": [1028],
      "lastStep": [4, "last-step"],
      "lastStepNum": [2, "last-step-num"],
      "nextStepTitle": [1, "next-step-title"],
      "progress": [2],
      "stepNum": [2, "step-num"],
      "stepStatus": [1, "step-status"],
      "stepSubtitle": [1, "step-subtitle"],
      "stepTitle": [1, "step-title"],
      "variant": [1],
      "stepType": [1, "step-type"]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": []
  }; }
}

const icStepperCss = "/*!@:host*/.sc-ic-stepper-h{display:flex;width:100%}/*!@.step-item-list*/.step-item-list.sc-ic-stepper{display:flex;margin:0;padding:0}/*!@:host(.default:not(.aligned-left)) .step-item-list*/.default.sc-ic-stepper-h:not(.aligned-left) .step-item-list.sc-ic-stepper{flex:auto}/*!@:host(.compact) ul ::slotted(ic-step)*/.sc-ic-stepper-h.compact ul .sc-ic-stepper-s>ic-step{display:none}/*!@:host(.compact) ul ::slotted(ic-step.show)*/.sc-ic-stepper-h.compact ul .sc-ic-stepper-s>ic-step.show{display:flex}/*!@:host(.compact) ul ::slotted(ic-step.hide)*/.sc-ic-stepper-h.compact ul .sc-ic-stepper-s>ic-step.hide{display:none;opacity:0;visibility:hidden}";

class Stepper {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.resizeObserver = null;
    // Get all steps currently within this stepper
    this.getChildren = () => {
      this.steps = Array.from(this.el.querySelectorAll("ic-step"));
      this.stepsWithStepTitles = Array.from(this.el.querySelectorAll("ic-step[step-title]"));
    };
    // Inform the user that stepTitles are required on all steps in a compact stepper
    this.checkStepTitles = () => {
      if (this.stepsWithStepTitles.length < this.steps.length &&
        this.variantOverride &&
        this.variant === "compact") {
        this.noOfResizes = this.noOfResizes + 1;
        if (this.noOfResizes === 1) {
          console.error(`The prop 'step-title' (web components) / 'stepTitle' (react) is required for all steps of the Stepper component (compact variant)`);
        }
      }
    };
    this.setStepTypes = () => {
      this.getChildren();
      this.stepTypes = [];
      for (let i = 0; i < this.steps.length; i++) {
        this.stepTypes.push("active");
      }
    };
    this.setStepperWidth = () => {
      this.alignedFullWidth =
        this.variant === "default" && this.aligned === "full-width";
      const lastStep = this.steps[this.steps.length - 1];
      lastStep.style.maxWidth = "none";
      if (this.alignedFullWidth) {
        this.stepperWidth = this.el.offsetWidth;
        lastStep.style.maxWidth = pxToRem(`${this.stepperWidth / this.steps.length}px`);
        this.lastStepWidth = lastStep.offsetWidth;
      }
    };
    this.initialiseStepStates = () => {
      this.steps.forEach((step, index) => {
        // Set variant
        step.variant = this.variant;
        // Assign stepNum to each step
        step.stepNum = index + 1;
        // Assign lastStep to final step
        step.lastStep = index === this.steps.length - 1;
        step.lastStepNum = this.steps.length;
        if (step.stepType !== "current") {
          step.current = false;
          this.stepTypes[index] = step.stepType;
        }
        else {
          step.current = true;
        }
        const stepTitleArea = step.shadowRoot &&
          step.shadowRoot.querySelector(".step > .step-title-area");
        if (this.stepsWithStepTitles.length == 0 && this.variantOverride) {
          if (this.variant === "compact") {
            this.autoSetStepTitles = true;
            if (this.autoSetStepTitles) {
              step.stepTitle = "Step " + step.stepNum;
              stepTitleArea &&
                stepTitleArea
                  .querySelector(".step-title")
                  .setAttribute("aria-hidden", "true");
            }
          }
          if (this.variant === "default") {
            this.autoSetStepTitles = false;
            if (!this.autoSetStepTitles) {
              step.stepTitle = undefined;
              stepTitleArea &&
                stepTitleArea
                  .querySelector(".step-title")
                  .removeAttribute("aria-hidden");
            }
          }
        }
        if (this.variant === "compact") {
          if (step.current === true || step.stepType === "current") {
            step.classList.remove("hide");
            step.classList.add("show");
          }
          else if (step.classList.contains("show")) {
            step.classList.remove("show");
            step.classList.add("hide");
          }
          if (!step.lastStep) {
            step.nextStepTitle = this.steps[index + 1].stepTitle;
            step.progress = (step.stepNum / this.steps.length) * 100;
          }
          else if (step.lastStep && this.stepTypes[index] !== "completed") {
            step.progress = 95;
          }
          else {
            step.progress = 100;
          }
          if (this.hideStepInfo && stepTitleArea !== null) {
            stepTitleArea.classList.remove("visually-hidden");
          }
          step.compactStepStyling = this.stepTypes[index];
        }
        if (this.variant === "default") {
          if (!step.lastStep) {
            if (this.alignedFullWidth) {
              step.style.width = pxToRem(`${(this.stepperWidth - this.lastStepWidth) /
                (this.steps.length - 1)}px`);
              step.style.minWidth = pxToRem("148px");
            }
          }
          else if (step.lastStep) {
            step.classList.add("last-step");
            if (this.alignedFullWidth) {
              step.style.maxWidth = `${this.lastStepWidth}px`;
            }
            else {
              step.style.maxWidth =
                this.connectorWidth > 100
                  ? pxToRem(`${this.connectorWidth + 48}px`)
                  : pxToRem("148px");
            }
          }
          if (this.aligned === "left") {
            step.style.width =
              this.connectorWidth > 100
                ? pxToRem(`${this.connectorWidth + 48}px`)
                : pxToRem("148px");
            const stepConnect = step.shadowRoot.querySelector(".step > .step-top > .step-connect");
            if (stepConnect) {
              stepConnect.style.width =
                this.connectorWidth > 100
                  ? pxToRem(`${this.connectorWidth}px`)
                  : pxToRem("100px");
            }
          }
          if (this.hideStepInfo && stepTitleArea !== null) {
            stepTitleArea.classList.add("visually-hidden");
          }
        }
      });
    };
    this.overrideVariant = () => {
      let minDefaultStepperWidth = 148 * this.steps.length;
      if (this.aligned === "left" && this.connectorWidth > 100) {
        minDefaultStepperWidth = (this.connectorWidth + 48) * this.steps.length;
      }
      if (this.variantOverride) {
        if (this.el.clientWidth < minDefaultStepperWidth) {
          this.variant = "compact";
          this.getChildren();
        }
        else {
          this.variant = "default";
          this.getChildren();
        }
      }
    };
    this.resizeObserverCallback = () => {
      this.getChildren();
      this.checkStepTitles();
      this.overrideVariant();
      this.setStepperWidth();
      this.initialiseStepStates();
    };
    this.runResizeObserver = () => {
      this.resizeObserver = new ResizeObserver(() => {
        this.resizeObserverCallback();
      });
      this.resizeObserver.observe(this.el);
    };
    this.alignedFullWidth = true;
    this.autoSetStepTitles = true;
    this.lastStepWidth = 0;
    this.noOfResizes = 0;
    this.stepperWidth = document
      .querySelector("ic-stepper")
      .getBoundingClientRect().width;
    this.stepTypes = [];
    this.variantOverride = this.variant !== "compact";
    this.aligned = "full-width";
    this.connectorWidth = 100;
    this.hideStepInfo = false;
    this.variant = "default";
  }
  disconnectedCallback() {
    if (this.resizeObserver !== null) {
      this.resizeObserver.disconnect();
    }
  }
  componentWillLoad() {
    this.setStepTypes();
    if (this.variant === "compact") {
      this.variantOverride = false;
    }
  }
  componentWillRender() {
    this.initialiseStepStates();
  }
  componentDidLoad() {
    checkResizeObserver$1(this.runResizeObserver);
  }
  render() {
    return (hAsync(Host, { class: {
        [`${this.variant}`]: true,
        ["aligned-left"]: this.variant === "default" && this.aligned === "left",
      } }, hAsync("ul", { class: "step-item-list" }, hAsync("slot", null))));
  }
  get el() { return getElement(this); }
  static get style() { return icStepperCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "ic-stepper",
    "$members$": {
      "aligned": [1],
      "connectorWidth": [2, "connector-width"],
      "hideStepInfo": [4, "hide-step-info"],
      "variant": [1025],
      "alignedFullWidth": [32],
      "autoSetStepTitles": [32],
      "lastStepWidth": [32],
      "noOfResizes": [32],
      "stepperWidth": [32],
      "stepTypes": [32],
      "variantOverride": [32]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": []
  }; }
}

const icSwitchCss = "/*!@html*/html.sc-ic-switch{line-height:1.15;-webkit-text-size-adjust:100%}/*!@body*/body.sc-ic-switch{margin:0}/*!@main*/main.sc-ic-switch{display:block}/*!@h1*/h1.sc-ic-switch{font-size:2em;margin:0.67em 0}/*!@hr*/hr.sc-ic-switch{box-sizing:content-box;height:0;overflow:visible}/*!@pre*/pre.sc-ic-switch{font-family:monospace, monospace;font-size:1em}/*!@a*/a.sc-ic-switch{background-color:transparent}/*!@abbr[title]*/abbr[title].sc-ic-switch{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}/*!@b,\nstrong*/b.sc-ic-switch,strong.sc-ic-switch{font-weight:bolder}/*!@code,\nkbd,\nsamp*/code.sc-ic-switch,kbd.sc-ic-switch,samp.sc-ic-switch{font-family:monospace, monospace;font-size:1em}/*!@small*/small.sc-ic-switch{font-size:80%}/*!@sub,\nsup*/sub.sc-ic-switch,sup.sc-ic-switch{font-size:75%;line-height:0;position:relative;vertical-align:baseline}/*!@sub*/sub.sc-ic-switch{bottom:-0.25em}/*!@sup*/sup.sc-ic-switch{top:-0.5em}/*!@img*/img.sc-ic-switch{border-style:none}/*!@button,\ninput,\noptgroup,\nselect,\ntextarea*/button.sc-ic-switch,input.sc-ic-switch,optgroup.sc-ic-switch,select.sc-ic-switch,textarea.sc-ic-switch{font-family:inherit;font-size:100%;line-height:1.15;margin:0}/*!@button,\ninput*/button.sc-ic-switch,input.sc-ic-switch{overflow:visible}/*!@button,\nselect*/button.sc-ic-switch,select.sc-ic-switch{text-transform:none}/*!@button,\n[type=\"button\"],\n[type=\"reset\"],\n[type=\"submit\"]*/button.sc-ic-switch,[type=\"button\"].sc-ic-switch,[type=\"reset\"].sc-ic-switch,[type=\"submit\"].sc-ic-switch{-webkit-appearance:button}/*!@button::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner*/button.sc-ic-switch::-moz-focus-inner,[type=\"button\"].sc-ic-switch::-moz-focus-inner,[type=\"reset\"].sc-ic-switch::-moz-focus-inner,[type=\"submit\"].sc-ic-switch::-moz-focus-inner{border-style:none;padding:0}/*!@button:-moz-focusring,\n[type=\"button\"]:-moz-focusring,\n[type=\"reset\"]:-moz-focusring,\n[type=\"submit\"]:-moz-focusring*/button.sc-ic-switch:-moz-focusring,[type=\"button\"].sc-ic-switch:-moz-focusring,[type=\"reset\"].sc-ic-switch:-moz-focusring,[type=\"submit\"].sc-ic-switch:-moz-focusring{outline:1px dotted ButtonText}/*!@fieldset*/fieldset.sc-ic-switch{padding:0.35em 0.75em 0.625em}/*!@legend*/legend.sc-ic-switch{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}/*!@progress*/progress.sc-ic-switch{vertical-align:baseline}/*!@textarea*/textarea.sc-ic-switch{overflow:auto}/*!@[type=\"checkbox\"],\n[type=\"radio\"]*/[type=\"checkbox\"].sc-ic-switch,[type=\"radio\"].sc-ic-switch{box-sizing:border-box;padding:0}/*!@[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button*/[type=\"number\"].sc-ic-switch::-webkit-inner-spin-button,[type=\"number\"].sc-ic-switch::-webkit-outer-spin-button{height:auto}/*!@[type=\"search\"]*/[type=\"search\"].sc-ic-switch{-webkit-appearance:textfield;outline-offset:-2px}/*!@[type=\"search\"]::-webkit-search-decoration*/[type=\"search\"].sc-ic-switch::-webkit-search-decoration{-webkit-appearance:none}/*!@::-webkit-file-upload-button*/.sc-ic-switch::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}/*!@details*/details.sc-ic-switch{display:block}/*!@summary*/summary.sc-ic-switch{display:list-item}/*!@template*/template.sc-ic-switch{display:none}/*!@[hidden]*/[hidden].sc-ic-switch{display:none}/*!@html,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo*/html.sc-ic-switch,body.sc-ic-switch,div.sc-ic-switch,span.sc-ic-switch,applet.sc-ic-switch,object.sc-ic-switch,iframe.sc-ic-switch,h1.sc-ic-switch,h2.sc-ic-switch,h3.sc-ic-switch,h4.sc-ic-switch,h5.sc-ic-switch,h6.sc-ic-switch,p.sc-ic-switch,blockquote.sc-ic-switch,pre.sc-ic-switch,a.sc-ic-switch,abbr.sc-ic-switch,acronym.sc-ic-switch,address.sc-ic-switch,big.sc-ic-switch,cite.sc-ic-switch,code.sc-ic-switch,del.sc-ic-switch,dfn.sc-ic-switch,em.sc-ic-switch,img.sc-ic-switch,ins.sc-ic-switch,kbd.sc-ic-switch,q.sc-ic-switch,s.sc-ic-switch,samp.sc-ic-switch,small.sc-ic-switch,strike.sc-ic-switch,strong.sc-ic-switch,sub.sc-ic-switch,sup.sc-ic-switch,tt.sc-ic-switch,var.sc-ic-switch,b.sc-ic-switch,u.sc-ic-switch,i.sc-ic-switch,center.sc-ic-switch,dl.sc-ic-switch,dt.sc-ic-switch,dd.sc-ic-switch,ol.sc-ic-switch,ul.sc-ic-switch,li.sc-ic-switch,fieldset.sc-ic-switch,form.sc-ic-switch,label.sc-ic-switch,legend.sc-ic-switch,table.sc-ic-switch,caption.sc-ic-switch,tbody.sc-ic-switch,tfoot.sc-ic-switch,thead.sc-ic-switch,tr.sc-ic-switch,th.sc-ic-switch,td.sc-ic-switch,article.sc-ic-switch,aside.sc-ic-switch,canvas.sc-ic-switch,details.sc-ic-switch,embed.sc-ic-switch,figure.sc-ic-switch,figcaption.sc-ic-switch,footer.sc-ic-switch,header.sc-ic-switch,hgroup.sc-ic-switch,menu.sc-ic-switch,nav.sc-ic-switch,output.sc-ic-switch,ruby.sc-ic-switch,section.sc-ic-switch,summary.sc-ic-switch,time.sc-ic-switch,mark.sc-ic-switch,audio.sc-ic-switch,video.sc-ic-switch{margin:0;padding:0;border:0;font-size:100%;font-style:inherit;vertical-align:baseline}/*!@:host*/.sc-ic-switch-h{display:inline-block}/*!@input*/input.sc-ic-switch{overflow:hidden;-webkit-appearance:none;-moz-appearance:none;appearance:none}/*!@.ic-switch-container*/.ic-switch-container.sc-ic-switch{display:flex;flex-wrap:wrap;align-items:center;gap:var(--ic-space-xxs);cursor:pointer}/*!@.ic-switch-label*/.ic-switch-label.sc-ic-switch{margin-left:var(--ic-space-xxs);margin-bottom:var(--ic-space-sm)}/*!@.ic-switch-label-small*/.ic-switch-label-small.sc-ic-switch{margin-bottom:0.625rem}/*!@.ic-switch-toggle*/.ic-switch-toggle.sc-ic-switch{display:flex;align-items:center;justify-content:space-around;width:4rem;height:var(--ic-space-xl);position:relative;border-radius:100vw;background-color:var(--ic-architectural-200);border:var(--ic-border-width) solid var(--ic-architectural-700);box-sizing:border-box;transition:var(--ic-transition-duration-fast)}/*!@.ic-switch-line-break*/.ic-switch-line-break.sc-ic-switch{flex:1 0 100%}/*!@.ic-switch-checked-status*/.ic-switch-checked-status.sc-ic-switch{padding-left:var(--ic-space-xxs);width:var(--ic-space-lg)}/*!@.ic-switch-toggle::before*/.ic-switch-toggle.sc-ic-switch::before{content:\"\";width:1.333rem;height:1.333rem;border-radius:50%;position:absolute;z-index:2;top:50%;left:0.333rem;transform:translate(0, -50%);background-color:var(--ic-architectural-700);transition:var(--ic-transition-duration-slow)}/*!@.ic-switch-icon*/.ic-switch-icon.sc-ic-switch{display:inline-block;vertical-align:middle;width:0.625rem;height:0.625rem}/*!@.ic-switch-icon-circle,\n.ic-switch-icon-line*/.ic-switch-icon-circle.sc-ic-switch,.ic-switch-icon-line.sc-ic-switch{stroke-width:1}/*!@.ic-switch-icon-circle*/.ic-switch-icon-circle.sc-ic-switch{stroke:var(--ic-architectural-700)}/*!@.ic-switch-icon-line*/.ic-switch-icon-line.sc-ic-switch{stroke:var(--ic-architectural-white)}@media (prefers-reduced-motion: reduce){/*!@.ic-switch-toggle::before*/.ic-switch-toggle.sc-ic-switch::before{transition-duration:0ms}}/*!@.ic-switch-input:checked + .ic-switch-toggle*/.ic-switch-input.sc-ic-switch:checked+.ic-switch-toggle.sc-ic-switch{background-color:var(--ic-action-default);border:none}/*!@.ic-switch-input:checked + .ic-switch-toggle::before*/.ic-switch-input.sc-ic-switch:checked+.ic-switch-toggle.sc-ic-switch::before{transform:translate(var(--ic-space-xl), -50%);background-color:var(--ic-architectural-white)}/*!@.ic-switch-input:not([disabled]) + .ic-switch-toggle:hover::before*/.ic-switch-input.sc-ic-switch:not([disabled])+.ic-switch-toggle.sc-ic-switch:hover::before{box-shadow:0 0 0 0.75rem var(--ic-action-dark-bg-hover)}/*!@.ic-switch-input:not([disabled]) + .ic-switch-toggle:active::before*/.ic-switch-input.sc-ic-switch:not([disabled])+.ic-switch-toggle.sc-ic-switch:active::before{box-shadow:0 0 0 0.75rem var(--ic-action-dark-bg-active)}/*!@.ic-switch-input:not([disabled]):checked + .ic-switch-toggle:hover::before*/.ic-switch-input.sc-ic-switch:not([disabled]):checked+.ic-switch-toggle.sc-ic-switch:hover::before{box-shadow:0 0 0 0.75rem var(--ic-action-default-bg-hover)}/*!@.ic-switch-input:not([disabled]):checked + .ic-switch-toggle:active::before*/.ic-switch-input.sc-ic-switch:not([disabled]):checked+.ic-switch-toggle.sc-ic-switch:active::before{box-shadow:0 0 0 0.75rem var(--ic-action-default-bg-active)}/*!@.ic-switch-input:focus:not([disabled]) + .ic-switch-toggle,\n.ic-switch-input:focus-visible:not([disabled]) + .ic-switch-toggle*/.ic-switch-input.sc-ic-switch:focus:not([disabled])+.ic-switch-toggle.sc-ic-switch,.ic-switch-input.sc-ic-switch:focus-visible:not([disabled])+.ic-switch-toggle.sc-ic-switch{box-shadow:0 0 0 var(--ic-space-1px) var(--ic-architectural-white),\n    0 0 0 0.188rem var(--ic-action-default),\n    0 0 0 0.5rem var(--ic-action-default-active-alpha)}/*!@.ic-switch-disabled*/.ic-switch-disabled.sc-ic-switch{cursor:default}/*!@.ic-switch-disabled .ic-switch-icon-circle*/.ic-switch-disabled.sc-ic-switch .ic-switch-icon-circle.sc-ic-switch{stroke:var(--ic-architectural-300)}/*!@.ic-switch-disabled .ic-switch-icon-line*/.ic-switch-disabled.sc-ic-switch .ic-switch-icon-line.sc-ic-switch{stroke:var(--ic-action-default-bg-active)}/*!@.ic-switch-input:disabled + .ic-switch-toggle*/.ic-switch-input.sc-ic-switch:disabled+.ic-switch-toggle.sc-ic-switch{background-color:var(--ic-architectural-80);border:var(--ic-border-disabled)}/*!@.ic-switch-input:disabled ~ .ic-switch-checked-status*/.ic-switch-input.sc-ic-switch:disabled~.ic-switch-checked-status.sc-ic-switch{color:var(--ic-architectural-300)}/*!@.ic-switch-input:disabled + .ic-switch-toggle::before*/.ic-switch-input.sc-ic-switch:disabled+.ic-switch-toggle.sc-ic-switch::before{background-color:var(--ic-architectural-300)}/*!@.ic-switch-input:disabled:checked + .ic-switch-toggle*/.ic-switch-input.sc-ic-switch:disabled:checked+.ic-switch-toggle.sc-ic-switch{background-color:var(--ic-status-info-light);border:var(--ic-border-width) dashed #98c9f5}/*!@.ic-switch-input:disabled:checked + .ic-switch-toggle::before*/.ic-switch-input.sc-ic-switch:disabled:checked+.ic-switch-toggle.sc-ic-switch::before{background-color:var(--ic-architectural-white)}/*!@.ic-switch-small*/.ic-switch-small.sc-ic-switch{gap:var(--ic-space-xxxs)}/*!@.ic-switch-small .ic-switch-checked-status*/.ic-switch-small.sc-ic-switch .ic-switch-checked-status.sc-ic-switch{padding-left:0.375rem}/*!@.ic-switch-small .ic-switch-toggle*/.ic-switch-small.sc-ic-switch .ic-switch-toggle.sc-ic-switch{width:var(--ic-space-xxl);height:var(--ic-space-lg)}/*!@.ic-switch-small .ic-switch-toggle::before*/.ic-switch-small.sc-ic-switch .ic-switch-toggle.sc-ic-switch::before{width:var(--ic-space-md);height:var(--ic-space-md);left:var(--ic-space-xxs)}/*!@.ic-switch-small .ic-switch-input:checked + .ic-switch-toggle::before*/.ic-switch-small.sc-ic-switch .ic-switch-input.sc-ic-switch:checked+.ic-switch-toggle.sc-ic-switch::before{transform:translate(var(--ic-space-lg), -50%)}/*!@::slotted(*)*/.sc-ic-switch-s>*{margin-left:var(--ic-space-sm)}/*!@::slotted(svg)*/.sc-ic-switch-s>svg{fill:currentcolor}@media (forced-colors: active){/*!@.ic-switch-toggle::before,\n  .ic-switch-input:checked + .ic-switch-toggle*/.ic-switch-toggle.sc-ic-switch::before,.ic-switch-input.sc-ic-switch:checked+.ic-switch-toggle.sc-ic-switch{border:var(--ic-hc-border)}/*!@.ic-switch-input:checked + .ic-switch-toggle::before*/.ic-switch-input.sc-ic-switch:checked+.ic-switch-toggle.sc-ic-switch::before{transform:translate(calc(var(--ic-space-xl) - 0.125rem), -50%)}/*!@.ic-switch-input:disabled + .ic-switch-toggle,\n  .ic-switch-input:disabled:checked + .ic-switch-toggle,\n  .ic-switch-input:disabled + .ic-switch-toggle::before*/.ic-switch-input.sc-ic-switch:disabled+.ic-switch-toggle.sc-ic-switch,.ic-switch-input.sc-ic-switch:disabled:checked+.ic-switch-toggle.sc-ic-switch,.ic-switch-input.sc-ic-switch:disabled+.ic-switch-toggle.sc-ic-switch::before{border-color:GrayText}/*!@.ic-switch-input:disabled ~ .ic-switch-checked-status*/.ic-switch-input.sc-ic-switch:disabled~.ic-switch-checked-status.sc-ic-switch{color:GrayText}/*!@.ic-switch-disabled .ic-switch-icon-circle,\n  .ic-switch-disabled .ic-switch-icon-line*/.ic-switch-disabled.sc-ic-switch .ic-switch-icon-circle.sc-ic-switch,.ic-switch-disabled.sc-ic-switch .ic-switch-icon-line.sc-ic-switch{stroke:GrayText}}";

let inputIds$1 = 0;
/**
 * @slot right-adornment - Content is placed to the right of switch before state label.
 */
class Switch {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.icBlur = createEvent(this, "icBlur", 7);
    this.icChange = createEvent(this, "icChange", 7);
    this.icFocus = createEvent(this, "icFocus", 7);
    this.inputId = `ic-switch-input-${inputIds$1++}`;
    this.handleChange = () => {
      this.checkedState = !this.checkedState;
      this.icChange.emit({
        checked: this.checkedState,
        value: this.value,
      });
    };
    this.onFocus = () => {
      this.icFocus.emit();
    };
    this.onBlur = () => {
      this.icBlur.emit();
    };
    this.handleFormReset = () => {
      this.checkedState = this.initiallyChecked;
    };
    this.checkedState = false;
    this.initiallyChecked = this.checked;
    this.checked = false;
    this.disabled = false;
    this.helperText = "";
    this.hideLabel = false;
    this.label = undefined;
    this.name = this.inputId;
    this.showState = false;
    this.size = "default";
    this.small = false;
    this.value = "on";
  }
  checkedChangeHandler() {
    this.checkedState = this.checked;
  }
  disconnectedCallback() {
    removeFormResetListener(this.el, this.handleFormReset);
  }
  componentWillLoad() {
    this.checkedState = this.checked;
    addFormResetListener(this.el, this.handleFormReset);
    removeDisabledFalse(this.disabled, this.el);
  }
  componentDidLoad() {
    onComponentRequiredPropUndefined([{ prop: this.label, propName: "label" }], "Switch");
  }
  /**
   * Sets focus on the switch.
   */
  async setFocus() {
    if (this.el.shadowRoot.querySelector("input")) {
      this.el.shadowRoot.querySelector("input").focus();
    }
  }
  render() {
    const { label, checkedState, small, size, disabled, name, showState, value, hideLabel, helperText, inputId, } = this;
    renderHiddenInput(true, this.el, name, checkedState ? value : "", disabled);
    const describedBy = getInputDescribedByText(inputId, helperText !== "", false);
    return (hAsync(Host, null, hAsync("label", { class: {
        ["ic-switch-container"]: true,
        ["ic-switch-disabled"]: disabled,
        ["ic-switch-small"]: small || size === "small",
      }, htmlFor: inputId }, !hideLabel && (hAsync("ic-input-label", { for: inputId, label: label, helperText: helperText, readonly: true, disabled: disabled, class: {
        ["ic-switch-label"]: true,
        ["ic-switch-label-small"]: small || size === "small",
      } })), !hideLabel && hAsync("span", { class: "ic-switch-line-break" }), hAsync("input", { checked: checkedState, disabled: disabled, "aria-label": label, "aria-checked": checkedState ? "true" : "false", "aria-describedby": describedBy, role: "switch", class: "ic-switch-input", type: "checkbox", name: "toggle", id: inputId, onFocus: this.onFocus, onBlur: this.onBlur, onChange: this.handleChange }), hAsync("span", { class: "ic-switch-toggle" }, hAsync("svg", { class: "ic-switch-icon", "aria-hidden": "true", focusable: "false", viewBox: "0 0 10 10", xmlns: "http://www.w3.org/2000/svg" }, hAsync("line", { class: "ic-switch-icon-line", x1: "9", y1: small || size === "small" ? "2" : "1", x2: "9", y2: small || size === "small" ? "8" : "9" })), hAsync("svg", { class: "ic-switch-icon", "aria-hidden": "true", focusable: "false", viewBox: "0 0 10 10", xmlns: "http://www.w3.org/2000/svg" }, hAsync("circle", { class: "ic-switch-icon-circle", fill: "none", cx: "5", cy: "5", r: small || size === "small" ? "3.335" : "4.445" }))), hAsync("slot", { name: "right-adornment" }), showState && (hAsync("ic-typography", { "aria-hidden": "true", variant: "label", class: "ic-switch-checked-status" }, checkedState ? "On" : "Off")))));
  }
  static get delegatesFocus() { return true; }
  get el() { return getElement(this); }
  static get watchers() { return {
    "checked": ["checkedChangeHandler"]
  }; }
  static get style() { return icSwitchCss; }
  static get cmpMeta() { return {
    "$flags$": 25,
    "$tagName$": "ic-switch",
    "$members$": {
      "checked": [4],
      "disabled": [4],
      "helperText": [1, "helper-text"],
      "hideLabel": [4, "hide-label"],
      "label": [1],
      "name": [1],
      "showState": [4, "show-state"],
      "size": [1],
      "small": [4],
      "value": [1],
      "checkedState": [32],
      "initiallyChecked": [32],
      "setFocus": [64]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": []
  }; }
}

const icTabCss = "/*!@html*/html.sc-ic-tab{line-height:1.15;-webkit-text-size-adjust:100%}/*!@body*/body.sc-ic-tab{margin:0}/*!@main*/main.sc-ic-tab{display:block}/*!@h1*/h1.sc-ic-tab{font-size:2em;margin:0.67em 0}/*!@hr*/hr.sc-ic-tab{box-sizing:content-box;height:0;overflow:visible}/*!@pre*/pre.sc-ic-tab{font-family:monospace, monospace;font-size:1em}/*!@a*/a.sc-ic-tab{background-color:transparent}/*!@abbr[title]*/abbr[title].sc-ic-tab{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}/*!@b,\nstrong*/b.sc-ic-tab,strong.sc-ic-tab{font-weight:bolder}/*!@code,\nkbd,\nsamp*/code.sc-ic-tab,kbd.sc-ic-tab,samp.sc-ic-tab{font-family:monospace, monospace;font-size:1em}/*!@small*/small.sc-ic-tab{font-size:80%}/*!@sub,\nsup*/sub.sc-ic-tab,sup.sc-ic-tab{font-size:75%;line-height:0;position:relative;vertical-align:baseline}/*!@sub*/sub.sc-ic-tab{bottom:-0.25em}/*!@sup*/sup.sc-ic-tab{top:-0.5em}/*!@img*/img.sc-ic-tab{border-style:none}/*!@button,\ninput,\noptgroup,\nselect,\ntextarea*/button.sc-ic-tab,input.sc-ic-tab,optgroup.sc-ic-tab,select.sc-ic-tab,textarea.sc-ic-tab{font-family:inherit;font-size:100%;line-height:1.15;margin:0}/*!@button,\ninput*/button.sc-ic-tab,input.sc-ic-tab{overflow:visible}/*!@button,\nselect*/button.sc-ic-tab,select.sc-ic-tab{text-transform:none}/*!@button,\n[type=\"button\"],\n[type=\"reset\"],\n[type=\"submit\"]*/button.sc-ic-tab,[type=\"button\"].sc-ic-tab,[type=\"reset\"].sc-ic-tab,[type=\"submit\"].sc-ic-tab{-webkit-appearance:button}/*!@button::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner*/button.sc-ic-tab::-moz-focus-inner,[type=\"button\"].sc-ic-tab::-moz-focus-inner,[type=\"reset\"].sc-ic-tab::-moz-focus-inner,[type=\"submit\"].sc-ic-tab::-moz-focus-inner{border-style:none;padding:0}/*!@button:-moz-focusring,\n[type=\"button\"]:-moz-focusring,\n[type=\"reset\"]:-moz-focusring,\n[type=\"submit\"]:-moz-focusring*/button.sc-ic-tab:-moz-focusring,[type=\"button\"].sc-ic-tab:-moz-focusring,[type=\"reset\"].sc-ic-tab:-moz-focusring,[type=\"submit\"].sc-ic-tab:-moz-focusring{outline:1px dotted ButtonText}/*!@fieldset*/fieldset.sc-ic-tab{padding:0.35em 0.75em 0.625em}/*!@legend*/legend.sc-ic-tab{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}/*!@progress*/progress.sc-ic-tab{vertical-align:baseline}/*!@textarea*/textarea.sc-ic-tab{overflow:auto}/*!@[type=\"checkbox\"],\n[type=\"radio\"]*/[type=\"checkbox\"].sc-ic-tab,[type=\"radio\"].sc-ic-tab{box-sizing:border-box;padding:0}/*!@[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button*/[type=\"number\"].sc-ic-tab::-webkit-inner-spin-button,[type=\"number\"].sc-ic-tab::-webkit-outer-spin-button{height:auto}/*!@[type=\"search\"]*/[type=\"search\"].sc-ic-tab{-webkit-appearance:textfield;outline-offset:-2px}/*!@[type=\"search\"]::-webkit-search-decoration*/[type=\"search\"].sc-ic-tab::-webkit-search-decoration{-webkit-appearance:none}/*!@::-webkit-file-upload-button*/.sc-ic-tab::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}/*!@details*/details.sc-ic-tab{display:block}/*!@summary*/summary.sc-ic-tab{display:list-item}/*!@template*/template.sc-ic-tab{display:none}/*!@[hidden]*/[hidden].sc-ic-tab{display:none}/*!@html,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo*/html.sc-ic-tab,body.sc-ic-tab,div.sc-ic-tab,span.sc-ic-tab,applet.sc-ic-tab,object.sc-ic-tab,iframe.sc-ic-tab,h1.sc-ic-tab,h2.sc-ic-tab,h3.sc-ic-tab,h4.sc-ic-tab,h5.sc-ic-tab,h6.sc-ic-tab,p.sc-ic-tab,blockquote.sc-ic-tab,pre.sc-ic-tab,a.sc-ic-tab,abbr.sc-ic-tab,acronym.sc-ic-tab,address.sc-ic-tab,big.sc-ic-tab,cite.sc-ic-tab,code.sc-ic-tab,del.sc-ic-tab,dfn.sc-ic-tab,em.sc-ic-tab,img.sc-ic-tab,ins.sc-ic-tab,kbd.sc-ic-tab,q.sc-ic-tab,s.sc-ic-tab,samp.sc-ic-tab,small.sc-ic-tab,strike.sc-ic-tab,strong.sc-ic-tab,sub.sc-ic-tab,sup.sc-ic-tab,tt.sc-ic-tab,var.sc-ic-tab,b.sc-ic-tab,u.sc-ic-tab,i.sc-ic-tab,center.sc-ic-tab,dl.sc-ic-tab,dt.sc-ic-tab,dd.sc-ic-tab,ol.sc-ic-tab,ul.sc-ic-tab,li.sc-ic-tab,fieldset.sc-ic-tab,form.sc-ic-tab,label.sc-ic-tab,legend.sc-ic-tab,table.sc-ic-tab,caption.sc-ic-tab,tbody.sc-ic-tab,tfoot.sc-ic-tab,thead.sc-ic-tab,tr.sc-ic-tab,th.sc-ic-tab,td.sc-ic-tab,article.sc-ic-tab,aside.sc-ic-tab,canvas.sc-ic-tab,details.sc-ic-tab,embed.sc-ic-tab,figure.sc-ic-tab,figcaption.sc-ic-tab,footer.sc-ic-tab,header.sc-ic-tab,hgroup.sc-ic-tab,menu.sc-ic-tab,nav.sc-ic-tab,output.sc-ic-tab,ruby.sc-ic-tab,section.sc-ic-tab,summary.sc-ic-tab,time.sc-ic-tab,mark.sc-ic-tab,audio.sc-ic-tab,video.sc-ic-tab{margin:0;padding:0;border:0;font-size:100%;font-style:inherit;vertical-align:baseline}/*!@:host*/.sc-ic-tab-h{--indicator-initial-color:rgba(23 89 188 / 0%);--indicator-color:var(--ic-action-default);--focus-indicator:var(--ic-border-focus);--label-color:var(--ic-color-primary-text);--background-color-hover:var(--ic-action-default-bg-hover);--background-color-active:var(--ic-action-default-bg-active);display:flex;align-items:center;border-radius:0;color:var(--label-color);height:2.5rem;padding:0 var(--ic-space-md);cursor:pointer;position:relative;border-bottom:var(--ic-space-xxs) solid var(--indicator-initial-color);gap:var(--ic-space-xs);transition:all var(--ic-easing-transition-fast)}/*!@:host(:focus)*/.sc-ic-tab-h:focus{box-shadow:var(--focus-indicator);border-radius:var(--ic-border-radius)}/*!@:host(:focus-visible)*/.sc-ic-tab-h:focus-visible{outline:var(--ic-hc-focus-outline)}/*!@:host(:hover)*/.sc-ic-tab-h:hover{background-color:var(--background-color-hover)}/*!@:host(:active)*/.sc-ic-tab-h:active{background-color:var(--background-color-active)}/*!@:host(.ic-tab-light)*/.ic-tab-light.sc-ic-tab-h{--indicator-initial-color:rgb(255 255 255 / 0%);--indicator-color:rgb(255 255 255 / 100%);--focus-indicator:var(--ic-border-focus);--label-color:white;--background-color-hover:var(--ic-action-dark-bg-hover);--background-color-active:var(--ic-action-dark-bg-active)}/*!@:host(.selected)*/.selected.sc-ic-tab-h{border-bottom:var(--ic-space-xxs) solid var(--indicator-color)}/*!@:host(.disabled)*/.disabled.sc-ic-tab-h{pointer-events:none;color:var(--ic-architectural-300)}/*!@:host(.selected.with-transition)*/.selected.with-transition.sc-ic-tab-h{transition:all var(--ic-easing-transition-slow),\n    border-color var(--ic-transition-duration-slow)}/*!@.ic-tab-label*/.ic-tab-label.sc-ic-tab{pointer-events:none}/*!@::slotted(svg)*/.sc-ic-tab-s>svg{fill:currentcolor}@media (forced-colors: active){/*!@:host*/.sc-ic-tab-h{border-bottom:var(--ic-space-xxs) solid canvas}/*!@:host(.disabled)*/.disabled.sc-ic-tab-h{color:GrayText}}";

/**
 * @slot icon - Content will be rendered next to the tab label.
 * @slot badge - Badge component displayed inline with the tab.
 */
class Tab {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.tabClick = createEvent(this, "tabClick", 7);
    this.tabCreated = createEvent(this, "tabCreated", 7);
    this.tabEnabled = createEvent(this, "tabEnabled", 7);
    this.tabFocus = createEvent(this, "tabFocus", 7);
    this.tabRemoved = createEvent(this, "tabRemoved", 7);
    this.focusFromClick = false;
    this.isInitialRender = true;
    this.handleClick = () => {
      this.tabClick.emit({
        tabId: this.tabId,
        contextId: this.contextId,
        position: this.tabPosition,
      });
      if (this.focusFromClick) {
        this.tabFocus.emit({
          tabId: this.tabId,
          contextId: this.contextId,
          position: this.tabPosition,
        });
        this.focusFromClick = false;
      }
    };
    this.handleFocus = () => {
      if (!this.focusFromClick) {
        this.focusTabId = this.tabId;
        this.tabFocus.emit({
          tabId: this.tabId,
          contextId: this.contextId,
          position: this.tabPosition,
        });
      }
    };
    this.handleMouseDown = () => {
      //set flag so that focus gets handled after click
      //there is a timing issue where a long click only causes focus to happen & not the click
      //the focus does need to be a seperate event though to handle focus from keyboard
      this.focusFromClick = true;
    };
    this.appearance = "dark";
    this.contextId = "default";
    this.disabled = false;
    this.selected = false;
    this.tabId = undefined;
    this.tabPosition = undefined;
  }
  disabledWatchHandler() {
    this.tabEnabled.emit();
  }
  connectedCallback() {
    this.tabCreated.emit(this.el);
  }
  disconnectedCallback() {
    const tabContext = document.querySelector(`ic-tab-context[context-id=${this.contextId}]`);
    if (tabContext) {
      tabContext.tabRemovedHandler(!!this.focusTabId);
    }
  }
  componentWillLoad() {
    removeDisabledFalse(this.disabled, this.el);
  }
  componentDidUpdate() {
    this.isInitialRender = false;
  }
  /**
   * Sets focus on the tab.
   */
  async setFocus() {
    if (this.el) {
      this.el.focus();
    }
  }
  render() {
    const { disabled, selected, appearance } = this;
    return (hAsync(Host, { class: {
        ["with-transition"]: !this.isInitialRender,
        ["ic-tab-light"]: appearance === IcThemeForegroundEnum.Light,
        ["selected"]: selected,
        ["disabled"]: disabled,
      }, role: "tab", "aria-selected": selected ? "true" : "false", onClick: this.handleClick, onFocus: this.handleFocus, onMouseDown: this.handleMouseDown, "aria-disabled": disabled ? "true" : "false", tabindex: this.selected ? 0 : -1 }, this.el.querySelector('[slot="icon"]') && hAsync("slot", { name: "icon" }), hAsync("ic-typography", { class: "ic-tab-label", variant: "label" }, hAsync("span", null, hAsync("slot", null))), isSlotUsed$1(this.el, "badge") && hAsync("slot", { name: "badge" })));
  }
  get el() { return getElement(this); }
  static get watchers() { return {
    "disabled": ["disabledWatchHandler"]
  }; }
  static get style() { return icTabCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "ic-tab",
    "$members$": {
      "appearance": [1],
      "contextId": [513, "context-id"],
      "disabled": [4],
      "selected": [516],
      "tabId": [513, "tab-id"],
      "tabPosition": [2, "tab-position"],
      "setFocus": [64]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["contextId", "context-id"], ["selected", "selected"], ["tabId", "tab-id"]]
  }; }
}

class TabContext {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.icTabSelect = createEvent(this, "icTabSelect", 3);
    this.tabSelect = createEvent(this, "tabSelect", 3);
    this.newTabPanels = [];
    this.newTabs = [];
    // Sets attributes to link tab-group, tabs and tab-panels
    this.linkTabs = () => {
      this.tabs.forEach((tab, index) => {
        const tabId = `ic-tab-${index}-context-${this.contextId}`;
        const tabPanelId = `ic-tab-panel-${index}-context-${this.contextId}`;
        const shared = `ic-tab--${index}-context-${this.contextId}`;
        const contextIdAttr = "context-id";
        tab.setAttribute("id", tabId);
        tab.tabId = shared;
        tab.tabPosition = index;
        tab.setAttribute("aria-controls", tabPanelId);
        tab.setAttribute(contextIdAttr, this.contextId);
        this.tabGroup.setAttribute(contextIdAttr, this.contextId);
        this.tabPanels[index].setAttribute("id", tabPanelId);
        this.tabPanels[index].panelId = shared;
        this.tabPanels[index].tabPosition = index;
        this.tabPanels[index].setAttribute("aria-labelledby", tabId);
        this.tabPanels[index].setAttribute(contextIdAttr, this.contextId);
        if (this.appearance === IcThemeForegroundEnum.Light) {
          tab.appearance = this.appearance;
          this.tabPanels[index].appearance = this.appearance;
        }
      });
      if (this.appearance === IcThemeForegroundEnum.Light) {
        this.tabGroup.appearance = this.appearance;
      }
    };
    // Gets tabs and tabpanels with the same context ID
    // Using querySelector to selector the children in relation to the host
    this.getChildren = () => {
      this.tabGroup = this.el.querySelector("ic-tab-group");
      this.tabs = Array.from(this.tabGroup.querySelectorAll("ic-tab"));
      this.tabPanels = Array.from(this.el.children).filter((child) => child.tagName === "IC-TAB-PANEL");
      this.enabledTabs = this.getEnabledTabs();
    };
    this.keydownHandler = (event) => {
      if (this.activationType === "automatic") {
        this.handleKeyBoardNavAutomatic(event);
      }
      else {
        this.handleKeyBoardNavManual(event);
      }
    };
    // Determines how keyboard navigation is to be handled based on the activation type
    this.attatchEventListeners = () => {
      this.tabGroup.addEventListener("keydown", this.keydownHandler);
    };
    // Determines whether the selected tab is being controlled within the component
    // or by the user (via selectedTabIndex and onIcTabSelect)
    this.setControlledMode = () => {
      if (this.selectedTabIndex !== undefined) {
        this.controlledMode = true;
        this.selectedTab = this.selectedTabIndex;
      }
    };
    // Sets the tab that is selected on initial render
    this.setInitialTab = () => {
      if (this.controlledMode) {
        this.selectedTab = this.selectedTabIndex;
        this.focusedTabIndex = this.selectedTabIndex;
      }
      else {
        const firstEnabledTabIndex = this.tabs.findIndex((tab) => tab.tabId === this.enabledTabs[0].tabId);
        this.selectedTab = firstEnabledTabIndex;
        this.focusedTabIndex = firstEnabledTabIndex;
      }
    };
    // Passes the selected tab to the tab and tab panel components
    this.configureTabs = () => {
      this.enabledTabs.forEach((tab) => {
        tab.selected = tab.tabPosition === this.selectedTab;
      });
      this.tabPanels.forEach((tabPanel) => {
        tabPanel.selectedTab = this.tabs[this.selectedTab].tabId;
      });
    };
    this.getEnabledTabs = () => {
      return Array.from(this.tabs).filter((child) => !child.disabled);
    };
    this.getIndexOfEnabledTab = (allTabsIndex) => {
      return this.enabledTabs.findIndex((tab) => tab.tabId === this.tabs[allTabsIndex].tabId);
    };
    // Sets focus on tab and selects it
    this.keyboardSelectTab = (enabledTabIndex) => {
      const newIndex = this.tabs.findIndex((tab) => tab.tabId === this.enabledTabs[enabledTabIndex].tabId);
      this.enabledTabs[enabledTabIndex].focus();
      if (!this.controlledMode) {
        this.selectedTab = newIndex;
      }
      else {
        this.icTabSelect.emit({ tabIndex: newIndex });
        this.tabSelect.emit({ tabIndex: newIndex });
      }
    };
    // Sets focus on tab without selecting it (for manual activation)
    this.keyboardFocusTab = (enabledTabIndex) => {
      const newIndex = this.tabs.findIndex((tab) => tab.tabId === this.enabledTabs[enabledTabIndex].tabId);
      this.enabledTabs[enabledTabIndex].focus();
      this.focusedTabIndex = newIndex;
    };
    this.handleKeyBoardNavAutomatic = (event) => {
      const key = event.key;
      const enabledTabIndex = this.getIndexOfEnabledTab(this.selectedTab);
      let preventDefault = true;
      switch (key) {
        case "Home":
          this.keyboardSelectTab(0);
          break;
        case "End":
          this.keyboardSelectTab(this.enabledTabs.length - 1);
          break;
        case "ArrowRight":
          if (enabledTabIndex < this.enabledTabs.length - 1) {
            this.keyboardSelectTab(enabledTabIndex + 1);
          }
          else {
            this.keyboardSelectTab(0);
          }
          break;
        case "ArrowLeft":
          if (enabledTabIndex > 0) {
            this.keyboardSelectTab(enabledTabIndex - 1);
          }
          else {
            this.keyboardSelectTab(this.enabledTabs.length - 1);
          }
          break;
        default:
          preventDefault = false;
      }
      if (preventDefault)
        event.preventDefault();
    };
    this.handleKeyBoardNavManual = (event) => {
      const key = event.key;
      const enabledTabIndex = this.getIndexOfEnabledTab(this.focusedTabIndex);
      let preventDefault = true;
      switch (key) {
        case "Home":
          this.keyboardFocusTab(0);
          break;
        case "End":
          this.keyboardFocusTab(this.enabledTabs.length - 1);
          break;
        case "ArrowRight":
          if (enabledTabIndex < this.enabledTabs.length - 1) {
            this.keyboardFocusTab(enabledTabIndex + 1);
          }
          else {
            this.keyboardFocusTab(0);
          }
          break;
        case "ArrowLeft":
          if (enabledTabIndex > 0) {
            this.keyboardFocusTab(enabledTabIndex - 1);
          }
          else {
            this.keyboardFocusTab(this.enabledTabs.length - 1);
          }
          break;
        case "Enter":
          this.keyboardSelectTab(this.focusedTabIndex);
          break;
        case " ":
          this.keyboardSelectTab(this.focusedTabIndex);
          break;
        default:
          preventDefault = false;
      }
      if (preventDefault)
        event.preventDefault();
    };
    this.selectedTab = undefined;
    this.activationType = "automatic";
    this.appearance = "dark";
    this.contextId = "default";
    this.selectedTabIndex = undefined;
  }
  updateSelectedTab(newValue) {
    this.selectedTab = newValue;
  }
  componentDidLoad() {
    this.setControlledMode();
    this.getChildren();
    this.linkTabs();
    this.attatchEventListeners();
    this.setInitialTab();
    this.configureTabs();
  }
  componentWillUpdate() {
    this.configureTabs();
  }
  disconnectedCallback() {
    this.tabGroup.removeEventListener("keydown", this.keydownHandler);
  }
  tabClickHandler(event) {
    if (this.selectedTabIndex === undefined &&
      event.detail.contextId === this.contextId) {
      this.selectedTab = event.detail.position;
    }
    this.icTabSelect.emit({
      tabIndex: event.detail.position,
    });
    this.tabSelect.emit({
      tabIndex: event.detail.position,
    });
    event.stopImmediatePropagation();
  }
  tabCreatedHandler(ev) {
    if (this.tabs && this.tabPanels) {
      (ev.detail.setFocus ? this.newTabs : this.newTabPanels).push(ev.detail);
      if (this.newTabs.length === this.newTabPanels.length) {
        this.tabs.push(...this.newTabs);
        this.tabPanels.push(...this.newTabPanels);
        this.enabledTabs = this.getEnabledTabs();
        this.linkTabs();
        this.newTabs = [];
        this.newTabPanels = [];
      }
    }
  }
  tabEnabledHandler() {
    this.enabledTabs = this.getEnabledTabs();
  }
  /**
   * @internal Used to set tab/tab panel IDs when a tab/tab panel has been removed
   */
  async tabRemovedHandler(hadFocus) {
    this.getChildren();
    this.enabledTabs = this.getEnabledTabs();
    this.linkTabs();
    if (this.tabs[this.selectedTab] && this.tabPanels[this.selectedTab]) {
      this.tabs[this.selectedTab].selected = true;
      this.tabPanels[this.selectedTab].selectedTab =
        this.tabs[this.selectedTab].tabId;
    }
    else {
      this.setInitialTab();
    }
    if (hadFocus) {
      this.tabs[this.selectedTab].setFocus();
    }
  }
  render() {
    return hAsync("slot", null);
  }
  get el() { return getElement(this); }
  static get watchers() { return {
    "selectedTabIndex": ["updateSelectedTab"]
  }; }
  static get cmpMeta() { return {
    "$flags$": 4,
    "$tagName$": "ic-tab-context",
    "$members$": {
      "activationType": [1, "activation-type"],
      "appearance": [1],
      "contextId": [513, "context-id"],
      "selectedTabIndex": [2, "selected-tab-index"],
      "selectedTab": [32],
      "tabRemovedHandler": [64]
    },
    "$listeners$": [[0, "tabClick", "tabClickHandler"], [0, "tabCreated", "tabCreatedHandler"], [0, "tabPanelCreated", "tabCreatedHandler"], [0, "tabEnabled", "tabEnabledHandler"]],
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["contextId", "context-id"]]
  }; }
}

const icTabGroupCss = "/*!@:host*/.sc-ic-tab-group-h{--border-bottom-color:var(--ic-architectural-300);display:block;margin-bottom:var(--ic-space-md);border-bottom:var(--ic-border-default)}/*!@:host(.inline)*/.inline.sc-ic-tab-group-h{margin-bottom:0;border-bottom:none}/*!@.light*/.light.sc-ic-tab-group{border-bottom:var(--ic-border-width) solid var(--ic-architectural-white)}/*!@.tabs-container*/.tabs-container.sc-ic-tab-group{display:flex;flex-direction:row}/*!@.tabs-container::-webkit-scrollbar*/.tabs-container.sc-ic-tab-group::-webkit-scrollbar{display:none}";

class TabGroup {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.appearance = "dark";
    this.contextId = "default";
    this.inline = false;
    this.label = undefined;
  }
  componentDidLoad() {
    onComponentRequiredPropUndefined([{ prop: this.label, propName: "label" }], "Tab Group");
  }
  render() {
    const { appearance, label } = this;
    return (hAsync(Host, { role: "tablist", "aria-label": label, class: {
        ["light"]: appearance === IcThemeForegroundEnum.Light,
        ["inline"]: this.inline,
      } }, hAsync("ic-horizontal-scroll", { appearance: appearance === IcThemeForegroundEnum.Dark
        ? IcThemeForegroundEnum.Default
        : appearance, "focus-trigger": "tabFocus" }, hAsync("div", { class: "tabs-container" }, hAsync("slot", null)))));
  }
  static get delegatesFocus() { return true; }
  static get style() { return icTabGroupCss; }
  static get cmpMeta() { return {
    "$flags$": 25,
    "$tagName$": "ic-tab-group",
    "$members$": {
      "appearance": [1],
      "contextId": [513, "context-id"],
      "inline": [516],
      "label": [1]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["contextId", "context-id"], ["inline", "inline"]]
  }; }
}

const icTabPanelCss = "/*!@:host*/.sc-ic-tab-panel-h{display:block}/*!@:host(.ic-tab-panel-light)*/.ic-tab-panel-light.sc-ic-tab-panel-h{color:white}";

class TabPanel {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.tabPanelCreated = createEvent(this, "tabPanelCreated", 7);
    this.tabPanelRemoved = createEvent(this, "tabPanelRemoved", 7);
    this.appearance = "dark";
    this.contextId = "default";
    this.panelId = undefined;
    this.selectedTab = undefined;
    this.tabPosition = undefined;
  }
  connectedCallback() {
    this.tabPanelCreated.emit(this.el);
  }
  disconnectedCallback() {
    const tabContext = document.querySelector(`ic-tab-context[context-id=${this.contextId}]`);
    if (tabContext) {
      tabContext.tabRemovedHandler();
    }
  }
  render() {
    const { panelId, selectedTab, appearance } = this;
    return (hAsync(Host, { class: {
        ["ic-tab-panel-light"]: appearance === IcThemeForegroundEnum.Light,
      }, role: "tabpanel", hidden: isPropDefined(panelId) && isPropDefined(selectedTab)
        ? !(panelId === selectedTab)
        : true }, hAsync("div", null, hAsync("slot", null))));
  }
  get el() { return getElement(this); }
  static get style() { return icTabPanelCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "ic-tab-panel",
    "$members$": {
      "appearance": [1],
      "contextId": [513, "context-id"],
      "panelId": [513, "panel-id"],
      "selectedTab": [1, "selected-tab"],
      "tabPosition": [514, "tab-position"]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["contextId", "context-id"], ["panelId", "panel-id"], ["tabPosition", "tab-position"]]
  }; }
}

const icTextFieldCss = "/*!@html*/html.sc-ic-text-field{line-height:1.15;-webkit-text-size-adjust:100%}/*!@body*/body.sc-ic-text-field{margin:0}/*!@main*/main.sc-ic-text-field{display:block}/*!@h1*/h1.sc-ic-text-field{font-size:2em;margin:0.67em 0}/*!@hr*/hr.sc-ic-text-field{box-sizing:content-box;height:0;overflow:visible}/*!@pre*/pre.sc-ic-text-field{font-family:monospace, monospace;font-size:1em}/*!@a*/a.sc-ic-text-field{background-color:transparent}/*!@abbr[title]*/abbr[title].sc-ic-text-field{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}/*!@b,\nstrong*/b.sc-ic-text-field,strong.sc-ic-text-field{font-weight:bolder}/*!@code,\nkbd,\nsamp*/code.sc-ic-text-field,kbd.sc-ic-text-field,samp.sc-ic-text-field{font-family:monospace, monospace;font-size:1em}/*!@small*/small.sc-ic-text-field{font-size:80%}/*!@sub,\nsup*/sub.sc-ic-text-field,sup.sc-ic-text-field{font-size:75%;line-height:0;position:relative;vertical-align:baseline}/*!@sub*/sub.sc-ic-text-field{bottom:-0.25em}/*!@sup*/sup.sc-ic-text-field{top:-0.5em}/*!@img*/img.sc-ic-text-field{border-style:none}/*!@button,\ninput,\noptgroup,\nselect,\ntextarea*/button.sc-ic-text-field,input.sc-ic-text-field,optgroup.sc-ic-text-field,select.sc-ic-text-field,textarea.sc-ic-text-field{font-family:inherit;font-size:100%;line-height:1.15;margin:0}/*!@button,\ninput*/button.sc-ic-text-field,input.sc-ic-text-field{overflow:visible}/*!@button,\nselect*/button.sc-ic-text-field,select.sc-ic-text-field{text-transform:none}/*!@button,\n[type=\"button\"],\n[type=\"reset\"],\n[type=\"submit\"]*/button.sc-ic-text-field,[type=\"button\"].sc-ic-text-field,[type=\"reset\"].sc-ic-text-field,[type=\"submit\"].sc-ic-text-field{-webkit-appearance:button}/*!@button::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner*/button.sc-ic-text-field::-moz-focus-inner,[type=\"button\"].sc-ic-text-field::-moz-focus-inner,[type=\"reset\"].sc-ic-text-field::-moz-focus-inner,[type=\"submit\"].sc-ic-text-field::-moz-focus-inner{border-style:none;padding:0}/*!@button:-moz-focusring,\n[type=\"button\"]:-moz-focusring,\n[type=\"reset\"]:-moz-focusring,\n[type=\"submit\"]:-moz-focusring*/button.sc-ic-text-field:-moz-focusring,[type=\"button\"].sc-ic-text-field:-moz-focusring,[type=\"reset\"].sc-ic-text-field:-moz-focusring,[type=\"submit\"].sc-ic-text-field:-moz-focusring{outline:1px dotted ButtonText}/*!@fieldset*/fieldset.sc-ic-text-field{padding:0.35em 0.75em 0.625em}/*!@legend*/legend.sc-ic-text-field{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}/*!@progress*/progress.sc-ic-text-field{vertical-align:baseline}/*!@textarea*/textarea.sc-ic-text-field{overflow:auto}/*!@[type=\"checkbox\"],\n[type=\"radio\"]*/[type=\"checkbox\"].sc-ic-text-field,[type=\"radio\"].sc-ic-text-field{box-sizing:border-box;padding:0}/*!@[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button*/[type=\"number\"].sc-ic-text-field::-webkit-inner-spin-button,[type=\"number\"].sc-ic-text-field::-webkit-outer-spin-button{height:auto}/*!@[type=\"search\"]*/[type=\"search\"].sc-ic-text-field{-webkit-appearance:textfield;outline-offset:-2px}/*!@[type=\"search\"]::-webkit-search-decoration*/[type=\"search\"].sc-ic-text-field::-webkit-search-decoration{-webkit-appearance:none}/*!@::-webkit-file-upload-button*/.sc-ic-text-field::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}/*!@details*/details.sc-ic-text-field{display:block}/*!@summary*/summary.sc-ic-text-field{display:list-item}/*!@template*/template.sc-ic-text-field{display:none}/*!@[hidden]*/[hidden].sc-ic-text-field{display:none}/*!@html,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo*/html.sc-ic-text-field,body.sc-ic-text-field,div.sc-ic-text-field,span.sc-ic-text-field,applet.sc-ic-text-field,object.sc-ic-text-field,iframe.sc-ic-text-field,h1.sc-ic-text-field,h2.sc-ic-text-field,h3.sc-ic-text-field,h4.sc-ic-text-field,h5.sc-ic-text-field,h6.sc-ic-text-field,p.sc-ic-text-field,blockquote.sc-ic-text-field,pre.sc-ic-text-field,a.sc-ic-text-field,abbr.sc-ic-text-field,acronym.sc-ic-text-field,address.sc-ic-text-field,big.sc-ic-text-field,cite.sc-ic-text-field,code.sc-ic-text-field,del.sc-ic-text-field,dfn.sc-ic-text-field,em.sc-ic-text-field,img.sc-ic-text-field,ins.sc-ic-text-field,kbd.sc-ic-text-field,q.sc-ic-text-field,s.sc-ic-text-field,samp.sc-ic-text-field,small.sc-ic-text-field,strike.sc-ic-text-field,strong.sc-ic-text-field,sub.sc-ic-text-field,sup.sc-ic-text-field,tt.sc-ic-text-field,var.sc-ic-text-field,b.sc-ic-text-field,u.sc-ic-text-field,i.sc-ic-text-field,center.sc-ic-text-field,dl.sc-ic-text-field,dt.sc-ic-text-field,dd.sc-ic-text-field,ol.sc-ic-text-field,ul.sc-ic-text-field,li.sc-ic-text-field,fieldset.sc-ic-text-field,form.sc-ic-text-field,label.sc-ic-text-field,legend.sc-ic-text-field,table.sc-ic-text-field,caption.sc-ic-text-field,tbody.sc-ic-text-field,tfoot.sc-ic-text-field,thead.sc-ic-text-field,tr.sc-ic-text-field,th.sc-ic-text-field,td.sc-ic-text-field,article.sc-ic-text-field,aside.sc-ic-text-field,canvas.sc-ic-text-field,details.sc-ic-text-field,embed.sc-ic-text-field,figure.sc-ic-text-field,figcaption.sc-ic-text-field,footer.sc-ic-text-field,header.sc-ic-text-field,hgroup.sc-ic-text-field,menu.sc-ic-text-field,nav.sc-ic-text-field,output.sc-ic-text-field,ruby.sc-ic-text-field,section.sc-ic-text-field,summary.sc-ic-text-field,time.sc-ic-text-field,mark.sc-ic-text-field,audio.sc-ic-text-field,video.sc-ic-text-field{margin:0;padding:0;border:0;font-size:100%;font-style:inherit;vertical-align:baseline}/*!@:host*/.sc-ic-text-field-h{display:block}/*!@:host(.fullwidth)*/.fullwidth.sc-ic-text-field-h{width:100%}/*!@::-moz-placeholder*/.sc-ic-text-field::-moz-placeholder{color:var(--ic-color-tertiary-text);opacity:1}/*!@::placeholder*/.sc-ic-text-field::placeholder{color:var(--ic-color-tertiary-text);opacity:1}/*!@input,\ntextarea*/input.sc-ic-text-field,textarea.sc-ic-text-field{border:0;border-radius:var(--ic-border-radius);background-color:var(--ic-architectural-white);line-height:1.5rem;letter-spacing:0.005rem;width:100%;padding-right:var(--ic-space-xs);padding-left:var(--ic-space-xs)}/*!@textarea*/textarea.sc-ic-text-field{min-height:var(--ic-space-lg);resize:vertical;padding-top:0.375rem}/*!@input:focus,\ntextarea:focus*/input.sc-ic-text-field:focus,textarea.sc-ic-text-field:focus{border:0;outline:0}/*!@input:disabled,\ntextarea:disabled*/input.sc-ic-text-field:disabled,textarea.sc-ic-text-field:disabled{color:var(--ic-architectural-200)}/*!@input.readonly,\ntextarea.readonly*/input.readonly.sc-ic-text-field,textarea.readonly.sc-ic-text-field{color:var(--ic-color-primary-text)}/*!@input::-webkit-outer-spin-button,\ninput::-webkit-inner-spin-button*/input.sc-ic-text-field::-webkit-outer-spin-button,input.sc-ic-text-field::-webkit-inner-spin-button{-webkit-appearance:none;margin:0}/*!@input[type=\"number\"]*/input[type=\"number\"].sc-ic-text-field{-moz-appearance:textfield}/*!@textarea.no-resize*/textarea.no-resize.sc-ic-text-field{resize:none}/*!@.maxlengthtext*/.maxlengthtext.sc-ic-text-field{color:var(--ic-color-secondary-text)}/*!@.no-left-pad*/.no-left-pad.sc-ic-text-field{padding-left:0}/*!@::slotted([slot=\"icon\"])*/.sc-ic-text-field-s>[slot=\"icon\"]{fill:var(--ic-color-tertiary-text)}/*!@.has-value ::slotted([slot=\"icon\"])*/.has-value .sc-ic-text-field-s>[slot=\"icon\"]{fill:var(--ic-color-primary-text)}/*!@.charcount*/.charcount.sc-ic-text-field{margin-right:calc(-1 * var(--ic-space-xxxs))}/*!@input[type=\"search\"]::-webkit-search-cancel-button,\ninput[type=\"search\"]::-webkit-search-decoration,\ninput[type=\"search\"]::-webkit-search-results-button,\ninput[type=\"search\"]::-webkit-search-results-decoration*/input[type=\"search\"].sc-ic-text-field::-webkit-search-cancel-button,input[type=\"search\"].sc-ic-text-field::-webkit-search-decoration,input[type=\"search\"].sc-ic-text-field::-webkit-search-results-button,input[type=\"search\"].sc-ic-text-field::-webkit-search-results-decoration{display:none}/*!@input[type=\"search\"].truncate-value*/input[type=\"search\"].truncate-value.sc-ic-text-field{width:100%;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}@media (forced-colors: active){/*!@input.readonly,\n  textarea.readonly*/input.readonly.sc-ic-text-field,textarea.readonly.sc-ic-text-field{color:canvastext}/*!@.has-value ::slotted([slot=\"icon\"])*/.has-value .sc-ic-text-field-s>[slot=\"icon\"]{fill:currentcolor}}";

let inputIds = 0;
/**
 * @slot icon - Content will be placed to the left of the text input.
 */
class TextField {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.getValidationText = createEvent(this, "getValidationText", 7);
    this.icBlur = createEvent(this, "icBlur", 7);
    this.icChange = createEvent(this, "icChange", 7);
    this.icFocus = createEvent(this, "icFocus", 7);
    this.icInput = createEvent(this, "icInput", 7);
    this.icKeydown = createEvent(this, "icKeydown", 7);
    this.inheritedAttributes = {};
    this.showLeftIcon = this.hasLeftIconSlot();
    this.getMaxLengthExceeded = (value) => {
      this.numChars = value.length;
      if (this.type === "number") {
        this.minValueUnattained =
          value && Number(value) < Number(this.min) ? true : false;
        this.maxValueExceeded = Number(value) > Number(this.max) ? true : false;
      }
      if (this.maxLength > 0) {
        this.maxLengthExceeded = value.length > this.maxLength ? true : false;
      }
    };
    this.onInput = (ev) => {
      this.value = ev.target.value;
      this.icInput.emit({ value: this.value });
    };
    this.onBlur = (ev) => {
      const value = ev.target.value;
      this.icBlur.emit({ value: value });
    };
    this.onFocus = (ev) => {
      const value = ev.target.value;
      this.icFocus.emit({ value: value });
    };
    this.isTextArea = () => {
      return this.rows > 1;
    };
    this.getInlineValidationText = () => {
      this.getValidationText.emit({ value: this.validationText });
    };
    this.hasStatus = (status) => {
      return status !== "" && !this.disabled;
    };
    this.showStatusText = (status) => {
      return (this.hasStatus(status) &&
        !(status == IcInformationStatus.Success && this.validationInline) &&
        !this.validationInlineInternal);
    };
    this.handleFormReset = () => {
      this.value = this.initialValue;
    };
    this.numChars = 0;
    this.maxLengthExceeded = false;
    this.maxValueExceeded = false;
    this.minValueUnattained = false;
    this.ariaActiveDescendant = undefined;
    this.ariaAutocomplete = undefined;
    this.ariaExpanded = undefined;
    this.ariaOwns = undefined;
    this.autocapitalize = "off";
    this.autocomplete = "off";
    this.autocorrect = "off";
    this.autoFocus = false;
    this.disabled = false;
    this.fullWidth = false;
    this.helperText = "";
    this.hideLabel = false;
    this.hiddenInput = true;
    this.inputId = `ic-text-field-input-${inputIds++}`;
    this.inputmode = "text";
    this.label = undefined;
    this.max = undefined;
    this.maxLength = 0;
    this.min = undefined;
    this.name = this.inputId;
    this.placeholder = "";
    this.readonly = false;
    this.required = false;
    this.resize = false;
    this.role = undefined;
    this.rows = 1;
    this.size = "default";
    this.small = false;
    this.spellcheck = false;
    this.truncateValue = undefined;
    this.type = "text";
    this.validationInline = false;
    this.validationInlineInternal = false;
    this.validationStatus = "";
    this.validationText = "";
    this.debounce = 0;
    this.value = "";
    this.initialValue = this.value;
  }
  debounceChanged() {
    this.icChange = debounceEvent(this.icChange, this.debounce);
  }
  watchValueHandler(newValue) {
    if (this.inputEl && this.inputEl.value !== newValue) {
      this.inputEl.value = newValue;
    }
    this.getMaxLengthExceeded(newValue);
    this.icChange.emit({ value: newValue });
  }
  connectedCallback() {
    this.debounceChanged();
  }
  disconnectedCallback() {
    removeFormResetListener(this.el, this.handleFormReset);
  }
  componentWillLoad() {
    if (this.value !== this.initialValue) {
      this.watchValueHandler(this.value);
    }
    this.getMaxLengthExceeded(this.value);
    this.inheritedAttributes = inheritAttributes(this.el, [
      ...IC_INHERITED_ARIA,
      "title",
    ]);
    if (this.readonly) {
      this.maxLengthExceeded = false;
      this.maxValueExceeded = false;
      this.minValueUnattained = false;
    }
    addFormResetListener(this.el, this.handleFormReset);
    removeDisabledFalse(this.disabled, this.el);
  }
  componentDidLoad() {
    onComponentRequiredPropUndefined([{ prop: this.label, propName: "label" }], "Text Field");
    if (this.validationInlineInternal) {
      this.getInlineValidationText();
    }
  }
  handleKeyDown(ev) {
    this.icKeydown.emit({ event: ev });
  }
  /**
   * Sets focus on the native `input`.
   */
  async setFocus() {
    if (this.inputEl) {
      this.inputEl.focus();
    }
  }
  hasLeftIconSlot() {
    const iconEl = this.el.querySelector(`[slot="icon"]`);
    return iconEl !== null;
  }
  render() {
    const { inputId, name, label, required, size, small, placeholder, helperText, rows, resize, disabled, value, min, max, maxLength, numChars, readonly, maxLengthExceeded, minValueUnattained, maxValueExceeded, validationStatus, validationText, validationInline, validationInlineInternal, spellcheck, inputmode, fullWidth, truncateValue, hiddenInput, } = this;
    const disabledMode = readonly ? true : disabled;
    const placeholderText = disabled ? "" : placeholder;
    const currentStatus = maxLengthExceeded || maxValueExceeded || minValueUnattained
      ? IcInformationStatus.Error
      : validationStatus;
    const currentValidationText = maxLengthExceeded
      ? "Maximum length exceeded"
      : maxValueExceeded
        ? `Maximum value of ${max} exceeded`
        : minValueUnattained
          ? `Minimum value of ${min} not met`
          : validationText;
    const maxNumChars = readonly ? 0 : maxLength;
    const messageAriaLive = maxLengthExceeded ||
      maxValueExceeded ||
      minValueUnattained ||
      (maxLength === 0 && currentStatus === IcInformationStatus.Error)
      ? "assertive"
      : "polite";
    const showStatusText = this.showStatusText(currentStatus);
    const multiline = this.isTextArea();
    const hiddenCharCountDescId = maxLength > 0 ? inputId + "-charcount-desc" : "";
    const describedBy = (hiddenCharCountDescId +
      " " +
      getInputDescribedByText(inputId, helperText !== "", showStatusText)).trim();
    if (this.showLeftIcon && !readonly && disabledMode) {
      this.showLeftIcon = false;
    }
    const invalid = currentStatus === IcInformationStatus.Error ? "true" : "false";
    const disabledText = disabledMode && !readonly;
    if (hiddenInput) {
      renderHiddenInput(true, this.el, name, value, disabledMode);
    }
    return (hAsync(Host, { class: { ["fullwidth"]: fullWidth } }, hAsync("ic-input-container", { readonly: readonly, disabled: disabledMode }, !this.hideLabel && (hAsync("ic-input-label", { for: inputId, label: label, helperText: helperText, required: required, disabled: disabledText, readonly: readonly })), hAsync("ic-input-component-container", { size: small ? "small" : size, validationStatus: currentStatus, multiLine: multiline, disabled: disabledMode, readonly: readonly, validationInline: validationInline, fullWidth: fullWidth }, this.showLeftIcon && (hAsync("span", { class: {
        ["readonly"]: readonly,
        ["has-value"]: value.length > 0,
      }, slot: "left-icon" }, hAsync("slot", { name: "icon" }))), !multiline && (hAsync("input", Object.assign({ id: inputId, name: name, ref: (el) => (this.inputEl = el), type: this.type, min: min, max: max, value: value, class: {
        ["no-left-pad"]: !this.showLeftIcon && readonly,
        ["readonly"]: readonly,
        ["truncate-value"]: truncateValue,
      }, placeholder: placeholderText, required: required, disabled: disabledMode, readonly: readonly, onInput: this.onInput, onBlur: this.onBlur, onFocus: this.onFocus, "aria-label": label, "aria-describedby": describedBy, "aria-invalid": invalid, "aria-activedescendant": this.ariaActiveDescendant, "aria-expanded": this.ariaExpanded, "aria-owns": this.ariaOwns, autocomplete: this.autocomplete, autocapitalize: this.autocapitalize, autoFocus: this.autoFocus, spellcheck: spellcheck, inputmode: inputmode, role: this.role }, this.inheritedAttributes))), multiline && (hAsync("textarea", Object.assign({ id: inputId, class: {
        ["no-resize"]: resize === false || readonly,
        ["no-left-pad"]: !this.showLeftIcon && readonly,
        ["readonly"]: readonly,
      }, name: name, ref: (el) => (this.inputEl = el), value: value, rows: rows, required: required, disabled: disabledMode, placeholder: placeholderText, readonly: readonly, onInput: this.onInput, onBlur: this.onBlur, onFocus: this.onFocus, "aria-label": label, "aria-describedby": describedBy, "aria-invalid": invalid, autocapitalize: this.autocapitalize, autoFocus: this.autoFocus, spellcheck: spellcheck, inputmode: inputmode }, this.inheritedAttributes))), isSlotUsed$1(this.el, "clear-button") && (hAsync("slot", { name: "clear-button" })), isSlotUsed$1(this.el, "search-submit-button") && (hAsync("slot", { name: "search-submit-button" }))), isSlotUsed$1(this.el, "menu") && hAsync("slot", { name: "menu" }), (!isEmptyString(validationStatus) ||
      !isEmptyString(validationText) ||
      maxNumChars > 0 ||
      maxValueExceeded ||
      minValueUnattained) &&
      !validationInlineInternal && (hAsync("ic-input-validation", { status: this.hasStatus(currentStatus) === false ||
        (currentStatus === IcInformationStatus.Success &&
          validationInline) ||
        validationInlineInternal
        ? ""
        : currentStatus, message: showStatusText ? currentValidationText : "", ariaLiveMode: messageAriaLive, for: inputId, fullWidth: fullWidth }, !readonly && maxNumChars > 0 && (hAsync("div", { slot: "validation-message-adornment" }, hAsync("ic-typography", { variant: "caption", class: {
        ["maxlengthtext"]: true,
        ["error"]: maxLengthExceeded,
        ["disabled"]: disabledText,
      } }, hAsync("span", { "aria-live": "polite", id: `${inputId}-charcount`, class: "charcount" }, numChars, "/", maxNumChars), hAsync("span", { hidden: true, id: hiddenCharCountDescId }, "Field can contain a maximum of ", maxNumChars, " characters.")))))))));
  }
  get el() { return getElement(this); }
  static get watchers() { return {
    "debounce": ["debounceChanged"],
    "value": ["watchValueHandler"]
  }; }
  static get style() { return icTextFieldCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "ic-text-field",
    "$members$": {
      "ariaActiveDescendant": [1, "aria-active-descendant"],
      "ariaAutocomplete": [1, "aria-autocomplete"],
      "ariaExpanded": [1, "aria-expanded"],
      "ariaOwns": [1, "aria-owns"],
      "autocapitalize": [1],
      "autocomplete": [1],
      "autocorrect": [1],
      "autoFocus": [4, "auto-focus"],
      "disabled": [4],
      "fullWidth": [4, "full-width"],
      "helperText": [1, "helper-text"],
      "hideLabel": [4, "hide-label"],
      "hiddenInput": [4, "hidden-input"],
      "inputId": [1, "input-id"],
      "inputmode": [1],
      "label": [1],
      "max": [8],
      "maxLength": [2, "max-length"],
      "min": [8],
      "name": [1],
      "placeholder": [1],
      "readonly": [516],
      "required": [4],
      "resize": [4],
      "role": [1],
      "rows": [2],
      "size": [1],
      "small": [4],
      "spellcheck": [4],
      "truncateValue": [4, "truncate-value"],
      "type": [1],
      "validationInline": [4, "validation-inline"],
      "validationInlineInternal": [4, "validation-inline-internal"],
      "validationStatus": [1, "validation-status"],
      "validationText": [1, "validation-text"],
      "debounce": [2],
      "value": [1537],
      "numChars": [32],
      "maxLengthExceeded": [32],
      "maxValueExceeded": [32],
      "minValueUnattained": [32],
      "initialValue": [32],
      "setFocus": [64]
    },
    "$listeners$": [[0, "keydown", "handleKeyDown"]],
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["readonly", "readonly"], ["value", "value"]]
  }; }
}

class Theme {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.themeChange = createEvent(this, "themeChange", 7);
    this.checkThemeColorContrast = () => {
      if (getThemeColorBrightness() < BLACK_MIN_COLOR_BRIGHTNESS &&
        getThemeColorBrightness() > WHITE_MAX_COLOR_BRIGHTNESS) {
        console.warn(`The theme colour does not provide enough contrast with either of the ICDS black or white foreground colours. Consider choosing a colour with a different brightness to achieve sufficient colour contrast for good visibility. See https://www.w3.org/TR/AERT/#color-contrast for more information about colour contrast.`);
      }
    };
    this.setThemeColor = () => {
      if (this.color !== null) {
        let colorRGBA = null;
        const firstChar = this.color.slice(0, 1);
        if (firstChar === "#") {
          colorRGBA = hexToRgba(this.color);
        }
        else if (firstChar.toLowerCase() === "r") {
          colorRGBA = rgbaStrToObj(this.color);
        }
        this.setThemeRGBA(colorRGBA);
      }
    };
    this.setThemeRGBA = (colorRGBA) => {
      if (colorRGBA !== null) {
        const root = document.documentElement;
        root.style.setProperty("--ic-theme-primary-r", colorRGBA.r.toString());
        root.style.setProperty("--ic-theme-primary-g", colorRGBA.g.toString());
        root.style.setProperty("--ic-theme-primary-b", colorRGBA.b.toString());
        root.style.setProperty("--ic-theme-primary-a", colorRGBA.a.toString());
        this.checkThemeColorContrast();
        const foregroundColor = getThemeForegroundColor();
        this.themeChange.emit({ mode: foregroundColor, color: colorRGBA });
      }
    };
    this.color = null;
  }
  watchColorPropHandler() {
    this.setThemeColor();
  }
  componentWillLoad() {
    this.setThemeColor();
  }
  render() {
    return hAsync(Host, null);
  }
  static get watchers() { return {
    "color": ["watchColorPropHandler"]
  }; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "ic-theme",
    "$members$": {
      "color": [1]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": []
  }; }
}

const icToastCss = "/*!@html*/html.sc-ic-toast{line-height:1.15;-webkit-text-size-adjust:100%}/*!@body*/body.sc-ic-toast{margin:0}/*!@main*/main.sc-ic-toast{display:block}/*!@h1*/h1.sc-ic-toast{font-size:2em;margin:0.67em 0}/*!@hr*/hr.sc-ic-toast{box-sizing:content-box;height:0;overflow:visible}/*!@pre*/pre.sc-ic-toast{font-family:monospace, monospace;font-size:1em}/*!@a*/a.sc-ic-toast{background-color:transparent}/*!@abbr[title]*/abbr[title].sc-ic-toast{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}/*!@b,\nstrong*/b.sc-ic-toast,strong.sc-ic-toast{font-weight:bolder}/*!@code,\nkbd,\nsamp*/code.sc-ic-toast,kbd.sc-ic-toast,samp.sc-ic-toast{font-family:monospace, monospace;font-size:1em}/*!@small*/small.sc-ic-toast{font-size:80%}/*!@sub,\nsup*/sub.sc-ic-toast,sup.sc-ic-toast{font-size:75%;line-height:0;position:relative;vertical-align:baseline}/*!@sub*/sub.sc-ic-toast{bottom:-0.25em}/*!@sup*/sup.sc-ic-toast{top:-0.5em}/*!@img*/img.sc-ic-toast{border-style:none}/*!@button,\ninput,\noptgroup,\nselect,\ntextarea*/button.sc-ic-toast,input.sc-ic-toast,optgroup.sc-ic-toast,select.sc-ic-toast,textarea.sc-ic-toast{font-family:inherit;font-size:100%;line-height:1.15;margin:0}/*!@button,\ninput*/button.sc-ic-toast,input.sc-ic-toast{overflow:visible}/*!@button,\nselect*/button.sc-ic-toast,select.sc-ic-toast{text-transform:none}/*!@button,\n[type=\"button\"],\n[type=\"reset\"],\n[type=\"submit\"]*/button.sc-ic-toast,[type=\"button\"].sc-ic-toast,[type=\"reset\"].sc-ic-toast,[type=\"submit\"].sc-ic-toast{-webkit-appearance:button}/*!@button::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner*/button.sc-ic-toast::-moz-focus-inner,[type=\"button\"].sc-ic-toast::-moz-focus-inner,[type=\"reset\"].sc-ic-toast::-moz-focus-inner,[type=\"submit\"].sc-ic-toast::-moz-focus-inner{border-style:none;padding:0}/*!@button:-moz-focusring,\n[type=\"button\"]:-moz-focusring,\n[type=\"reset\"]:-moz-focusring,\n[type=\"submit\"]:-moz-focusring*/button.sc-ic-toast:-moz-focusring,[type=\"button\"].sc-ic-toast:-moz-focusring,[type=\"reset\"].sc-ic-toast:-moz-focusring,[type=\"submit\"].sc-ic-toast:-moz-focusring{outline:1px dotted ButtonText}/*!@fieldset*/fieldset.sc-ic-toast{padding:0.35em 0.75em 0.625em}/*!@legend*/legend.sc-ic-toast{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}/*!@progress*/progress.sc-ic-toast{vertical-align:baseline}/*!@textarea*/textarea.sc-ic-toast{overflow:auto}/*!@[type=\"checkbox\"],\n[type=\"radio\"]*/[type=\"checkbox\"].sc-ic-toast,[type=\"radio\"].sc-ic-toast{box-sizing:border-box;padding:0}/*!@[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button*/[type=\"number\"].sc-ic-toast::-webkit-inner-spin-button,[type=\"number\"].sc-ic-toast::-webkit-outer-spin-button{height:auto}/*!@[type=\"search\"]*/[type=\"search\"].sc-ic-toast{-webkit-appearance:textfield;outline-offset:-2px}/*!@[type=\"search\"]::-webkit-search-decoration*/[type=\"search\"].sc-ic-toast::-webkit-search-decoration{-webkit-appearance:none}/*!@::-webkit-file-upload-button*/.sc-ic-toast::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}/*!@details*/details.sc-ic-toast{display:block}/*!@summary*/summary.sc-ic-toast{display:list-item}/*!@template*/template.sc-ic-toast{display:none}/*!@[hidden]*/[hidden].sc-ic-toast{display:none}/*!@html,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo*/html.sc-ic-toast,body.sc-ic-toast,div.sc-ic-toast,span.sc-ic-toast,applet.sc-ic-toast,object.sc-ic-toast,iframe.sc-ic-toast,h1.sc-ic-toast,h2.sc-ic-toast,h3.sc-ic-toast,h4.sc-ic-toast,h5.sc-ic-toast,h6.sc-ic-toast,p.sc-ic-toast,blockquote.sc-ic-toast,pre.sc-ic-toast,a.sc-ic-toast,abbr.sc-ic-toast,acronym.sc-ic-toast,address.sc-ic-toast,big.sc-ic-toast,cite.sc-ic-toast,code.sc-ic-toast,del.sc-ic-toast,dfn.sc-ic-toast,em.sc-ic-toast,img.sc-ic-toast,ins.sc-ic-toast,kbd.sc-ic-toast,q.sc-ic-toast,s.sc-ic-toast,samp.sc-ic-toast,small.sc-ic-toast,strike.sc-ic-toast,strong.sc-ic-toast,sub.sc-ic-toast,sup.sc-ic-toast,tt.sc-ic-toast,var.sc-ic-toast,b.sc-ic-toast,u.sc-ic-toast,i.sc-ic-toast,center.sc-ic-toast,dl.sc-ic-toast,dt.sc-ic-toast,dd.sc-ic-toast,ol.sc-ic-toast,ul.sc-ic-toast,li.sc-ic-toast,fieldset.sc-ic-toast,form.sc-ic-toast,label.sc-ic-toast,legend.sc-ic-toast,table.sc-ic-toast,caption.sc-ic-toast,tbody.sc-ic-toast,tfoot.sc-ic-toast,thead.sc-ic-toast,tr.sc-ic-toast,th.sc-ic-toast,td.sc-ic-toast,article.sc-ic-toast,aside.sc-ic-toast,canvas.sc-ic-toast,details.sc-ic-toast,embed.sc-ic-toast,figure.sc-ic-toast,figcaption.sc-ic-toast,footer.sc-ic-toast,header.sc-ic-toast,hgroup.sc-ic-toast,menu.sc-ic-toast,nav.sc-ic-toast,output.sc-ic-toast,ruby.sc-ic-toast,section.sc-ic-toast,summary.sc-ic-toast,time.sc-ic-toast,mark.sc-ic-toast,audio.sc-ic-toast,video.sc-ic-toast{margin:0;padding:0;border:0;font-size:100%;font-style:inherit;vertical-align:baseline}/*!@:host*/.sc-ic-toast-h{--bottom-position:var(--ic-space-xl);position:fixed;bottom:var(--bottom-position);left:50%;transform:translate(-50%);animation:fadein var(--ic-transition-duration-slow) ease-in-out;z-index:var(--ic-z-index-toast)}/*!@:host(.hidden)*/.hidden.sc-ic-toast-h{display:none;animation:fadeout var(--ic-transition-duration-slow) ease-in-out}/*!@.container*/.container.sc-ic-toast{max-width:32.5rem;min-width:18rem;box-shadow:var(--ic-elevation-overlay);min-height:3.5rem;background-color:var(--ic-architectural-800);color:var(--ic-color-white-text);display:flex;align-items:center;position:relative;border-radius:var(--ic-border-radius)}/*!@.toast-icon-container*/.toast-icon-container.sc-ic-toast{height:100%;display:flex;align-items:center}/*!@.divider*/.divider.sc-ic-toast{height:100%;width:var(--ic-space-xs);position:absolute;border-radius:var(--ic-space-xxxs) 0 0 var(--ic-space-xxxs)}/*!@.divider-neutral*/.divider-neutral.sc-ic-toast{background-color:var(--ic-status-unknown)}/*!@.divider-info*/.divider-info.sc-ic-toast{background-color:var(--ic-status-info-contrast)}/*!@.divider-warning*/.divider-warning.sc-ic-toast{background-color:var(--ic-status-warning-contrast)}/*!@.divider-error*/.divider-error.sc-ic-toast{background-color:var(--ic-status-error-contrast)}/*!@.divider-success*/.divider-success.sc-ic-toast{background-color:var(--ic-status-success-contrast)}/*!@.toast-icon,\n::slotted(svg)*/.toast-icon.sc-ic-toast,.sc-ic-toast-s>svg{height:var(--ic-space-lg);width:var(--ic-space-lg);margin-left:var(--ic-space-md)}/*!@:host([variant=\"neutral\"]) .toast-icon svg,\n::slotted(svg)*/[variant=\"neutral\"].sc-ic-toast-h .toast-icon.sc-ic-toast svg.sc-ic-toast,.sc-ic-toast-s>svg{fill:var(--ic-status-unknown)}/*!@:host([variant=\"info\"]) .toast-icon svg*/[variant=\"info\"].sc-ic-toast-h .toast-icon.sc-ic-toast svg.sc-ic-toast{fill:var(--ic-status-info-contrast)}/*!@:host([variant=\"warning\"]) .toast-icon svg*/[variant=\"warning\"].sc-ic-toast-h .toast-icon.sc-ic-toast svg.sc-ic-toast{fill:var(--ic-status-warning-contrast)}/*!@:host([variant=\"error\"]) .toast-icon svg*/[variant=\"error\"].sc-ic-toast-h .toast-icon.sc-ic-toast svg.sc-ic-toast{fill:var(--ic-status-error-contrast)}/*!@:host([variant=\"success\"]) .toast-icon svg*/[variant=\"success\"].sc-ic-toast-h .toast-icon.sc-ic-toast svg.sc-ic-toast{fill:var(--ic-status-success-contrast)}/*!@.toast-content*/.toast-content.sc-ic-toast{margin-left:var(--ic-space-xs);width:100%}/*!@.no-icon*/.no-icon.sc-ic-toast{margin-left:var(--ic-space-md)}/*!@.toast-message*/.toast-message.sc-ic-toast{padding:var(--ic-space-xs) var(--ic-space-xs) var(--ic-space-xs) 0}/*!@.toast-action-container*/.toast-action-container.sc-ic-toast{padding-bottom:var(--ic-space-md)}/*!@ic-button,\n.toast-dismiss-timer*/ic-button.sc-ic-toast,.toast-dismiss-timer.sc-ic-toast{padding:var(--ic-space-xs)}@media (max-width: 576px){/*!@:host*/.sc-ic-toast-h{--bottom-position:var(--ic-space-lg);width:calc(100% - 2 * var(--ic-space-md))}}@media (min-width: 993px){/*!@:host*/.sc-ic-toast-h{--bottom-position:calc(var(--ic-space-xl) + var(--ic-space-xs))}}@media (forced-colors: active){/*!@.container*/.container.sc-ic-toast{border:var(--ic-hc-border)}}@keyframes fadein{from{bottom:0;opacity:0}to{bottom:var(--bottom-position);opacity:1}}@keyframes fadeout{from{bottom:var(--bottom-position);opacity:1}to{bottom:0;opacity:0}}";

const AUTO_DISMISS_TIMER_REFRESH_RATE_MS = 1000;
const TOAST_HEADING_CHAR_LIMIT = 70;
const TOAST_MESSAGE_CHAR_LIMIT = 140;
/**
 * @slot action - IcButton or IcLink is placed below header and message. If used will default toast to manual `dismiss` type.
 * @slot neutral-icon - A custom neutral icon is placed on the left side of the component. If used will default toast to `neutral` variant.
 */
class Toast {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.icDismiss = createEvent(this, "icDismiss", 7);
    this.interactiveElements = [];
    this.dismissAction = () => {
      this.icDismiss.emit();
    };
    this.handleProgressChange = () => {
      this.timerProgress -=
        (AUTO_DISMISS_TIMER_REFRESH_RATE_MS / this.autoDismissTimeout) * 100;
    };
    this.timerProgress = 100;
    this.visible = false;
    this.autoDismissTimeout = 5000;
    this.dismissButtonAriaLabel = "dismiss";
    this.dismissMode = "manual";
    this.heading = undefined;
    this.message = undefined;
    this.neutralIconAriaLabel = undefined;
    this.variant = undefined;
  }
  disconnectedCallback() {
    window.clearTimeout(this.dismissTimeout);
    window.clearInterval(this.timerRefreshInterval);
  }
  componentWillLoad() {
    var _a, _b;
    this.handleLongText(this.heading.length > TOAST_HEADING_CHAR_LIMIT, ((_a = this.message) === null || _a === void 0 ? void 0 : _a.length) > TOAST_MESSAGE_CHAR_LIMIT);
    if (this.autoDismissTimeout < 5000)
      this.autoDismissTimeout = 5000;
    if (isSlotUsed$1(this.el, "action"))
      this.dismissMode = "manual";
    this.isManual = this.dismissMode === "manual";
    if (isSlotUsed$1(this.el, "neutral-icon"))
      this.variant = "neutral";
    if (this.variant === "neutral") {
      this.neutralVariantLabel =
        (_b = this.neutralIconAriaLabel) !== null && _b !== void 0 ? _b : VARIANT_ICONS[this.variant].ariaLabel;
    }
    if (this.isManual) {
      const toastMessage = isPropDefined(this.message)
        ? `. ${this.message}`
        : "";
      this.el.setAttribute("aria-label", this.variant
        ? this.neutralVariantLabel || VARIANT_ICONS[this.variant].ariaLabel
        : this.heading);
      (this.variant || this.message) &&
        this.el.setAttribute("aria-description", this.variant ? `${this.heading}${toastMessage}` : this.message);
    }
  }
  componentDidLoad() {
    onComponentRequiredPropUndefined([{ prop: this.heading, propName: "heading" }], "Toast");
    const actionContent = getSlot$1(this.el, "action");
    const dismissButton = this.el.shadowRoot.querySelector("ic-button");
    if (actionContent)
      this.interactiveElements.push(actionContent);
    if (dismissButton)
      this.interactiveElements.push(dismissButton);
  }
  handleDismiss() {
    this.visible = false;
    clearInterval(this.timerRefreshInterval);
    this.timerProgress = 100;
  }
  handleKeyboard(ev) {
    if (this.isManual && this.visible) {
      switch (ev.key) {
        case "Tab":
          ev.preventDefault();
          this.findNextInteractiveElement(ev.shiftKey).setFocus();
          break;
        case "Escape":
          !ev.repeat && this.dismissAction();
          ev.stopImmediatePropagation();
          break;
      }
    }
  }
  handleTimer(ev) {
    if (!this.isManual) {
      switch (ev.type) {
        case "mouseenter":
          window.clearTimeout(this.dismissTimeout);
          window.clearInterval(this.timerRefreshInterval);
          this.timerProgress = 100;
          break;
        case "mouseleave":
          this.dismissTimeout = window.setTimeout(this.dismissAction, this.autoDismissTimeout);
          this.timerRefreshInterval = window.setInterval(this.handleProgressChange, AUTO_DISMISS_TIMER_REFRESH_RATE_MS);
          break;
      }
    }
  }
  /**
   * @internal Used to display the individual toast.
   * @returns The element that previously had focus before the toast appeared
   */
  async setVisible() {
    if (!this.visible)
      this.visible = true;
    if (!this.isManual) {
      this.dismissTimeout = window.setTimeout(this.dismissAction, this.autoDismissTimeout);
      this.timerRefreshInterval = window.setInterval(this.handleProgressChange, AUTO_DISMISS_TIMER_REFRESH_RATE_MS);
      return null;
    }
    else {
      window.setTimeout(() => this.interactiveElements[0].setFocus(), 200);
      return document.activeElement;
    }
  }
  handleLongText(headingTooLong, messageTooLong) {
    if (messageTooLong || headingTooLong) {
      console.error(`Too many characters in toast ${headingTooLong ? "heading" : ""}${headingTooLong && messageTooLong ? " and " : ""}${messageTooLong ? "message" : ""}. Refer to character limits specified in the prop description`);
    }
  }
  findNextInteractiveElement(isBackwards) {
    const first = this.interactiveElements[0];
    const last = this.interactiveElements[this.interactiveElements.length - 1];
    const source = isBackwards ? first : last;
    const target = isBackwards ? last : first;
    if (this.isActive(source))
      return target;
    let currentIndex;
    const found = this.interactiveElements.some((el, index) => {
      if (!this.isActive(el))
        return false;
      currentIndex = index;
      return true;
    });
    if (!found)
      return first;
    return this.interactiveElements[currentIndex + (isBackwards ? -1 : 1)];
  }
  isActive(targetEl) {
    if (targetEl === this.el)
      return !!this.el.shadowRoot.activeElement;
    return document.activeElement === targetEl;
  }
  render() {
    const { variant, heading, message, visible, isManual, dismissButtonAriaLabel, } = this;
    return (hAsync(Host, { class: { ["hidden"]: !visible }, role: isManual ? "dialog" : "status" }, hAsync("div", { class: "container" }, variant && visible && (hAsync("div", { class: "toast-icon-container" }, hAsync("div", { class: {
        ["divider"]: true,
        [`divider-${variant}`]: true,
      } }), variant === "neutral" ? (hAsync("slot", { name: "neutral-icon" })) : (hAsync("span", { class: "toast-icon", innerHTML: VARIANT_ICONS[variant].icon })))), hAsync("div", { class: {
        ["toast-content"]: true,
        ["no-icon"]: variant === "neutral" && !isSlotUsed$1(this.el, "neutral-icon"),
      } }, hAsync("div", { class: "toast-message" }, hAsync("ic-typography", { variant: "subtitle-large" }, visible && hAsync("h5", null, heading)), message && (hAsync("ic-typography", { variant: "body" }, visible && hAsync("p", null, message)))), isSlotUsed$1(this.el, "action") && (hAsync("div", { class: "toast-action-container" }, hAsync("slot", { name: "action" })))), !isManual ? (hAsync("ic-loading-indicator", { class: "toast-dismiss-timer", appearance: "light", size: "icon", progress: this.timerProgress })) : (hAsync("ic-button", { id: "dismiss-button", innerHTML: closeIcon, onClick: this.dismissAction, variant: "icon", appearance: IcThemeForegroundEnum.Light, "aria-label": dismissButtonAriaLabel })))));
  }
  get el() { return getElement(this); }
  static get style() { return icToastCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "ic-toast",
    "$members$": {
      "autoDismissTimeout": [1026, "auto-dismiss-timeout"],
      "dismissButtonAriaLabel": [1, "dismiss-button-aria-label"],
      "dismissMode": [1025, "dismiss-mode"],
      "heading": [1],
      "message": [1],
      "neutralIconAriaLabel": [1, "neutral-icon-aria-label"],
      "variant": [1025],
      "timerProgress": [32],
      "visible": [32],
      "setVisible": [64]
    },
    "$listeners$": [[2, "icDismiss", "handleDismiss"], [4, "keydown", "handleKeyboard"], [1, "mouseenter", "handleTimer"], [1, "mouseleave", "handleTimer"]],
    "$lazyBundleId$": "-",
    "$attrsToReflect$": []
  }; }
}

class ToastRegion {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.pendingVisibility = [];
    this.showToast = (toast) => {
      const visibleToasts = Array.from(document.querySelectorAll("ic-toast")).filter((el) => window.getComputedStyle(el).display !== "none");
      if (visibleToasts.indexOf(toast) === -1 && visibleToasts.length <= 0) {
        toast.setVisible().then((res) => (this.previouslyFocused = res));
      }
      if (visibleToasts.length > 0)
        this.pendingVisibility.push(toast);
    };
    this.openToast = undefined;
  }
  watchOpenToastHandler(newValue) {
    if (this.openToast !== undefined) {
      this.showToast(newValue);
      this.openToast = undefined;
    }
  }
  handleDismissedToast() {
    var _a;
    if (this.pendingVisibility.length > 0) {
      this.pendingVisibility[0]
        .setVisible()
        .then((res) => (this.previouslyFocused = res));
      this.pendingVisibility.shift();
    }
    else {
      if (this.previouslyFocused && "setFocus" in this.previouslyFocused) {
        this.previouslyFocused.setFocus();
      }
      else
        (_a = this.previouslyFocused) === null || _a === void 0 ? void 0 : _a.focus();
    }
  }
  /**
   * @deprecated Use openToast prop to display toast instead.
   */
  async setVisible(toast) {
    this.showToast(toast);
  }
  render() {
    return hAsync("slot", null);
  }
  get el() { return getElement(this); }
  static get watchers() { return {
    "openToast": ["watchOpenToastHandler"]
  }; }
  static get cmpMeta() { return {
    "$flags$": 4,
    "$tagName$": "ic-toast-region",
    "$members$": {
      "openToast": [1040],
      "setVisible": [64]
    },
    "$listeners$": [[2, "icDismiss", "handleDismissedToast"]],
    "$lazyBundleId$": "-",
    "$attrsToReflect$": []
  }; }
}

const icTooltipCss = "/*!@html*/html.sc-ic-tooltip{line-height:1.15;-webkit-text-size-adjust:100%}/*!@body*/body.sc-ic-tooltip{margin:0}/*!@main*/main.sc-ic-tooltip{display:block}/*!@h1*/h1.sc-ic-tooltip{font-size:2em;margin:0.67em 0}/*!@hr*/hr.sc-ic-tooltip{box-sizing:content-box;height:0;overflow:visible}/*!@pre*/pre.sc-ic-tooltip{font-family:monospace, monospace;font-size:1em}/*!@a*/a.sc-ic-tooltip{background-color:transparent}/*!@abbr[title]*/abbr[title].sc-ic-tooltip{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}/*!@b,\nstrong*/b.sc-ic-tooltip,strong.sc-ic-tooltip{font-weight:bolder}/*!@code,\nkbd,\nsamp*/code.sc-ic-tooltip,kbd.sc-ic-tooltip,samp.sc-ic-tooltip{font-family:monospace, monospace;font-size:1em}/*!@small*/small.sc-ic-tooltip{font-size:80%}/*!@sub,\nsup*/sub.sc-ic-tooltip,sup.sc-ic-tooltip{font-size:75%;line-height:0;position:relative;vertical-align:baseline}/*!@sub*/sub.sc-ic-tooltip{bottom:-0.25em}/*!@sup*/sup.sc-ic-tooltip{top:-0.5em}/*!@img*/img.sc-ic-tooltip{border-style:none}/*!@button,\ninput,\noptgroup,\nselect,\ntextarea*/button.sc-ic-tooltip,input.sc-ic-tooltip,optgroup.sc-ic-tooltip,select.sc-ic-tooltip,textarea.sc-ic-tooltip{font-family:inherit;font-size:100%;line-height:1.15;margin:0}/*!@button,\ninput*/button.sc-ic-tooltip,input.sc-ic-tooltip{overflow:visible}/*!@button,\nselect*/button.sc-ic-tooltip,select.sc-ic-tooltip{text-transform:none}/*!@button,\n[type=\"button\"],\n[type=\"reset\"],\n[type=\"submit\"]*/button.sc-ic-tooltip,[type=\"button\"].sc-ic-tooltip,[type=\"reset\"].sc-ic-tooltip,[type=\"submit\"].sc-ic-tooltip{-webkit-appearance:button}/*!@button::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner*/button.sc-ic-tooltip::-moz-focus-inner,[type=\"button\"].sc-ic-tooltip::-moz-focus-inner,[type=\"reset\"].sc-ic-tooltip::-moz-focus-inner,[type=\"submit\"].sc-ic-tooltip::-moz-focus-inner{border-style:none;padding:0}/*!@button:-moz-focusring,\n[type=\"button\"]:-moz-focusring,\n[type=\"reset\"]:-moz-focusring,\n[type=\"submit\"]:-moz-focusring*/button.sc-ic-tooltip:-moz-focusring,[type=\"button\"].sc-ic-tooltip:-moz-focusring,[type=\"reset\"].sc-ic-tooltip:-moz-focusring,[type=\"submit\"].sc-ic-tooltip:-moz-focusring{outline:1px dotted ButtonText}/*!@fieldset*/fieldset.sc-ic-tooltip{padding:0.35em 0.75em 0.625em}/*!@legend*/legend.sc-ic-tooltip{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}/*!@progress*/progress.sc-ic-tooltip{vertical-align:baseline}/*!@textarea*/textarea.sc-ic-tooltip{overflow:auto}/*!@[type=\"checkbox\"],\n[type=\"radio\"]*/[type=\"checkbox\"].sc-ic-tooltip,[type=\"radio\"].sc-ic-tooltip{box-sizing:border-box;padding:0}/*!@[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button*/[type=\"number\"].sc-ic-tooltip::-webkit-inner-spin-button,[type=\"number\"].sc-ic-tooltip::-webkit-outer-spin-button{height:auto}/*!@[type=\"search\"]*/[type=\"search\"].sc-ic-tooltip{-webkit-appearance:textfield;outline-offset:-2px}/*!@[type=\"search\"]::-webkit-search-decoration*/[type=\"search\"].sc-ic-tooltip::-webkit-search-decoration{-webkit-appearance:none}/*!@::-webkit-file-upload-button*/.sc-ic-tooltip::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}/*!@details*/details.sc-ic-tooltip{display:block}/*!@summary*/summary.sc-ic-tooltip{display:list-item}/*!@template*/template.sc-ic-tooltip{display:none}/*!@[hidden]*/[hidden].sc-ic-tooltip{display:none}/*!@html,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo*/html.sc-ic-tooltip,body.sc-ic-tooltip,div.sc-ic-tooltip,span.sc-ic-tooltip,applet.sc-ic-tooltip,object.sc-ic-tooltip,iframe.sc-ic-tooltip,h1.sc-ic-tooltip,h2.sc-ic-tooltip,h3.sc-ic-tooltip,h4.sc-ic-tooltip,h5.sc-ic-tooltip,h6.sc-ic-tooltip,p.sc-ic-tooltip,blockquote.sc-ic-tooltip,pre.sc-ic-tooltip,a.sc-ic-tooltip,abbr.sc-ic-tooltip,acronym.sc-ic-tooltip,address.sc-ic-tooltip,big.sc-ic-tooltip,cite.sc-ic-tooltip,code.sc-ic-tooltip,del.sc-ic-tooltip,dfn.sc-ic-tooltip,em.sc-ic-tooltip,img.sc-ic-tooltip,ins.sc-ic-tooltip,kbd.sc-ic-tooltip,q.sc-ic-tooltip,s.sc-ic-tooltip,samp.sc-ic-tooltip,small.sc-ic-tooltip,strike.sc-ic-tooltip,strong.sc-ic-tooltip,sub.sc-ic-tooltip,sup.sc-ic-tooltip,tt.sc-ic-tooltip,var.sc-ic-tooltip,b.sc-ic-tooltip,u.sc-ic-tooltip,i.sc-ic-tooltip,center.sc-ic-tooltip,dl.sc-ic-tooltip,dt.sc-ic-tooltip,dd.sc-ic-tooltip,ol.sc-ic-tooltip,ul.sc-ic-tooltip,li.sc-ic-tooltip,fieldset.sc-ic-tooltip,form.sc-ic-tooltip,label.sc-ic-tooltip,legend.sc-ic-tooltip,table.sc-ic-tooltip,caption.sc-ic-tooltip,tbody.sc-ic-tooltip,tfoot.sc-ic-tooltip,thead.sc-ic-tooltip,tr.sc-ic-tooltip,th.sc-ic-tooltip,td.sc-ic-tooltip,article.sc-ic-tooltip,aside.sc-ic-tooltip,canvas.sc-ic-tooltip,details.sc-ic-tooltip,embed.sc-ic-tooltip,figure.sc-ic-tooltip,figcaption.sc-ic-tooltip,footer.sc-ic-tooltip,header.sc-ic-tooltip,hgroup.sc-ic-tooltip,menu.sc-ic-tooltip,nav.sc-ic-tooltip,output.sc-ic-tooltip,ruby.sc-ic-tooltip,section.sc-ic-tooltip,summary.sc-ic-tooltip,time.sc-ic-tooltip,mark.sc-ic-tooltip,audio.sc-ic-tooltip,video.sc-ic-tooltip{margin:0;padding:0;border:0;font-size:100%;font-style:inherit;vertical-align:baseline}/*!@:host(.ic-tooltip) .ic-tooltip-container*/.ic-tooltip.sc-ic-tooltip-h .ic-tooltip-container.sc-ic-tooltip{background-color:var(--ic-architectural-800);color:#ffff;text-align:center;padding:var(--ic-space-xxxs) var(--ic-space-xs);border-radius:var(--ic-border-radius);border:var(--ic-border-width) solid var(--ic-architectural-40);position:absolute;max-width:20rem;display:none;z-index:var(--ic-z-index-tooltip);box-shadow:var(--ic-elevation-overlay)}/*!@:host(.tooltip-navigation-item:not(.tooltip-navigation-item-side-nav-collapsed))\n  .ic-tooltip-container,\n:host(.tooltip-disabled) .ic-tooltip-container*/.tooltip-navigation-item.sc-ic-tooltip-h:not(.tooltip-navigation-item-side-nav-collapsed) .ic-tooltip-container.sc-ic-tooltip,.tooltip-disabled.sc-ic-tooltip-h .ic-tooltip-container.sc-ic-tooltip{display:none !important}/*!@:host(.tooltip-long-label-navigation-item-side-nav-expanded)\n  .ic-tooltip-container[data-show]*/.tooltip-long-label-navigation-item-side-nav-expanded.sc-ic-tooltip-h .ic-tooltip-container[data-show].sc-ic-tooltip{display:block !important}/*!@:host(.ic-tooltip) .ic-tooltip-arrow,\n:host(.ic-tooltip) .ic-tooltip-arrow::before*/.ic-tooltip.sc-ic-tooltip-h .ic-tooltip-arrow.sc-ic-tooltip,.ic-tooltip.sc-ic-tooltip-h .ic-tooltip-arrow.sc-ic-tooltip::before{position:absolute;background:inherit}/*!@:host(.ic-tooltip) .ic-tooltip-arrow*/.ic-tooltip.sc-ic-tooltip-h .ic-tooltip-arrow.sc-ic-tooltip{visibility:hidden;width:var(--ic-space-md);height:var(--ic-space-md)}/*!@:host(.ic-tooltip) .ic-tooltip-arrow::before*/.ic-tooltip.sc-ic-tooltip-h .ic-tooltip-arrow.sc-ic-tooltip::before{visibility:visible;content:\"\";border:var(--ic-border-width) solid var(--ic-architectural-40);width:100%;height:100%}/*!@:host(.ic-tooltip) .ic-tooltip-container[data-show]*/.ic-tooltip.sc-ic-tooltip-h .ic-tooltip-container[data-show].sc-ic-tooltip{display:block}/*!@:host(.ic-tooltip)\n  .ic-tooltip-container[data-popper-placement^=\"top\"]\n  > .ic-tooltip-arrow*/.ic-tooltip.sc-ic-tooltip-h .ic-tooltip-container[data-popper-placement^=\"top\"].sc-ic-tooltip>.ic-tooltip-arrow.sc-ic-tooltip{height:var(--ic-space-xxxs)}/*!@:host(.ic-tooltip)\n  .ic-tooltip-container[data-popper-placement^=\"top\"]\n  > .ic-tooltip-arrow::before*/.ic-tooltip.sc-ic-tooltip-h .ic-tooltip-container[data-popper-placement^=\"top\"].sc-ic-tooltip>.ic-tooltip-arrow.sc-ic-tooltip::before{border-radius:0 0 var(--ic-border-radius) var(--ic-border-radius);left:0;top:var(--ic-space-xxxs);border-top:0;transform:translateX(var(--tooltip-arrow-translate))}/*!@:host(.ic-tooltip)\n  .ic-tooltip-container[data-popper-placement^=\"bottom\"]\n  > .ic-tooltip-arrow*/.ic-tooltip.sc-ic-tooltip-h .ic-tooltip-container[data-popper-placement^=\"bottom\"].sc-ic-tooltip>.ic-tooltip-arrow.sc-ic-tooltip{top:calc(-1 * var(--ic-space-xxs));height:var(--ic-space-xxxs)}/*!@:host(.ic-tooltip)\n  .ic-tooltip-container[data-popper-placement^=\"bottom\"]\n  > .ic-tooltip-arrow::before*/.ic-tooltip.sc-ic-tooltip-h .ic-tooltip-container[data-popper-placement^=\"bottom\"].sc-ic-tooltip>.ic-tooltip-arrow.sc-ic-tooltip::before{border-radius:var(--ic-border-radius) var(--ic-border-radius) 0 0;left:0;top:var(--ic-space-1px);border-bottom:0;transform:translateX(var(--tooltip-arrow-translate))}/*!@:host(.ic-tooltip)\n  .ic-tooltip-container[data-popper-placement^=\"left\"]\n  > .ic-tooltip-arrow*/.ic-tooltip.sc-ic-tooltip-h .ic-tooltip-container[data-popper-placement^=\"left\"].sc-ic-tooltip>.ic-tooltip-arrow.sc-ic-tooltip{width:var(--ic-space-xxxs);right:calc(-1 * var(--ic-space-1px))}/*!@:host(.ic-tooltip)\n  .ic-tooltip-container[data-popper-placement^=\"left\"]\n  > .ic-tooltip-arrow::before*/.ic-tooltip.sc-ic-tooltip-h .ic-tooltip-container[data-popper-placement^=\"left\"].sc-ic-tooltip>.ic-tooltip-arrow.sc-ic-tooltip::before{border-radius:0 var(--ic-border-radius) var(--ic-border-radius) 0;border-left:0;top:calc(-1 * var(--ic-space-1px))}/*!@:host(.ic-tooltip)\n  .ic-tooltip-container[data-popper-placement^=\"right\"]\n  > .ic-tooltip-arrow*/.ic-tooltip.sc-ic-tooltip-h .ic-tooltip-container[data-popper-placement^=\"right\"].sc-ic-tooltip>.ic-tooltip-arrow.sc-ic-tooltip{width:var(--ic-space-xxxs);left:calc(-1 * var(--ic-space-xxs))}/*!@:host(.ic-tooltip)\n  .ic-tooltip-container[data-popper-placement^=\"right\"]\n  > .ic-tooltip-arrow::before*/.ic-tooltip.sc-ic-tooltip-h .ic-tooltip-container[data-popper-placement^=\"right\"].sc-ic-tooltip>.ic-tooltip-arrow.sc-ic-tooltip::before{border-radius:var(--ic-border-radius) 0 0 var(--ic-border-radius);border-right:0;top:calc(-1 * var(--ic-space-1px))}/*!@:host(.on-dialog) .ic-tooltip-container*/.on-dialog.sc-ic-tooltip-h .ic-tooltip-container.sc-ic-tooltip{transform:translate(\n    var(--tooltip-translate-x),\n    var(--tooltip-translate-y)\n  ) !important}@media screen and (max-width: 576px){/*!@:host(.ic-tooltip) .ic-tooltip-container*/.ic-tooltip.sc-ic-tooltip-h .ic-tooltip-container.sc-ic-tooltip{max-width:18.875rem}}@media (forced-colors: active){/*!@:host(.ic-tooltip) .ic-tooltip-container,\n  :host(.ic-tooltip) .ic-tooltip-arrow::before*/.ic-tooltip.sc-ic-tooltip-h .ic-tooltip-container.sc-ic-tooltip,.ic-tooltip.sc-ic-tooltip-h .ic-tooltip-arrow.sc-ic-tooltip::before{border:var(--ic-hc-border)}}";

class Tooltip {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.delayedHideEvents = ["mouseleave"];
    this.dialogOverflow = false;
    this.instantHideEvents = ["focusout"];
    this.mouseOverTool = false;
    this.persistTooltip = false;
    this.onDialog = false;
    this.showEvents = [
      !this.disableHover && "mouseenter",
      !this.disableHover && "focusin",
      !this.disableClick && "click",
    ];
    this.getTooltipTranslate = (dialogEl) => {
      const child = this.el.children[0].getBoundingClientRect();
      let tooltipX;
      let tooltipY;
      switch (this.placement) {
        case "bottom":
          tooltipX = child.left - dialogEl.left - 0.5 * child.width;
          tooltipY = child.bottom - dialogEl.top;
          break;
        case "bottom-start":
          tooltipX = child.left - dialogEl.left;
          tooltipY = child.bottom - dialogEl.top;
          break;
        case "bottom-end":
          tooltipX = child.right - dialogEl.right;
          tooltipY = child.bottom - dialogEl.top;
          break;
        case "top":
          tooltipX = child.left - dialogEl.left - 0.5 * child.width;
          tooltipY = child.top - dialogEl.bottom;
          break;
        case "top-start":
          tooltipX = child.left - dialogEl.left;
          tooltipY = child.top - dialogEl.bottom;
          break;
        case "top-end":
          tooltipX = child.right - dialogEl.right;
          tooltipY = child.top - dialogEl.bottom;
          break;
        case "left":
        case "left-start":
          tooltipX = child.right - dialogEl.right - child.width;
          tooltipY = child.bottom - dialogEl.top - child.height;
          break;
        case "left-end":
          tooltipX = child.right - dialogEl.right - child.width;
          tooltipY = child.top - dialogEl.bottom + child.height;
          break;
        case "right":
        case "right-start":
          tooltipX = child.left - dialogEl.left + child.width;
          tooltipY = child.bottom - dialogEl.top - child.height;
          break;
        case "right-end":
          tooltipX = child.left - dialogEl.left + child.width;
          tooltipY = child.top - dialogEl.bottom + child.height;
          break;
      }
      if (this.dialogOverflow && tooltipX < 0) {
        if (this.placement.includes("top") || this.placement.includes("bottom")) {
          this.toolTip.style.setProperty("--tooltip-arrow-translate", `${tooltipX}px`);
          tooltipX = child.left - dialogEl.left;
        }
        if (this.placement.includes("left")) {
          this.placement = "right";
          tooltipX = child.left - dialogEl.left + child.width;
        }
      }
      this.toolTip.style.setProperty("--tooltip-translate-x", `${tooltipX}px`);
      this.toolTip.style.setProperty("--tooltip-translate-y", `${tooltipY}px`);
    };
    this.show = () => {
      this.toolTip.setAttribute("data-show", "");
      if (this.onDialog) {
        this.el.classList.add("on-dialog");
        const dialogEl = this.icDialogEl.shadowRoot
          .querySelector("dialog")
          .getBoundingClientRect();
        this.getTooltipTranslate(dialogEl);
      }
      this.popperInstance = createPopper(this.el, this.toolTip, {
        placement: this.placement,
        modifiers: [
          {
            name: "offset",
            options: {
              offset: [0, 10],
            },
          },
          {
            name: "arrow",
            options: {
              element: this.arrow,
            },
          },
          {
            name: "eventListeners",
            options: { scroll: false, resize: false },
          },
        ],
      });
    };
    this.hide = () => {
      this.toolTip.removeAttribute("data-show");
      this.persistTooltip = false;
    };
    this.checkCloseTooltip = () => {
      setTimeout(() => {
        if (!this.mouseOverTool && !this.persistTooltip) {
          this.hide();
        }
      }, 100);
    };
    this.mouseEnterTooltip = () => {
      this.mouseOverTool = true;
    };
    this.mouseLeaveTooltip = () => {
      this.mouseOverTool = false;
      this.checkCloseTooltip();
    };
    this.handleKeyDown = (event) => {
      if (event.key === "Escape" && !this.persistTooltip) {
        this.hide();
      }
    };
    this.manageEventListeners = (action) => {
      const method = action === "add" ? "addEventListener" : "removeEventListener";
      this.showEvents.forEach((event) => {
        this.el[method](event, this.show);
        if (this.toolTip !== undefined) {
          this.toolTip[method](event, this.mouseEnterTooltip);
        }
      });
      if (!this.persistTooltip) {
        this.instantHideEvents.forEach((event) => {
          this.el[method](event, this.hide);
        });
      }
      this.delayedHideEvents.forEach((event) => {
        this.el[method](event, this.checkCloseTooltip);
        if (this.toolTip !== undefined) {
          this.toolTip[method](event, this.mouseLeaveTooltip);
        }
      });
      document[method]("keydown", this.handleKeyDown);
    };
    this.disableClick = false;
    this.disableHover = false;
    this.maxLines = undefined;
    this.placement = "bottom";
    this.target = undefined;
    this.label = undefined;
  }
  disconnectedCallback() {
    this.manageEventListeners("remove");
    if (this.popperInstance !== undefined) {
      this.popperInstance.destroy();
    }
  }
  componentDidLoad() {
    var _a;
    this.manageEventListeners("add");
    this.icDialogEl = this.el.closest("ic-dialog");
    this.dialogOverflow =
      ((_a = this.icDialogEl) === null || _a === void 0 ? void 0 : _a.getAttribute("data-overflow")) === "true";
    this.onDialog = this.icDialogEl !== null;
    onComponentRequiredPropUndefined([{ prop: this.label, propName: "label" }], "Tooltip");
  }
  componentDidRender() {
    const typographyEl = this.el.shadowRoot.querySelector(".ic-tooltip-container > ic-typography");
    this.maxLines > 0 &&
      typographyEl.setAttribute("style", `--truncation-max-lines: ${this.maxLines}`);
  }
  /**
   * Method to programmatically show/hide the tooltip without needing to interact with an anchor element
   * @param show Whether to show or hide the tooltip
   * @param persistTooltip Whether the tooltip should stay on the screen when actions are performed that would previously dismiss the tooltip, such as on hover
   */
  async displayTooltip(show, persistTooltip) {
    this.persistTooltip = persistTooltip;
    show ? this.show() : this.hide();
  }
  render() {
    const { label } = this;
    return (hAsync(Host, { class: { "ic-tooltip": true } }, hAsync("div", { ref: (el) => (this.toolTip = el), role: "tooltip", class: "ic-tooltip-container" }, hAsync("ic-typography", { maxLines: this.maxLines, variant: "caption" }, label), hAsync("div", { ref: (el) => (this.arrow = el), class: "ic-tooltip-arrow" })), hAsync("slot", null)));
  }
  get el() { return getElement(this); }
  static get style() { return icTooltipCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "ic-tooltip",
    "$members$": {
      "disableClick": [4, "disable-click"],
      "disableHover": [4, "disable-hover"],
      "maxLines": [2, "max-lines"],
      "placement": [1025],
      "target": [513],
      "label": [1],
      "displayTooltip": [64]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": [["target", "target"]]
  }; }
}

const icTopNavigationCss = "/*!@html*/html.sc-ic-top-navigation{line-height:1.15;-webkit-text-size-adjust:100%}/*!@body*/body.sc-ic-top-navigation{margin:0}/*!@main*/main.sc-ic-top-navigation{display:block}/*!@h1*/h1.sc-ic-top-navigation{font-size:2em;margin:0.67em 0}/*!@hr*/hr.sc-ic-top-navigation{box-sizing:content-box;height:0;overflow:visible}/*!@pre*/pre.sc-ic-top-navigation{font-family:monospace, monospace;font-size:1em}/*!@a*/a.sc-ic-top-navigation{background-color:transparent}/*!@abbr[title]*/abbr[title].sc-ic-top-navigation{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}/*!@b,\nstrong*/b.sc-ic-top-navigation,strong.sc-ic-top-navigation{font-weight:bolder}/*!@code,\nkbd,\nsamp*/code.sc-ic-top-navigation,kbd.sc-ic-top-navigation,samp.sc-ic-top-navigation{font-family:monospace, monospace;font-size:1em}/*!@small*/small.sc-ic-top-navigation{font-size:80%}/*!@sub,\nsup*/sub.sc-ic-top-navigation,sup.sc-ic-top-navigation{font-size:75%;line-height:0;position:relative;vertical-align:baseline}/*!@sub*/sub.sc-ic-top-navigation{bottom:-0.25em}/*!@sup*/sup.sc-ic-top-navigation{top:-0.5em}/*!@img*/img.sc-ic-top-navigation{border-style:none}/*!@button,\ninput,\noptgroup,\nselect,\ntextarea*/button.sc-ic-top-navigation,input.sc-ic-top-navigation,optgroup.sc-ic-top-navigation,select.sc-ic-top-navigation,textarea.sc-ic-top-navigation{font-family:inherit;font-size:100%;line-height:1.15;margin:0}/*!@button,\ninput*/button.sc-ic-top-navigation,input.sc-ic-top-navigation{overflow:visible}/*!@button,\nselect*/button.sc-ic-top-navigation,select.sc-ic-top-navigation{text-transform:none}/*!@button,\n[type=\"button\"],\n[type=\"reset\"],\n[type=\"submit\"]*/button.sc-ic-top-navigation,[type=\"button\"].sc-ic-top-navigation,[type=\"reset\"].sc-ic-top-navigation,[type=\"submit\"].sc-ic-top-navigation{-webkit-appearance:button}/*!@button::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner*/button.sc-ic-top-navigation::-moz-focus-inner,[type=\"button\"].sc-ic-top-navigation::-moz-focus-inner,[type=\"reset\"].sc-ic-top-navigation::-moz-focus-inner,[type=\"submit\"].sc-ic-top-navigation::-moz-focus-inner{border-style:none;padding:0}/*!@button:-moz-focusring,\n[type=\"button\"]:-moz-focusring,\n[type=\"reset\"]:-moz-focusring,\n[type=\"submit\"]:-moz-focusring*/button.sc-ic-top-navigation:-moz-focusring,[type=\"button\"].sc-ic-top-navigation:-moz-focusring,[type=\"reset\"].sc-ic-top-navigation:-moz-focusring,[type=\"submit\"].sc-ic-top-navigation:-moz-focusring{outline:1px dotted ButtonText}/*!@fieldset*/fieldset.sc-ic-top-navigation{padding:0.35em 0.75em 0.625em}/*!@legend*/legend.sc-ic-top-navigation{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}/*!@progress*/progress.sc-ic-top-navigation{vertical-align:baseline}/*!@textarea*/textarea.sc-ic-top-navigation{overflow:auto}/*!@[type=\"checkbox\"],\n[type=\"radio\"]*/[type=\"checkbox\"].sc-ic-top-navigation,[type=\"radio\"].sc-ic-top-navigation{box-sizing:border-box;padding:0}/*!@[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button*/[type=\"number\"].sc-ic-top-navigation::-webkit-inner-spin-button,[type=\"number\"].sc-ic-top-navigation::-webkit-outer-spin-button{height:auto}/*!@[type=\"search\"]*/[type=\"search\"].sc-ic-top-navigation{-webkit-appearance:textfield;outline-offset:-2px}/*!@[type=\"search\"]::-webkit-search-decoration*/[type=\"search\"].sc-ic-top-navigation::-webkit-search-decoration{-webkit-appearance:none}/*!@::-webkit-file-upload-button*/.sc-ic-top-navigation::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}/*!@details*/details.sc-ic-top-navigation{display:block}/*!@summary*/summary.sc-ic-top-navigation{display:list-item}/*!@template*/template.sc-ic-top-navigation{display:none}/*!@[hidden]*/[hidden].sc-ic-top-navigation{display:none}/*!@html,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo*/html.sc-ic-top-navigation,body.sc-ic-top-navigation,div.sc-ic-top-navigation,span.sc-ic-top-navigation,applet.sc-ic-top-navigation,object.sc-ic-top-navigation,iframe.sc-ic-top-navigation,h1.sc-ic-top-navigation,h2.sc-ic-top-navigation,h3.sc-ic-top-navigation,h4.sc-ic-top-navigation,h5.sc-ic-top-navigation,h6.sc-ic-top-navigation,p.sc-ic-top-navigation,blockquote.sc-ic-top-navigation,pre.sc-ic-top-navigation,a.sc-ic-top-navigation,abbr.sc-ic-top-navigation,acronym.sc-ic-top-navigation,address.sc-ic-top-navigation,big.sc-ic-top-navigation,cite.sc-ic-top-navigation,code.sc-ic-top-navigation,del.sc-ic-top-navigation,dfn.sc-ic-top-navigation,em.sc-ic-top-navigation,img.sc-ic-top-navigation,ins.sc-ic-top-navigation,kbd.sc-ic-top-navigation,q.sc-ic-top-navigation,s.sc-ic-top-navigation,samp.sc-ic-top-navigation,small.sc-ic-top-navigation,strike.sc-ic-top-navigation,strong.sc-ic-top-navigation,sub.sc-ic-top-navigation,sup.sc-ic-top-navigation,tt.sc-ic-top-navigation,var.sc-ic-top-navigation,b.sc-ic-top-navigation,u.sc-ic-top-navigation,i.sc-ic-top-navigation,center.sc-ic-top-navigation,dl.sc-ic-top-navigation,dt.sc-ic-top-navigation,dd.sc-ic-top-navigation,ol.sc-ic-top-navigation,ul.sc-ic-top-navigation,li.sc-ic-top-navigation,fieldset.sc-ic-top-navigation,form.sc-ic-top-navigation,label.sc-ic-top-navigation,legend.sc-ic-top-navigation,table.sc-ic-top-navigation,caption.sc-ic-top-navigation,tbody.sc-ic-top-navigation,tfoot.sc-ic-top-navigation,thead.sc-ic-top-navigation,tr.sc-ic-top-navigation,th.sc-ic-top-navigation,td.sc-ic-top-navigation,article.sc-ic-top-navigation,aside.sc-ic-top-navigation,canvas.sc-ic-top-navigation,details.sc-ic-top-navigation,embed.sc-ic-top-navigation,figure.sc-ic-top-navigation,figcaption.sc-ic-top-navigation,footer.sc-ic-top-navigation,header.sc-ic-top-navigation,hgroup.sc-ic-top-navigation,menu.sc-ic-top-navigation,nav.sc-ic-top-navigation,output.sc-ic-top-navigation,ruby.sc-ic-top-navigation,section.sc-ic-top-navigation,summary.sc-ic-top-navigation,time.sc-ic-top-navigation,mark.sc-ic-top-navigation,audio.sc-ic-top-navigation,video.sc-ic-top-navigation{margin:0;padding:0;border:0;font-size:100%;font-style:inherit;vertical-align:baseline}/*!@:host*/.sc-ic-top-navigation-h{display:block;color:var(--ic-theme-text);width:100%;position:relative}/*!@:host .top-navigation*/.sc-ic-top-navigation-h .top-navigation.sc-ic-top-navigation{background-color:var(--ic-theme-primary);height:-moz-max-content;height:max-content}/*!@:host(.fullwidth-searchbar) slot[name=\"search\"]::slotted(form)*/.sc-ic-top-navigation-h.fullwidth-searchbar slot[name=\"search\"].sc-ic-top-navigation-s>form{width:100%}/*!@:host .title-link*/.sc-ic-top-navigation-h .title-link.sc-ic-top-navigation{display:inline-flex;align-items:center;text-decoration:none;padding:var(--ic-space-xxs);transition:var(--ic-easing-transition-fast)}/*!@:host .title-link,\n:host .title-link:visited,\n:host .title-link:active,\n:host .title-link ::slotted(a),\n:host .title-link:visited ::slotted(a),\n:host .title-link:active ::slotted(a)*/.sc-ic-top-navigation-h .title-link.sc-ic-top-navigation,.sc-ic-top-navigation-h .title-link.sc-ic-top-navigation:visited,.sc-ic-top-navigation-h .title-link.sc-ic-top-navigation:active,.sc-ic-top-navigation-h .title-link .sc-ic-top-navigation-s>a,.sc-ic-top-navigation-h .title-link:visited .sc-ic-top-navigation-s>a,.sc-ic-top-navigation-h .title-link:active .sc-ic-top-navigation-s>a{color:var(--ic-theme-text);text-decoration:none;outline:none}/*!@:host .title-link:hover:not(:focus)*/.sc-ic-top-navigation-h .title-link.sc-ic-top-navigation:hover:not(:focus){background-color:var(--ic-theme-hover)}/*!@:host .title-link:active:not(:focus)*/.sc-ic-top-navigation-h .title-link.sc-ic-top-navigation:active:not(:focus){background-color:var(--ic-theme-active)}/*!@:host .title-link:hover*/.sc-ic-top-navigation-h .title-link.sc-ic-top-navigation:hover{border-radius:var(--ic-border-radius)}/*!@:host .title-link:focus,\n:host .title-link:focus-within*/.sc-ic-top-navigation-h .title-link.sc-ic-top-navigation:focus,.sc-ic-top-navigation-h .title-link.sc-ic-top-navigation:focus-within{border-radius:var(--ic-border-radius);box-shadow:var(--ic-border-focus);outline:var(--ic-hc-focus-outline)}/*!@:host .title-link ic-typography*/.sc-ic-top-navigation-h .title-link.sc-ic-top-navigation ic-typography.sc-ic-top-navigation{font-weight:600}/*!@:host .nav-panel-container*/.sc-ic-top-navigation-h .nav-panel-container.sc-ic-top-navigation{border-top:var(--ic-keyline-lighten);padding:0 var(--ic-space-lg);margin-left:calc(-1 * var(--section-container-margin));margin-right:calc(-1 * var(--section-container-margin));display:flex}/*!@:host(.dark) .nav-panel-container*/.dark.sc-ic-top-navigation-h .nav-panel-container.sc-ic-top-navigation{border-top:var(--ic-keyline-darken)}/*!@.top-panel-container*/.top-panel-container.sc-ic-top-navigation{display:flex;padding-top:0.5rem;padding-bottom:0.5rem}/*!@.navigation-tabs*/.navigation-tabs.sc-ic-top-navigation{margin-top:calc(-1 * var(--ic-space-1px))}/*!@.app-details-container*/.app-details-container.sc-ic-top-navigation{display:flex;align-items:center;flex:1 1 auto;margin-right:var(--ic-space-md)}/*!@.app-icon-container*/.app-icon-container.sc-ic-top-navigation{display:flex;padding-right:var(--ic-space-xs)}/*!@.icon-buttons-container*/.icon-buttons-container.sc-ic-top-navigation{display:flex;margin-left:var(--ic-space-md)}/*!@.icon-buttons-container ::slotted(nav)*/.icon-buttons-container .sc-ic-top-navigation-s>nav{display:flex}/*!@.title-wrap*/.title-wrap.sc-ic-top-navigation{overflow-wrap:break-word;word-wrap:break-word;-ms-word-break:break-all;word-break:break-word;-webkit-hyphens:auto;hyphens:auto}/*!@:host .app-status*/.sc-ic-top-navigation-h .app-status.sc-ic-top-navigation{border-radius:var(--ic-space-md);background-color:var(--ic-architectural-white);color:var(--ic-color-primary-text);padding:var(--ic-space-xxs) var(--ic-space-lg);margin-left:var(--ic-space-md);flex:1 1 0;max-width:-moz-fit-content;max-width:fit-content}/*!@:host(.dark) .app-status*/.dark.sc-ic-top-navigation-h .app-status.sc-ic-top-navigation{background-color:var(--ic-theme-text);color:var(--ic-color-white-text)}/*!@:host .app-version*/.sc-ic-top-navigation-h .app-version.sc-ic-top-navigation{border-radius:var(--ic-space-md);background-color:var(--ic-theme-active);padding:var(--ic-space-xxs) var(--ic-space-sm);margin-left:var(--ic-space-xs);flex:1 1 0;max-width:-moz-fit-content;max-width:fit-content}/*!@slot[name=\"app-icon\"]::slotted(*)*/slot[name=\"app-icon\"].sc-ic-top-navigation-s>*{fill:var(--ic-theme-text);width:2em;height:2em}/*!@slot[name=\"toggle-icon\"] svg*/slot[name=\"toggle-icon\"].sc-ic-top-navigation svg.sc-ic-top-navigation{fill:var(--ic-theme-text)}/*!@.search-menu-container*/.search-menu-container.sc-ic-top-navigation{justify-content:right;display:flex;align-items:center}/*!@.menu-button-container*/.menu-button-container.sc-ic-top-navigation{margin-left:var(--ic-space-md)}/*!@.menu-button-container .navigation-landmark-button-text*/.menu-button-container.sc-ic-top-navigation .navigation-landmark-button-text.sc-ic-top-navigation{position:absolute;left:-10000px;top:auto;width:1px;height:1px;overflow:hidden}/*!@.search-actions-container*/.search-actions-container.sc-ic-top-navigation{display:flex}/*!@.menu-buttons-slot*/.menu-buttons-slot.sc-ic-top-navigation{display:flex;flex-direction:column}/*!@.navigation-landmark-text*/.navigation-landmark-text.sc-ic-top-navigation{position:absolute;width:var(--ic-space-1px);height:var(--ic-space-1px);padding:0;margin:calc(-1 * var(--ic-space-1px));overflow:hidden}/*!@.navigation-item-list*/.navigation-item-list.sc-ic-top-navigation{display:flex;list-style:none;height:2.75rem}/*!@.navigation-item-list::-webkit-scrollbar*/.navigation-item-list.sc-ic-top-navigation::-webkit-scrollbar{display:none}/*!@:host ic-section-container*/.sc-ic-top-navigation-h ic-section-container.sc-ic-top-navigation{padding-bottom:0 !important;padding-top:0 !important}@media screen and (min-width: 993px){/*!@.app-details-container*/.app-details-container.sc-ic-top-navigation{margin-right:var(--ic-space-lg)}}@media screen and (max-width: 1200px){/*!@:host .nav-panel-container*/.sc-ic-top-navigation-h .nav-panel-container.sc-ic-top-navigation{padding:0 var(--ic-space-md)}}@media screen and (max-width: 992px){/*!@:host .nav-panel-container,\n  :host .app-status,\n  :host .app-version*/.sc-ic-top-navigation-h .nav-panel-container.sc-ic-top-navigation,.sc-ic-top-navigation-h .app-status.sc-ic-top-navigation,.sc-ic-top-navigation-h .app-version.sc-ic-top-navigation{display:none}/*!@:host .title-link*/.sc-ic-top-navigation-h .title-link.sc-ic-top-navigation{margin-right:var(--ic-space-xs)}/*!@.search-menu-container*/.search-menu-container.sc-ic-top-navigation{max-width:10rem}/*!@.search-bar-container*/.search-bar-container.sc-ic-top-navigation{display:flex;justify-content:center;align-items:center;border-top:var(--ic-keyline-darken);height:4rem;padding-left:var(--ic-space-md);padding-right:var(--ic-space-md);margin-left:calc(-1 * var(--section-container-margin));margin-right:calc(-1 * var(--section-container-margin))}}@media screen and (max-width: 576px){/*!@:host .title-link*/.sc-ic-top-navigation-h .title-link.sc-ic-top-navigation{margin-right:var(--ic-space-xxxs);word-break:break-word;-webkit-hyphens:none;hyphens:none}/*!@.top-panel-container*/.top-panel-container.sc-ic-top-navigation{min-height:2.5rem}/*!@.searchbox-inline*/.searchbox-inline.sc-ic-top-navigation{display:none}/*!@.search-bar-container*/.search-bar-container.sc-ic-top-navigation{margin-top:0;height:3.5rem;padding-left:var(--ic-space-xs);padding-right:var(--ic-space-xs)}/*!@.menu-button-container*/.menu-button-container.sc-ic-top-navigation{margin-left:var(--ic-space-sm)}/*!@slot[name=\"app-icon\"]::slotted(*)*/slot[name=\"app-icon\"].sc-ic-top-navigation-s>*{width:1.5em;height:1.5em}/*!@slot[name=\"toggle-icon\"] svg*/slot[name=\"toggle-icon\"].sc-ic-top-navigation svg.sc-ic-top-navigation{width:1.5em;height:1.5em}}@media (forced-colors: active){/*!@:host .top-navigation*/.sc-ic-top-navigation-h .top-navigation.sc-ic-top-navigation{border-bottom:var(--ic-hc-border)}/*!@.app-status,\n  .app-version*/.app-status.sc-ic-top-navigation,.app-version.sc-ic-top-navigation{border:var(--ic-hc-border)}/*!@slot[name=\"app-icon\"]::slotted(*)*/slot[name=\"app-icon\"].sc-ic-top-navigation-s>*{fill:currentcolor}}";

/**
 * @slot app-icon - Content will be rendered to left of app title.
 * @slot app-title - Handle routing by nesting a route in the app title.
 * @slot short-app-title - Handle routing by nesting a route in the short app title (to be displayed in place of app title on small screen sizes).
 * @slot search - Content will be rendered in search area to left of buttons.
 * @slot toggle-icon - Icon to be displayed on the button to toggle search slot content on smaller devices
 * @slot navigation - Content will be rendered in navigation panel.
 * @slot buttons - Content will be rendered to right of search bar.
 */
class TopNavigation {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.icNavigationMenuClosed = createEvent(this, "icNavigationMenuClosed", 7);
    this.icNavigationMenuOpened = createEvent(this, "icNavigationMenuOpened", 7);
    this.hasAppIcon = false;
    this.hasIconButtons = false;
    this.hasNavigation = false;
    this.hasSearchSlotContent = false;
    this.resizeObserver = null;
    this.searchBar = null;
    this.initialiseSearchBar = () => {
      if (this.hasSearchSlotContent) {
        const slot = getSlot$1(this.el, "search");
        if (slot && slot.tagName === "IC-SEARCH-BAR") {
          this.searchBar = slot;
        }
        else if (slot && slot.tagName === "FORM") {
          this.searchBar = slot.querySelector("ic-search-bar");
        }
        if (this.searchBar !== null) {
          this.searchBar.hideLabel = true;
        }
      }
    };
    this.emitTopNavResized = (size) => {
      const event = new CustomEvent("topNavResized", { detail: { size: size } });
      this.el.dispatchEvent(event);
    };
    this.menuButtonClick = () => {
      this.showNavMenu(true);
    };
    this.searchButtonMouseDownHandler = () => {
      this.searchButtonClick = true;
    };
    this.searchButtonClickHandler = () => {
      this.toggleSearchBar();
      this.searchButtonClick = false;
    };
    this.resizeObserverCallback = (currSize) => {
      if (currSize !== this.deviceSize) {
        this.deviceSize = currSize;
        if (currSize > DEVICE_SIZES.L) {
          this.showNavMenu(false);
          if (this.mobileSearchBarVisible) {
            this.toggleSearchBar();
          }
        }
        this.emitTopNavResized(currSize);
        if (document.activeElement !== null &&
          document.activeElement !== undefined &&
          document.activeElement.tagName === "IC-SEARCH-BAR") {
          this.searchBar.setAttribute("hidden", "true");
          //remove attribute again as this trigger a redraw & applies css
          this.searchBar.removeAttribute("hidden");
          setTimeout(() => {
            this.searchBar.focus();
          }, 100);
        }
      }
    };
    this.runResizeObserver = () => {
      this.resizeObserver = new ResizeObserver(() => {
        const currSize = getCurrentDeviceSize();
        this.resizeObserverCallback(currSize);
      });
      this.resizeObserver.observe(this.el);
    };
    this.deviceSize = DEVICE_SIZES.XL;
    this.foregroundColor = getThemeForegroundColor();
    this.hasFullWidthSearchBar = false;
    this.menuOpen = false;
    this.mobileSearchBarVisible = false;
    this.mobileSearchHiddenOnBlur = false;
    this.navMenuVisible = false;
    this.searchButtonClick = false;
    this.searchValue = "";
    this.contentAligned = "full-width";
    this.href = "/";
    this.inline = false;
    this.shortAppTitle = "";
    this.status = "";
    this.version = "";
    this.appTitle = undefined;
  }
  watchPropHandler(newValue, oldValue) {
    //added for gatsby rehydration issue where prop is initially undefined but then changes to actual value
    //this watch can be removed once gatbsy hydration issue is resolved
    onComponentPropUndefinedChange(oldValue, newValue, this.initialiseSearchBar);
  }
  disconnectedCallback() {
    if (this.resizeObserver !== null) {
      this.resizeObserver.disconnect();
    }
  }
  componentWillLoad() {
    this.hasAppIcon = isSlotUsed$1(this.el, "app-icon");
    this.hasNavigation = isSlotUsed$1(this.el, "navigation");
    this.hasIconButtons = isSlotUsed$1(this.el, "buttons");
    this.hasSearchSlotContent = isSlotUsed$1(this.el, "search");
    this.deviceSize = getCurrentDeviceSize();
    this.initialiseSearchBar();
  }
  componentDidLoad() {
    checkResizeObserver$1(this.runResizeObserver);
    !isSlotUsed$1(this.el, "app-title") &&
      onComponentRequiredPropUndefined([{ prop: this.appTitle, propName: "app-title" }], "Top Navigation");
  }
  componentWillRender() {
    this.hasNavigation = isSlotUsed$1(this.el, "navigation");
    this.hasSearchSlotContent = isSlotUsed$1(this.el, "search");
    this.hasIconButtons = isSlotUsed$1(this.el, "buttons");
    this.hasAppIcon = isSlotUsed$1(this.el, "app-icon");
  }
  navBarMenuCloseHandler() {
    this.showNavMenu(false);
    const menuBtn = this.el.shadowRoot.querySelector("#menu-button");
    menuBtn.focus();
  }
  searchInputBlurHandler(ev) {
    if (ev.detail !== null) {
      if (this.mobileSearchBarVisible && !this.searchButtonClick) {
        //don't hide if blur was triggered by click on search button - let the click handler toggle the state
        this.toggleSearchBar();
      }
      this.searchValue = ev.detail.value;
    }
  }
  searchValueChangeHandler(ev) {
    this.searchValue = ev.detail.value;
  }
  themeChangeHandler(ev) {
    const theme = ev.detail;
    this.foregroundColor = theme.mode;
  }
  toggleSearchBar() {
    this.mobileSearchBarVisible = !this.mobileSearchBarVisible;
    if (this.searchBar !== null) {
      if (this.mobileSearchBarVisible) {
        this.mobileSearchButtonEl.setAttribute("aria-label", "Hide search");
        this.hasFullWidthSearchBar = true;
        this.searchBar.fullWidth = true;
        setTimeout(() => {
          this.searchBar.focus();
        }, 100);
      }
      else {
        this.mobileSearchButtonEl.setAttribute("aria-label", "Show search");
        this.hasFullWidthSearchBar = false;
        this.searchBar.fullWidth = false;
      }
    }
  }
  showNavMenu(show) {
    this.navMenuVisible = show;
    if (show) {
      this.icNavigationMenuOpened.emit();
      document.body.style.height = "100%";
      document.body.style.overflow = "hidden";
    }
    else {
      this.icNavigationMenuClosed.emit();
      document.body.style.height = "auto";
      document.body.style.overflow = "auto";
    }
  }
  render() {
    const hasMenuContent = this.hasNavigation ||
      this.hasIconButtons ||
      this.status !== "" ||
      this.version !== "";
    const searchButtonSize = this.deviceSize <= DEVICE_SIZES.S ? "default" : "large";
    let appTitleVariant = "h3";
    const hasTitle = this.appTitle !== "" && isPropDefined(this.appTitle);
    if (this.deviceSize <= DEVICE_SIZES.L) {
      appTitleVariant = "h4";
      if (this.deviceSize <= DEVICE_SIZES.S) {
        appTitleVariant = "subtitle-small";
      }
    }
    const mobileSearchButtonTitle = this.mobileSearchBarVisible
      ? "Hide search"
      : "Show search";
    const menuSize = this.deviceSize <= DEVICE_SIZES.S ? "small" : "default";
    const Component = isSlotUsed$1(this.el, "app-title") ? "div" : "a";
    const attrs = Component == "a" && {
      href: this.href,
    };
    const shortAppTitleSlot = isSlotUsed$1(this.el, "short-app-title");
    return (hAsync(Host, { class: {
        ["fullwidth-searchbar"]: this.hasFullWidthSearchBar,
        [IcThemeForegroundEnum.Dark]: this.foregroundColor === IcThemeForegroundEnum.Dark,
      } }, hAsync("div", { class: "top-navigation" }, hAsync("ic-section-container", { aligned: this.contentAligned, "full-height": true }, hAsync("header", { role: "banner" }, hAsync("div", { class: "top-panel-container" }, hAsync("div", { class: "app-details-container" }, (hasTitle || isSlotUsed$1(this.el, "app-title")) && (hAsync(Component, Object.assign({ class: "title-link" }, attrs), this.hasAppIcon && (hAsync("div", { class: "app-icon-container" }, hAsync("slot", { name: "app-icon" }))), this.deviceSize <= DEVICE_SIZES.S &&
      (!isEmptyString(this.shortAppTitle) ||
        shortAppTitleSlot) ? (hAsync("ic-typography", { variant: "subtitle-small", "aria-label": (!isSlotUsed$1(this.el, "app-title") ||
        !shortAppTitleSlot) &&
        `${this.appTitle} (${this.shortAppTitle})` }, hAsync("h1", null, shortAppTitleSlot ? (hAsync("slot", { name: "short-app-title" })) : (this.shortAppTitle)))) : (hAsync("ic-typography", { variant: appTitleVariant }, hAsync("h1", { class: "title-wrap" }, isSlotUsed$1(this.el, "app-title") ? (hAsync("slot", { name: "app-title" })) : (this.appTitle)))))), this.status !== "" && (hAsync("div", { class: "app-status" }, hAsync("ic-typography", { "aria-label": "app tag", variant: "label-uppercase", class: "app-status-text" }, this.status))), this.version !== "" && (hAsync("div", { class: "app-version" }, hAsync("ic-typography", { variant: "label", class: "app-version-text", "aria-label": "app version" }, this.version)))), (this.hasSearchSlotContent || hasMenuContent) && (hAsync("div", { class: "search-menu-container" }, hAsync("div", { class: "search-actions-container" }, this.deviceSize > DEVICE_SIZES.L && (hAsync("slot", { name: "search" })), this.hasSearchSlotContent &&
      this.deviceSize <= DEVICE_SIZES.L && (hAsync("ic-button", { id: "search-toggle-button", ref: (el) => (this.mobileSearchButtonEl = el), onMouseDown: this.searchButtonMouseDownHandler, variant: "icon", size: searchButtonSize, "aria-label": mobileSearchButtonTitle, appearance: this.foregroundColor, onClick: this.searchButtonClickHandler }, hAsync("slot", { name: "toggle-icon" }, hAsync("svg", { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 24 24", fill: "#ffffff" }, hAsync("path", { d: "M0 0h24v24H0V0z", fill: "none" }), hAsync("path", { d: "M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z" }))))), this.hasIconButtons && this.deviceSize > DEVICE_SIZES.L && (hAsync("div", { class: "icon-buttons-container" }, hAsync("slot", { name: "buttons" }))), hasMenuContent && this.deviceSize <= DEVICE_SIZES.L && (hAsync("div", { class: "menu-button-container" }, hAsync("span", { id: "navigation-landmark-button-text", class: "navigation-landmark-button-text", "aria-hidden": "true" }, "Main navigation button"), hAsync("nav", { "aria-labelledby": "navigation-landmark-button-text", "aria-hidden": this.navMenuVisible ? "true" : "false" }, hAsync("ic-button", { id: "menu-button", appearance: this.foregroundColor, variant: "secondary", "aria-expanded": this.menuOpen ? "true" : "false", "aria-haspopup": "true", "aria-label": `Open ${this.hasNavigation ? "navigation" : "app"} menu`, size: menuSize, onClick: this.menuButtonClick }, "Menu", hAsync("svg", { xmlns: "http://www.w3.org/2000/svg", height: "24px", viewBox: "0 0 24 24", width: "24px", fill: "#ffffff", slot: "icon" }, hAsync("path", { d: "M0 0h24v24H0V0z", fill: "none" }), hAsync("path", { d: "M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z" })))))))))), this.mobileSearchBarVisible && (hAsync("div", { class: "search-bar-container" }, hAsync("slot", { name: "search" }))), this.hasNavigation && this.deviceSize > DEVICE_SIZES.L && (hAsync("div", { class: "navigation-tabs" }, hAsync("span", { id: "navigation-landmark-text", class: "navigation-landmark-text", "aria-hidden": "true" }, "Main navigation"), hAsync("nav", { "aria-labelledby": "navigation-landmark-text", class: "nav-panel-container" }, hAsync("ic-horizontal-scroll", { appearance: this.foregroundColor }, hAsync("ul", { class: "navigation-item-list", tabindex: "-1" }, hAsync("slot", { name: "navigation" }))))))))), this.navMenuVisible && (hAsync("ic-navigation-menu", { version: this.version, status: this.status, class: {
        ["inline"]: this.inline,
      } }, this.hasIconButtons && (hAsync("div", { class: "menu-buttons-slot", slot: "buttons" }, hAsync("slot", { name: "buttons" }))), hAsync("ul", { slot: "navigation" }, hAsync("slot", { name: "navigation" }))))));
  }
  get el() { return getElement(this); }
  static get watchers() { return {
    "appTitle": ["watchPropHandler"]
  }; }
  static get style() { return icTopNavigationCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "ic-top-navigation",
    "$members$": {
      "contentAligned": [1, "content-aligned"],
      "href": [1],
      "inline": [4],
      "shortAppTitle": [1, "short-app-title"],
      "status": [1],
      "version": [1],
      "appTitle": [1, "app-title"],
      "deviceSize": [32],
      "foregroundColor": [32],
      "hasFullWidthSearchBar": [32],
      "menuOpen": [32],
      "mobileSearchBarVisible": [32],
      "mobileSearchHiddenOnBlur": [32],
      "navMenuVisible": [32],
      "searchButtonClick": [32],
      "searchValue": [32]
    },
    "$listeners$": [[0, "icNavigationMenuClose", "navBarMenuCloseHandler"], [0, "icSearchBarBlur", "searchInputBlurHandler"], [0, "icChange", "searchValueChangeHandler"], [4, "themeChange", "themeChangeHandler"]],
    "$lazyBundleId$": "-",
    "$attrsToReflect$": []
  }; }
}

const icTypographyCss = "/*!@html*/html.sc-ic-typography{line-height:1.15;-webkit-text-size-adjust:100%}/*!@body*/body.sc-ic-typography{margin:0}/*!@main*/main.sc-ic-typography{display:block}/*!@h1*/h1.sc-ic-typography{font-size:2em;margin:0.67em 0}/*!@hr*/hr.sc-ic-typography{box-sizing:content-box;height:0;overflow:visible}/*!@pre*/pre.sc-ic-typography{font-family:monospace, monospace;font-size:1em}/*!@a*/a.sc-ic-typography{background-color:transparent}/*!@abbr[title]*/abbr[title].sc-ic-typography{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}/*!@b,\nstrong*/b.sc-ic-typography,strong.sc-ic-typography{font-weight:bolder}/*!@code,\nkbd,\nsamp*/code.sc-ic-typography,kbd.sc-ic-typography,samp.sc-ic-typography{font-family:monospace, monospace;font-size:1em}/*!@small*/small.sc-ic-typography{font-size:80%}/*!@sub,\nsup*/sub.sc-ic-typography,sup.sc-ic-typography{font-size:75%;line-height:0;position:relative;vertical-align:baseline}/*!@sub*/sub.sc-ic-typography{bottom:-0.25em}/*!@sup*/sup.sc-ic-typography{top:-0.5em}/*!@img*/img.sc-ic-typography{border-style:none}/*!@button,\ninput,\noptgroup,\nselect,\ntextarea*/button.sc-ic-typography,input.sc-ic-typography,optgroup.sc-ic-typography,select.sc-ic-typography,textarea.sc-ic-typography{font-family:inherit;font-size:100%;line-height:1.15;margin:0}/*!@button,\ninput*/button.sc-ic-typography,input.sc-ic-typography{overflow:visible}/*!@button,\nselect*/button.sc-ic-typography,select.sc-ic-typography{text-transform:none}/*!@button,\n[type=\"button\"],\n[type=\"reset\"],\n[type=\"submit\"]*/button.sc-ic-typography,[type=\"button\"].sc-ic-typography,[type=\"reset\"].sc-ic-typography,[type=\"submit\"].sc-ic-typography{-webkit-appearance:button}/*!@button::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner*/button.sc-ic-typography::-moz-focus-inner,[type=\"button\"].sc-ic-typography::-moz-focus-inner,[type=\"reset\"].sc-ic-typography::-moz-focus-inner,[type=\"submit\"].sc-ic-typography::-moz-focus-inner{border-style:none;padding:0}/*!@button:-moz-focusring,\n[type=\"button\"]:-moz-focusring,\n[type=\"reset\"]:-moz-focusring,\n[type=\"submit\"]:-moz-focusring*/button.sc-ic-typography:-moz-focusring,[type=\"button\"].sc-ic-typography:-moz-focusring,[type=\"reset\"].sc-ic-typography:-moz-focusring,[type=\"submit\"].sc-ic-typography:-moz-focusring{outline:1px dotted ButtonText}/*!@fieldset*/fieldset.sc-ic-typography{padding:0.35em 0.75em 0.625em}/*!@legend*/legend.sc-ic-typography{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}/*!@progress*/progress.sc-ic-typography{vertical-align:baseline}/*!@textarea*/textarea.sc-ic-typography{overflow:auto}/*!@[type=\"checkbox\"],\n[type=\"radio\"]*/[type=\"checkbox\"].sc-ic-typography,[type=\"radio\"].sc-ic-typography{box-sizing:border-box;padding:0}/*!@[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button*/[type=\"number\"].sc-ic-typography::-webkit-inner-spin-button,[type=\"number\"].sc-ic-typography::-webkit-outer-spin-button{height:auto}/*!@[type=\"search\"]*/[type=\"search\"].sc-ic-typography{-webkit-appearance:textfield;outline-offset:-2px}/*!@[type=\"search\"]::-webkit-search-decoration*/[type=\"search\"].sc-ic-typography::-webkit-search-decoration{-webkit-appearance:none}/*!@::-webkit-file-upload-button*/.sc-ic-typography::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}/*!@details*/details.sc-ic-typography{display:block}/*!@summary*/summary.sc-ic-typography{display:list-item}/*!@template*/template.sc-ic-typography{display:none}/*!@[hidden]*/[hidden].sc-ic-typography{display:none}/*!@html,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo*/html.sc-ic-typography,body.sc-ic-typography,div.sc-ic-typography,span.sc-ic-typography,applet.sc-ic-typography,object.sc-ic-typography,iframe.sc-ic-typography,h1.sc-ic-typography,h2.sc-ic-typography,h3.sc-ic-typography,h4.sc-ic-typography,h5.sc-ic-typography,h6.sc-ic-typography,p.sc-ic-typography,blockquote.sc-ic-typography,pre.sc-ic-typography,a.sc-ic-typography,abbr.sc-ic-typography,acronym.sc-ic-typography,address.sc-ic-typography,big.sc-ic-typography,cite.sc-ic-typography,code.sc-ic-typography,del.sc-ic-typography,dfn.sc-ic-typography,em.sc-ic-typography,img.sc-ic-typography,ins.sc-ic-typography,kbd.sc-ic-typography,q.sc-ic-typography,s.sc-ic-typography,samp.sc-ic-typography,small.sc-ic-typography,strike.sc-ic-typography,strong.sc-ic-typography,sub.sc-ic-typography,sup.sc-ic-typography,tt.sc-ic-typography,var.sc-ic-typography,b.sc-ic-typography,u.sc-ic-typography,i.sc-ic-typography,center.sc-ic-typography,dl.sc-ic-typography,dt.sc-ic-typography,dd.sc-ic-typography,ol.sc-ic-typography,ul.sc-ic-typography,li.sc-ic-typography,fieldset.sc-ic-typography,form.sc-ic-typography,label.sc-ic-typography,legend.sc-ic-typography,table.sc-ic-typography,caption.sc-ic-typography,tbody.sc-ic-typography,tfoot.sc-ic-typography,thead.sc-ic-typography,tr.sc-ic-typography,th.sc-ic-typography,td.sc-ic-typography,article.sc-ic-typography,aside.sc-ic-typography,canvas.sc-ic-typography,details.sc-ic-typography,embed.sc-ic-typography,figure.sc-ic-typography,figcaption.sc-ic-typography,footer.sc-ic-typography,header.sc-ic-typography,hgroup.sc-ic-typography,menu.sc-ic-typography,nav.sc-ic-typography,output.sc-ic-typography,ruby.sc-ic-typography,section.sc-ic-typography,summary.sc-ic-typography,time.sc-ic-typography,mark.sc-ic-typography,audio.sc-ic-typography,video.sc-ic-typography{margin:0;padding:0;border:0;font-size:100%;font-style:inherit;vertical-align:baseline}/*!@:host*/.sc-ic-typography-h{display:block;position:relative}/*!@:host(.ic-typography-vertical-margins-h1)*/.ic-typography-vertical-margins-h1.sc-ic-typography-h{margin:0 0 var(--ic-space-xl)}/*!@:host(.ic-typography-vertical-margins-h2)*/.ic-typography-vertical-margins-h2.sc-ic-typography-h{margin:var(--ic-space-xxl) 0 var(--ic-space-lg)}/*!@:host(.ic-typography-vertical-margins-h3)*/.ic-typography-vertical-margins-h3.sc-ic-typography-h{margin:var(--ic-space-xl) 0 var(--ic-space-md)}/*!@:host(.ic-typography-vertical-margins-h4)*/.ic-typography-vertical-margins-h4.sc-ic-typography-h{margin:var(--ic-space-lg) 0 var(--ic-space-md)}/*!@:host(.ic-typography-vertical-margins-subtitle-large),\n:host(.ic-typography-vertical-margins-subtitle-small),\n:host(.ic-typography-vertical-margins-body),\n:host(.ic-typography-vertical-margins-code-large),\n:host(.ic-typography-vertical-margins-code-small),\n:host(.ic-typography-vertical-margins-code-extra-small)*/.ic-typography-vertical-margins-subtitle-large.sc-ic-typography-h,.ic-typography-vertical-margins-subtitle-small.sc-ic-typography-h,.ic-typography-vertical-margins-body.sc-ic-typography-h,.ic-typography-vertical-margins-code-large.sc-ic-typography-h,.ic-typography-vertical-margins-code-small.sc-ic-typography-h,.ic-typography-vertical-margins-code-extra-small.sc-ic-typography-h{margin:0 0 var(--ic-space-md)}/*!@:host(.ic-typography-vertical-margins-caption),\n:host(.ic-typography-vertical-margins-caption-uppercase)*/.ic-typography-vertical-margins-caption.sc-ic-typography-h,.ic-typography-vertical-margins-caption-uppercase.sc-ic-typography-h{margin:0 0 var(--ic-space-xs)}/*!@:host(.ic-typography-vertical-margins-h2:first-child),\n:host(.ic-typography-vertical-margins-h3:first-child),\n:host(.ic-typography-vertical-margins-h4:first-child)*/.ic-typography-vertical-margins-h2.sc-ic-typography-h:first-child,.ic-typography-vertical-margins-h3.sc-ic-typography-h:first-child,.ic-typography-vertical-margins-h4.sc-ic-typography-h:first-child{margin-top:0}/*!@:host(.ic-typography-h1)*/.ic-typography-h1.sc-ic-typography-h{font:var(--ic-font-h1) !important}/*!@:host(.ic-typography-h2)*/.ic-typography-h2.sc-ic-typography-h{font:var(--ic-font-h2);letter-spacing:var(--ic-font-letter-spacing-0pt0025)}/*!@:host(.ic-typography-h3)*/.ic-typography-h3.sc-ic-typography-h{font:var(--ic-font-h3)}/*!@:host(.ic-typography-h4)*/.ic-typography-h4.sc-ic-typography-h{font:var(--ic-font-h4);letter-spacing:var(--ic-font-letter-spacing-0pt0015)}/*!@:host(.ic-typography-subtitle-large)*/.ic-typography-subtitle-large.sc-ic-typography-h{font:var(--ic-font-subtitle-large);letter-spacing:var(--ic-font-letter-spacing-0pt0015)}/*!@:host(.ic-typography-subtitle-small)*/.ic-typography-subtitle-small.sc-ic-typography-h{font:var(--ic-font-subtitle-small);letter-spacing:var(--ic-font-letter-spacing-0pt0015)}/*!@:host(.ic-typography-body)*/.ic-typography-body.sc-ic-typography-h{font:var(--ic-font-body);letter-spacing:var(--ic-font-letter-spacing-0pt005)}/*!@:host(.ic-typography-caption)*/.ic-typography-caption.sc-ic-typography-h{font:var(--ic-font-caption);letter-spacing:var(--ic-font-letter-spacing-0pt0025)}/*!@:host(.ic-typography-caption-uppercase)*/.ic-typography-caption-uppercase.sc-ic-typography-h{font:var(--ic-font-caption);letter-spacing:var(--ic-font-letter-spacing-0pt0025);text-transform:uppercase}/*!@:host(.ic-typography-label)*/.ic-typography-label.sc-ic-typography-h{font:var(--ic-font-label);letter-spacing:var(--ic-font-letter-spacing-0pt025)}/*!@:host(.ic-typography-label-uppercase)*/.ic-typography-label-uppercase.sc-ic-typography-h{font:var(--ic-font-label);letter-spacing:var(--ic-font-letter-spacing-0pt025);text-transform:uppercase}/*!@:host(.ic-typography-code-large)*/.ic-typography-code-large.sc-ic-typography-h{font:var(--ic-font-code-large);letter-spacing:var(--ic-font-letter-spacing-0pt025)}/*!@:host(.ic-typography-code-small)*/.ic-typography-code-small.sc-ic-typography-h{font:var(--ic-font-code-small);letter-spacing:var(--ic-font-letter-spacing-0pt005)}/*!@:host(.ic-typography-code-extra-small)*/.ic-typography-code-extra-small.sc-ic-typography-h{font:var(--ic-font-code-extra-small);letter-spacing:var(--ic-font-letter-spacing-0pt025)}/*!@:host(.ic-typography-badge)*/.ic-typography-badge.sc-ic-typography-h{font:var(--ic-font-badge);letter-spacing:var(--ic-font-letter-spacing-0pt0025)}/*!@:host(.ic-typography-badge-small)*/.ic-typography-badge-small.sc-ic-typography-h{font:var(--ic-font-badge-small);letter-spacing:var(--ic-font-letter-spacing-0pt0025)}/*!@:host(.ic-typography-no-wrap)*/.ic-typography-no-wrap.sc-ic-typography-h{white-space:nowrap}/*!@:host ::slotted(h1),\n:host ::slotted(h2),\n:host ::slotted(h3),\n:host ::slotted(h4),\n:host ::slotted(h5),\n:host ::slotted(h6),\n:host ::slotted(p),\n:host ::slotted(label)*/.sc-ic-typography-h .sc-ic-typography-s>h1,.sc-ic-typography-h .sc-ic-typography-s>h2,.sc-ic-typography-h .sc-ic-typography-s>h3,.sc-ic-typography-h .sc-ic-typography-s>h4,.sc-ic-typography-h .sc-ic-typography-s>h5,.sc-ic-typography-h .sc-ic-typography-s>h6,.sc-ic-typography-h .sc-ic-typography-s>p,.sc-ic-typography-h .sc-ic-typography-s>label{font:inherit;letter-spacing:inherit}/*!@.trunc-wrapper*/.trunc-wrapper.sc-ic-typography{display:-webkit-box;-webkit-box-orient:vertical;line-clamp:var(--truncation-max-lines, initial);-webkit-line-clamp:var(--truncation-max-lines, initial);overflow:hidden}/*!@.trunc-btn*/.trunc-btn.sc-ic-typography{border:none;background:none;padding:0;color:var(--ic-color-primary-text);text-decoration:underline;font-weight:var(--ic-font-weight-bold);transition:var(--ic-easing-transition-fast);text-align:start}/*!@.trunc-btn:hover,\n.trunc-btn.focus*/.trunc-btn.sc-ic-typography:hover,.trunc-btn.focus.sc-ic-typography{outline:none;border-bottom:var(--ic-space-xxs) solid !important;margin-bottom:calc(-1 * var(--ic-space-xxs)) !important;text-decoration:none;cursor:pointer}/*!@:host(.strikethrough)*/.strikethrough.sc-ic-typography-h{text-decoration:line-through}/*!@:host(.underline)*/.underline.sc-ic-typography-h{text-decoration:underline}/*!@:host(.underline.strikethrough)*/.underline.strikethrough.sc-ic-typography-h{text-decoration:line-through underline}/*!@:host(.italic)*/.italic.sc-ic-typography-h{font-style:italic !important}/*!@:host(.bold)*/.bold.sc-ic-typography-h{font-weight:var(--ic-font-weight-bold)}@supports (text-decoration-thickness: 25%){/*!@.trunc-btn:hover,\n  .trunc-btn.focus*/.trunc-btn.sc-ic-typography:hover,.trunc-btn.focus.sc-ic-typography{text-decoration-line:underline;text-decoration-thickness:25%;text-underline-offset:25%;border-bottom:0 !important;margin-bottom:0 !important}}";

class Typography {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.icExpand = createEvent(this, "icExpand", 7);
    this.focusBtnFromKeyboard = true;
    this.lastMarkerTop = 0;
    this.lastWidth = 0;
    this.resizeObserver = null;
    this.truncatedHeight = 0;
    this.toggleExpanded = () => {
      this.expanded = !this.expanded;
      this.icExpand.emit({ el: this.el, expanded: this.expanded });
    };
    this.checkMarkerPosition = (elTop, markerTop) => {
      if (markerTop - elTop < this.truncatedHeight) {
        this.truncated = false;
        this.expanded = false;
      }
      else {
        this.truncated = true;
      }
    };
    this.getElementTop = (el) => {
      return el.getClientRects ? el.getClientRects()[0].top : 0;
    };
    this.runResizeObserver = () => {
      this.resizeObserver = new ResizeObserver(() => {
        clearTimeout(this.resizeInterval);
        this.resizeInterval = window.setTimeout(this.resizeObserverCallback, 50);
      });
      this.resizeObserver.observe(this.truncWrapperEl);
    };
    this.resizeObserverCallback = () => {
      if (this.lastWidth === this.el.clientWidth) {
        return;
      }
      if (this.truncatedHeight === 0) {
        this.checkMaxLines(this.el.clientHeight);
        return;
      }
      const markerTop = this.getElementTop(this.marker);
      if (markerTop === this.lastMarkerTop) {
        return;
      }
      this.checkMarkerPosition(this.getElementTop(this.el), markerTop);
      this.lastMarkerTop = markerTop;
      this.lastWidth = this.el.clientWidth;
    };
    this.truncButtonFocus = () => {
      if (this.focusBtnFromKeyboard) {
        this.truncButtonFocussed = true;
      }
    };
    this.truncButtonBlur = () => {
      this.focusBtnFromKeyboard = true;
      this.truncButtonFocussed = false;
    };
    this.truncButtonFocusFromMouse = () => {
      this.focusBtnFromKeyboard = false;
    };
    this.truncated = false;
    this.truncButtonFocussed = false;
    this.applyVerticalMargins = false;
    this.bold = false;
    this.italic = false;
    this.maxLines = undefined;
    this.strikethrough = false;
    this.underline = false;
    this.variant = "body";
    this.expanded = false;
  }
  watchExpandedHandler() {
    this.el.setAttribute("style", `--truncation-max-lines: ${this.expanded ? "initial" : this.maxLines}`);
  }
  disconnectedCallback() {
    if (this.resizeObserver !== null) {
      this.resizeObserver.disconnect();
    }
  }
  componentDidLoad() {
    var _a, _b;
    if ((this.variant === "body" ||
      ((_b = (_a = this.el.getRootNode()) === null || _a === void 0 ? void 0 : _a.host) === null || _b === void 0 ? void 0 : _b.tagName) ===
        "IC-TOOLTIP") &&
      this.maxLines > 0) {
      const marker = document.createElement("span");
      marker.style.visibility = "hidden";
      this.el.appendChild(marker);
      this.marker = marker;
      this.lastWidth = this.el.clientWidth;
      this.checkMaxLines(this.el.clientHeight);
      checkResizeObserver$1(this.runResizeObserver);
    }
  }
  /**
   * Truncate the text in ic-typography by adding a line-clamp css property.
   * @param height Used to calculate whether the element has exceeded the maximum number of lines.
   */
  async checkMaxLines(height) {
    //24 is the height of a single line
    const numLines = Math.floor(height / 24);
    if (numLines > this.maxLines) {
      this.el.setAttribute("style", `--truncation-max-lines: ${this.maxLines}`);
      this.truncatedHeight = this.el.clientHeight;
      this.truncated = true;
    }
  }
  render() {
    var _a, _b;
    const { variant, applyVerticalMargins, maxLines, truncated, expanded, strikethrough, underline, italic, bold, } = this;
    return (hAsync(Host, { class: {
        [`ic-typography-${variant}`]: true,
        [`ic-typography-vertical-margins-${variant}`]: applyVerticalMargins,
        ["bold"]: bold,
        ["italic"]: italic,
        ["strikethrough"]: strikethrough,
        ["underline"]: underline,
      } }, (variant === "body" ||
      ((_b = (_a = this.el.getRootNode()) === null || _a === void 0 ? void 0 : _a.host) === null || _b === void 0 ? void 0 : _b.tagName) ===
        "IC-TOOLTIP") &&
      maxLines > 0 ? (hAsync("div", { class: "trunc-wrapper", ref: (el) => (this.truncWrapperEl = el) }, hAsync("slot", null))) : (hAsync("slot", null)), variant === "body" && maxLines > 0 && truncated && (hAsync("button", { class: { "trunc-btn": true, focus: this.truncButtonFocussed }, onFocus: this.truncButtonFocus, onBlur: this.truncButtonBlur, onMouseDown: this.truncButtonFocusFromMouse, onClick: this.toggleExpanded, "aria-hidden": "true" }, expanded ? "See less" : "See more"))));
  }
  get el() { return getElement(this); }
  static get watchers() { return {
    "expanded": ["watchExpandedHandler"]
  }; }
  static get style() { return icTypographyCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "ic-typography",
    "$members$": {
      "applyVerticalMargins": [4, "apply-vertical-margins"],
      "bold": [4],
      "italic": [4],
      "maxLines": [2, "max-lines"],
      "strikethrough": [4],
      "underline": [4],
      "variant": [1],
      "truncated": [32],
      "truncButtonFocussed": [32],
      "expanded": [32],
      "checkMaxLines": [64]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": []
  }; }
}

registerComponents([
  Accordion,
  AccordionGroup,
  Alert,
  BackToTop,
  Badge,
  Breadcrumb,
  BreadcrumbGroup,
  Button,
  Card,
  Checkbox,
  CheckboxGroup,
  Chip,
  ClassificationBanner,
  DataEntity,
  DataRow,
  DataTable,
  DataTableTitleBar,
  Dialog,
  Divider,
  EmptyState,
  Footer,
  FooterLink,
  FooterLinkGroup,
  Hero,
  HorizontalScroll,
  InputComponentContainer,
  InputContainer,
  InputLabel,
  InputValidation,
  Link,
  LoadingIndicator,
  Menu,
  MenuGroup,
  MenuItem,
  NavigationButton,
  NavigationGroup,
  NavigationItem,
  NavigationMenu,
  PageHeader,
  Pagination,
  PaginationBar,
  PaginationItem,
  PopoverMenu,
  RadioGroup,
  RadioOption,
  SearchBar,
  SectionContainer,
  Select,
  SideNavigation,
  Skeleton,
  StatusTag,
  Step,
  Stepper,
  Switch,
  Tab,
  TabContext,
  TabGroup,
  TabPanel,
  TextField,
  Theme,
  Toast,
  ToastRegion,
  Tooltip,
  TopNavigation,
  Typography,
]);

exports.hydrateApp = hydrateApp;


  /*hydrateAppClosure end*/
  hydrateApp(window, $stencilHydrateOpts, $stencilHydrateResults, $stencilAfterHydrate, $stencilHydrateResolve);
  }

  hydrateAppClosure($stencilWindow);
}

function createWindowFromHtml(e, t) {
 let r = templateWindows.get(t);
 return null == r && (r = new MockWindow(e), templateWindows.set(t, r)), cloneWindow(r);
}

function inspectElement(e, t, r) {
 const s = t.children;
 for (let t = 0, n = s.length; t < n; t++) {
  const n = s[t], o = n.nodeName.toLowerCase();
  if (o.includes("-")) {
   const t = e.components.find((e => e.tag === o));
   null != t && (t.count++, r > t.depth && (t.depth = r));
  } else switch (o) {
  case "a":
   const t = collectAttributes(n);
   t.href = n.href, "string" == typeof t.href && (e.anchors.some((e => e.href === t.href)) || e.anchors.push(t));
   break;

  case "img":
   const r = collectAttributes(n);
   r.src = n.src, "string" == typeof r.src && (e.imgs.some((e => e.src === r.src)) || e.imgs.push(r));
   break;

  case "link":
   const s = collectAttributes(n);
   s.href = n.href, "string" == typeof s.rel && "stylesheet" === s.rel.toLowerCase() && "string" == typeof s.href && (e.styles.some((e => e.link === s.href)) || (delete s.rel, 
   delete s.type, e.styles.push(s)));
   break;

  case "script":
   const o = collectAttributes(n);
   if (n.hasAttribute("src")) o.src = n.src, "string" == typeof o.src && (e.scripts.some((e => e.src === o.src)) || e.scripts.push(o)); else {
    const t = n.getAttribute("data-stencil-static");
    t && e.staticData.push({
     id: t,
     type: n.getAttribute("type"),
     content: n.textContent
    });
   }
  }
  inspectElement(e, n, ++r);
 }
}

function collectAttributes(e) {
 const t = {}, r = e.attributes;
 for (let e = 0, s = r.length; e < s; e++) {
  const s = r.item(e), n = s.nodeName.toLowerCase();
  if (SKIP_ATTRS.has(n)) continue;
  const o = s.nodeValue;
  "class" === n && "" === o || (t[n] = o);
 }
 return t;
}

function patchDomImplementation(e, t) {
 let r;
 if (null != e.defaultView ? (t.destroyWindow = !0, patchWindow(e.defaultView), r = e.defaultView) : (t.destroyWindow = !0, 
 t.destroyDocument = !1, r = new MockWindow(!1)), r.document !== e && (r.document = e), 
 e.defaultView !== r && (e.defaultView = r), "function" != typeof e.documentElement.constructor.prototype.getRootNode && (e.createElement("unknown-element").constructor.prototype.getRootNode = getRootNode), 
 "function" == typeof e.createEvent) {
  const t = e.createEvent("CustomEvent").constructor;
  r.CustomEvent !== t && (r.CustomEvent = t);
 }
 try {
  e.baseURI;
 } catch (t) {
  Object.defineProperty(e, "baseURI", {
   get() {
    const t = e.querySelector("base[href]");
    return t ? new URL(t.getAttribute("href"), r.location.href).href : r.location.href;
   }
  });
 }
 return r;
}

function getRootNode(e) {
 const t = null != e && !0 === e.composed;
 let r = this;
 for (;null != r.parentNode; ) r = r.parentNode, !0 === t && null == r.parentNode && null != r.host && (r = r.host);
 return r;
}

function normalizeHydrateOptions(e) {
 const t = Object.assign({
  serializeToHtml: !1,
  destroyWindow: !1,
  destroyDocument: !1
 }, e || {});
 return "boolean" != typeof t.clientHydrateAnnotations && (t.clientHydrateAnnotations = !0), 
 "boolean" != typeof t.constrainTimeouts && (t.constrainTimeouts = !0), "number" != typeof t.maxHydrateCount && (t.maxHydrateCount = 300), 
 "boolean" != typeof t.runtimeLogging && (t.runtimeLogging = !1), "number" != typeof t.timeout && (t.timeout = 15e3), 
 Array.isArray(t.excludeComponents) ? t.excludeComponents = t.excludeComponents.filter(filterValidTags).map(mapValidTags) : t.excludeComponents = [], 
 Array.isArray(t.staticComponents) ? t.staticComponents = t.staticComponents.filter(filterValidTags).map(mapValidTags) : t.staticComponents = [], 
 t;
}

function filterValidTags(e) {
 return "string" == typeof e && e.includes("-");
}

function mapValidTags(e) {
 return e.trim().toLowerCase();
}

function generateHydrateResults(e) {
 "string" != typeof e.url && (e.url = "https://hydrate.stenciljs.com/"), "string" != typeof e.buildId && (e.buildId = createHydrateBuildId());
 const t = {
  buildId: e.buildId,
  diagnostics: [],
  url: e.url,
  host: null,
  hostname: null,
  href: null,
  pathname: null,
  port: null,
  search: null,
  hash: null,
  html: null,
  httpStatus: null,
  hydratedCount: 0,
  anchors: [],
  components: [],
  imgs: [],
  scripts: [],
  staticData: [],
  styles: [],
  title: null
 };
 try {
  const r = new URL(e.url, "https://hydrate.stenciljs.com/");
  t.url = r.href, t.host = r.host, t.hostname = r.hostname, t.href = r.href, t.port = r.port, 
  t.pathname = r.pathname, t.search = r.search, t.hash = r.hash;
 } catch (e) {
  renderCatchError(t, e);
 }
 return t;
}

function renderBuildDiagnostic(e, t, r, s) {
 const n = {
  level: t,
  type: "build",
  header: r,
  messageText: s,
  relFilePath: void 0,
  absFilePath: void 0,
  lines: []
 };
 return e.pathname ? "/" !== e.pathname && (n.header += ": " + e.pathname) : e.url && (n.header += ": " + e.url), 
 e.diagnostics.push(n), n;
}

function renderBuildError(e, t) {
 return renderBuildDiagnostic(e, "error", "Hydrate Error", t);
}

function renderCatchError(e, t) {
 const r = renderBuildError(e, null);
 return null != t && (null != t.stack ? r.messageText = t.stack.toString() : null != t.message ? r.messageText = t.message.toString() : r.messageText = t.toString()), 
 r;
}

function runtimeLog(e, t, r) {
 global.console[t].apply(global.console, [ `[ ${e}  ${t} ] `, ...r ]);
}

function renderToString(e, t) {
 const r = normalizeHydrateOptions(t);
 return r.serializeToHtml = !0, new Promise((t => {
  let s;
  const n = generateHydrateResults(r);
  if (hasError(n.diagnostics)) t(n); else if ("string" == typeof e) try {
   r.destroyWindow = !0, r.destroyDocument = !0, s = new MockWindow(e), render(s, r, n, t);
  } catch (e) {
   s && s.close && s.close(), s = null, renderCatchError(n, e), t(n);
  } else if (isValidDocument(e)) try {
   r.destroyDocument = !1, s = patchDomImplementation(e, r), render(s, r, n, t);
  } catch (e) {
   s && s.close && s.close(), s = null, renderCatchError(n, e), t(n);
  } else renderBuildError(n, 'Invalid html or document. Must be either a valid "html" string, or DOM "document".'), 
  t(n);
 }));
}

function hydrateDocument(e, t) {
 const r = normalizeHydrateOptions(t);
 return r.serializeToHtml = !1, new Promise((t => {
  let s;
  const n = generateHydrateResults(r);
  if (hasError(n.diagnostics)) t(n); else if ("string" == typeof e) try {
   r.destroyWindow = !0, r.destroyDocument = !0, s = new MockWindow(e), render(s, r, n, t);
  } catch (e) {
   s && s.close && s.close(), s = null, renderCatchError(n, e), t(n);
  } else if (isValidDocument(e)) try {
   r.destroyDocument = !1, s = patchDomImplementation(e, r), render(s, r, n, t);
  } catch (e) {
   s && s.close && s.close(), s = null, renderCatchError(n, e), t(n);
  } else renderBuildError(n, 'Invalid html or document. Must be either a valid "html" string, or DOM "document".'), 
  t(n);
 }));
}

function render(e, t, r, s) {
 if (process.__stencilErrors || (process.__stencilErrors = !0, process.on("unhandledRejection", (e => {
  console.log("unhandledRejection", e);
 }))), function n(e, t, r, s) {
  try {
   e.location.href = r.url;
  } catch (e) {
   renderCatchError(s, e);
  }
  if ("string" == typeof r.userAgent) try {
   e.navigator.userAgent = r.userAgent;
  } catch (e) {}
  if ("string" == typeof r.cookie) try {
   t.cookie = r.cookie;
  } catch (e) {}
  if ("string" == typeof r.referrer) try {
   t.referrer = r.referrer;
  } catch (e) {}
  if ("string" == typeof r.direction) try {
   t.documentElement.setAttribute("dir", r.direction);
  } catch (e) {}
  if ("string" == typeof r.language) try {
   t.documentElement.setAttribute("lang", r.language);
  } catch (e) {}
  if ("string" == typeof r.buildId) try {
   t.documentElement.setAttribute("data-stencil-build", r.buildId);
  } catch (e) {}
  try {
   e.customElements = null;
  } catch (e) {}
  return r.constrainTimeouts && constrainTimeouts(e), function n(e, t, r) {
   try {
    const s = e.location.pathname;
    e.console.error = (...e) => {
     const n = e.reduce(((e, t) => {
      if (t) {
       if (null != t.stack) return e + " " + String(t.stack);
       if (null != t.message) return e + " " + String(t.message);
      }
      return String(t);
     }), "").trim();
     "" !== n && (renderCatchError(r, n), t.runtimeLogging && runtimeLog(s, "error", [ n ]));
    }, e.console.debug = (...e) => {
     renderBuildDiagnostic(r, "debug", "Hydrate Debug", [ ...e ].join(", ")), t.runtimeLogging && runtimeLog(s, "debug", e);
    }, t.runtimeLogging && [ "log", "warn", "assert", "info", "trace" ].forEach((t => {
     e.console[t] = (...e) => {
      runtimeLog(s, t, e);
     };
    }));
   } catch (e) {
    renderCatchError(r, e);
   }
  }(e, r, s), e;
 }(e, e.document, t, r), "function" == typeof t.beforeHydrate) try {
  const n = t.beforeHydrate(e.document);
  isPromise(n) ? n.then((() => {
   hydrateFactory(e, t, r, afterHydrate, s);
  })) : hydrateFactory(e, t, r, afterHydrate, s);
 } catch (n) {
  renderCatchError(r, n), finalizeHydrate(e, e.document, t, r, s);
 } else hydrateFactory(e, t, r, afterHydrate, s);
}

function afterHydrate(e, t, r, s) {
 if ("function" == typeof t.afterHydrate) try {
  const n = t.afterHydrate(e.document);
  isPromise(n) ? n.then((() => {
   finalizeHydrate(e, e.document, t, r, s);
  })) : finalizeHydrate(e, e.document, t, r, s);
 } catch (n) {
  renderCatchError(r, n), finalizeHydrate(e, e.document, t, r, s);
 } else finalizeHydrate(e, e.document, t, r, s);
}

function finalizeHydrate(e, t, r, s, n) {
 try {
  if (inspectElement(s, t.documentElement, 0), !1 !== r.removeUnusedStyles) try {
   removeUnusedStyles(t, s.diagnostics);
  } catch (e) {
   renderCatchError(s, e);
  }
  if ("string" == typeof r.title) try {
   t.title = r.title;
  } catch (e) {
   renderCatchError(s, e);
  }
  s.title = t.title, r.removeScripts && removeScripts(t.documentElement);
  try {
   updateCanonicalLink(t, r.canonicalUrl);
  } catch (e) {
   renderCatchError(s, e);
  }
  try {
   relocateMetaCharset(t);
  } catch (e) {}
  hasError(s.diagnostics) || (s.httpStatus = 200);
  try {
   const e = t.head.querySelector('meta[http-equiv="status"]');
   if (null != e) {
    const t = e.getAttribute("content");
    t && t.length > 0 && (s.httpStatus = parseInt(t, 10));
   }
  } catch (e) {}
  r.clientHydrateAnnotations && t.documentElement.classList.add("hydrated"), r.serializeToHtml && (s.html = serializeDocumentToString(t, r));
 } catch (e) {
  renderCatchError(s, e);
 }
 if (r.destroyWindow) try {
  r.destroyDocument || (e.document = null, t.defaultView = null), e.close && e.close();
 } catch (e) {
  renderCatchError(s, e);
 }
 n(s);
}

function serializeDocumentToString(e, t) {
 return serializeNodeToHtml(e, {
  approximateLineWidth: t.approximateLineWidth,
  outerHtml: !1,
  prettyHtml: t.prettyHtml,
  removeAttributeQuotes: t.removeAttributeQuotes,
  removeBooleanAttributeQuotes: t.removeBooleanAttributeQuotes,
  removeEmptyAttributes: t.removeEmptyAttributes,
  removeHtmlComments: t.removeHtmlComments,
  serializeShadowRoot: !1
 });
}

function isValidDocument(e) {
 return null != e && 9 === e.nodeType && null != e.documentElement && 1 === e.documentElement.nodeType && null != e.body && 1 === e.body.nodeType;
}

function removeScripts(e) {
 const t = e.children;
 for (let e = t.length - 1; e >= 0; e--) {
  const r = t[e];
  removeScripts(r), ("SCRIPT" === r.nodeName || "LINK" === r.nodeName && "modulepreload" === r.getAttribute("rel")) && r.remove();
 }
}

const templateWindows = new Map, isPromise = e => !!e && ("object" == typeof e || "function" == typeof e) && "function" == typeof e.then, hasError = e => null != e && 0 !== e.length && e.some((e => "error" === e.level && "runtime" !== e.type)), TASK_CANCELED_MSG = "task canceled", updateCanonicalLink = (e, t) => {
 let r = e.head.querySelector('link[rel="canonical"]');
 "string" == typeof t ? (null == r && (r = e.createElement("link"), r.setAttribute("rel", "canonical"), 
 e.head.appendChild(r)), r.setAttribute("href", t)) : null != r && (r.getAttribute("href") || r.parentNode.removeChild(r));
}, relocateMetaCharset = e => {
 const t = e.head;
 let r = t.querySelector("meta[charset]");
 null == r ? (r = e.createElement("meta"), r.setAttribute("charset", "utf-8")) : r.remove(), 
 t.insertBefore(r, t.firstChild);
}, parseCss = (e, t) => {
 let r = 1, s = 1;
 const n = [], o = e => {
  const t = e.match(/\n/g);
  t && (r += t.length);
  const n = e.lastIndexOf("\n");
  s = ~n ? e.length - n : s + e.length;
 }, i = () => {
  const e = {
   line: r,
   column: s
  };
  return t => (t.position = new A(e), m(), t);
 }, a = o => {
  const i = e.split("\n"), a = {
   level: "error",
   type: "css",
   language: "css",
   header: "CSS Parse",
   messageText: o,
   absFilePath: t,
   lines: [ {
    lineIndex: r - 1,
    lineNumber: r,
    errorCharStart: s,
    text: e[r - 1]
   } ]
  };
  if (r > 1) {
   const t = {
    lineIndex: r - 1,
    lineNumber: r - 1,
    text: e[r - 2],
    errorCharStart: -1,
    errorLength: -1
   };
   a.lines.unshift(t);
  }
  if (r + 2 < i.length) {
   const e = {
    lineIndex: r,
    lineNumber: r + 1,
    text: i[r],
    errorCharStart: -1,
    errorLength: -1
   };
   a.lines.push(e);
  }
  return n.push(a), null;
 }, l = () => u(/^{\s*/), c = () => u(/^}/), u = t => {
  const r = t.exec(e);
  if (!r) return;
  const s = r[0];
  return o(s), e = e.slice(s.length), r;
 }, d = () => {
  let t;
  const r = [];
  for (m(), h(r); e.length && "}" !== e.charAt(0) && (t = T() || w()); ) r.push(t), 
  h(r);
  return r;
 }, m = () => u(/^\s*/), h = e => {
  let t;
  for (e = e || []; t = p(); ) e.push(t);
  return e;
 }, p = () => {
  const t = i();
  if ("/" !== e.charAt(0) || "*" !== e.charAt(1)) return null;
  let r = 2;
  for (;"" !== e.charAt(r) && ("*" !== e.charAt(r) || "/" !== e.charAt(r + 1)); ) ++r;
  if (r += 2, "" === e.charAt(r - 1)) return a("End of comment missing");
  const n = e.slice(2, r - 2);
  return s += 2, o(n), e = e.slice(r), s += 2, t({
   type: 1,
   comment: n
  });
 }, f = () => {
  const e = u(/^([^{]+)/);
  return e ? trim(e[0]).replace(/\/\*([^*]|[\r\n]|(\*+([^*/]|[\r\n])))*\*\/+/g, "").replace(/"(?:\\"|[^"])*"|'(?:\\'|[^'])*'/g, (function(e) {
   return e.replace(/,/g, "‌");
  })).split(/\s*(?![^(]*\)),\s*/).map((function(e) {
   return e.replace(/\u200C/g, ",");
  })) : null;
 }, g = () => {
  const e = i();
  let t = u(/^(\*?[-#\/\*\\\w]+(\[[0-9a-z_-]+\])?)\s*/);
  if (!t) return null;
  if (t = trim(t[0]), !u(/^:\s*/)) return a("property missing ':'");
  const r = u(/^((?:'(?:\\'|.)*?'|"(?:\\"|.)*?"|\([^\)]*?\)|[^};])+)/), s = e({
   type: 4,
   property: t.replace(commentre, ""),
   value: r ? trim(r[0]).replace(commentre, "") : ""
  });
  return u(/^[;\s]*/), s;
 }, y = () => {
  const e = [];
  if (!l()) return a("missing '{'");
  let t;
  for (h(e); t = g(); ) e.push(t), h(e);
  return c() ? e : a("missing '}'");
 }, C = () => {
  let e;
  const t = [], r = i();
  for (;e = u(/^((\d+\.\d+|\.\d+|\d+)%?|[a-z]+)\s*/); ) t.push(e[1]), u(/^,\s*/);
  return t.length ? r({
   type: 9,
   values: t,
   declarations: y()
  }) : null;
 }, S = (e, t) => {
  const r = new RegExp("^@" + e + "\\s*([^;]+);");
  return () => {
   const s = i(), n = u(r);
   if (!n) return null;
   const o = {
    type: t
   };
   return o[e] = n[1].trim(), s(o);
  };
 }, E = S("import", 7), b = S("charset", 0), v = S("namespace", 11), T = () => "@" !== e[0] ? null : (() => {
  const e = i();
  let t = u(/^@([-\w]+)?keyframes\s*/);
  if (!t) return null;
  const r = t[1];
  if (t = u(/^([-\w]+)\s*/), !t) return a("@keyframes missing name");
  const s = t[1];
  if (!l()) return a("@keyframes missing '{'");
  let n, o = h();
  for (;n = C(); ) o.push(n), o = o.concat(h());
  return c() ? e({
   type: 8,
   name: s,
   vendor: r,
   keyframes: o
  }) : a("@keyframes missing '}'");
 })() || (() => {
  const e = i(), t = u(/^@media *([^{]+)/);
  if (!t) return null;
  const r = trim(t[1]);
  if (!l()) return a("@media missing '{'");
  const s = h().concat(d());
  return c() ? e({
   type: 10,
   media: r,
   rules: s
  }) : a("@media missing '}'");
 })() || (() => {
  const e = i(), t = u(/^@custom-media\s+(--[^\s]+)\s*([^{;]+);/);
  return t ? e({
   type: 2,
   name: trim(t[1]),
   media: trim(t[2])
  }) : null;
 })() || (() => {
  const e = i(), t = u(/^@supports *([^{]+)/);
  if (!t) return null;
  const r = trim(t[1]);
  if (!l()) return a("@supports missing '{'");
  const s = h().concat(d());
  return c() ? e({
   type: 15,
   supports: r,
   rules: s
  }) : a("@supports missing '}'");
 })() || E() || b() || v() || (() => {
  const e = i(), t = u(/^@([-\w]+)?document *([^{]+)/);
  if (!t) return null;
  const r = trim(t[1]), s = trim(t[2]);
  if (!l()) return a("@document missing '{'");
  const n = h().concat(d());
  return c() ? e({
   type: 3,
   document: s,
   vendor: r,
   rules: n
  }) : a("@document missing '}'");
 })() || (() => {
  const e = i();
  if (!u(/^@page */)) return null;
  const t = f() || [];
  if (!l()) return a("@page missing '{'");
  let r, s = h();
  for (;r = g(); ) s.push(r), s = s.concat(h());
  return c() ? e({
   type: 12,
   selectors: t,
   declarations: s
  }) : a("@page missing '}'");
 })() || (() => {
  const e = i();
  if (!u(/^@host\s*/)) return null;
  if (!l()) return a("@host missing '{'");
  const t = h().concat(d());
  return c() ? e({
   type: 6,
   rules: t
  }) : a("@host missing '}'");
 })() || (() => {
  const e = i();
  if (!u(/^@font-face\s*/)) return null;
  if (!l()) return a("@font-face missing '{'");
  let t, r = h();
  for (;t = g(); ) r.push(t), r = r.concat(h());
  return c() ? e({
   type: 5,
   declarations: r
  }) : a("@font-face missing '}'");
 })(), w = () => {
  const e = i(), t = f();
  return t ? (h(), e({
   type: 13,
   selectors: t,
   declarations: y()
  })) : a("selector missing");
 };
 class A {
  constructor(e) {
   this.start = e, this.end = {
    line: r,
    column: s
   }, this.source = t;
  }
 }
 return A.prototype.content = e, {
  diagnostics: n,
  ...addParent((() => {
   const e = d();
   return {
    type: 14,
    stylesheet: {
     source: t,
     rules: e
    }
   };
  })())
 };
}, trim = e => e ? e.trim() : "", addParent = (e, t) => {
 const r = e && "string" == typeof e.type, s = r ? e : t;
 for (const t in e) {
  const r = e[t];
  Array.isArray(r) ? r.forEach((function(e) {
   addParent(e, s);
  })) : r && "object" == typeof r && addParent(r, s);
 }
 return r && Object.defineProperty(e, "parent", {
  configurable: !0,
  writable: !0,
  enumerable: !1,
  value: t || null
 }), e;
}, commentre = /\/\*[^*]*\*+([^/*][^*]*\*+)*\//g, getCssSelectors = e => {
 SELECTORS.all.length = SELECTORS.tags.length = SELECTORS.classNames.length = SELECTORS.ids.length = SELECTORS.attrs.length = 0;
 const t = (e = e.replace(/\./g, " .").replace(/\#/g, " #").replace(/\[/g, " [").replace(/\>/g, " > ").replace(/\+/g, " + ").replace(/\~/g, " ~ ").replace(/\*/g, " * ").replace(/\:not\((.*?)\)/g, " ")).split(" ");
 for (let e = 0, r = t.length; e < r; e++) t[e] = t[e].split(":")[0], 0 !== t[e].length && ("." === t[e].charAt(0) ? SELECTORS.classNames.push(t[e].slice(1)) : "#" === t[e].charAt(0) ? SELECTORS.ids.push(t[e].slice(1)) : "[" === t[e].charAt(0) ? (t[e] = t[e].slice(1).split("=")[0].split("]")[0].trim(), 
 SELECTORS.attrs.push(t[e].toLowerCase())) : /[a-z]/g.test(t[e].charAt(0)) && SELECTORS.tags.push(t[e].toLowerCase()));
 return SELECTORS.classNames = SELECTORS.classNames.sort(((e, t) => e.length < t.length ? -1 : e.length > t.length ? 1 : 0)), 
 SELECTORS;
}, SELECTORS = {
 all: [],
 tags: [],
 classNames: [],
 ids: [],
 attrs: []
}, serializeCssVisitNode = (e, t, r, s) => {
 var n;
 const o = t.type;
 return 4 === o ? serializeCssDeclaration(t, r, s) : 13 === o ? serializeCssRule(e, t) : 1 === o ? "!" === (null === (n = t.comment) || void 0 === n ? void 0 : n[0]) ? `/*${t.comment}*/` : "" : 10 === o ? serializeCssMedia(e, t) : 8 === o ? serializeCssKeyframes(e, t) : 9 === o ? serializeCssKeyframe(e, t) : 5 === o ? serializeCssFontFace(e, t) : 15 === o ? serializeCssSupports(e, t) : 7 === o ? "@import " + t.import + ";" : 0 === o ? "@charset " + t.charset + ";" : 12 === o ? serializeCssPage(e, t) : 6 === o ? "@host{" + serializeCssMapVisit(e, t.rules) + "}" : 2 === o ? "@custom-media " + t.name + " " + t.media + ";" : 3 === o ? serializeCssDocument(e, t) : 11 === o ? "@namespace " + t.namespace + ";" : "";
}, serializeCssRule = (e, t) => {
 var r, s;
 const n = t.declarations, o = e.usedSelectors, i = null !== (s = null === (r = t.selectors) || void 0 === r ? void 0 : r.slice()) && void 0 !== s ? s : [];
 if (null == n || 0 === n.length) return "";
 if (o) {
  let t, r, s = !0;
  for (t = i.length - 1; t >= 0; t--) {
   const n = getCssSelectors(i[t]);
   s = !0;
   let a = n.classNames.length;
   if (a > 0 && e.hasUsedClassNames) for (r = 0; r < a; r++) if (!o.classNames.has(n.classNames[r])) {
    s = !1;
    break;
   }
   if (s && e.hasUsedTags && (a = n.tags.length, a > 0)) for (r = 0; r < a; r++) if (!o.tags.has(n.tags[r])) {
    s = !1;
    break;
   }
   if (s && e.hasUsedAttrs && (a = n.attrs.length, a > 0)) for (r = 0; r < a; r++) if (!o.attrs.has(n.attrs[r])) {
    s = !1;
    break;
   }
   if (s && e.hasUsedIds && (a = n.ids.length, a > 0)) for (r = 0; r < a; r++) if (!o.ids.has(n.ids[r])) {
    s = !1;
    break;
   }
   s || i.splice(t, 1);
  }
 }
 if (0 === i.length) return "";
 const a = [];
 let l = "";
 if (t.selectors) for (const e of t.selectors) l = removeSelectorWhitespace(e), a.includes(l) || a.push(l);
 return `${a}{${serializeCssMapVisit(e, n)}}`;
}, serializeCssDeclaration = (e, t, r) => "" === e.value ? "" : r - 1 === t ? e.property + ":" + e.value : e.property + ":" + e.value + ";", serializeCssMedia = (e, t) => {
 const r = serializeCssMapVisit(e, t.rules);
 return "" === r ? "" : "@media " + removeMediaWhitespace(t.media) + "{" + r + "}";
}, serializeCssKeyframes = (e, t) => {
 const r = serializeCssMapVisit(e, t.keyframes);
 return "" === r ? "" : "@" + (t.vendor || "") + "keyframes " + t.name + "{" + r + "}";
}, serializeCssKeyframe = (e, t) => {
 var r, s;
 return (null !== (s = null === (r = t.values) || void 0 === r ? void 0 : r.join(",")) && void 0 !== s ? s : "") + "{" + serializeCssMapVisit(e, t.declarations) + "}";
}, serializeCssFontFace = (e, t) => {
 const r = serializeCssMapVisit(e, t.declarations);
 return "" === r ? "" : "@font-face{" + r + "}";
}, serializeCssSupports = (e, t) => {
 const r = serializeCssMapVisit(e, t.rules);
 return "" === r ? "" : "@supports " + t.supports + "{" + r + "}";
}, serializeCssPage = (e, t) => {
 var r, s;
 return "@page " + (null !== (s = null === (r = t.selectors) || void 0 === r ? void 0 : r.join(", ")) && void 0 !== s ? s : "") + "{" + serializeCssMapVisit(e, t.declarations) + "}";
}, serializeCssDocument = (e, t) => {
 const r = serializeCssMapVisit(e, t.rules), s = "@" + (t.vendor || "") + "document " + t.document;
 return "" === r ? "" : s + "{" + r + "}";
}, serializeCssMapVisit = (e, t) => {
 let r = "";
 if (t) for (let s = 0, n = t.length; s < n; s++) r += serializeCssVisitNode(e, t[s], s, n);
 return r;
}, removeSelectorWhitespace = e => {
 let t = "", r = "", s = !1;
 for (let n = 0, o = (e = e.trim()).length; n < o; n++) if (r = e[n], "[" === r && "\\" !== t[t.length - 1] ? s = !0 : "]" === r && "\\" !== t[t.length - 1] && (s = !1), 
 !s && CSS_WS_REG.test(r)) {
  if (CSS_NEXT_CHAR_REG.test(e[n + 1])) continue;
  if (CSS_PREV_CHAR_REG.test(t[t.length - 1])) continue;
  t += " ";
 } else t += r;
 return t;
}, removeMediaWhitespace = e => {
 var t;
 let r = "", s = "";
 for (let n = 0, o = (e = null !== (t = null == e ? void 0 : e.trim()) && void 0 !== t ? t : "").length; n < o; n++) if (s = e[n], 
 CSS_WS_REG.test(s)) {
  if (CSS_WS_REG.test(r[r.length - 1])) continue;
  r += " ";
 } else r += s;
 return r;
}, CSS_WS_REG = /\s/, CSS_NEXT_CHAR_REG = /[>\(\)\~\,\+\s]/, CSS_PREV_CHAR_REG = /[>\(\~\,\+]/, collectUsedSelectors = (e, t) => {
 if (null != t && 1 === t.nodeType) {
  const r = t.children, s = t.nodeName.toLowerCase();
  e.tags.add(s);
  const n = t.attributes;
  for (let r = 0, s = n.length; r < s; r++) {
   const s = n.item(r), o = s.name.toLowerCase();
   if (e.attrs.add(o), "class" === o) {
    const r = t.classList;
    for (let t = 0, s = r.length; t < s; t++) e.classNames.add(r.item(t));
   } else "id" === o && e.ids.add(s.value);
  }
  if (r) for (let t = 0, s = r.length; t < s; t++) collectUsedSelectors(e, r[t]);
 }
}, removeUnusedStyles = (e, t) => {
 try {
  const r = e.head.querySelectorAll("style[data-styles]"), s = r.length;
  if (s > 0) {
   const n = (e => {
    const t = {
     attrs: new Set,
     classNames: new Set,
     ids: new Set,
     tags: new Set
    };
    return collectUsedSelectors(t, e), t;
   })(e.documentElement);
   for (let e = 0; e < s; e++) removeUnusedStyleText(n, t, r[e]);
  }
 } catch (e) {
  ((e, t, r) => {
   const s = {
    level: "error",
    type: "build",
    header: "Build Error",
    messageText: "build error",
    lines: []
   };
   null != t && (null != t.stack ? s.messageText = t.stack.toString() : null != t.message ? s.messageText = t.message.length ? t.message : "UNKNOWN ERROR" : s.messageText = t.toString()), 
   null == e || (e => e === TASK_CANCELED_MSG)(s.messageText) || e.push(s);
  })(t, e);
 }
}, removeUnusedStyleText = (e, t, r) => {
 try {
  const s = parseCss(r.innerHTML);
  if (t.push(...s.diagnostics), hasError(t)) return;
  try {
   r.innerHTML = ((e, t) => {
    const r = t.usedSelectors || null, s = {
     usedSelectors: r || null,
     hasUsedAttrs: !!r && r.attrs.size > 0,
     hasUsedClassNames: !!r && r.classNames.size > 0,
     hasUsedIds: !!r && r.ids.size > 0,
     hasUsedTags: !!r && r.tags.size > 0
    }, n = e.rules;
    if (!n) return "";
    const o = n.length, i = [];
    for (let e = 0; e < o; e++) i.push(serializeCssVisitNode(s, n[e], e, o));
    return i.join("");
   })(s.stylesheet, {
    usedSelectors: e
   });
  } catch (e) {
   t.push({
    level: "warn",
    type: "css",
    header: "CSS Stringify",
    messageText: e,
    lines: []
   });
  }
 } catch (e) {
  t.push({
   level: "warn",
   type: "css",
   header: "CSS Parse",
   messageText: e,
   lines: []
  });
 }
}, SKIP_ATTRS = new Set([ "s-id", "c-id" ]), createHydrateBuildId = () => {
 let e = "abcdefghijklmnopqrstuvwxyz", t = "";
 for (;t.length < 8; ) t += e[Math.floor(Math.random() * e.length)], 1 === t.length && (e += "0123456789");
 return t;
};

exports.createWindowFromHtml = createWindowFromHtml;
exports.hydrateDocument = hydrateDocument;
exports.renderToString = renderToString;
exports.serializeDocumentToString = serializeDocumentToString;
