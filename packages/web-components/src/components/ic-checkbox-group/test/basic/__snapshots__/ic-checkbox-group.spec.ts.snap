// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ic-checkbox-group should pass the size on the checkbox group to the child checkboxes when there's no size set on them individually 1`] = `
<ic-checkbox-group class="small" label="test label" name="test" size="small">
  <mock:shadow-root>
    <fieldset aria-labelledby="" id="test">
      <legend>
        <ic-input-label for="test" helpertext="" label="test label"></ic-input-label>
      </legend>
      <div class="checkboxes-container">
        <slot></slot>
      </div>
    </fieldset>
  </mock:shadow-root>
  <ic-checkbox additional-field-display="static" class="small" label="test label" value="test">
    <mock:shadow-root>
      <div class="container">
        <input class="checkbox" id="ic-checkbox-test-label-test-label" name="test" role="checkbox" type="checkbox" value="test">
        <ic-typography class="checkbox-label" variant="body">
          <label htmlfor="ic-checkbox-test-label-test-label">
            test label
          </label>
        </ic-typography>
      </div>
    </mock:shadow-root>
  </ic-checkbox>
  <ic-checkbox additional-field-display="static" class="small" label="test label" value="test">
    <mock:shadow-root>
      <div class="container">
        <input class="checkbox" id="ic-checkbox-test-label-test-label" name="test" role="checkbox" type="checkbox" value="test">
        <ic-typography class="checkbox-label" variant="body">
          <label htmlfor="ic-checkbox-test-label-test-label">
            test label
          </label>
        </ic-typography>
      </div>
    </mock:shadow-root>
  </ic-checkbox>
</ic-checkbox-group>
`;

exports[`ic-checkbox-group should prioritise the size on an individual checkbox over the size on the checkbox group 1`] = `
<ic-checkbox-group class="large" label="test label" name="test" size="large">
  <mock:shadow-root>
    <fieldset aria-labelledby="" id="test">
      <legend>
        <ic-input-label for="test" helpertext="" label="test label"></ic-input-label>
      </legend>
      <div class="checkboxes-container">
        <slot></slot>
      </div>
    </fieldset>
  </mock:shadow-root>
  <ic-checkbox additional-field-display="static" class="large" id="large-checkbox" label="test label" value="test">
    <mock:shadow-root>
      <div class="container">
        <input class="checkbox" id="ic-checkbox-test-label-test-label" name="test" role="checkbox" type="checkbox" value="test">
        <ic-typography class="checkbox-label" variant="body">
          <label htmlfor="ic-checkbox-test-label-test-label">
            test label
          </label>
        </ic-typography>
      </div>
    </mock:shadow-root>
  </ic-checkbox>
  <ic-checkbox additional-field-display="static" class="small" id="small-checkbox" label="test label" size="small" value="test">
    <mock:shadow-root>
      <div class="container">
        <input class="checkbox" id="ic-checkbox-test-label-test-label" name="test" role="checkbox" type="checkbox" value="test">
        <ic-typography class="checkbox-label" variant="body">
          <label htmlfor="ic-checkbox-test-label-test-label">
            test label
          </label>
        </ic-typography>
      </div>
    </mock:shadow-root>
  </ic-checkbox>
</ic-checkbox-group>
`;

exports[`ic-checkbox-group should remove disabled attribute from static additional field when checked: renders-with-disabled-attribute-removed-from-field 1`] = `
<ic-checkbox-group class="default" hide-label="" label="test label" name="test" validation-status="error">
  <mock:shadow-root>
    <span aria-hidden="true" class="screen-reader-only-text" id="screenReaderOnlyText">
      test label invalid data
    </span>
    <fieldset aria-labelledby="screenReaderOnlyText test-validation-text" id="test">
      <div class="checkboxes-container">
        <slot></slot>
      </div>
    </fieldset>
    <ic-input-validation arialivemode="polite" for="test" message="" status="error"></ic-input-validation>
  </mock:shadow-root>
  <ic-checkbox additional-field-display="static" checked="" class="default" label="test label" value="test">
    <mock:shadow-root>
      <div class="container">
        <svg class="checkmark" clip-rule="evenodd" fill-rule="evenodd" height="1.5rem" viewBox="0 0 24 24" width="1.5rem" xmlns="http://www.w3.org/2000/svg">
          <title>
            checkmark icon
          </title>
          <path d="M21 6.285l-11.16 12.733-6.84-6.018 1.319-1.49 5.341 4.686 9.865-11.196 1.475 1.285z"></path>
        </svg>
        <input checked="" class="checkbox checked" id="ic-checkbox-test-label-test-label" name="test" role="checkbox" type="checkbox" value="test">
        <ic-typography class="checkbox-label" variant="body">
          <label htmlfor="ic-checkbox-test-label-test-label">
            test label
          </label>
        </ic-typography>
      </div>
      <div class="dynamic-container">
        <div>
          <div class="additional-field-wrapper">
            <slot name="additional-field"></slot>
          </div>
        </div>
      </div>
    </mock:shadow-root>
    <ic-text-field label="Test label" placeholder="Placeholder" slot="additional-field" value="">
      <mock:shadow-root>
        <ic-input-container>
          <ic-input-label for="ic-text-field-input-3" helpertext="" label="Test label"></ic-input-label>
          <ic-input-component-container validationstatus="">
            <input aria-describedby="" aria-invalid="false" aria-label="Test label" autocapitalize="off" autocomplete="off" id="ic-text-field-input-3" inputmode="text" name="ic-text-field-input-3" placeholder="Placeholder" type="text" value="">
          </ic-input-component-container>
        </ic-input-container>
      </mock:shadow-root>
      <input class="ic-input" name="ic-text-field-input-3" type="hidden" value="">
    </ic-text-field>
    <input class="ic-input" name="test" type="hidden" value="test">
  </ic-checkbox>
</ic-checkbox-group>
`;

exports[`ic-checkbox-group should render an aria label when label hidden: renders-hidden-label 1`] = `
<ic-checkbox-group class="default" hide-label="" label="test label" name="test">
  <mock:shadow-root>
    <span aria-hidden="true" class="screen-reader-only-text" id="screenReaderOnlyText">
      test label
    </span>
    <fieldset aria-labelledby="screenReaderOnlyText" id="test">
      <div class="checkboxes-container">
        <slot></slot>
      </div>
    </fieldset>
  </mock:shadow-root>
  <ic-checkbox additional-field-display="static" class="default" label="test label" value="test">
    <mock:shadow-root>
      <div class="container">
        <input class="checkbox" id="ic-checkbox-test-label-test-label" name="test" role="checkbox" type="checkbox" value="test">
        <ic-typography class="checkbox-label" variant="body">
          <label htmlfor="ic-checkbox-test-label-test-label">
            test label
          </label>
        </ic-typography>
      </div>
    </mock:shadow-root>
  </ic-checkbox>
</ic-checkbox-group>
`;

exports[`ic-checkbox-group should render as helper text: renders-with-helpertext 1`] = `
<ic-checkbox-group class="default" helper-text="helper test" label="test label" name="test">
  <mock:shadow-root>
    <fieldset aria-labelledby="test-helper-text" id="test">
      <legend>
        <ic-input-label for="test" helpertext="helper test" label="test label"></ic-input-label>
      </legend>
      <div class="checkboxes-container">
        <slot></slot>
      </div>
    </fieldset>
  </mock:shadow-root>
  <ic-checkbox additional-field-display="static" class="default" label="test label" value="test">
    <mock:shadow-root>
      <div class="container">
        <input class="checkbox" id="ic-checkbox-test-label-test-label" name="test" role="checkbox" type="checkbox" value="test">
        <ic-typography class="checkbox-label" variant="body">
          <label htmlfor="ic-checkbox-test-label-test-label">
            test label
          </label>
        </ic-typography>
      </div>
    </mock:shadow-root>
  </ic-checkbox>
</ic-checkbox-group>
`;

exports[`ic-checkbox-group should render as required: renders-required 1`] = `
<ic-checkbox-group class="default" label="test label" name="test" required="">
  <mock:shadow-root>
    <span aria-hidden="true" class="screen-reader-only-text" id="screenReaderOnlyText">
      test label required
    </span>
    <fieldset aria-labelledby="screenReaderOnlyText" id="test">
      <legend>
        <ic-input-label for="test" helpertext="" label="test label" required=""></ic-input-label>
      </legend>
      <div class="checkboxes-container">
        <slot></slot>
      </div>
    </fieldset>
  </mock:shadow-root>
  <ic-checkbox additional-field-display="static" class="default" label="test label" value="test">
    <mock:shadow-root>
      <div class="container">
        <input class="checkbox" id="ic-checkbox-test-label-test-label" name="test" role="checkbox" type="checkbox" value="test">
        <ic-typography class="checkbox-label" variant="body">
          <label htmlfor="ic-checkbox-test-label-test-label">
            test label
          </label>
        </ic-typography>
      </div>
    </mock:shadow-root>
  </ic-checkbox>
</ic-checkbox-group>
`;

exports[`ic-checkbox-group should render checked: renders-checked 1`] = `
<ic-checkbox-group class="default" label="test label" name="test">
  <mock:shadow-root>
    <fieldset aria-labelledby="" id="test">
      <legend>
        <ic-input-label for="test" helpertext="" label="test label"></ic-input-label>
      </legend>
      <div class="checkboxes-container">
        <slot></slot>
      </div>
    </fieldset>
  </mock:shadow-root>
  <ic-checkbox additional-field-display="static" checked="" class="default" label="test label" value="test">
    <mock:shadow-root>
      <div class="container">
        <svg class="checkmark" clip-rule="evenodd" fill-rule="evenodd" height="1.5rem" viewBox="0 0 24 24" width="1.5rem" xmlns="http://www.w3.org/2000/svg">
          <title>
            checkmark icon
          </title>
          <path d="M21 6.285l-11.16 12.733-6.84-6.018 1.319-1.49 5.341 4.686 9.865-11.196 1.475 1.285z"></path>
        </svg>
        <input checked="" class="checkbox checked" id="ic-checkbox-test-label-test-label" name="test" role="checkbox" type="checkbox" value="test">
        <ic-typography class="checkbox-label" variant="body">
          <label htmlfor="ic-checkbox-test-label-test-label">
            test label
          </label>
        </ic-typography>
      </div>
    </mock:shadow-root>
    <input class="ic-input" name="test" type="hidden" value="test">
  </ic-checkbox>
</ic-checkbox-group>
`;

exports[`ic-checkbox-group should render in a disabled state: renders-disabled 1`] = `
<ic-checkbox-group class="default" label="test label" name="test">
  <mock:shadow-root>
    <fieldset aria-labelledby="" id="test">
      <legend>
        <ic-input-label for="test" helpertext="" label="test label"></ic-input-label>
      </legend>
      <div class="checkboxes-container">
        <slot></slot>
      </div>
    </fieldset>
  </mock:shadow-root>
  <ic-checkbox additional-field-display="static" class="default disabled" disabled="" label="test label" value="test">
    <mock:shadow-root>
      <div class="container">
        <input class="checkbox" disabled="" id="ic-checkbox-test-label-test-label" name="test" role="checkbox" type="checkbox" value="test">
        <ic-typography class="checkbox-label" variant="body">
          <label htmlfor="ic-checkbox-test-label-test-label">
            test label
          </label>
        </ic-typography>
      </div>
    </mock:shadow-root>
  </ic-checkbox>
</ic-checkbox-group>
`;

exports[`ic-checkbox-group should render indeterminate: renders-indeterminate 1`] = `
<ic-checkbox-group class="default" label="test label" name="test">
  <mock:shadow-root>
    <fieldset aria-labelledby="" id="test">
      <legend>
        <ic-input-label for="test" helpertext="" label="test label"></ic-input-label>
      </legend>
      <div class="checkboxes-container">
        <slot></slot>
      </div>
    </fieldset>
  </mock:shadow-root>
  <ic-checkbox additional-field-display="static" checked="" class="default" indeterminate="" label="test label" value="test">
    <mock:shadow-root>
      <div class="container">
        <div class="indeterminate-symbol"></div>
        <input checked="" class="checkbox checked indeterminate" id="ic-checkbox-test-label-test-label" indeterminate="" name="test" role="checkbox" type="checkbox" value="test">
        <ic-typography class="checkbox-label" variant="body">
          <label htmlfor="ic-checkbox-test-label-test-label">
            test label
          </label>
        </ic-typography>
      </div>
    </mock:shadow-root>
    <input class="ic-input" name="test" type="hidden" value="test">
  </ic-checkbox>
</ic-checkbox-group>
`;

exports[`ic-checkbox-group should render with disabled static additional field: renders-with-disabled-additional-field 1`] = `
<ic-checkbox-group class="default" hide-label="" label="test label" name="test" validation-status="error">
  <mock:shadow-root>
    <span aria-hidden="true" class="screen-reader-only-text" id="screenReaderOnlyText">
      test label invalid data
    </span>
    <fieldset aria-labelledby="screenReaderOnlyText test-validation-text" id="test">
      <div class="checkboxes-container">
        <slot></slot>
      </div>
    </fieldset>
    <ic-input-validation arialivemode="polite" for="test" message="" status="error"></ic-input-validation>
  </mock:shadow-root>
  <ic-checkbox additional-field-display="static" class="default" label="test label" value="test">
    <mock:shadow-root>
      <div class="container">
        <input class="checkbox" id="ic-checkbox-test-label-test-label" name="test" role="checkbox" type="checkbox" value="test">
        <ic-typography class="checkbox-label" variant="body">
          <label htmlfor="ic-checkbox-test-label-test-label">
            test label
          </label>
        </ic-typography>
      </div>
      <div class="dynamic-container">
        <div>
          <div class="additional-field-wrapper">
            <slot name="additional-field"></slot>
          </div>
        </div>
      </div>
    </mock:shadow-root>
    <ic-text-field disabled="" label="Test label" placeholder="Placeholder" slot="additional-field" value="">
      <mock:shadow-root>
        <ic-input-container disabled="">
          <ic-input-label disabled="" for="ic-text-field-input-2" helpertext="" label="Test label"></ic-input-label>
          <ic-input-component-container disabled="" validationstatus="">
            <input aria-describedby="" aria-invalid="false" aria-label="Test label" autocapitalize="off" autocomplete="off" disabled="" id="ic-text-field-input-2" inputmode="text" name="ic-text-field-input-2" placeholder="" type="text" value="">
          </ic-input-component-container>
        </ic-input-container>
      </mock:shadow-root>
      <input class="ic-input" disabled="" name="ic-text-field-input-2" type="hidden" value="">
    </ic-text-field>
  </ic-checkbox>
</ic-checkbox-group>
`;

exports[`ic-checkbox-group should render with dynamic additional field when checked: renders-with-dynamic-field-when-checked 1`] = `
<ic-checkbox-group class="default" hide-label="" label="test label" name="test" validation-status="error">
  <mock:shadow-root>
    <span aria-hidden="true" class="screen-reader-only-text" id="screenReaderOnlyText">
      test label invalid data
    </span>
    <fieldset aria-labelledby="screenReaderOnlyText test-validation-text" id="test">
      <div class="checkboxes-container">
        <slot></slot>
      </div>
    </fieldset>
    <ic-input-validation arialivemode="polite" for="test" message="" status="error"></ic-input-validation>
  </mock:shadow-root>
  <ic-checkbox additional-field-display="dynamic" checked="" class="default" label="test label" value="test">
    <mock:shadow-root>
      <div class="container">
        <svg class="checkmark" clip-rule="evenodd" fill-rule="evenodd" height="1.5rem" viewBox="0 0 24 24" width="1.5rem" xmlns="http://www.w3.org/2000/svg">
          <title>
            checkmark icon
          </title>
          <path d="M21 6.285l-11.16 12.733-6.84-6.018 1.319-1.49 5.341 4.686 9.865-11.196 1.475 1.285z"></path>
        </svg>
        <input checked="" class="checkbox checked" id="ic-checkbox-test-label-test-label" name="test" role="checkbox" type="checkbox" value="test">
        <ic-typography class="checkbox-label" variant="body">
          <label htmlfor="ic-checkbox-test-label-test-label">
            test label
          </label>
        </ic-typography>
      </div>
      <div class="dynamic-container" style="display: flex;">
        <div class="branch-corner"></div>
        <div>
          <ic-typography variant="caption">
            <p aria-live="polite" class="dynamic-text">
              This selection requires additional answers
            </p>
          </ic-typography>
          <div>
            <slot name="additional-field"></slot>
          </div>
        </div>
      </div>
    </mock:shadow-root>
    <ic-text-field label="Test label" placeholder="Placeholder" slot="additional-field" value="">
      <mock:shadow-root>
        <ic-input-container>
          <ic-input-label for="ic-text-field-input-1" helpertext="" label="Test label"></ic-input-label>
          <ic-input-component-container validationstatus="">
            <input aria-describedby="" aria-invalid="false" aria-label="Test label" autocapitalize="off" autocomplete="off" id="ic-text-field-input-1" inputmode="text" name="ic-text-field-input-1" placeholder="Placeholder" type="text" value="">
          </ic-input-component-container>
        </ic-input-container>
      </mock:shadow-root>
      <input class="ic-input" name="ic-text-field-input-1" type="hidden" value="">
    </ic-text-field>
    <input class="ic-input" name="test" type="hidden" value="test">
  </ic-checkbox>
</ic-checkbox-group>
`;

exports[`ic-checkbox-group should render with hidden dynamic additional field: renders-with-dynamic-field 1`] = `
<ic-checkbox-group class="default" hide-label="" label="test label" name="test" validation-status="error">
  <mock:shadow-root>
    <span aria-hidden="true" class="screen-reader-only-text" id="screenReaderOnlyText">
      test label invalid data
    </span>
    <fieldset aria-labelledby="screenReaderOnlyText test-validation-text" id="test">
      <div class="checkboxes-container">
        <slot></slot>
      </div>
    </fieldset>
    <ic-input-validation arialivemode="polite" for="test" message="" status="error"></ic-input-validation>
  </mock:shadow-root>
  <ic-checkbox additional-field-display="dynamic" class="default" label="test label" value="test">
    <mock:shadow-root>
      <div class="container">
        <input class="checkbox" id="ic-checkbox-test-label-test-label" name="test" role="checkbox" type="checkbox" value="test">
        <ic-typography class="checkbox-label" variant="body">
          <label htmlfor="ic-checkbox-test-label-test-label">
            test label
          </label>
        </ic-typography>
      </div>
      <div class="dynamic-container" style="display: none;">
        <div class="branch-corner"></div>
        <div>
          <ic-typography variant="caption">
            <p aria-live="polite" class="dynamic-text">
              This selection requires additional answers
            </p>
          </ic-typography>
          <div>
            <slot name="additional-field"></slot>
          </div>
        </div>
      </div>
    </mock:shadow-root>
    <ic-text-field label="Test label" placeholder="Placeholder" slot="additional-field" value="">
      <mock:shadow-root>
        <ic-input-container>
          <ic-input-label for="ic-text-field-input-0" helpertext="" label="Test label"></ic-input-label>
          <ic-input-component-container validationstatus="">
            <input aria-describedby="" aria-invalid="false" aria-label="Test label" autocapitalize="off" autocomplete="off" id="ic-text-field-input-0" inputmode="text" name="ic-text-field-input-0" placeholder="Placeholder" type="text" value="">
          </ic-input-component-container>
        </ic-input-container>
      </mock:shadow-root>
      <input class="ic-input" name="ic-text-field-input-0" type="hidden" value="">
    </ic-text-field>
  </ic-checkbox>
</ic-checkbox-group>
`;

exports[`ic-checkbox-group should render with validation status: renders-with-validation 1`] = `
<ic-checkbox-group class="default" hide-label="" label="test label" name="test" validation-status="error">
  <mock:shadow-root>
    <span aria-hidden="true" class="screen-reader-only-text" id="screenReaderOnlyText">
      test label invalid data
    </span>
    <fieldset aria-labelledby="screenReaderOnlyText test-validation-text" id="test">
      <div class="checkboxes-container">
        <slot></slot>
      </div>
    </fieldset>
    <ic-input-validation arialivemode="polite" for="test" message="" status="error"></ic-input-validation>
  </mock:shadow-root>
  <ic-checkbox additional-field-display="static" class="default" label="test label" value="test">
    <mock:shadow-root>
      <div class="container">
        <input class="checkbox" id="ic-checkbox-test-label-test-label" name="test" role="checkbox" type="checkbox" value="test">
        <ic-typography class="checkbox-label" variant="body">
          <label htmlfor="ic-checkbox-test-label-test-label">
            test label
          </label>
        </ic-typography>
      </div>
    </mock:shadow-root>
  </ic-checkbox>
</ic-checkbox-group>
`;

exports[`ic-checkbox-group should render: renders 1`] = `
<ic-checkbox-group class="default" label="test label" name="test">
  <mock:shadow-root>
    <fieldset aria-labelledby="" id="test">
      <legend>
        <ic-input-label for="test" helpertext="" label="test label"></ic-input-label>
      </legend>
      <div class="checkboxes-container">
        <slot></slot>
      </div>
    </fieldset>
  </mock:shadow-root>
  <ic-checkbox additional-field-display="static" class="default" label="test label" value="test">
    <mock:shadow-root>
      <div class="container">
        <input class="checkbox" id="ic-checkbox-test-label-test-label" name="test" role="checkbox" type="checkbox" value="test">
        <ic-typography class="checkbox-label" variant="body">
          <label htmlfor="ic-checkbox-test-label-test-label">
            test label
          </label>
        </ic-typography>
      </div>
    </mock:shadow-root>
  </ic-checkbox>
</ic-checkbox-group>
`;
