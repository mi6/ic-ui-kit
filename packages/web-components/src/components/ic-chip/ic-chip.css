@import "../../global/normalize.css";

:host {
  display: inline-block;
  max-width: 100%;
  vertical-align: middle;
}

.chip {
  --chip-bg-color: transparent;
  --chip-hover-bg: var(--ic-chip-action-hover);
  --chip-pressed-bg: var(--ic-chip-action-pressed);

  display: flex;
  padding: var(--ic-space-xxs);
  font-size: 0.875rem;
  border-radius: var(--ic-space-md);
  text-align: left;
  text-decoration: none;
  position: relative;
  background-color: var(--chip-bg-color);
  border: var(--ic-border-width) solid transparent;
  justify-content: space-between;
}

@media (prefers-reduced-motion: no-preference) {
  .chip {
    transition: var(--ic-easing-transition-fast);
  }
}

.chip.small {
  padding: var(--ic-space-xxxs);
  border-radius: calc(var(--ic-space-md) - var(--ic-space-xxxs));
}

.chip.large {
  padding: var(--ic-space-xs);
  border-radius: calc(var(--ic-space-md) + var(--ic-space-xxs));
}

.label {
  padding: 0 var(--ic-space-xs);
}

.chip:focus-within {
  box-shadow: var(--ic-border-focus);
  outline: var(--ic-hc-focus-outline);
  z-index: 1;
}

ic-tooltip:focus-within {
  z-index: 1;
}

.filled {
  --chip-bg-color: var(
    --chip-custom-color,
    var(--ic-chip-background-filled-default)
  );
  --ic-typography-color: var(
    --chip-custom-foreground-color,
    var(--ic-chip-label)
  );

  color: var(--chip-custom-foreground-color, var(--ic-chip-label));
}

.filled.disabled {
  --chip-bg-color: var(--ic-chip-background-filled-inactive);
}

:host(.ic-chip-dark-text) {
  --chip-custom-foreground-color: var(--ic-architectural-black);
}

:host(.ic-chip-light-text) {
  --chip-custom-foreground-color: var(--ic-architectural-white);
}

:host(.ic-chip-dark-text) .chip.filled.hovered:not(:focus-within) {
  --chip-hover-bg: var(--ic-action-dark-bg-hover);
}

:host(.ic-chip-dark-text) .chip.filled:focus-within {
  --chip-pressed-bg: var(--ic-action-dark-bg-pressed);
}

:host(.ic-chip-light-text) .chip.filled.hovered:not(:focus-within) {
  --chip-hover-bg: var(--ic-action-light-bg-hover);
}

:host(.ic-chip-light-text) .chip.filled:focus-within {
  --chip-pressed-bg: var(--ic-action-light-bg-pressed);
}

.outlined {
  color: var(--ic-chip-label);
  border-color: var(--chip-custom-color, var(--ic-chip-outline));
  padding: calc(var(--ic-space-xxs));

  --ic-typography-color: var(--ic-chip-label);
}

.outlined.disabled {
  border: var(--ic-border-disabled);
  border-color: var(--ic-chip-outline-inactive);
}

.chip.disabled ic-typography {
  --ic-typography-color: var(--ic-chip-label-inactive);
}

.dismiss-icon {
  border: none;
  border-radius: 50%;
  padding: 0;
  color: currentcolor;
  background: none;
  cursor: pointer;
  margin: var(--ic-space-xxxs);
  height: calc(var(--ic-space-lg) - var(--ic-space-xxs));
  width: calc(var(--ic-space-lg) - var(--ic-space-xxs));
}

.dismiss-icon:focus {
  outline: var(--ic-hc-focus-outline);
}

.dismiss-icon[disabled] {
  pointer-events: none;
  color: var(--ic-chip-icon-inactive);
}

.icon {
  padding: var(--ic-space-xxxs);
  box-sizing: border-box;
}

.icon,
ic-tooltip {
  width: var(--ic-space-lg);
  height: var(--ic-space-lg);
}

.chip.disabled path,
.chip.disabled ::slotted(svg) {
  fill: var(--ic-chip-icon-inactive);
}

.outlined.non-transparent {
  background-color: var(--ic-chip-outline-background);
}

:host .chip.hovered:not(:focus-within) {
  background-image: linear-gradient(var(--chip-hover-bg) 0 0);
}

:host .chip:focus-within {
  background-image: linear-gradient(var(--chip-pressed-bg) 0 0);
}

@media (forced-colors: active) {
  .chip {
    border: var(--ic-border-hc);
  }

  .chip.disabled {
    appearance: none;
    border-color: GrayText;
  }

  .chip.disabled ic-typography {
    --ic-typography-color: GrayText;
  }

  .chip.disabled path,
  .chip.disabled ::slotted(svg) {
    fill: GrayText;
  }

  .chip:focus-within {
    outline: none;
    border-color: Highlight;
  }
}
