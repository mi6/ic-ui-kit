@import "../../global/normalize.css";

/**
* @prop --min-width: Minimum width of the button.
* @prop --height: The height of the button.
*/

:host {
  display: inline-block;
  position: relative;

  --button-default: var(--ic-action-default);
  --button-default-hover: var(--ic-action-default-hover);
  --button-default-active: var(--ic-action-default-pressed);
  --button-default-background-hover: var(--ic-action-default-bg-hover);
  --button-default-background-active: var(--ic-action-default-bg-active);
  --icon-width: 100%;
  --icon-height: 100%;
}

.button,
::slotted(a) {
  font-family: var(--ic-font-body-family);
  text-decoration: none;
  font-weight: 600;
  font-size: 0.875rem;
  transition: var(--ic-easing-transition-fast);
  border-radius: var(--ic-border-radius);
  min-width: var(--min-width, 6.25rem);
  display: inline-flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  background: none;
  border: none;
  box-sizing: border-box;
  white-space: nowrap;
  vertical-align: middle;
}

:host(.with-badge) .button {
  border-radius: 0.2188rem;
}

.button:hover,
::slotted(a:hover) {
  cursor: pointer;
}

.button:focus,
::slotted(a:focus) {
  box-shadow: var(--ic-border-focus);
}

.button:focus-visible,
::slotted(a:focus-visible) {
  outline: var(--ic-hc-focus-outline);
}

:host(.ic-button-dark) .button,
:host(.ic-button-dark) ::slotted(a) {
  --button-default: var(--ic-color-border-neutral-black);
  --button-default-hover: var(--ic-action-dark-hover);
  --button-default-active: var(--ic-action-dark-pressed);
  --button-default-background-hover: var(--ic-action-dark-bg-hover);
  --button-default-background-active: var(--ic-action-dark-bg-pressed);
}

:host(.ic-button-light) .button,
:host(.ic-button-light) ::slotted(a) {
  --button-default: var(--ic-color-border-neutral-white);
  --button-default-hover: var(--ic-action-light-hover);
  --button-default-active: var(--ic-action-light-pressed);
  --button-default-background-hover: var(--ic-action-light-bg-hover);
  --button-default-background-active: var(--ic-action-light-bg-pressed);
}

:host(.white-background) .button,
:host(.white-background) ::slotted(a) {
  --button-default-background-hover: var(--ic-action-default-bg-hover-no-alpha);
  --button-default-background-active: var(
    --ic-action-default-bg-active-no-alpha
  );

  background-color: var(--ic-architectural-white);
}

:host(.white-background.ic-button-dark) .button,
:host(.white-background.ic-button-dark) ::slotted(a) {
  --button-default-background-hover: var(--ic-action-dark-bg-hover-no-alpha);
  --button-default-background-active: var(--ic-action-dark-bg-active-no-alpha);
}

:host(.ic-button-variant-primary.ic-button-light) .button,
:host(.ic-button-variant-primary.ic-button-light) ::slotted(a) {
  color: var(--ic-color-text-primary-light);

  --button-default-hover: var(--ic-action-light-hover);
  --button-default-active: var(--ic-action-light-pressed);
}

:host(.ic-button-variant-primary.ic-button-dark) .button,
:host(.ic-button-variant-primary.ic-button-dark) ::slotted(a) {
  color: var(--ic-color-text-primary-dark);

  --button-default-hover: var(--ic-action-dark-hover);
  --button-default-active: var(--ic-action-dark-pressed);
}

:host(.ic-button-disabled),
:host(.ic-button-disabled) .button,
:host(.ic-button-disabled) ::slotted(a),
:host(.ic-button-loading),
:host(.ic-button-loading) .button {
  pointer-events: none;
}

:host(.top-icon) .button {
  flex-direction: column;

  --height: fit-content;
}

:host(.top-icon) .button .icon-container {
  margin-right: 0;
}

/* Variants */

/* Primary */

:host(.ic-button-variant-primary) .button,
:host(.ic-button-variant-primary) ::slotted(a) {
  color: var(--ic-color-white-text);
  background-color: var(--button-default);
}

:host(.ic-button-variant-primary) .button:hover {
  background-color: var(--button-default-hover);
}

:host(.ic-button-variant-primary.ic-button-loading) .button,
:host(.ic-button-variant-primary) .button:active {
  background-color: var(--button-default-active);
}

:host(.ic-button-variant-primary.ic-button-disabled) .button,
:host(.ic-button-variant-primary.ic-button-disabled) ::slotted(a) {
  background: var(--ic-architectural-200);
  color: var(--ic-architectural-300);
}

:host(.ic-button-variant-primary.ic-button-light.ic-button-disabled) .button,
:host(.ic-button-variant-primary.ic-button-light.ic-button-disabled)
  ::slotted(a) {
  background: var(--ic-architectural-600);
  color: var(--ic-architectural-500);
}

/* Secondary  */

:host(.ic-button-variant-secondary) .button,
:host(.ic-button-variant-secondary) ::slotted(a) {
  border: var(--ic-border-width) solid var(--button-default);
  color: var(--button-default);
}

:host(.ic-button-variant-secondary) .button:hover,
:host(.ic-button-variant-secondary) ::slotted(a:hover) {
  background-color: var(--button-default-background-hover);
  border-color: var(--button-default-hover);
  color: var(--button-default-hover);
}

:host(.ic-button-variant-secondary) .button:active,
:host(.ic-button-variant-secondary) ::slotted(a:active) {
  border-color: var(--button-default-active);
  background-color: var(--button-default-background-active);
  color: var(--button-default-active);
}

:host(.ic-button-variant-secondary.ic-button-loading) .button {
  border-color: var(--button-default);
  background-color: var(--button-default-background-active);
  color: var(--button-default-active);
}

:host(.ic-button-variant-secondary.ic-button-disabled) .button,
:host(.ic-button-variant-secondary.ic-button-disabled) ::slotted(a) {
  border-color: var(--ic-architectural-300);
  color: var(--ic-architectural-300);
  background: none;
}

:host(.ic-button-variant-secondary.ic-button-light.ic-button-disabled) .button,
:host(.ic-button-variant-secondary.ic-button-light.ic-button-disabled)
  ::slotted(a) {
  border-color: var(--ic-architectural-500);
  color: var(--ic-architectural-500);
}

/* Tertiary */

:host(.ic-button-variant-tertiary) .button,
:host(.ic-button-variant-tertiary) ::slotted(a) {
  color: var(--button-default);
}

:host(.ic-button-variant-tertiary) .button:hover,
:host(.ic-button-variant-tertiary) ::slotted(a:hover) {
  background-color: var(--button-default-background-hover);
  color: var(--button-default-hover);
}

:host(.ic-button-variant-tertiary) .button:active,
:host(.ic-button-variant-tertiary) ::slotted(a:active),
:host(.ic-button-variant-tertiary.ic-button-loading) .button {
  background-color: var(--button-default-background-active);
  color: var(--button-default-active);
}

:host(.ic-button-variant-tertiary.ic-button-disabled) .button,
:host(.ic-button-variant-tertiary.ic-button-disabled) ::slotted(a) {
  color: var(--ic-architectural-300);
  background: none;
}

:host(.ic-button-variant-tertiary.ic-button-light.ic-button-disabled) .button,
:host(.ic-button-variant-tertiary.ic-button-light.ic-button-disabled)
  ::slotted(a) {
  color: var(--ic-architectural-500);
}

/* Destructive */

:host(.ic-button-variant-destructive) .button,
:host(.ic-button-variant-destructive) ::slotted(a) {
  color: var(--ic-color-white-text);
  background-color: var(--ic-action-destructive);
  text-transform: uppercase;
}

:host(.ic-button-variant-destructive) .button:hover {
  background-color: var(--ic-action-destructive-hover);
}

:host(.ic-button-variant-destructive) .button:active,
:host(.ic-button-variant-destructive.ic-button-loading) .button {
  background-color: var(--ic-action-destructive-pressed);
}

:host(.ic-button-variant-destructive.ic-button-disabled) .button,
:host(.ic-button-variant-destructive.ic-button-disabled) ::slotted(a) {
  background: var(--ic-architectural-200);
  color: var(--ic-architectural-300);
}

/* Icon */

:host(.ic-button-variant-icon) .button,
:host(.ic-button-variant-icon) ::slotted(a) {
  color: var(--button-default);
  min-width: 0;
  gap: var(--ic-space-xs);
  margin: var(--ic-space-1px) 0;
}

:host(.ic-button-variant-icon) .icon-container {
  width: var(--ic-space-lg) !important;
  height: var(--ic-space-lg) !important;
}

:host(.ic-button-variant-icon) .button:hover,
:host(.ic-button-variant-icon) ::slotted(a:hover) {
  background-color: var(--button-default-background-hover);
  color: var(--button-default-hover);
}

:host(.ic-button-variant-icon) .button:active:not(:focus),
:host(.ic-button-variant-icon) ::slotted(a:active:not(:focus)),
:host(.ic-button-variant-icon.ic-button-loading) .button {
  background-color: var(--button-default-background-active);
  color: var(--button-default-active);
}

:host(.ic-button-variant-icon.ic-button-disabled) .button,
:host(.ic-button-variant-icon.ic-button-disabled) ::slotted(a) {
  color: var(--ic-architectural-300);
  background: none;
}

/***********************
 * Icon Variants
 ***********************/

/* Icon-primary */

:host(.ic-button-variant-icon-primary) .button,
:host(.ic-button-variant-icon-primary) ::slotted(a) {
  color: var(--ic-color-white-text);
  background-color: var(--button-default);
  min-width: 0;
  gap: var(--ic-space-xs);
  margin: var(--ic-space-1px) 0;
}

:host(.ic-button-variant-icon-primary) .icon-container {
  width: var(--ic-space-lg) !important;
  height: var(--ic-space-lg) !important;
}

:host(.ic-button-variant-icon-primary) .button:hover,
:host(.ic-button-variant-icon-primary) ::slotted(a:hover) {
  background-color: var(--button-default-hover);
}

:host(.ic-button-variant-icon-primary) .button:active,
:host(.ic-button-variant-icon-primary) ::slotted(a:active),
:host(.ic-button-variant-icon-primary.ic-button-loading) .button {
  background: var(--button-default-active);
}

:host(.ic-button-variant-icon-primary.ic-button-loading)
  .button
  ic-loading-indicator {
  --inner-color: var(--ic-architectural-white);
}

:host(.ic-button-variant-icon-primary.ic-button-disabled) .button,
:host(.ic-button-variant-icon-primary.ic-button-disabled) ::slotted(a) {
  color: var(--ic-architectural-300);
  background: var(--ic-architectural-200);
}

:host(.ic-button-variant-icon-primary.ic-button-light) .button,
:host(.ic-button-variant-icon-primary.ic-button-light) ::slotted(a) {
  color: var(--ic-color-text-primary-light);
}

:host(.ic-button-variant-icon-primary.ic-button-light) .button:hover,
:host(.ic-button-variant-icon-primary.ic-button-light) ::slotted(a:hover) {
  background: var(--ic-action-light-hover);
}

:host(.ic-button-variant-icon-primary.ic-button-light) .button:active,
:host(.ic-button-variant-icon-primary.ic-button-light) ::slotted(a:active),
:host(.ic-button-variant-icon-primary.ic-button-light.ic-button-loading)
  .button,
:host(.ic-button-variant-icon-primary.ic-button-light.ic-button-loading)
  ::slotted(a) {
  background: var(--ic-action-light-pressed);
}

:host(.ic-button-variant-icon-primary.ic-button-dark) .button:hover,
:host(.ic-button-variant-icon-primary.ic-button-dark) ::slotted(a:hover) {
  background: var(--ic-action-dark-hover);
}

:host(.ic-button-variant-icon-primary.ic-button-dark) .button:active,
:host(.ic-button-variant-icon-primary.ic-button-dark) ::slotted(a:active),
:host(.ic-button-variant-icon-primary.ic-button-dark.ic-button-loading) .button,
:host(.ic-button-variant-icon-primary.ic-button-dark.ic-button-loading)
  ::slotted(a) {
  background: var(--ic-action-dark-pressed);
}

/* Icon-secondary */

:host(.ic-button-variant-icon-secondary) .button,
:host(.ic-button-variant-icon-secondary) ::slotted(a) {
  border: var(--ic-border-width) solid var(--button-default);
  color: var(--button-default);
  min-width: 0;
  gap: var(--ic-space-xs);
  margin: var(--ic-space-1px) 0;
}

:host(.ic-button-variant-icon-secondary) .icon-container {
  width: var(--ic-space-lg) !important;
  height: var(--ic-space-lg) !important;
}

:host(.ic-button-variant-icon-secondary) .button:hover,
:host(.ic-button-variant-icon-secondary) ::slotted(a:hover) {
  background-color: var(--button-default-background-hover);
  border-color: var(--button-default-hover);
  color: var(--button-default-hover);
}

:host(.ic-button-variant-icon-secondary) .button:active,
:host(.ic-button-variant-icon-secondary) ::slotted(a:active),
:host(.ic-button-variant-icon-secondary.ic-button-loading) .button {
  border-color: var(--button-default-active);
  background-color: var(--button-default-background-active);
  color: var(--button-default-active);
}

:host(.ic-button-variant-icon-secondary.ic-button-disabled) .button,
:host(.ic-button-variant-icon-secondary.ic-button-disabled) .button:hover,
:host(.ic-button-variant-icon-secondary.ic-button-disabled) .button:active,
:host(.ic-button-variant-icon-secondary.ic-button-disabled) ::slotted(a),
:host(.ic-button-variant-icon-secondary.ic-button-disabled) ::slotted(a:hover),
:host(.ic-button-variant-icon-secondary.ic-button-disabled)
  ::slotted(a:active) {
  border-color: var(--ic-architectural-300);
  color: var(--ic-architectural-300);
  background: none;
}

:host(.ic-button-variant-icon-secondary.ic-button-light.ic-button-disabled)
  .button,
:host(.ic-button-variant-icon-secondary.ic-button-light.ic-button-disabled)
  .button:hover,
:host(.ic-button-variant-icon-secondary.ic-button-light.ic-button-disabled)
  .button:active,
:host(.ic-button-variant-icon-secondary.ic-button-light.ic-button-disabled)
  ::slotted(a),
:host(.ic-button-variant-icon-secondary.ic-button-light.ic-button-disabled)
  ::slotted(a:hover),
:host(.ic-button-variant-icon-secondary.ic-button-light.ic-button-disabled)
  ::slotted(a:active) {
  border-color: var(--ic-architectural-500);
  color: var(--ic-architectural-500);
}

/* Icon-tertiary */

:host(.ic-button-variant-icon-tertiary) .button,
:host(.ic-button-variant-icon-tertiary) ::slotted(a) {
  color: var(--button-default);
  min-width: 0;
  gap: var(--ic-space-xs);
  margin: var(--ic-space-1px) 0;
}

:host(.ic-button-variant-icon-tertiary) .icon-container {
  width: var(--ic-space-lg) !important;
  height: var(--ic-space-lg) !important;
}

:host(.ic-button-variant-icon-tertiary) .button:hover,
:host(.ic-button-variant-icon-tertiary) ::slotted(a:hover) {
  background-color: var(--button-default-background-hover);
  color: var(--button-default-hover);
}

:host(.ic-button-variant-icon-tertiary) .button:active,
:host(.ic-button-variant-icon-tertiary) ::slotted(a:active),
:host(.ic-button-variant-icon-tertiary.ic-button-loading) .button {
  background-color: var(--button-default-background-active);
  color: var(--button-default-active);
}

:host(.ic-button-variant-icon-tertiary.ic-button-disabled) .button,
:host(.ic-button-variant-icon-tertiary.ic-button-disabled) .button:hover,
:host(.ic-button-variant-icon-tertiary.ic-button-disabled) .button:active,
:host(.ic-button-variant-icon-tertiary.ic-button-disabled) ::slotted(a),
:host(.ic-button-variant-icon-tertiary.ic-button-disabled) ::slotted(a:hover),
:host(.ic-button-variant-icon-tertiary.ic-button-disabled) ::slotted(a:active) {
  color: var(--ic-architectural-300);
  background: none;
}

/* Icon-destructive */

:host(.ic-button-variant-icon-destructive) .button,
:host(.ic-button-variant-icon-destructive) ::slotted(a) {
  color: var(--ic-color-white-text);
  background-color: var(--ic-action-destructive);
  min-width: 0;
  gap: var(--ic-space-xs);
  margin: var(--ic-space-1px) 0;
}

:host(.ic-button-variant-icon-destructive) .icon-container {
  width: var(--ic-space-lg) !important;
  height: var(--ic-space-lg) !important;
}

:host(.ic-button-variant-icon-destructive) .button:hover,
:host(.ic-button-variant-icon-destructive) ::slotted(a:hover) {
  background-color: var(--ic-action-destructive-hover);
}

:host(.ic-button-variant-icon-destructive) .button:active,
:host(.ic-button-variant-icon-destructive) ::slotted(a:active),
:host(.ic-button-variant-icon-destructive.ic-button-loading) .button {
  background-color: var(--ic-action-destructive-pressed);
}

:host(.ic-button-variant-icon-destructive.ic-button-loading)
  .button
  ic-loading-indicator {
  --inner-color: var(--ic-architectural-white);
}

:host(.ic-button-variant-icon-destructive.ic-button-disabled) .button,
:host(.ic-button-variant-icon-destructive.ic-button-disabled) .button:hover,
:host(.ic-button-variant-icon-destructive.ic-button-disabled) .button:active,
:host(.ic-button-variant-icon-destructive.ic-button-disabled) ::slotted(a),
:host(.ic-button-variant-icon-destructive.ic-button-disabled)
  ::slotted(a:hover),
:host(.ic-button-variant-icon-destructive.ic-button-disabled)
  ::slotted(a:active) {
  background: var(--ic-architectural-200);
  color: var(--ic-architectural-300);
}

/* Sizing */

:host(.ic-button-size-medium) .button {
  height: var(--height, 2.5rem);
  padding: var(--ic-space-xs) var(--ic-space-md);
}

:host(.ic-button-size-small) .button {
  height: var(--height, var(--ic-space-xl));
  padding: var(--ic-space-xxs) var(--ic-space-md);
}

:host(.ic-button-size-large) .button {
  height: var(--height, var(--ic-space-xxl));
  padding: var(--ic-space-sm) var(--ic-space-md);
}

:host(.ic-button-size-medium.ic-button-variant-icon) .button,
:host(.ic-button-size-medium.ic-button-variant-icon-primary) .button,
:host(.ic-button-size-medium.ic-button-variant-icon-secondary) .button,
:host(.ic-button-size-medium.ic-button-variant-icon-tertiary) .button,
:host(.ic-button-size-medium.ic-button-variant-icon-destructive) .button,
:host(.ic-button-size-medium.ic-button-variant-icon-primary) ::slotted(a),
:host(.ic-button-size-medium.ic-button-variant-icon-secondary) ::slotted(a),
:host(.ic-button-size-medium.ic-button-variant-icon-tertiary) ::slotted(a),
:host(.ic-button-size-medium.ic-button-variant-icon-destructive) ::slotted(a),
:host(.ic-button-size-medium.ic-button-variant-icon) ::slotted(a) {
  height: var(--height, var(--ic-space-xl));
  width: var(--ic-space-xl);
  padding: 0.375rem;
}

:host(.ic-button-size-small.ic-button-variant-icon) .button,
:host(.ic-button-size-small.ic-button-variant-icon-primary) .button,
:host(.ic-button-size-small.ic-button-variant-icon-secondary) .button,
:host(.ic-button-size-small.ic-button-variant-icon-tertiary) .button,
:host(.ic-button-size-small.ic-button-variant-icon-destructive) .button,
:host(.ic-button-size-small.ic-button-variant-icon-primary) ::slotted(a),
:host(.ic-button-size-small.ic-button-variant-icon-secondary) ::slotted(a),
:host(.ic-button-size-small.ic-button-variant-icon-tertiary) ::slotted(a),
:host(.ic-button-size-small.ic-button-variant-icon-destructive) ::slotted(a),
:host(.ic-button-size-small.ic-button-variant-icon) ::slotted(a) {
  height: var(--height, var(--ic-space-lg));
  width: var(--ic-space-lg);
  padding: var(--ic-space-xxs);
}

:host(.ic-button-size-large.ic-button-variant-icon) .button,
:host(.ic-button-size-large.ic-button-variant-icon-primary) .button,
:host(.ic-button-size-large.ic-button-variant-icon-secondary) .button,
:host(.ic-button-size-large.ic-button-variant-icon-tertiary) .button,
:host(.ic-button-size-large.ic-button-variant-icon-destructive) .button,
:host(.ic-button-size-large.ic-button-variant-icon-primary) ::slotted(a),
:host(.ic-button-size-large.ic-button-variant-icon-secondary) ::slotted(a),
:host(.ic-button-size-large.ic-button-variant-icon-tertiary) ::slotted(a),
:host(.ic-button-size-large.ic-button-variant-icon-destructive) ::slotted(a),
:host(.ic-button-size-large.ic-button-variant-icon) ::slotted(a) {
  height: var(--height, 2.5rem);
  width: 2.5rem;
  padding: var(--ic-space-xs);
}

/* Width */
:host(.ic-button-full-width),
:host(.ic-button-full-width) .button,
:host(.ic-button-full-width) ::slotted(a) {
  width: 100%;
}

/* Loading */

div.loading-container {
  position: relative;
  align-items: center;
  width: 100%;
}

ic-loading-indicator {
  --outer-color: transparent;
}

@keyframes loading-animation {
  0% {
    width: 0%;
    left: 0%;
  }

  25% {
    width: 0%;
    left: 0%;
    opacity: 0;
  }

  50% {
    width: 100%;
    left: 0%;
    opacity: 1;
  }

  75% {
    width: 0%;
    left: 100%;
  }

  100% {
    width: 0%;
    left: 100%;
    opacity: 0;
  }
}

/* Icons */

div.icon-container {
  box-sizing: border-box;
  width: var(--ic-space-lg);
  height: var(--ic-space-lg);
  display: flex;
  justify-content: center;
  align-items: center;
  margin-right: var(--ic-space-xs);
}

div.right-icon {
  margin-right: auto;
  margin-left: var(--ic-space-xs);
}

:host(.ic-button-full-width) .right-icon {
  margin-right: var(--ic-space-xs);
}

::slotted(:not(ic-badge)) {
  width: var(--icon-width) !important;
  height: var(--icon-height) !important;
  fill: currentcolor !important;
  pointer-events: none;
}

:host(.ic-button-variant-icon) .button .icon-container {
  margin: 0;
  pointer-events: none;
}

/** SEARCH **/

:host(.search-submit-button) ::slotted(svg) {
  --icon-height: 1.25rem;
  --icon-width: 1.25rem;
}

:host(.search-submit-button-small) ::slotted(svg) {
  --icon-height: 1rem;
  --icon-width: 1rem;
}

:host(.clear-button) {
  margin: 0 var(--ic-space-xxs);
}

:host(.clear-button) .button:focus,
:host(.calendar-button) .button:focus {
  box-shadow: none;
}

:host(.search-submit-button) .button:focus {
  box-shadow: none;
}

:host(.search-submit-button) .button:not(:active):focus {
  box-shadow: none;
  background-color: var(--ic-action-default-bg-hover);
}

:host(.search-submit-button) {
  display: flex;
  align-items: center;
  margin: 0 var(--ic-space-xxs);
}

:host(.menu-close-button) ::slotted(svg) {
  --icon-height: 0.875rem;
  --icon-width: 0.875rem;
}

:host(.popout-menu-button) .button {
  height: var(--height);
  justify-content: left;
  border-radius: 0;
  white-space: pre-line;
  text-align: start;
}

:host(.popout-menu-button) div.icon-container {
  flex: none;
}

:host(.popout-menu-button) .button:focus {
  box-shadow: var(--ic-border-focus-inset);
  border-radius: var(--ic-border-radius-inset);
}

.ic-button-describedby {
  display: none;
}

:host .ic-tooltip {
  display: block;
}

/** Dropdown **/
:host .arrow-dropdown {
  margin-top: auto;
}

:host .dropdown-expanded {
  transform: rotate(180deg);
  margin-bottom: var(--ic-space-xxxs);
}

:host(.dropdown-no-icon) .button {
  padding-right: var(--ic-space-xs);
}

/** Slotted router item **/
slot[name="router-item"]::slotted(a) {
  pointer-events: all;
}

::slotted(a) {
  font-size: 0.875rem !important;
  border: none !important;
  vertical-align: middle !important;
}

:host(.white-background) ::slotted(a) {
  background-color: var(--ic-architectural-white) !important;
}

:host(.ic-button-variant-primary) ::slotted(a) {
  background-color: var(--button-default) !important;
}

:host(.ic-button-variant-primary) ::slotted(a:hover) {
  background-color: var(--button-default-hover) !important;
}

:host(.ic-button-variant-primary) ::slotted(a:active) {
  background-color: var(--button-default-active) !important;
}

:host(.ic-button-variant-primary.ic-button-disabled) ::slotted(a),
:host(.ic-button-variant-destructive.ic-button-disabled) ::slotted(a) {
  background: var(--ic-architectural-200) !important;
}

:host(.ic-button-variant-primary.ic-button-light.ic-button-disabled)
  ::slotted(a) {
  background: var(--ic-architectural-600) !important;
}

:host(.ic-button-variant-secondary) ::slotted(a) {
  border: var(--ic-border-width) solid var(--button-default) !important;
}

:host(.ic-button-variant-secondary) ::slotted(a:hover) {
  background-color: var(--button-default-background-hover) !important;
  border-color: var(--button-default-hover) !important;
}

:host(.ic-button-variant-secondary) ::slotted(a:active) {
  border-color: var(--button-default-active) !important;
  background-color: var(--button-default-background-active) !important;
}

:host(.ic-button-variant-secondary.ic-button-disabled) ::slotted(a),
:host(.ic-button-variant-secondary.ic-button-disabled) ::slotted(a:hover),
:host(.ic-button-variant-secondary.ic-button-disabled) ::slotted(a:active),
:host(.ic-button-variant-tertiary.ic-button-disabled) ::slotted(a),
:host(.ic-button-variant-tertiary.ic-button-disabled) ::slotted(a:hover),
:host(.ic-button-variant-tertiary.ic-button-disabled) ::slotted(a:active) {
  border-color: var(--ic-architectural-300) !important;
  background: none !important;
}

:host(.ic-button-variant-secondary.ic-button-light.ic-button-disabled)
  ::slotted(a),
:host(.ic-button-variant-secondary.ic-button-light.ic-button-disabled)
  ::slotted(a:hover),
:host(.ic-button-variant-secondary.ic-button-light.ic-button-disabled)
  ::slotted(a:active),
:host(.ic-button-variant-tertiary.ic-button-light.ic-button-disabled)
  ::slotted(a),
:host(.ic-button-variant-tertiary.ic-button-light.ic-button-disabled)
  ::slotted(a:hover),
:host(.ic-button-variant-tertiary.ic-button-light.ic-button-disabled)
  ::slotted(a:active) {
  border-color: var(--ic-architectural-500) !important;
}

:host(.ic-button-variant-tertiary) ::slotted(a:hover),
:host(.ic-button-variant-icon) ::slotted(a:hover) {
  background-color: var(--button-default-background-hover) !important;
}

:host(.ic-button-variant-tertiary) ::slotted(a:active:not(:focus)),
:host(.ic-button-variant-tertiary) ::slotted(a:active:focus),
:host(.ic-button-variant-tertiary) ::slotted(a:active),
:host(.ic-button-variant-icon) ::slotted(a:active:not(:focus)) {
  background-color: var(--button-default-background-active) !important;
}

:host(.ic-button-variant-icon.ic-button-disabled) ::slotted(a),
:host(.ic-button-variant-icon.ic-button-disabled) ::slotted(a:hover),
:host(.ic-button-variant-icon.ic-button-disabled) ::slotted(a:active) {
  background: none !important;
}

:host(.ic-button-variant-destructive) ::slotted(a) {
  background-color: var(--ic-action-destructive) !important;
}

:host(.ic-button-variant-destructive) ::slotted(a:hover) {
  background-color: var(--ic-action-destructive-hover) !important;
}

:host(.ic-button-variant-destructive) ::slotted(a:active) {
  background-color: var(--ic-action-destructive-pressed) !important;
}

:host(.ic-button-size-medium) ::slotted(a) {
  height: var(--height, 2.5rem) !important;
  padding: var(--ic-space-xs) var(--ic-space-md) !important;
}

:host(.ic-button-size-small) ::slotted(a) {
  height: var(--height, var(--ic-space-xl)) !important;
  padding: var(--ic-space-xxs) var(--ic-space-md) !important;
}

:host(.ic-button-size-large) ::slotted(a) {
  height: var(--height, var(--ic-space-xxl)) !important;
  padding: var(--ic-space-sm) var(--ic-space-md) !important;
}

:host(.ic-button-size-medium.ic-button-variant-icon) ::slotted(a) {
  height: var(--height, var(--ic-space-xl)) !important;
  padding: 0.375rem !important;
}

:host(.ic-button-size-small.ic-button-variant-icon) ::slotted(a) {
  padding: var(--ic-space-xxs) !important;
}

:host(.ic-button-size-large.ic-button-variant-icon) ::slotted(a) {
  padding: var(--ic-space-xs) !important;
}

/** High Contrast **/
@media (forced-colors: active) {
  .button,
  ::slotted(a) {
    border: 0.125rem solid transparent !important;
  }
}

/** Pagination **/

:host(.flip) ::slotted(svg) {
  transform: scaleX(-1);
}
