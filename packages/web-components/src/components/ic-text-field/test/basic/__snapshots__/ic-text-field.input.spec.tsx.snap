// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ic-text-field should render disabled: renders-disabled 1`] = `
<ic-text-field disabled="true" label="Test label" value="test value">
  <mock:shadow-root>
    <ic-input-container disabled="">
      <ic-input-label disabled="" for="ic-text-field-input-7" helpertext="" label="Test label"></ic-input-label>
      <ic-input-component-container disabled="" validationstatus="">
        <input aria-describedby="" aria-invalid="false" aria-label="Test label" autocapitalize="off" autocomplete="off" disabled="" id="ic-text-field-input-7" inputmode="text" name="ic-text-field-input-7" placeholder="" type="text" value="test value">
      </ic-input-component-container>
    </ic-input-container>
  </mock:shadow-root>
  <input class="ic-input" disabled="" name="ic-text-field-input-7" type="hidden" value="test value">
</ic-text-field>
`;

exports[`ic-text-field should render readonly: renders-readonly 1`] = `
<ic-text-field label="Test label" readonly="" value="test value">
  <mock:shadow-root>
    <ic-input-container disabled="" readonly="">
      <ic-input-label for="ic-text-field-input-8" helpertext="" label="Test label" readonly=""></ic-input-label>
      <ic-input-component-container disabled="" readonly="" validationstatus="">
        <input aria-describedby="" aria-invalid="false" aria-label="Test label" autocapitalize="off" autocomplete="off" class="no-left-pad readonly" disabled="" id="ic-text-field-input-8" inputmode="text" name="ic-text-field-input-8" placeholder="" readonly="" type="text" value="test value">
      </ic-input-component-container>
    </ic-input-container>
  </mock:shadow-root>
  <input class="ic-input" disabled="" name="ic-text-field-input-8" type="hidden" value="test value">
</ic-text-field>
`;

exports[`ic-text-field should render with autoprops: renders-with-autoprops 1`] = `
<ic-text-field autocapitalize="on" autocomplete="on" autocorrect="on" autofocus="true" label="Test label" value="test value">
  <mock:shadow-root>
    <ic-input-container>
      <ic-input-label for="ic-text-field-input-4" helpertext="" label="Test label"></ic-input-label>
      <ic-input-component-container validationstatus="">
        <input aria-describedby="" aria-invalid="false" aria-label="Test label" autocapitalize="on" autocomplete="on" id="ic-text-field-input-4" inputmode="text" name="ic-text-field-input-4" placeholder="" type="text" value="test value">
      </ic-input-component-container>
    </ic-input-container>
  </mock:shadow-root>
  <input class="ic-input" name="ic-text-field-input-4" type="hidden" value="test value">
</ic-text-field>
`;

exports[`ic-text-field should render with error validation: renders-with-error-validation 1`] = `
<ic-text-field label="Test label" validation-status="error" validation-text="error text" value="test value">
  <mock:shadow-root>
    <ic-input-container>
      <ic-input-label for="ic-text-field-input-13" helpertext="" label="Test label"></ic-input-label>
      <ic-input-component-container validationstatus="error">
        <input aria-describedby="ic-text-field-input-13-validation-text" aria-invalid="true" aria-label="Test label" autocapitalize="off" autocomplete="off" id="ic-text-field-input-13" inputmode="text" name="ic-text-field-input-13" placeholder="" type="text" value="test value">
      </ic-input-component-container>
      <ic-input-validation arialivemode="assertive" for="ic-text-field-input-13" message="error text" status="error"></ic-input-validation>
    </ic-input-container>
  </mock:shadow-root>
  <input class="ic-input" name="ic-text-field-input-13" type="hidden" value="test value">
</ic-text-field>
`;

exports[`ic-text-field should render with helperText, required and small: renders-with-helpertext 1`] = `
<ic-text-field helper-text="helper text value" label="Test label" required="true" small="" value="">
  <mock:shadow-root>
    <ic-input-container>
      <ic-input-label for="ic-text-field-input-3" helpertext="helper text value" label="Test label" required=""></ic-input-label>
      <ic-input-component-container small="" validationstatus="">
        <input aria-describedby="ic-text-field-input-3-helper-text" aria-invalid="false" aria-label="Test label" autocapitalize="off" autocomplete="off" id="ic-text-field-input-3" inputmode="text" name="ic-text-field-input-3" placeholder="" required="" type="text" value="">
      </ic-input-component-container>
    </ic-input-container>
  </mock:shadow-root>
  <input class="ic-input" name="ic-text-field-input-3" type="hidden" value="">
</ic-text-field>
`;

exports[`ic-text-field should render with hidden label: renders-with-hiden-label 1`] = `
<ic-text-field hide-label="true" label="Test label" value="test value">
  <mock:shadow-root>
    <ic-input-container>
      <ic-input-component-container validationstatus="">
        <input aria-describedby="" aria-invalid="false" aria-label="Test label" autocapitalize="off" autocomplete="off" id="ic-text-field-input-5" inputmode="text" name="ic-text-field-input-5" placeholder="" type="text" value="test value">
      </ic-input-component-container>
    </ic-input-container>
  </mock:shadow-root>
  <input class="ic-input" name="ic-text-field-input-5" type="hidden" value="test value">
</ic-text-field>
`;

exports[`ic-text-field should render with icon: renders-with-icon 1`] = `
<ic-text-field label="Test label" value="">
  <mock:shadow-root>
    <ic-input-container>
      <ic-input-label for="ic-text-field-input-6" helpertext="" label="Test label"></ic-input-label>
      <ic-input-component-container validationstatus="">
        <span slot="left-icon">
          <slot name="icon"></slot>
        </span>
        <input aria-describedby="" aria-invalid="false" aria-label="Test label" autocapitalize="off" autocomplete="off" id="ic-text-field-input-6" inputmode="text" name="ic-text-field-input-6" placeholder="" type="text" value="">
      </ic-input-component-container>
    </ic-input-container>
  </mock:shadow-root>
  <svg fill="#000000" height="24px" slot="icon" viewBox="0 0 24 24" width="24px" xmlns="http://www.w3.org/2000/svg">
    <path d="M0 0h24v24H0z" fill="none"></path>
    <path d="M17 3H7c-1.1 0-1.99.9-1.99 2L5 21l7-3 7 3V5c0-1.1-.9-2-2-2z"></path>
  </svg>
  <input class="ic-input" name="ic-text-field-input-6" type="hidden" value="">
</ic-text-field>
`;

exports[`ic-text-field should render with inline success validation: renders-with-inline-success-validation 1`] = `
<ic-text-field label="Test label" validation-inline="true" validation-status="success" validation-text="Good choice!" value="test value">
  <mock:shadow-root>
    <ic-input-container>
      <ic-input-label for="ic-text-field-input-14" helpertext="" label="Test label"></ic-input-label>
      <ic-input-component-container validationinline="" validationstatus="success">
        <input aria-describedby="" aria-invalid="false" aria-label="Test label" autocapitalize="off" autocomplete="off" id="ic-text-field-input-14" inputmode="text" name="ic-text-field-input-14" placeholder="" type="text" value="test value">
      </ic-input-component-container>
      <ic-input-validation arialivemode="polite" for="ic-text-field-input-14" message="" status=""></ic-input-validation>
    </ic-input-container>
  </mock:shadow-root>
  <input class="ic-input" name="ic-text-field-input-14" type="hidden" value="test value">
</ic-text-field>
`;

exports[`ic-text-field should render with max length: renders-with-maxlength 1`] = `
<ic-text-field label="Test label" max-length="25" value="a long test value to exceed limit">
  <mock:shadow-root>
    <ic-input-container>
      <ic-input-label for="ic-text-field-input-9" helpertext="" label="Test label"></ic-input-label>
      <ic-input-component-container validationstatus="error">
        <input aria-describedby="ic-text-field-input-9-charcount-desc ic-text-field-input-9-validation-text" aria-invalid="true" aria-label="Test label" autocapitalize="off" autocomplete="off" id="ic-text-field-input-9" inputmode="text" name="ic-text-field-input-9" placeholder="" type="text" value="a long test value to exceed limit">
      </ic-input-component-container>
      <ic-input-validation arialivemode="assertive" for="ic-text-field-input-9" message="Maximum length exceeded" status="error">
        <div slot="validation-message-adornment">
          <ic-typography class="error maxlengthtext" variant="caption">
            <span aria-live="polite" class="charcount" id="ic-text-field-input-9-charcount">
              33/25
            </span>
            <span hidden="" id="ic-text-field-input-9-charcount-desc">
              Field can contain a maximum of 25 characters.
            </span>
          </ic-typography>
        </div>
      </ic-input-validation>
    </ic-input-container>
  </mock:shadow-root>
  <input class="ic-input" name="ic-text-field-input-9" type="hidden" value="a long test value to exceed limit">
</ic-text-field>
`;

exports[`ic-text-field should render with name & full width: renders-with-name-full-width 1`] = `
<ic-text-field class="fullwidth" full-width="true" label="Test label" name="mycontolname" value="test value">
  <mock:shadow-root>
    <ic-input-container>
      <ic-input-label for="ic-text-field-input-10" helpertext="" label="Test label"></ic-input-label>
      <ic-input-component-container fullwidth="" validationstatus="">
        <input aria-describedby="" aria-invalid="false" aria-label="Test label" autocapitalize="off" autocomplete="off" id="ic-text-field-input-10" inputmode="text" name="mycontolname" placeholder="" type="text" value="test value">
      </ic-input-component-container>
    </ic-input-container>
  </mock:shadow-root>
  <input class="ic-input" name="mycontolname" type="hidden" value="test value">
</ic-text-field>
`;

exports[`ic-text-field should render with placeholder: renders-with-placeholder 1`] = `
<ic-text-field label="Test label" placeholder="placeholder" rows="0" value="">
  <mock:shadow-root>
    <ic-input-container>
      <ic-input-label for="ic-text-field-input-1" helpertext="" label="Test label"></ic-input-label>
      <ic-input-component-container validationstatus="">
        <input aria-describedby="" aria-invalid="false" aria-label="Test label" autocapitalize="off" autocomplete="off" id="ic-text-field-input-1" inputmode="text" name="ic-text-field-input-1" placeholder="placeholder" type="text" value="">
      </ic-input-component-container>
    </ic-input-container>
  </mock:shadow-root>
  <input class="ic-input" name="ic-text-field-input-1" type="hidden" value="">
</ic-text-field>
`;

exports[`ic-text-field should render with success validation: renders-with-success-validation 1`] = `
<ic-text-field label="Test label" validation-status="success" validation-text="Good choice!" value="test value">
  <mock:shadow-root>
    <ic-input-container>
      <ic-input-label for="ic-text-field-input-11" helpertext="" label="Test label"></ic-input-label>
      <ic-input-component-container validationstatus="success">
        <input aria-describedby="ic-text-field-input-11-validation-text" aria-invalid="false" aria-label="Test label" autocapitalize="off" autocomplete="off" id="ic-text-field-input-11" inputmode="text" name="ic-text-field-input-11" placeholder="" type="text" value="test value">
      </ic-input-component-container>
      <ic-input-validation arialivemode="polite" for="ic-text-field-input-11" message="Good choice!" status="success"></ic-input-validation>
    </ic-input-container>
  </mock:shadow-root>
  <input class="ic-input" name="ic-text-field-input-11" type="hidden" value="test value">
</ic-text-field>
`;

exports[`ic-text-field should render with value: renders-with-value 1`] = `
<ic-text-field label="Test label" value="test value">
  <mock:shadow-root>
    <ic-input-container>
      <ic-input-label for="ic-text-field-input-2" helpertext="" label="Test label"></ic-input-label>
      <ic-input-component-container validationstatus="">
        <input aria-describedby="" aria-invalid="false" aria-label="Test label" autocapitalize="off" autocomplete="off" id="ic-text-field-input-2" inputmode="text" name="ic-text-field-input-2" placeholder="" type="text" value="test value">
      </ic-input-component-container>
    </ic-input-container>
  </mock:shadow-root>
  <input class="ic-input" name="ic-text-field-input-2" type="hidden" value="test value">
</ic-text-field>
`;

exports[`ic-text-field should render with warning validation: renders-with-warning-validation 1`] = `
<ic-text-field label="Test label" validation-status="warning" validation-text="warning text" value="test value">
  <mock:shadow-root>
    <ic-input-container>
      <ic-input-label for="ic-text-field-input-12" helpertext="" label="Test label"></ic-input-label>
      <ic-input-component-container validationstatus="warning">
        <input aria-describedby="ic-text-field-input-12-validation-text" aria-invalid="false" aria-label="Test label" autocapitalize="off" autocomplete="off" id="ic-text-field-input-12" inputmode="text" name="ic-text-field-input-12" placeholder="" type="text" value="test value">
      </ic-input-component-container>
      <ic-input-validation arialivemode="polite" for="ic-text-field-input-12" message="warning text" status="warning"></ic-input-validation>
    </ic-input-container>
  </mock:shadow-root>
  <input class="ic-input" name="ic-text-field-input-12" type="hidden" value="test value">
</ic-text-field>
`;

exports[`ic-text-field should render: renders 1`] = `
<ic-text-field label="Test label" rows="1" value="">
  <mock:shadow-root>
    <ic-input-container>
      <ic-input-label for="ic-text-field-input-0" helpertext="" label="Test label"></ic-input-label>
      <ic-input-component-container validationstatus="">
        <input aria-describedby="" aria-invalid="false" aria-label="Test label" autocapitalize="off" autocomplete="off" id="ic-text-field-input-0" inputmode="text" name="ic-text-field-input-0" placeholder="" type="text" value="">
      </ic-input-component-container>
    </ic-input-container>
  </mock:shadow-root>
  <input class="ic-input" name="ic-text-field-input-0" type="hidden" value="">
</ic-text-field>
`;

exports[`should render with min/max and max validation: renders-with-max 1`] = `
<ic-text-field inputmode="numeric" label="Test label" max="4" min="1" rows="1" type="number" value="6">
  <mock:shadow-root>
    <ic-input-container>
      <ic-input-label for="ic-text-field-input-22" helpertext="" label="Test label"></ic-input-label>
      <ic-input-component-container validationstatus="error">
        <input aria-describedby="ic-text-field-input-22-validation-text" aria-invalid="true" aria-label="Test label" autocapitalize="off" autocomplete="off" id="ic-text-field-input-22" inputmode="numeric" max="4" min="1" name="ic-text-field-input-22" placeholder="" type="number" value="6">
      </ic-input-component-container>
      <ic-input-validation arialivemode="assertive" for="ic-text-field-input-22" message="Maximum value of 4 exceeded" status="error"></ic-input-validation>
    </ic-input-container>
  </mock:shadow-root>
  <input class="ic-input" name="ic-text-field-input-22" type="hidden" value="6">
</ic-text-field>
`;

exports[`should render with min/max and min validation: renders-with-min 1`] = `
<ic-text-field inputmode="numeric" label="Test label" max="4" min="1" rows="1" type="number" value="0">
  <mock:shadow-root>
    <ic-input-container>
      <ic-input-label for="ic-text-field-input-23" helpertext="" label="Test label"></ic-input-label>
      <ic-input-component-container validationstatus="error">
        <input aria-describedby="ic-text-field-input-23-validation-text" aria-invalid="true" aria-label="Test label" autocapitalize="off" autocomplete="off" id="ic-text-field-input-23" inputmode="numeric" max="4" min="1" name="ic-text-field-input-23" placeholder="" type="number" value="0">
      </ic-input-component-container>
      <ic-input-validation arialivemode="assertive" for="ic-text-field-input-23" message="Minimum value of 1 not met" status="error"></ic-input-validation>
    </ic-input-container>
  </mock:shadow-root>
  <input class="ic-input" name="ic-text-field-input-23" type="hidden" value="0">
</ic-text-field>
`;
