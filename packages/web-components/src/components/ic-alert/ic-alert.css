@import "../../global/normalize.css";

:host {
  display: block;
}

:host ::slotted(ic-typography) {
  --ic-typography-color: var(--ic-alert-description);
}

.container {
  min-height: var(--ic-alert-min-height);
  border-radius: var(--ic-space-xxs) var(--ic-space-xxxs) var(--ic-space-xxxs)
    var(--ic-space-xxs);
  position: relative;
  display: flex;
  align-items: center;
}

.container-neutral {
  background-color: var(--ic-alert-background-neutral);
  border: var(--ic-space-xxxs) solid var(--ic-alert-border-neutral);
}

.container-info {
  background-color: var(--ic-alert-background-info);
  border: var(--ic-space-xxxs) solid var(--ic-alert-border-info);
}

.container-warning {
  background-color: var(--ic-alert-background-warning);
  border: var(--ic-space-xxxs) solid var(--ic-alert-border-warning);
}

.container-error {
  background-color: var(--ic-alert-background-error);
  border: var(--ic-space-xxxs) solid var(--ic-alert-border-error);
}

.container-success {
  background-color: var(--ic-alert-background-success);
  border: var(--ic-space-xxxs) solid var(--ic-alert-border-success);
}

.container-ai {
  background-color: var(--ic-alert-background-ai);
  border: var(--ic-space-xxxs) solid var(--ic-alert-border-ai);
}

.divider {
  height: 100%;
  width: var(--ic-space-xs);
  border-radius: var(--ic-space-xxxs) 0 0 var(--ic-space-xxxs);
  position: absolute;
}

.divider-neutral {
  background-color: var(--ic-alert-status-type-neutral);
}

.divider-info {
  background-color: var(--ic-alert-status-type-info);
}

.divider-warning {
  background-color: var(--ic-alert-status-type-warning);
}

.divider-error {
  background-color: var(--ic-alert-status-type-error);
}

.divider-success {
  background-color: var(--ic-alert-status-type-success);
}

.divider-ai {
  background-color: var(--ic-alert-status-type-ai);
}

.alert-icon {
  align-self: flex-start;
  margin-top: var(--ic-space-xs);
  margin-right: var(--ic-space-xs);
}

.alert-icon > svg {
  height: var(--ic-space-lg);
  width: var(--ic-space-lg);
  display: inline-block;
}

/* required for Gatsby as prop does not seem to work when set to false */
:host(.ic-alert-no-default-icon) .icon-neutral {
  visibility: hidden;
  width: 0;
  margin-left: 0.625rem;
}

.icon-neutral > svg,
::slotted(svg) {
  height: var(--ic-space-lg);
  width: var(--ic-space-lg);
  display: inline-block;
  fill: var(--ic-alert-icon-neutral);
}

:host(.ic-alert-variant-info) .alert-icon svg {
  fill: var(--ic-alert-icon-info);
}

:host(.ic-alert-variant-warning) .alert-icon svg {
  fill: var(--ic-alert-icon-warning);
}

:host(.ic-alert-variant-error) .alert-icon svg {
  fill: var(--ic-alert-icon-error);
}

:host(.ic-alert-variant-success) .alert-icon svg {
  fill: var(--ic-alert-icon-success);
}

:host(.ic-alert-variant-ai) .alert-icon svg {
  fill: var(--ic-alert-icon-ai);
}

.alert-content {
  display: flex;
  align-items: center;
  margin-left: 1.125rem;
  width: 100%;
  flex-wrap: wrap;
}

.alert-message {
  display: flex;
  align-items: center;
  padding: var(--ic-space-xs) var(--ic-space-xs) var(--ic-space-xs) 0;
  flex: 1;

  --ic-typography-color: var(--ic-alert-description);
}

.alert-message-title-above {
  display: inline;
}

.alert-title {
  margin-right: var(--ic-space-xs);
  margin-top: 0;
  margin-bottom: auto;

  --ic-typography-color: var(--ic-alert-title);
}

.alert-title-above {
  white-space: normal;
}

.alert-action-container {
  margin-right: var(--ic-space-xs);
  display: flex;
  align-items: center;
}

.dismiss-icon {
  margin-right: var(--ic-space-xxxs);
  margin-left: -0.375rem;
  padding: 0.375rem;
  border: none;
  border-radius: 50%;
  background-color: inherit;
  display: flex;
  align-items: center;
  justify-content: center;
}

.dismiss-icon > svg {
  color: var(--ic-alert-icon-dismissible);
}

.dismiss-icon:hover {
  cursor: pointer;
}

@media (max-width: 628px) {
  .alert-message {
    display: inline;
  }

  .alert-title {
    white-space: normal;
  }

  .alert-action-container {
    margin-bottom: var(--ic-space-xs);
    flex-basis: 100%;
  }

  .alert-icon ~ .alert-action-container {
    margin-left: 2rem;
  }
}

@media (forced-colors: active) {
  .container {
    border: var(--ic-border-hc);
  }

  .dismiss-icon > svg {
    color: var(--ic-architectural-white);
  }
}
