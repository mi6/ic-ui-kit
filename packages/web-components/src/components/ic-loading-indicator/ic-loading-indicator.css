@import "../../global/normalize.css";

:host {
  /**
   * @prop --circular-diameter: Diameter of the circular-indicator in px, rem or %
   */

  display: block;

  --linear-border-radius: 0.25rem;
  --inner-color: var(--ic-loading-indicator-inner-color);
  --outer-color: var(--ic-loading-indicator-outer-color);
  --label-color: var(--ic-loading-indicator-label-color);
  --margin: none;
  --linear-line-height: var(--ic-space-xs);
}

:host(.ic-loading-indicator-monochrome) {
  --inner-color: var(--ic-loading-indicator-inner-color-monochrome);
  --outer-color: var(--ic-loading-indicator-outer-color-monochrome);
  --label-color: var(--ic-loading-indicator-label-color-monochrome);
}

.ic-loading-container {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

:host(.ic-loading-indicator-size-small) {
  --circular-diameter: 2.5rem;
  --linear-line-height: var(--ic-space-xxs);
}

:host(.ic-loading-indicator-size-medium) {
  --circular-diameter: 5rem;
}

:host(.ic-loading-indicator-size-large) {
  --circular-diameter: 7.5rem;
}

:host(.ic-loading-indicator-size-icon) {
  display: inline-block;

  --margin: var(--ic-space-xxxs);
  --circular-diameter: 1.25rem;
}

:host(.ic-loading-indicator-label) {
  --margin: 0 0 var(--ic-space-xs) 0;
}

.ic-loading-label {
  --ic-typography-color: var(--label-color);

  margin-left: var(--label-margin-left);
}

.ic-loading-circular-outer {
  height: var(--circular-diameter);
  width: var(--circular-diameter);
}

.ic-loading-circular-outer.indeterminate {
  animation: circular-animation 1s linear;
  animation-iteration-count: infinite;
}

@keyframes circular-animation {
  100% {
    transform: rotate(360deg);
  }
}

.ic-loading-circular-outer,
.ic-loading-linear-outer {
  margin: var(--margin);
}

.ic-loading-linear-outer {
  background-color: var(--outer-color);
  height: var(--linear-line-height);
  width: 100%;
  border-radius: var(--linear-border-radius);
  overflow: hidden;
}

.ic-loading-circular-outer[aria-valuenow="0"] .ic-loading-circular-inner,
.ic-loading-linear-outer[aria-valuenow="0"] .ic-loading-linear-inner {
  --inner-color: var(--outer-color);
}

.ic-loading-linear-inner {
  position: relative;
  height: 100%;
  background-color: var(--inner-color);
  border-radius: var(--linear-border-radius);
}

.indeterminate > .ic-loading-linear-inner {
  animation: linear-animation 2s infinite;
}

.determinate > .ic-loading-linear-inner {
  transition: width 0.5s;
  width: var(--linear-width);
}

:host(.ic-loading-indicator-full-width) {
  --linear-border-radius: none;
}

@keyframes linear-animation {
  0% {
    width: 0%;
    left: -1%;
  }

  25% {
    width: 0%;
    left: -1%;
  }

  50% {
    width: 101%;
    left: -1%;
  }

  75% {
    width: 0%;
    left: 101%;
  }

  100% {
    width: 0%;
    left: 101%;
  }
}

.ic-loading-circular-svg {
  position: relative;
  width: 100%;
  height: 100%;
  transform: rotate(-90deg);
}

.ic-loading-circular-svg circle {
  width: 100%;
  height: 100%;
  fill: none;
  stroke: var(--compact-step-outer-color, var(--outer-color));
  stroke-width: var(--circular-line-width);
  stroke-linecap: round;
}

/* --stroke-dash-array calculated via dashArray method */
.ic-loading-circular-svg circle:nth-child(2) {
  --circular-indeterminate: calc(
    (0.25 * var(--stroke-dasharray)) - var(--stroke-dasharray)
  );

  stroke-dasharray: var(--stroke-dasharray), var(--stroke-dasharray);
  stroke-dashoffset: var(--stroke-dashoffset, var(--circular-indeterminate));
  stroke: var(--compact-step-inner-color, var(--inner-color));
}

.inner-label {
  height: 100%;
  display: grid;
}

.inner-label .ic-loading-circular-svg,
.inner-text {
  grid-column: 1;
  grid-row: 1;
}

/** ic-stepper **/
:host(.not-required.compact-step-progress-indicator)
  .ic-loading-circular-svg
  circle:nth-child(2) {
  stroke: var(--ic-architectural-300);
}

.inner-text {
  display: flex;
  align-items: center;
  justify-content: center;
  width: var(--ic-space-lg);
  height: inherit;
  overflow: hidden;
  margin: auto;

  --ic-typography-color: var(
    --ic-step-indicator-text-current,
    var(--ic-status-info-default)
  );
}

:host(.not-required.compact-step-progress-indicator) .inner-text {
  --ic-typography-color: var(--ic-step-indicator-text-disabled);
}

:host(.ic-loading-indicator-light.not-required.compact-step-progress-indicator)
  .inner-text {
  --ic-typography-color: var(--ic-architectural-400);
}

/** High Contrast **/
@media (forced-colors: active) {
  .indeterminate > .ic-loading-circular-inner {
    forced-color-adjust: none;
  }

  .ic-loading-linear-outer {
    border: var(--ic-border-hc);
  }

  .ic-loading-linear-inner {
    background-color: canvastext;
  }

  .ic-loading-circular-svg circle {
    stroke: Background;
  }

  .ic-loading-circular-svg circle:nth-child(2) {
    stroke: canvastext;
  }

  :host(.not-required.compact-step-progress-indicator)
    .ic-loading-circular-svg
    circle:nth-child(2) {
    stroke: GrayText;
  }
}
