@import "../../global/normalize.css";

:host {
  display: inline-block;
}

input {
  overflow: hidden;
  appearance: none;
}

.ic-switch-container {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  gap: var(--ic-space-xxs);
  cursor: pointer;
}

.ic-switch-label {
  margin-left: var(--ic-space-xxs);
  margin-bottom: var(--ic-space-sm);
}

.ic-switch-label-small {
  margin-bottom: 0.625rem;
}

.ic-switch-toggle {
  display: flex;
  align-items: center;
  justify-content: space-around;
  width: 4rem;
  height: var(--ic-space-xl);
  position: relative;
  border-radius: 100vw;
  background-color: var(--ic-architectural-200);
  border: var(--ic-space-1px) solid var(--ic-architectural-700);
  box-sizing: border-box;
  transition: var(--ic-transition-duration-fast);
}

.ic-switch-line-break {
  flex: 1 0 100%;
}

.ic-switch-checked-status {
  padding-left: var(--ic-space-xxs);
}

.ic-switch-toggle::before {
  content: "";
  width: 1.333rem;
  height: 1.333rem;
  border-radius: 50%;
  position: absolute;
  z-index: 2;
  top: 50%;
  left: 0.333rem;
  transform: translate(0, -50%);
  background-color: var(--ic-architectural-700);
  transition: var(--ic-transition-duration-slow);
}

.ic-switch-icon {
  display: inline-block;
  vertical-align: middle;
  width: 0.625rem;
  height: 0.625rem;
}

.ic-switch-icon-circle,
.ic-switch-icon-line {
  stroke-width: 1;
}

.ic-switch-icon-circle {
  stroke: var(--ic-architectural-700);
}

.ic-switch-icon-line {
  stroke: var(--ic-architectural-white);
}

@media (prefers-reduced-motion: reduce) {
  .ic-switch-toggle::before {
    transition-duration: 0ms;
  }
}

.ic-switch-input:checked + .ic-switch-toggle {
  background-color: var(--ic-action-default);
  border: none;
}

.ic-switch-input:checked + .ic-switch-toggle::before {
  transform: translate(var(--ic-space-xl), -50%);
  background-color: var(--ic-architectural-white);
}

.ic-switch-input:not([disabled]) + .ic-switch-toggle:hover::before {
  box-shadow: 0 0 0 0.75rem var(--ic-action-dark-bg-hover);
}

.ic-switch-input:not([disabled]) + .ic-switch-toggle:active::before {
  box-shadow: 0 0 0 0.75rem var(--ic-action-dark-bg-active);
}

.ic-switch-input:not([disabled]):checked + .ic-switch-toggle:hover::before {
  box-shadow: 0 0 0 0.75rem var(--ic-action-default-bg-hover);
}

.ic-switch-input:not([disabled]):checked + .ic-switch-toggle:active::before {
  box-shadow: 0 0 0 0.75rem var(--ic-action-default-bg-active);
}

.ic-switch-input:focus:not([disabled]) + .ic-switch-toggle,
.ic-switch-input:focus-visible:not([disabled]) + .ic-switch-toggle {
  box-shadow: 0 0 0 var(--ic-space-1px) var(--ic-architectural-white),
    0 0 0 0.188rem var(--ic-action-default),
    0 0 0 0.5rem var(--ic-action-default-active-alpha);
}

.ic-switch-disabled {
  cursor: default;
}

.ic-switch-disabled .ic-switch-icon-circle {
  stroke: var(--ic-architectural-300);
}

.ic-switch-disabled .ic-switch-icon-line {
  stroke: var(--ic-action-default-bg-active);
}

.ic-switch-input:disabled + .ic-switch-toggle {
  background-color: var(--ic-architectural-80);
  border: var(--ic-border-disabled);
}

.ic-switch-input:disabled ~ .ic-switch-checked-status {
  color: var(--ic-architectural-300);
}

.ic-switch-input:disabled + .ic-switch-toggle::before {
  background-color: var(--ic-architectural-300);
}

.ic-switch-input:disabled:checked + .ic-switch-toggle {
  background-color: var(--ic-status-info-light);
  border: var(--ic-space-1px) dashed #98c9f5;
}

.ic-switch-input:disabled:checked + .ic-switch-toggle::before {
  background-color: var(--ic-architectural-white);
}

.ic-switch-small {
  gap: var(--ic-space-xxxs);
}

.ic-switch-small .ic-switch-checked-status {
  padding-left: 0.375rem;
}

.ic-switch-small .ic-switch-toggle {
  width: var(--ic-space-xxl);
  height: var(--ic-space-lg);
}

.ic-switch-small .ic-switch-toggle::before {
  width: var(--ic-space-md);
  height: var(--ic-space-md);
  left: var(--ic-space-xxs);
}

.ic-switch-small .ic-switch-input:checked + .ic-switch-toggle::before {
  transform: translate(var(--ic-space-lg), -50%);
}

::slotted(*) {
  margin-left: var(--ic-space-sm);
}

::slotted(svg) {
  fill: currentcolor;
}

@media (forced-colors: active) {
  .ic-switch-toggle::before,
  .ic-switch-input:checked + .ic-switch-toggle {
    border: var(--ic-hc-border);
  }

  .ic-switch-input:checked + .ic-switch-toggle::before {
    transform: translate(calc(var(--ic-space-xl) - 0.125rem), -50%);
  }

  .ic-switch-input:disabled + .ic-switch-toggle,
  .ic-switch-input:disabled:checked + .ic-switch-toggle,
  .ic-switch-input:disabled + .ic-switch-toggle::before {
    border-color: GrayText;
  }

  .ic-switch-input:disabled ~ .ic-switch-checked-status {
    color: GrayText;
  }

  .ic-switch-disabled .ic-switch-icon-circle,
  .ic-switch-disabled .ic-switch-icon-line {
    stroke: GrayText;
  }
}
