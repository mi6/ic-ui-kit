'use client';

/**
 * This file was automatically generated by the Stencil React Output Target.
 * Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
 */

/* eslint-disable */

import type { EventName, StencilReactComponent } from '@stencil/react-output-target/runtime';
import { createComponent } from '@stencil/react-output-target/runtime';
import { type IcDataTableCustomEvent, type IcDataTableDataType, type IcDataTableTitleBarCustomEvent, type IcDateInputCustomEvent, type IcDatePickerCustomEvent, type IcDensityUpdateEventDetail, type IcPageChangeEventDetail, type IcPaginationBarCustomEvent, type IcSortEventDetail } from "@ukic/canary-web-components";
import { IcCardHorizontal as IcCardHorizontalElement, defineCustomElement as defineIcCardHorizontal } from "@ukic/canary-web-components/dist/components/ic-card-horizontal.js";
import { IcDataTableTitleBar as IcDataTableTitleBarElement, defineCustomElement as defineIcDataTableTitleBar } from "@ukic/canary-web-components/dist/components/ic-data-table-title-bar.js";
import { IcDataTable as IcDataTableElement, defineCustomElement as defineIcDataTable } from "@ukic/canary-web-components/dist/components/ic-data-table.js";
import { IcDateInput as IcDateInputElement, defineCustomElement as defineIcDateInput } from "@ukic/canary-web-components/dist/components/ic-date-input.js";
import { IcDatePicker as IcDatePickerElement, defineCustomElement as defineIcDatePicker } from "@ukic/canary-web-components/dist/components/ic-date-picker.js";
import { IcPaginationBar as IcPaginationBarElement, defineCustomElement as defineIcPaginationBar } from "@ukic/canary-web-components/dist/components/ic-pagination-bar.js";
import { IcTreeItem as IcTreeItemElement, defineCustomElement as defineIcTreeItem } from "@ukic/canary-web-components/dist/components/ic-tree-item.js";
import { IcTreeView as IcTreeViewElement, defineCustomElement as defineIcTreeView } from "@ukic/canary-web-components/dist/components/ic-tree-view.js";
import React from 'react';

export type IcCardHorizontalEvents = NonNullable<unknown>;

export const IcCardHorizontal: StencilReactComponent<IcCardHorizontalElement, IcCardHorizontalEvents> = /*@__PURE__*/ createComponent<IcCardHorizontalElement, IcCardHorizontalEvents>({
    tagName: 'ic-card-horizontal',
    elementClass: IcCardHorizontalElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {} as IcCardHorizontalEvents,
    defineCustomElement: defineIcCardHorizontal
});

export type IcDataTableEvents = {
    onIcRowHeightChange: EventName<CustomEvent<void>>,
    onIcSelectAllRows: EventName<IcDataTableCustomEvent<IcDataTableDataType[]>>,
    onIcSelectedRowChange: EventName<IcDataTableCustomEvent<{
        row: IcDataTableDataType | null;
        selectedRows: IcDataTableDataType[];
    }>>,
    onIcColumnsLoaded: EventName<CustomEvent<void>>,
    onIcDataLoaded: EventName<CustomEvent<void>>,
    onIcSortChange: EventName<IcDataTableCustomEvent<IcSortEventDetail>>
};

export const IcDataTable: StencilReactComponent<IcDataTableElement, IcDataTableEvents> = /*@__PURE__*/ createComponent<IcDataTableElement, IcDataTableEvents>({
    tagName: 'ic-data-table',
    elementClass: IcDataTableElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {
        onIcRowHeightChange: 'icRowHeightChange',
        onIcSelectAllRows: 'icSelectAllRows',
        onIcSelectedRowChange: 'icSelectedRowChange',
        onIcColumnsLoaded: 'icColumnsLoaded',
        onIcDataLoaded: 'icDataLoaded',
        onIcSortChange: 'icSortChange'
    } as IcDataTableEvents,
    defineCustomElement: defineIcDataTable
});

export type IcDataTableTitleBarEvents = { onIcTableDensityUpdate: EventName<IcDataTableTitleBarCustomEvent<IcDensityUpdateEventDetail>> };

export const IcDataTableTitleBar: StencilReactComponent<IcDataTableTitleBarElement, IcDataTableTitleBarEvents> = /*@__PURE__*/ createComponent<IcDataTableTitleBarElement, IcDataTableTitleBarEvents>({
    tagName: 'ic-data-table-title-bar',
    elementClass: IcDataTableTitleBarElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: { onIcTableDensityUpdate: 'icTableDensityUpdate' } as IcDataTableTitleBarEvents,
    defineCustomElement: defineIcDataTableTitleBar
});

export type IcDateInputEvents = {
    onIcBlur: EventName<IcDateInputCustomEvent<{ value: Date | null }>>,
    onIcChange: EventName<IcDateInputCustomEvent<{
        value: Date | null;
        dateObject: {
            day: string | null;
            month: string | null;
            year: string | null;
        };
        utcValue: Date | null;
    }>>,
    onIcFocus: EventName<IcDateInputCustomEvent<{ value: Date | null }>>
};

export const IcDateInput: StencilReactComponent<IcDateInputElement, IcDateInputEvents> = /*@__PURE__*/ createComponent<IcDateInputElement, IcDateInputEvents>({
    tagName: 'ic-date-input',
    elementClass: IcDateInputElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {
        onIcBlur: 'icBlur',
        onIcChange: 'icChange',
        onIcFocus: 'icFocus'
    } as IcDateInputEvents,
    defineCustomElement: defineIcDateInput
});

export type IcDatePickerEvents = { onIcChange: EventName<IcDatePickerCustomEvent<{ value: Date }>> };

export const IcDatePicker: StencilReactComponent<IcDatePickerElement, IcDatePickerEvents> = /*@__PURE__*/ createComponent<IcDatePickerElement, IcDatePickerEvents>({
    tagName: 'ic-date-picker',
    elementClass: IcDatePickerElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: { onIcChange: 'icChange' } as IcDatePickerEvents,
    defineCustomElement: defineIcDatePicker
});

export type IcPaginationBarEvents = {
    onIcPageChange: EventName<IcPaginationBarCustomEvent<IcPageChangeEventDetail>>,
    onIcItemsPerPageChange: EventName<CustomEvent<{ value: number }>>
};

export const IcPaginationBar: StencilReactComponent<IcPaginationBarElement, IcPaginationBarEvents> = /*@__PURE__*/ createComponent<IcPaginationBarElement, IcPaginationBarEvents>({
    tagName: 'ic-pagination-bar',
    elementClass: IcPaginationBarElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {
        onIcPageChange: 'icPageChange',
        onIcItemsPerPageChange: 'icItemsPerPageChange'
    } as IcPaginationBarEvents,
    defineCustomElement: defineIcPaginationBar
});

export type IcTreeItemEvents = {
    onIcTreeItemSelected: EventName<CustomEvent<{ id: string }>>,
    onIcTreeItemExpanded: EventName<CustomEvent<{
        isExpanded: boolean;
        id: string;
    }>>
};

export const IcTreeItem: StencilReactComponent<IcTreeItemElement, IcTreeItemEvents> = /*@__PURE__*/ createComponent<IcTreeItemElement, IcTreeItemEvents>({
    tagName: 'ic-tree-item',
    elementClass: IcTreeItemElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {
        onIcTreeItemSelected: 'icTreeItemSelected',
        onIcTreeItemExpanded: 'icTreeItemExpanded'
    } as IcTreeItemEvents,
    defineCustomElement: defineIcTreeItem
});

export type IcTreeViewEvents = NonNullable<unknown>;

export const IcTreeView: StencilReactComponent<IcTreeViewElement, IcTreeViewEvents> = /*@__PURE__*/ createComponent<IcTreeViewElement, IcTreeViewEvents>({
    tagName: 'ic-tree-view',
    elementClass: IcTreeViewElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {} as IcTreeViewEvents,
    defineCustomElement: defineIcTreeView
});
