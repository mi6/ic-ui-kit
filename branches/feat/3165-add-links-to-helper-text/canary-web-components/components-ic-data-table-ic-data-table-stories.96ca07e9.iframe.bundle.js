"use strict";(self.webpackChunk_ukic_canary_web_components=self.webpackChunk_ukic_canary_web_components||[]).push([[7435],{"./src/components/ic-data-table/ic-data-table.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ActionElementAndOnClickAction:()=>ActionElementAndOnClickAction,CellDescriptionsAndIcons:()=>CellDescriptionsAndIcons,CellDescriptionsLongText:()=>CellDescriptionsLongText,CellOverridesExample:()=>CellOverridesExample,ColumnHeaderTruncation:()=>ColumnHeaderTruncation,ColumnOverridesExample:()=>ColumnOverridesExample,CustomIconsExample:()=>CustomIconsExample,CustomRowHeightsExample:()=>CustomRowHeightsExample,CustomTitleBarExample:()=>CustomTitleBarExample,DataTruncationTooltip:()=>DataTruncationTooltip,Default:()=>Default,DefaultEmptyState:()=>DefaultEmptyState,DenseExample:()=>DenseExample,DevAreaExample:()=>DevAreaExample,DisableSortExample:()=>DisableSortExample,EmbeddedExample:()=>EmbeddedExample,ExcludeColumnsFromSortExample:()=>ExcludeColumnsFromSortExample,LargeDataSetExample:()=>LargeDataSetExample,LinksAndElementsInData:()=>LinksAndElementsInData,LoadingState:()=>LoadingState,MissingCellDataExample:()=>MissingCellDataExample,PaginationExample:()=>PaginationExample,RowHeadersExample:()=>RowHeadersExample,RowOverridesExample:()=>RowOverridesExample,SelectRowsUsingCheckboxExample:()=>SelectRowsUsingCheckboxExample,SlottedElementsWithPaginationExample:()=>SlottedElementsWithPaginationExample,SlottedEmptyState:()=>SlottedEmptyState,SlottedPaginationBar:()=>SlottedPaginationBar,SortOptionsExample:()=>SortOptionsExample,Sortable:()=>Sortable,SpaciousExample:()=>SpaciousExample,StickyColumnHeaders:()=>StickyColumnHeaders,TableSizingAndColumnWidth:()=>TableSizingAndColumnWidth,TextWrap:()=>TextWrap,TruncationShowHideExample:()=>TruncationShowHideExample,UpdatingDataExample:()=>UpdatingDataExample,UpdatingState:()=>UpdatingState,__namedExportsOrder:()=>__namedExportsOrder,default:()=>ic_data_table_stories});const ROW_HEADER_TITLES=["Employee","Employee","Manager","Employee","Apprentice"],imageIconSVG='<svg xmlns="http://www.w3.org/2000/svg" height="24" viewBox="0 -960 960 960" width="24"><path d="M180-120q-24 0-42-18t-18-42v-600q0-24 18-42t42-18h600q24 0 42 18t18 42v600q0 24-18 42t-42 18H180Zm0-60h600v-600H180v600Zm56-97h489L578-473 446-302l-93-127-117 152Zm-56 97v-600 600Z"/></svg>',userIconSVG='<svg xmlns="http://www.w3.org/2000/svg" height="24" viewBox="0 -960 960 960" width="24"><path d="M480-481q-66 0-108-42t-42-108q0-66 42-108t108-42q66 0 108 42t42 108q0 66-42 108t-108 42ZM160-160v-94q0-38 19-65t49-41q67-30 128.5-45T480-420q62 0 123 15.5t127.921 44.694q31.301 14.126 50.19 40.966Q800-292 800-254v94H160Zm60-60h520v-34q0-16-9.5-30.5T707-306q-64-31-117-42.5T480-360q-57 0-111 11.5T252-306q-14 7-23 21.5t-9 30.5v34Zm260-321q39 0 64.5-25.5T570-631q0-39-25.5-64.5T480-721q-39 0-64.5 25.5T390-631q0 39 25.5 64.5T480-541Zm0-90Zm0 411Z"/></svg>',copyButton='<ic-button data-testid="copy-button" variant="icon" size="small"  aria-label="you can disable tooltips on icon buttons"> <svg aria-label="copy-button" xmlns="http://www.w3.org/2000/svg"  width="24" height="24" viewBox="0 0 24 24" fill="#000000"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"/></svg> </ic-button>',COLS=[{key:"firstName",title:"First name",dataType:"string"},{key:"lastName",title:"Last name",dataType:"string"},{key:"age",title:"Age",dataType:"number"},{key:"jobTitle",title:"Job title",dataType:"string"},{key:"address",title:"Address",dataType:"address"}],COLS_WIDTH=[{key:"firstName",title:"First name",dataType:"string",columnWidth:"15%"},{key:"lastName",title:"Last name",dataType:"string",columnWidth:"300px"},{key:"age",title:"Age",dataType:"number",columnWidth:{maxWidth:"100px"}},{key:"jobTitle",title:"Job title",dataType:"string"},{key:"address",title:"Address",dataType:"address"}],COLS_EXCLUDE_SORT=[{key:"firstName",title:"First name",dataType:"string",excludeColumnFromSort:!0},{key:"lastName",title:"Last name",dataType:"string"},{key:"age",title:"Age",dataType:"number"},{key:"jobTitle",title:"Job title",dataType:"string",excludeColumnFromSort:!0},{key:"address",title:"Address",dataType:"address",excludeColumnFromSort:!0}],VERY_LONG_DATA=(rows=100)=>{const nextData=[];for(let i=0;i<rows;i++){const obj={firstName:`firstName-${i}`,lastName:`lastName-${i}`,age:i,jobTitle:`jobTitle-${i}`,address:`${i} Main Street, Town, County, Postcode AA${i}${i} BB${i}${i}`,rowOptions:{textWrap:i%2==0}};nextData.push(obj)}return nextData},COLS_ALIGNMENT=[{key:"firstName",title:"First name",dataType:"string",columnAlignment:{horizontal:"center",vertical:"middle"}},{key:"lastName",title:"Last name",dataType:"string"},{key:"age",title:"Age",dataType:"number"},{key:"jobTitle",title:"Job title",dataType:"string"},{key:"address",title:"Address",dataType:"address"}],DATA=[{age:30,jobTitle:"Developer",address:"1 Main Street, Town, County, Postcode",firstName:"Joe",lastName:"Bartholomew Christoper Augustine Zacchaeus Ashford"},{address:"2 Main Street, Town, Country, Postcode",age:28,firstName:"Sarah",lastName:"Smith",jobTitle:"Senior Software Developer, Site Reliability Engineering"},{firstName:"Mark",lastName:"Owens",age:45,jobTitle:"Team Lead",address:"12 Key Street, Town, Country, Postcode"},{firstName:"Naomi",lastName:"Thomas",age:32,jobTitle:"Analyst",address:"8 Side Street, Town, Country, Postcode"},{firstName:"Luke",lastName:"Ashford",age:18,jobTitle:"Junior Developer",address:"5 New Street, Town, Country, Postcode"}],TEXT_WRAP_LONG_DATA=[{name:"John Smith",age:36,department:"Accounts & Finance",employeeNumber:1,jobTitle:{data:"Senior Financial Operations and Reporting Analyst",textWrap:!0}},{name:"Sally Jones",age:32,department:"Engineering",employeeNumber:2,jobTitle:"Senior Software Engineer, Site Reliability Engineering (Microsoft Azure)"},{name:"Tim Rayes",age:41,department:"Sales and Marketing",employeeNumber:3,jobTitle:"Regional Sales and Marketing Strategy Director (Europe, the Middle East, and Africa)",rowOptions:{textWrap:!0}},{name:"Luke Fisher",age:"23",department:"Engineering (Mobile App Development)",employeeNumber:4,jobTitle:"Junior Tester"},{name:"Jane Lock",age:34,department:"Engineering",employeeNumber:5,jobTitle:"Junior Product Manager"},{name:"Margaret Hale",age:45,department:"HR",employeeNumber:6,jobTitle:"Junior Human Resource Information Specialist"}],COLUMNS_NO_TEXT_WRAP=[{key:"name",title:"Name",dataType:"string"},{key:"age",title:"Age",dataType:"number"},{key:"department",title:"Department",dataType:"string"},{key:"employeeNumber",title:"Employee Number",dataType:"number"},{key:"jobTitle",title:"Job Title",dataType:"string"}],COLUMNS_TEXT_WRAP=[{key:"name",title:"Name",dataType:"string"},{key:"age",title:"Age",dataType:"number"},{key:"department",title:"Department",dataType:"string",textWrap:!0},{key:"employeeNumber",title:"Employee Number",dataType:"number"},{key:"jobTitle",title:"Job Title",dataType:"string"}],LONG_DATA_VALUES=[{name:"John Smith",age:36,department:"Accounts & Finance",employeeNumber:1,jobTitle:"Senior Financial Operations and Reporting Analyst"},{name:"Sally Jones",age:32,department:"Engineering",employeeNumber:2,jobTitle:"Senior Software Engineer, Site Reliability Engineering (Microsoft Azure)"},{name:"Tim Rayes",age:41,department:"Sales and Marketing",employeeNumber:3,jobTitle:"Regional Sales and Marketing Strategy Director (Europe, the Middle East, and Africa)"},{name:"Luke Fisher",age:"23",department:"Engineering (Mobile App Development)",employeeNumber:4,jobTitle:"Junior Tester"},{name:"Jane Lock",age:34,department:"Engineering",employeeNumber:5,jobTitle:"Junior Product Manager"},{name:"Margaret Hale",age:45,department:"HR",employeeNumber:6,jobTitle:"Junior Human Resource Information Specialist"}],LONG_DATA_VALUES_UPDATE=[{name:"Michael Phelps",age:23,department:"United States",employeeNumber:1,jobTitle:"Swimmer"},{name:"Natalie Coughlin",age:25,department:"United States",employeeNumber:2,jobTitle:"Swimmer"},{name:"Debbie Flood",age:28,department:"Great Britain",employeeNumber:3,jobTitle:"7 time Olympic and Commonwealth Champion for Rowing"},{name:"Gillian Charleton",age:"22",department:"Canada",employeeNumber:4,jobTitle:"Cycling"}],DATA_CELL_ALIGNMENT=[{firstName:{data:"Joe",cellAlignment:{horizontal:"center",vertical:"middle"},emphasis:"high"},lastName:"Bloggs",age:30,jobTitle:"Developer",address:"1 Main Street, Town, County, Postcode"},{firstName:"Sarah",lastName:"Smith",age:28,jobTitle:"Senior Software Developer, Site Reliability Engineering",address:"2 Main Street, Town, Country, Postcode"},{firstName:"Mark",lastName:"Owens",age:45,jobTitle:"Team Lead",address:"12 Key Street, Town, Country, Postcode"},{firstName:"Naomi",lastName:"Thomas",age:32,jobTitle:"Analyst",address:"8 Side Street, Town, Country, Postcode"},{firstName:"Luke",lastName:"Ashford",age:18,jobTitle:"Junior Developer",address:"5 New Street, Town, Country, Postcode"}],ROW_ALIGNMENT=[{header:{title:ROW_HEADER_TITLES[0],rowAlignment:"middle",emphasis:"high"},firstName:"Joe",lastName:"Bloggs",age:30,jobTitle:"Developer",address:"1 Main Street, Town, County, Postcode"},{header:{title:ROW_HEADER_TITLES[1]},firstName:"Sarah",lastName:"Smith",age:28,jobTitle:"Senior Software Developer, Site Reliability Engineering",address:"2 Main Street, Town, Country, Postcode"},{header:{title:ROW_HEADER_TITLES[2]},firstName:"Mark",lastName:"Owens",age:45,jobTitle:"Team Lead",address:"12 Key Street, Town, Country, Postcode"},{header:{title:ROW_HEADER_TITLES[3]},firstName:"Naomi",lastName:"Thomas",age:32,jobTitle:"Analyst",address:"8 Side Street, Town, Country, Postcode"},{header:{title:ROW_HEADER_TITLES[4]},firstName:"Luke",lastName:"Ashford",age:18,jobTitle:"Junior Developer",address:"5 New Street, Town, Country, Postcode"}],LONG_COLS=[{key:"employeeNumber",title:"Employee number",dataType:"number",columnAlignment:{horizontal:"left"}},{key:"name",title:"Name",dataType:"string"},{key:"age",title:"Age",dataType:"number"},{key:"jobTitle",title:"Job title",dataType:"string"},{key:"address",title:"Address",dataType:"address"}],ICON_COLS=[{key:"firstName",title:"First name",dataType:"string",cellAlignment:"right",columnAlignment:{horizontal:"right",vertical:"middle"},icon:{icon:imageIconSVG,onAllCells:!0,hideOnHeader:!0}},{key:"lastName",title:"Last name",dataType:"string",cellAlignment:"center",columnAlignment:{horizontal:"center",vertical:"bottom"},icon:{icon:imageIconSVG,onAllCells:!0}},{key:"age",title:"Age",dataType:"number"},{key:"jobTitle",title:"Job title",dataType:"string"},{key:"address",title:"Address",dataType:"address",icon:{icon:imageIconSVG}}],ICON_DATA=[{firstName:{data:"Joe",icon:userIconSVG},lastName:"Bloggs",age:30,jobTitle:"Developer",address:"1 Main Street, Town, County, Postcode"},{firstName:"Sarah",lastName:{data:"Smith",icon:userIconSVG},age:28,jobTitle:"Analyst",address:"2 Main Street, Town, Country, Postcode"},{firstName:"Mark",lastName:"Owens",age:45,jobTitle:"Team Lead",address:"12 Key Street, Town, Country, Postcode"},{firstName:"Naomi",lastName:"Thomas",age:32,jobTitle:{data:"Developer",icon:userIconSVG},address:"8 Side Street, Town, Country, Postcode"},{firstName:"Luke",lastName:"Ashford",age:18,jobTitle:"Junior Developer",address:"5 New Street, Town, Country, Postcode"}],LONG_DATA=[{employeeNumber:1,name:"Joe Bloggs",age:30,jobTitle:"Developer",address:"1 Main Street, Town, County, Postcode"},{employeeNumber:2,name:"Sarah Jones",age:28,jobTitle:"Developer",address:"2 Main Street, Town, Country, Postcode"},{employeeNumber:3,name:"Mark Owens",age:45,jobTitle:"Team Lead",address:"12 Key Street, Town, County, Postcode"},{employeeNumber:4,name:"Naomi Thomas",age:32,jobTitle:"Developer",address:"8 Side Street, Town, Country, Postcode"},{employeeNumber:5,name:"Bartholomew Christoper Augustine Zacchaeus Ashford",age:18,jobTitle:"Junior Developer",address:"5 New Street, Town, Country, Postcode"},{employeeNumber:6,name:"Dave Smith",age:33,jobTitle:"Analyst",address:"4 Extra Street, Town, County, Postcode"},{employeeNumber:7,name:"Amy Fox",age:27,jobTitle:"Analyst",address:"3 Main Street, Town, Country, Postcode"},{employeeNumber:8,name:"Mary Cooper",age:31,jobTitle:"Developer",address:"8 Main Street, Town, County, Postcode"},{employeeNumber:9,name:"Alice Cole",age:38,jobTitle:"Team Lead",address:"10 High Street, Town, Country, Postcode"},{employeeNumber:10,name:"Ben Fields",age:40,jobTitle:"Team Lead",address:"14 High Street, Town, Country, Postcode"},{employeeNumber:11,name:"Chrysanthemum Finnleigh Carrington Savannah Norton",age:32,jobTitle:"Analyst",address:"6 Key Street, Town, County, Postcode"},{employeeNumber:12,name:"Ashley Langford",age:29,jobTitle:"Developer",address:"7 Long Street, Town, Country, Postcode"},{employeeNumber:13,name:"Michael Hall",age:35,jobTitle:"Team Lead",address:"5 Long Street, Town, County, Postcode"},{employeeNumber:14,name:"David Frank",age:28,jobTitle:"Developer",address:"3 Side Street, Town, Country, Postcode"},{employeeNumber:15,name:"Bernadette Mariah Genevieve Maddison Lincoln",age:23,jobTitle:"Developer",address:"10 Main Street, Town, Country, Postcode"},{employeeNumber:16,name:"Will Barns",age:36,jobTitle:"Analyst",address:"1 New Street, Town, County, Postcode"},{employeeNumber:17,name:"Elizabeth Long",age:43,jobTitle:"Analyst",address:"9 Short Street, Town, Country, Postcode"},{employeeNumber:18,name:"Keith Jones",age:37,jobTitle:"Developer",address:"11 Main Street, Town, County, Postcode"},{employeeNumber:19,name:"Olivia Brown",age:19,jobTitle:"Trainee Analyst",address:"4 Side Street, Town, Country, Postcode"},{employeeNumber:20,name:"Tim Green",age:50,jobTitle:"Developer",address:"2 Long Street, Town, Country, Postcode"}],ROW_HEADER_COLS=[{key:"header",title:"Job type",dataType:"string"},{key:"firstName",title:"First name",dataType:"string"},{key:"lastName",title:"Last name",dataType:"string"},{key:"age",title:"Age",dataType:"number"},{key:"jobTitle",title:"Job title",dataType:"string"},{key:"address",title:"Address",dataType:"address"}],ROW_HEADER_DATA=DATA.map(((data,index)=>({header:{title:ROW_HEADER_TITLES[index]},...data}))),COLS_ELEMENTS=[{key:"actions",title:"Actions",dataType:"element",columnAlignment:{horizontal:"center"}},{key:"firstName",title:"First name",dataType:"string"},{key:"actions2",title:"Actions2",dataType:"element",columnAlignment:{horizontal:"center"}},{key:"age",title:"Age",dataType:"number"},{key:"jobTitle",title:"Job title",dataType:"string"},{key:"address",title:"Address",dataType:"address"}],COLS_ELEMENTS_SINGLE_ACTION=[{key:"actions",title:"Actions",dataType:"element",columnAlignment:{horizontal:"center"}},{key:"firstName",title:"First name",dataType:"string"},{key:"age",title:"Age",dataType:"number"},{key:"jobTitle",title:"Job title",dataType:"string"},{key:"address",title:"Address",dataType:"address"}],DATA_ELEMENTS=[{actions:"<ic-button variant='destructive' onClick='this.closest(\"tr\").remove()'>Delete</ic-button>",firstName:{data:"Joe",href:"https://www.example.com",target:"_blank",rel:"noopener noreferrer"},actions2:'<ic-button aria-label="Delete row" variant=\'icon\' onClick=\'this.closest("tr").remove()\'><svg viewBox="0 0 24 24" role="presentation" style="width: 1.5rem; height: 1.5rem;"><path d="M19,4H15.5L14.5,3H9.5L8.5,4H5V6H19M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19Z" style="fill: currentcolor;"></path></svg></ic-button>',age:30,jobTitle:"Developer",address:"1 Main Street, Town, County, Postcode"},{actions:"<ic-button variant='destructive' onClick='this.closest(\"tr\").remove()'>Delete</ic-button>",firstName:{data:"Sarah",href:"https://www.example.org"},actions2:'<ic-button aria-label="Delete row" variant=\'icon\' onClick=\'this.closest("tr").remove()\'><svg viewBox="0 0 24 24" role="presentation" style="width: 1.5rem; height: 1.5rem;"><path d="M19,4H15.5L14.5,3H9.5L8.5,4H5V6H19M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19Z" style="fill: currentcolor;"></path></svg></ic-button>',age:28,jobTitle:"Senior Software Developer, Site Reliability Engineering",address:"2 Main Street, Town, Country, Postcode"},{actions:"<ic-button variant='destructive' onClick='this.closest(\"tr\").remove()'>Delete</ic-button>",firstName:"Mark",actions2:'<ic-button aria-label="Delete row" variant=\'icon\' onClick=\'this.closest("tr").remove()\'><svg viewBox="0 0 24 24" role="presentation" style="width: 1.5rem; height: 1.5rem;"><path d="M19,4H15.5L14.5,3H9.5L8.5,4H5V6H19M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19Z" style="fill: currentcolor;"></path></svg></ic-button>',age:45,jobTitle:"Team Lead",address:"12 Key Street, Town, Country, Postcode"},{actions:"<ic-button variant='destructive' onClick='this.closest(\"tr\").remove()'>Delete</ic-button>",firstName:"Naomi",actions2:'<ic-button aria-label="Delete row" variant=\'icon\' onClick=\'this.closest("tr").remove()\'><svg viewBox="0 0 24 24" role="presentation" style="width: 1.5rem; height: 1.5rem;"><path d="M19,4H15.5L14.5,3H9.5L8.5,4H5V6H19M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19Z" style="fill: currentcolor;"></path></svg></ic-button>',age:32,jobTitle:"Analyst",address:"8 Side Street, Town, Country, Postcode"},{actions:"<ic-button variant='destructive' onClick='this.closest(\"tr\").remove()'>Delete</ic-button>",firstName:"Luke",actions2:'<ic-button aria-label="Delete row" variant=\'icon\' onClick=\'this.closest("tr").remove()\'><svg viewBox="0 0 24 24" role="presentation" style="width: 1.5rem; height: 1.5rem;"><path d="M19,4H15.5L14.5,3H9.5L8.5,4H5V6H19M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19Z" style="fill: currentcolor;"></path></svg></ic-button>',age:18,jobTitle:"Junior Developer",address:"5 New Street, Town, Country, Postcode"}],DATA_ELEMENTS_PAGINATION=[{actions:"<ic-button onClick='console.log(\"1\")'>1</ic-button>",firstName:{data:"Joe",href:"https://www.example.com",target:"_blank",rel:"noopener noreferrer"},age:30,jobTitle:"Developer",address:"1 Main Street, Town, County, Postcode"},{actions:"<ic-button onClick='console.log(\"2\")'>2</ic-button>",firstName:{data:"Sarah",href:"https://www.example.org"},age:28,jobTitle:"Senior Software Developer, Site Reliability Engineering",address:"2 Main Street, Town, Country, Postcode"},{actions:"<ic-button onClick='console.log(\"3\")'>3</ic-button>",firstName:"Mark",age:45,jobTitle:"Team Lead",address:"12 Key Street, Town, Country, Postcode"},{actions:"<ic-button onClick='console.log(\"4\")'>4</ic-button>",firstName:"Naomi",age:32,jobTitle:"Analyst",address:"8 Side Street, Town, Country, Postcode"},{actions:"<ic-button onClick='console.log(\"5\")'>5</ic-button>",firstName:"Luke",age:18,jobTitle:"Junior Developer",address:"5 New Street, Town, Country, Postcode"},{actions:"<ic-button onClick='console.log(\"6\")'>6</ic-button>",firstName:"Dave",age:33,jobTitle:"Analyst",address:"4 Extra Street, Town, County, Postcode"},{actions:"<ic-button onClick='console.log(\"7\")'>7</ic-button>",firstName:"Amy",age:27,jobTitle:"Analyst",address:"3 Main Street, Town, Country, Postcode"},{actions:"<ic-button onClick='console.log(\"8\")'>8</ic-button>",firstName:"Mary",age:31,jobTitle:"Developer",address:"8 Main Street, Town, County, Postcode"},{actions:"<ic-button onClick='console.log(\"9\")'>9</ic-button>",firstName:"Alice",age:38,jobTitle:"Team Lead",address:"10 High Street, Town, Country, Postcode"},{actions:"<ic-button onClick='console.log(\"10\")'>10</ic-button>",firstName:"Ben",age:40,jobTitle:"Team Lead",address:"14 High Street, Town, Country, Postcode"}],ACTION_DATA_ELEMENTS=[{firstName:{data:"Joe",actionElement:`<ic-button data-testid="download-button" variant="icon" size="small"  aria-label="you can disable tooltips on icon buttons"> <svg aria-label="download-button" xmlns="http://www.w3.org/2000/svg"  width="24" height="24" viewBox="0 0 24 24" fill="#000000"><path d="M5,20H19V18H5M19,9H15V3H9V9H5L12,16L19,9Z"/></svg> </ic-button><ic-button data-testid="cellphone-button" variant="icon" size="small"  aria-label="you can disable tooltips on icon buttons"> <svg aria-label="cellphone-button" xmlns="http://www.w3.org/2000/svg"  width="24" height="24" viewBox="0 0 24 24" fill="#000000"><path d="M17,19H7V5H17M17,1H7C5.89,1 5,1.89 5,3V21A2,2 0 0,0 7,23H17A2,2 0 0,0 19,21V3C19,1.89 18.1,1 17,1Z"/></svg> </ic-button>${copyButton}`,actionOnClick:event=>{event?.stopPropagation(),console.log("hello")}},lastName:"Bloggs",age:31,jobTitle:"Developer",address:"1 Main Street, Town, County, Postcode"},{firstName:{data:"Sarah",actionElement:copyButton},lastName:"Jane",age:28,jobTitle:{data:"Senior Software Developer, Site Reliability Engineering",actionElement:'<ic-status-tag role="status" label="Success" status="success"></ic-status-tag>'},address:"2 Main Street, Town, Country, Postcode"},{firstName:{data:"Mark",actionElement:copyButton},lastName:"Smith",age:{data:45,actionElement:'<ic-button variant="icon" id="small-button" size="small" aria-label="you can disable tooltips on icon buttons"> <svg aria-label="refresh button" xmlns="http://www.w3.org/2000/svg"    width="24"    height="24"    viewBox="0 0 24 24"    fill="#000000"  >    <path d="M0 0h24v24H0V0z" fill="none"></path>    <path d="M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z"></path>  </svg></ic-button>'},jobTitle:"Team Lead",address:"12 Key Street, Town, Country, Postcode"},{firstName:{data:"Naomi",actionElement:copyButton},lastName:"Kens",age:32,jobTitle:"Analyst",address:"8 Side Street, Town, Country, Postcode"},{firstName:{data:"Luke",actionElement:copyButton},lastName:"Sky",age:18,jobTitle:"Junior Developer",address:{data:"5 New Street, Town, Country, Postcode",actionElement:'<ic-status-tag role="status" label="Error" status="danger"></ic-status-tag>'}}],DATA_WITH_EMPTY_VALUES=[{firstName:"Nigel",lastName:null,age:62,jobTitle:"Developer",address:"1 Main Street, Town, County, Postcode"},{firstName:"Sarah",lastName:"Smith",age:28,jobTitle:void 0,address:"2 Main Street, Town, Country, Postcode"},{firstName:"Mark",lastName:"Owens",age:45,jobTitle:"Team Lead",address:""}],LONG_DATA_ELEMENTS_WITH_DESCRIPTIONS=[{firstName:{data:"Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe",description:{data:"Alias: JB",icon:imageIconSVG},actionElement:copyButton,icon:userIconSVG},lastName:"Bloggs",age:30,jobTitle:"Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer",address:"N/A"},{firstName:{data:"Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe Joe",actionElement:copyButton},lastName:"Bloggs",age:30,jobTitle:"Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer Developer",address:"N/A"},{firstName:{data:"Joey",description:{data:"Unverified",icon:'<svg aria-label="alert-icon" xmlns="http://www.w3.org/2000/svg" height="18" width="18" viewBox="0 0 24 24" fill="#000000"><path d="M11,15H13V17H11V15M11,7H13V13H11V7M12,2C6.47,2 2,6.5 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4A8,8 0 0,1 20,12A8,8 0 0,1 12,20Z"/></svg>'},actionElement:copyButton},lastName:"Bloggy",age:31,jobTitle:"Developer",address:"N/A"},{firstName:{actionElement:copyButton,description:"Alias: The Ghost"},lastName:"Blogger",age:32,jobTitle:"Writer",address:"N/A"}],DATA_ELEMENTS_WITH_DESCRIPTIONS=[{firstName:{data:"Joe",description:{data:"The name of Joe",icon:'<svg xmlns="http://www.w3.org/2000/svg" height="20" viewBox="0 -960 960 960" width="20"><path d="M180-120q-24 0-42-18t-18-42v-600q0-24 18-42t42-18h600q24 0 42 18t18 42v600q0 24-18 42t-42 18H180Zm0-60h600v-600H180v600Zm56-97h489L578-473 446-302l-93-127-117 152Zm-56 97v-600 600Z"/></svg>'}},lastName:"Bloggs",age:30,jobTitle:"Developer",address:"1 Main Street, Town, County, Postcode"},{firstName:{data:"Sarah",description:{data:"The name of Sarah",icon:'<svg xmlns="http://www.w3.org/2000/svg" height="20" viewBox="0 -960 960 960" width="20"><path d="M180-120q-24 0-42-18t-18-42v-600q0-24 18-42t42-18h600q24 0 42 18t18 42v600q0 24-18 42t-42 18H180Zm0-60h600v-600H180v600Zm56-97h489L578-473 446-302l-93-127-117 152Zm-56 97v-600 600Z"/></svg>'}},lastName:"Smith",age:28,jobTitle:"Senior Software Developer, Site Reliability Engineering",address:"2 Main Street, Town, Country, Postcode"},{firstName:{data:"Mark",description:{data:"The name of Mark",icon:'<svg xmlns="http://www.w3.org/2000/svg" height="20" viewBox="0 -960 960 960" width="20"><path d="M180-120q-24 0-42-18t-18-42v-600q0-24 18-42t42-18h600q24 0 42 18t18 42v600q0 24-18 42t-42 18H180Zm0-60h600v-600H180v600Zm56-97h489L578-473 446-302l-93-127-117 152Zm-56 97v-600 600Z"/></svg>'}},lastName:"Owens",age:45,jobTitle:"Team Lead",address:"12 Key Street, Town, Country, Postcode"},{firstName:{data:"Naomi",description:{data:"The name of Naomi",icon:'<svg xmlns="http://www.w3.org/2000/svg" height="20" viewBox="0 -960 960 960" width="20"><path d="M180-120q-24 0-42-18t-18-42v-600q0-24 18-42t42-18h600q24 0 42 18t18 42v600q0 24-18 42t-42 18H180Zm0-60h600v-600H180v600Zm56-97h489L578-473 446-302l-93-127-117 152Zm-56 97v-600 600Z"/></svg>'}},lastName:"Thomas",age:32,jobTitle:"Analyst",address:"8 Side Street, Town, Country, Postcode"},{firstName:"Luke",lastName:"Ashford",age:{data:18,description:{data:"The age of Luke",icon:'<svg xmlns="http://www.w3.org/2000/svg" height="20" viewBox="0 -960 960 960" width="20"><path d="M180-120q-24 0-42-18t-18-42v-600q0-24 18-42t42-18h600q24 0 42 18t18 42v600q0 24-18 42t-42 18H180Zm0-60h600v-600H180v600Zm56-97h489L578-473 446-302l-93-127-117 152Zm-56 97v-600 600Z"/></svg>'}},jobTitle:{data:"Junior Developer",description:{data:"The job title of Luke",icon:'<svg xmlns="http://www.w3.org/2000/svg" height="20" viewBox="0 -960 960 960" width="20"><path d="M180-120q-24 0-42-18t-18-42v-600q0-24 18-42t42-18h600q24 0 42 18t18 42v600q0 24-18 42t-42 18H180Zm0-60h600v-600H180v600Zm56-97h489L578-473 446-302l-93-127-117 152Zm-56 97v-600 600Z"/></svg>'}},address:"5 New Street, Town, Country, Postcode"}],createDataTableElement=(caption,columns=COLS,data=DATA)=>{const dataTable=document.createElement("ic-data-table");return dataTable.setAttribute("caption",caption),dataTable.columns=columns,dataTable.data=data,dataTable},CustomRowHeights=()=>{const dataTable=createDataTableElement("Custom Row Heights",COLUMNS_NO_TEXT_WRAP,LONG_DATA_VALUES);dataTable.globalRowHeight=80,dataTable.variableRowHeight=({name,age})=>"John Smith"===name||41===age?200:null;const resetButton=document.createElement("ic-button");resetButton.addEventListener("click",(()=>dataTable.resetRowHeights(80))),resetButton.innerHTML="Reset rowHeight to 80";const setButton=document.createElement("ic-button");setButton.addEventListener("click",(()=>{dataTable.globalRowHeight=80,dataTable.variableRowHeight=({name,age})=>"John Smith"===name||41===age?200:null})),setButton.innerHTML="Set global row height";const buttonWrapper=document.createElement("div");buttonWrapper.style.display="flex",buttonWrapper.style.paddingTop="10px",buttonWrapper.style.gap="8px",buttonWrapper.insertAdjacentElement("afterbegin",setButton),buttonWrapper.insertAdjacentElement("beforeend",resetButton);const wrapper=document.createElement("div");return wrapper.insertAdjacentElement("afterbegin",dataTable),wrapper.insertAdjacentElement("beforeend",buttonWrapper),wrapper},ic_data_table_stories={title:"Web Components/Data Table",component:"ic-data-table",parameters:{componentAPI:{data:'# ic-data-table\n\n\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property                        | Attribute                          | Description                                                                                                                                                                                                                                                                                                       | Type                                                                                                                                                                                                                                                                             | Default|\n| ------------------------------- | ---------------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `caption` _(required)_          | `caption`                          | The title for the table only visible to screen readers.                                                                                                                                                                                                                                                           | `string`                                                                                                                                                                                                                                                                         | `undefined`|\n| `columnHeaderTruncation`        | `column-header-truncation`         | Determines whether the column header should be truncated and display a tooltip. Default is `false`.                                                                                                                                                                                                               | `boolean`                                                                                                                                                                                                                                                                        | `false`|\n| `columns` _(required)_          | --                                 | The column headers for the table.                                                                                                                                                                                                                                                                                 | `IcDataTableColumnObject[]`                                                                                                                                                                                                                                                      | `undefined`|\n| `data`                          | --                                 | The row content for the table.                                                                                                                                                                                                                                                                                    | `IcDataTableDataType[] \\| undefined`                                                                                                                                                                                                                                             | `undefined`|\n| `density`                       | `density`                          | Set the density of the table including font and padding.                                                                                                                                                                                                                                                          | `"default" \\| "dense" \\| "spacious"`                                                                                                                                                                                                                                             | `"default"`|\n| `disableAutoSort`               | `disable-auto-sort`                | If `true`, the built in sort functionality will be disabled. For example, if rows will already be sorted from an external source.                                                                                                                                                                                 | `boolean \\| undefined`                                                                                                                                                                                                                                                           | `false`|\n| `embedded`                      | `embedded`                         | Applies a border to the table container.                                                                                                                                                                                                                                                                          | `boolean`                                                                                                                                                                                                                                                                        | `false`                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             |\n| `globalRowHeight`               | `global-row-height`                | Sets the row height on all rows in the table that aren\'t set using the `variableRowHeight` method.                                                                                                                                                                                                                | `"auto" \\| number`                                                                                                                                                                                                                                                               | `"auto"`|\n| `height`                        | `height`                           | Sets the table height. Can be set to `auto` or a specific value in `px`, `rem`, or `%`.                                                                                                                                                                                                                           | `string \\| undefined`                                                                                                                                                                                                                                                            | `undefined`|\n| `hideColumnHeaders`             | `hide-column-headers`              | If `true`, column headers will not be visible.                                                                                                                                                                                                                                                                    | `boolean \\| undefined`                                                                                                                                                                                                                                                           | `false`|\n| `loading`                       | `loading`                          | When set to `true`, the full table will show a loading state, featuring a radial indicator.                                                                                                                                                                                                                       | `boolean`                                                                                                                                                                                                                                                                        | `false`|\n| `loadingOptions`                | --                                 | Sets the props for the circular loading indicator used in the loading state.                                                                                                                                                                                                                                      | `undefined \\| { description?: string \\| undefined; label?: string \\| undefined; labelDuration?: number \\| undefined; max?: number \\| undefined; min?: number \\| undefined; progress?: number \\| undefined; monochrome?: boolean \\| undefined; overlay?: boolean \\| undefined; }` | `undefined`|\n| `maxWidth`                      | `max-width`                        | Sets the maximum width of the data table. Can be set in `px`, `rem`, or `%`.                                                                                                                                                                                                                                      | `string \\| undefined`                                                                                                                                                                                                                                                            | `undefined`|\n| `minWidth`                      | `min-width`                        | Sets the minimum width of the data table. Can be set in `px`, `rem`, or `%`.                                                                                                                                                                                                                                      | `string \\| undefined`                                                                                                                                                                                                                                                            | `undefined`|\n| `minimumLoadingDisplayDuration` | `minimum-loading-display-duration` | The minimum amount of time the `loading` state displays for before showing the data. Used to prevent flashing in the component.                                                                                                                                                                                   | `number`                                                                                                                                                                                                                                                                         | `1000`|\n| `paginationBarOptions`          | --                                 | Sets the props for the built-in pagination bar. If the `pagination-bar` slot is used then this prop is ignored.                                                                                                                                                                                                   | `IcPaginationBarOptions`                                                                                                                                                                                                                                                         | `{     alignment: "right",     hideAllFromItemsPerPage: false,     hideRangeLabel: false,     itemLabel: "Item",     itemsPerPageOptions: [       { label: "10", value: "10" },       { label: "25", value: "25" },       { label: "50", value: "50" },     ],     monochrome: false,     pageLabel: "Page",     rangeLabelType: "page",     selectedItemsPerPage: 10,     selectItemsPerPageOnEnter: true,     setToFirstPageOnPaginationChange: false,     showGoToPageControl: true,     showItemsPerPageControl: true,     type: "simple",   }` |\n| `rowSelection`                  | `row-selection`                    | If `true`, a checkbox column will be displayed to the left of the table which allows multiple rows to be selected.                                                                                                                                                                                                | `boolean`                                                                                                                                                                                                                                                                        | `false`|\n| `showPagination`                | `show-pagination`                  | If `true`, adds a pagination bar to the bottom of the table.                                                                                                                                                                                                                                                      | `boolean \\| undefined`                                                                                                                                                                                                                                                           | `false`|\n| `sortOptions`                   | --                                 | Sets the order columns will be sorted in and allows for \'default\' sorts to be added.                                                                                                                                                                                                                              | `{ sortOrders: IcDataTableSortOrderOptions[]; defaultColumn?: string \\| undefined; }`                                                                                                                                                                                            | `{     sortOrders: ["unsorted", "ascending", "descending"],     defaultColumn: "",   }`                                                                                                                                                                                                                                                                                                                                                                                                                                                             |\n| `sortable`                      | `sortable`                         | If `true`, allows table columns to be sorted using applied sort buttons.                                                                                                                                                                                                                                          | `boolean \\| undefined`                                                                                                                                                                                                                                                           | `false`|\n| `stickyColumnHeaders`           | `sticky-column-headers`            | If `true`, column headers will remain at the top of the table when scrolling vertically.                                                                                                                                                                                                                          | `boolean`                                                                                                                                                                                                                                                                        | `false`|\n| `stickyRowHeaders`              | `sticky-row-headers`               | If `true`, row headers will remain to the left when scrolling horizontally.                                                                                                                                                                                                                                       | `boolean`                                                                                                                                                                                                                                                                        | `false`|\n| `tableLayout`                   | `table-layout`                     | Sets the layout of the table                                                                                                                                                                                                                                                                                      | `"auto" \\| "fixed" \\| undefined`                                                                                                                                                                                                                                                 | `"fixed"`|\n| `theme`                         | `theme`                            | Sets the theme color to the dark or light theme color. "inherit" will set the color based on the system settings or ic-theme component.                                                                                                                                                                           | `"dark" \\| "inherit" \\| "light" \\| undefined`                                                                                                                                                                                                                                    | `"inherit"`|\n| `truncationPattern`             | `truncation-pattern`               | Sets the method used to truncate long text in cells where textWrap is `false`. The `tooltip` truncation pattern allows the overflowing text to be seen in a tooltip. The `show-hide` truncation pattern allows the overflowing text to be shown and hidden using the ic-typography "See more"/"See less" buttons. | `"show-hide" \\| "tooltip" \\| undefined`                                                                                                                                                                                                                                          | `undefined`|\n| `updating`                      | `updating`                         | If `true`, the table displays a linear loading indicator below the header row to indicate an updating state.                                                                                                                                                                                                      | `boolean`                                                                                                                                                                                                                                                                        | `false`|\n| `updatingOptions`               | --                                 | Sets the props for the linear loading indicator used in the updating state.                                                                                                                                                                                                                                       | `undefined \\| { description?: string \\| undefined; max?: number \\| undefined; min?: number \\| undefined; progress?: number \\| undefined; monochrome?: boolean \\| undefined; }`                                                                                                   | `undefined`|\n| `variableRowHeight`             | --                                 | Allows for custom setting of row heights on individual rows based on an individual value from the `data` prop and the row index. If the function returns `null`, that row\'s height will be set to the `globalRowHeight` property.                                                                                 | `((params: { [key: string]: any; index: number; }) => IcDataTableRowHeights \\| null) \\| undefined`                                                                                                                                                                               | `undefined`|\n| `width`                         | `width`                            | Sets the table width. Can be set to `auto` or a specific value in `px`, `rem`, or `%`.                                                                                                                                                                                                                            | `string \\| undefined`                                                                                                                                                                                                                                                            | `undefined`|\n\n\n## Events\n\n| Event                 | Description                                                                                       | Type                                                                                      |\n| --------------------- | ------------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------------------- |\n| `icRowHeightChange`   | Emitted when the `globalRowHeight` or `variableRowHeight` properties change in the data table.    | `CustomEvent<void>`                                                                       |\n| `icSelectAllRows`     | Emitted when all rows are selected or deselected in the data table via the "select all" checkbox. | `CustomEvent<IcDataTableDataType[]>`                                                      |\n| `icSelectedRowChange` | Emitted when the selected row changes in the data table.                                          | `CustomEvent<{ row: IcDataTableDataType \\| null; selectedRows: IcDataTableDataType[]; }>` |\n| `icSortChange`        | Emitted when a column sort button is clicked.                                                     | `CustomEvent<IcSortEventDetail>`                                                          |\n\n\n## Methods\n\n### `resetRowHeights(rowHeight?: number | "auto") => Promise<void>`\n\nResets the `globalRowHeight` prop to number or auto and sets the `variableRowHeight` prop to `null`.\n\n#### Parameters\n\n| Name        | Type                            | Description |\n| ----------- | ------------------------------- | ----------- |\n| `rowHeight` | `number \\| "auto" \\| undefined` |             |\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n\n## Slots\n\n| Slot                                | Description                                                                                                                                                                           |\n| ----------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `"empty-state"`                     | Content is slotted below the table header when there is no data and the table is not loading.                                                                                         |\n| `"pagination-bar"`                  | A custom ic-pagination-bar can be slotted below the data to provide enhanced control over how the data is interacted with when being fetched externally.                              |\n| `"title-bar"`                       | A custom ic-data-table-title-bar can be slotted above the column headers to display additional information about the table.                                                           |\n| `"{COLUMN_KEY}-column-icon"`        | The icon slot for a column header.                                                                                                                                                    |\n| `"{COLUMN_KEY}-{ROW_INDEX}[-icon]"` | Each cell should have its own slot, named using the column tag and the row index, allowing for custom elements to be displayed. Include `-icon` at the end for that cell\'s icon slot. |\n\n\n## Dependencies\n\n### Depends on\n\n- ic-loading-indicator\n- ic-typography\n- ic-link\n- ic-tooltip\n- ic-button\n- ic-checkbox\n- ic-empty-state\n- [ic-pagination-bar](../ic-pagination-bar)\n\n### Graph\n```mermaid\ngraph TD;\n  ic-data-table --\x3e ic-loading-indicator\n  ic-data-table --\x3e ic-typography\n  ic-data-table --\x3e ic-link\n  ic-data-table --\x3e ic-tooltip\n  ic-data-table --\x3e ic-button\n  ic-data-table --\x3e ic-checkbox\n  ic-data-table --\x3e ic-empty-state\n  ic-data-table --\x3e ic-pagination-bar\n  ic-loading-indicator --\x3e ic-typography\n  ic-tooltip --\x3e ic-typography\n  ic-button --\x3e ic-typography\n  ic-button --\x3e ic-loading-indicator\n  ic-button --\x3e ic-tooltip\n  ic-checkbox --\x3e ic-typography\n  ic-empty-state --\x3e ic-typography\n  ic-pagination-bar --\x3e ic-typography\n  ic-pagination-bar --\x3e ic-select\n  ic-pagination-bar --\x3e ic-pagination\n  ic-pagination-bar --\x3e ic-tooltip\n  ic-pagination-bar --\x3e ic-text-field\n  ic-pagination-bar --\x3e ic-button\n  ic-select --\x3e ic-input-container\n  ic-select --\x3e ic-input-label\n  ic-select --\x3e ic-input-component-container\n  ic-select --\x3e ic-typography\n  ic-select --\x3e ic-button\n  ic-select --\x3e ic-menu\n  ic-select --\x3e ic-input-validation\n  ic-input-label --\x3e ic-typography\n  ic-menu --\x3e ic-loading-indicator\n  ic-menu --\x3e ic-typography\n  ic-menu --\x3e ic-button\n  ic-input-validation --\x3e ic-typography\n  ic-pagination --\x3e ic-button\n  ic-pagination --\x3e ic-pagination-item\n  ic-pagination-item --\x3e ic-typography\n  ic-text-field --\x3e ic-input-container\n  ic-text-field --\x3e ic-input-label\n  ic-text-field --\x3e ic-input-component-container\n  ic-text-field --\x3e ic-input-validation\n  ic-text-field --\x3e ic-typography\n  style ic-data-table fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n\n'}}},Default={render:()=>(()=>{const dataTable=createDataTableElement("Basic Table");return dataTable.setAttribute("sortable","true"),dataTable})(),name:"Basic"},LargeDataSetExample={render:()=>(()=>{const dataTable=createDataTableElement("Basic Table",LONG_COLS,LONG_DATA);return dataTable.setAttribute("sortable","true"),dataTable})(),name:"Large data set"},EmbeddedExample={render:()=>(()=>{const dataTable=createDataTableElement("Embedded Table");return dataTable.setAttribute("embedded","true"),dataTable})(),name:"Embedded"},DenseExample={render:()=>(()=>{const dataTableDense=createDataTableElement("Dense Table");return dataTableDense.setAttribute("density","dense"),dataTableDense})(),name:"Dense"},SpaciousExample={render:()=>(()=>{const dataTableSpacious=createDataTableElement("Spacious Table");return dataTableSpacious.setAttribute("density","spacious"),dataTableSpacious})(),name:"Spacious"},StickyColumnHeaders={render:()=>(()=>{const dataTable=createDataTableElement("Scrollable Table",LONG_COLS,LONG_DATA);dataTable.setAttribute("embedded","true"),dataTable.style.height="366px";const setStickyHeaders=sticky=>{dataTable.setAttribute("sticky-column-headers",`${sticky}`)},stickButton=document.createElement("ic-button"),unstickButton=document.createElement("ic-button");stickButton.innerHTML="Stick Header",unstickButton.innerHTML="Unstick Header",stickButton.addEventListener("click",(()=>setStickyHeaders(!0))),unstickButton.addEventListener("click",(()=>setStickyHeaders(!1)));const buttonWrapper=document.createElement("div");buttonWrapper.style.display="flex",buttonWrapper.style.paddingTop="10px",buttonWrapper.style.gap="8px",buttonWrapper.insertAdjacentElement("afterbegin",stickButton),buttonWrapper.insertAdjacentElement("beforeend",unstickButton);const wrapper=document.createElement("div");return wrapper.insertAdjacentElement("afterbegin",dataTable),dataTable.insertAdjacentElement("afterend",buttonWrapper),wrapper})(),name:"Sticky column headers"},ColumnHeaderTruncation={render:()=>(()=>{const dataTable=createDataTableElement("Column Header Truncation",COLS,DATA);return dataTable.setAttribute("column-header-truncation","true"),dataTable.style.height="400px",dataTable.style.width="500px",dataTable})(),name:"Column header truncation"},RowHeadersExample={render:()=>createDataTableElement("Row Header Table",ROW_HEADER_COLS,ROW_HEADER_DATA),name:"Row headers"},Sortable={render:()=>(()=>{const dataTable=createDataTableElement("Sort",COLS,DATA);return dataTable.setAttribute("sortable","true"),dataTable.addEventListener("icSortChange",(event=>{console.log("Sort changed",event.detail)})),dataTable})(),name:"Sortable"},SortOptionsExample={render:()=>(()=>{const dataTable=createDataTableElement("Sort Order",COLS,DATA);return dataTable.setAttribute("sortable","true"),dataTable.sortOptions={sortOrders:["descending","unsorted"],defaultColumn:"firstName"},dataTable.addEventListener("icSortChange",(event=>{console.log("Sort changed",event.detail)})),dataTable})(),name:"Sort options"},DisableSortExample={render:()=>(()=>{const originalData=[...DATA],dataTable=createDataTableElement("Sort",COLS,DATA);return dataTable.setAttribute("sortable","true"),dataTable.setAttribute("disable-auto-sort","true"),dataTable.addEventListener("icSortChange",(event=>{console.log("Sort changed",event.detail),"ascending"===event.detail.sorted?DATA.sort(((a,b)=>{const column=event.detail.columnName;return a[column]<b[column]?-1:a[column]>b[column]?1:0})):"descending"===event.detail.sorted?DATA.sort(((a,b)=>{const column=event.detail.columnName;return a[column]<b[column]?1:a[column]>b[column]?-1:0})):DATA.splice(0,DATA.length,...originalData),dataTable.data=[...DATA]})),dataTable})(),name:"Disable sort"},ExcludeColumnsFromSortExample={render:()=>(()=>{const dataTable=createDataTableElement("Sort",COLS_EXCLUDE_SORT,DATA);return dataTable.setAttribute("sortable","true"),dataTable})(),name:"Exclude columns from sort"},PaginationExample={render:()=>(()=>{const dataTable=createDataTableElement("Pagination",LONG_COLS,LONG_DATA);return dataTable.setAttribute("show-pagination","true"),dataTable.paginationBarOptions={itemsPerPageOptions:[{label:"5",value:"5"},{label:"10",value:"10"},{label:"15",value:"15"}],showItemsPerPageControl:!0,showGoToPageControl:!0},dataTable})(),name:"Pagination"},ColumnOverridesExample={render:()=>createDataTableElement("Column Overrides",COLS_ALIGNMENT,DATA),name:"Column overrides"},RowOverridesExample={render:()=>createDataTableElement("Row Overrides",ROW_HEADER_COLS,ROW_ALIGNMENT),name:"Row overrides"},CellOverridesExample={render:()=>createDataTableElement("Cell Overrides",COLS,DATA_CELL_ALIGNMENT),name:"Cell overrides"},DefaultEmptyState={render:()=>createDataTableElement("Empty State",COLS,void 0),name:"Empty state"},SlottedEmptyState={render:()=>(()=>{const dataTable=createDataTableElement("Empty State",COLS,void 0),emptyState=document.createElement("ic-empty-state");emptyState.setAttribute("aligned","left"),emptyState.setAttribute("heading","Data source error"),emptyState.setAttribute("body","Error loading new data"),emptyState.setAttribute("slot","empty-state");const button=document.createElement("ic-button");return button.innerHTML="Retry",button.setAttribute("slot","actions"),emptyState.appendChild(button),dataTable.appendChild(emptyState),dataTable})(),name:"Slotted empty state"},LoadingState={render:()=>(()=>{const dataTable=createDataTableElement("Loading State",COLS,DATA);return dataTable.setAttribute("loading","true"),dataTable})(),name:"Loading state",height:"720px"},UpdatingState={render:()=>(()=>{const dataTable=createDataTableElement("Updating State",COLS,DATA);return dataTable.updatingOptions={progress:30},dataTable.setAttribute("updating","true"),dataTable})(),name:"Updating state"},LinksAndElementsInData={render:()=>createDataTableElement("Links and HTML Elements Overrides",COLS_ELEMENTS,DATA_ELEMENTS),name:"Links and elements in data"},SlottedElementsWithPaginationExample={render:()=>(()=>{const dataTable=createDataTableElement("Slotted elements with pagination",COLS_ELEMENTS_SINGLE_ACTION,DATA_ELEMENTS_PAGINATION);return dataTable.setAttribute("show-pagination","true"),dataTable.paginationBarOptions={itemsPerPageOptions:[{label:"5",value:"5"},{label:"10",value:"10"}],showItemsPerPageControl:!0,showGoToPageControl:!0,selectedItemsPerPage:5},dataTable})(),name:"Slotted elements with pagination"},CustomIconsExample={render:()=>createDataTableElement("Custom icons",ICON_COLS,ICON_DATA),name:"Custom icons"},CustomRowHeightsExample={render:()=>CustomRowHeights(),name:"Custom row heights"},CustomTitleBarExample={render:()=>(()=>{const dataTable=createDataTableElement("Custom Title Bar",COLS,DATA),titleBar=document.createElement("ic-data-table-title-bar");titleBar.setAttribute("description","Data table description that describes the purpose of the table."),titleBar.setAttribute("metadata","128 items | 32gb | Updated: 01/02/03"),titleBar.setAttribute("slot","title-bar");const customDescription=document.createElement("ic-typography");customDescription.setAttribute("variant","body"),customDescription.setAttribute("slot","description"),customDescription.innerHTML='<p>This is some text and <ic-link href="/" inline="">this is an inline link</ic-link> within the text.</p>';const primaryButton=document.createElement("ic-button");primaryButton.setAttribute("slot","primary-action"),primaryButton.setAttribute("size","small"),primaryButton.innerHTML="Primary";const customButtons=[1,2,3].map((x=>{const customButton=document.createElement("ic-button");return customButton.setAttribute("slot","custom-actions"),customButton.setAttribute("variant","icon"),customButton.setAttribute("aria-label",`Icon ${x}`),customButton.innerHTML='<svg xmlns="http://www.w3.org/2000/svg" height="24" viewBox="0 -960 960 960" width="24"><path d="M180-120q-24 0-42-18t-18-42v-600q0-24 18-42t42-18h600q24 0 42 18t18 42v600q0 24-18 42t-42 18H180Zm0-60h600v-600H180v600Zm56-97h489L578-473 446-302l-93-127-117 152Zm-56 97v-600 600Z" /></svg>',customButton}));return titleBar.append(primaryButton,customDescription),customButtons.forEach((button=>titleBar.append(button))),dataTable.appendChild(titleBar),dataTable})(),name:"Custom title bar"},UpdatingDataExample={render:()=>(()=>{const dataTable=createDataTableElement("Updating Data",LONG_COLS,[]),pageOptions=[{label:"5",value:"5"}];dataTable.showPagination=!0,dataTable.paginationBarOptions={itemsPerPageOptions:pageOptions,showItemsPerPageControl:!0,showGoToPageControl:!0,rangeLabelType:"page"};const updateDataButton=document.createElement("ic-button");updateDataButton.addEventListener("click",(()=>{dataTable.data=[...dataTable.data,...LONG_DATA]})),updateDataButton.innerHTML="Update data";const clearDataButton=document.createElement("ic-button");clearDataButton.addEventListener("click",(()=>{dataTable.data=[]})),clearDataButton.innerHTML="Clear data";const updatePaginationButton=document.createElement("ic-button");updatePaginationButton.addEventListener("click",(()=>{dataTable.paginationBarOptions={...dataTable.paginationBarOptions,itemsPerPageOptions:[{label:"10",value:"10"},{label:"20",value:"20"},{label:"50",value:"50"}]}})),updatePaginationButton.innerHTML="Update page lengths";const resetPaginationButton=document.createElement("ic-button");resetPaginationButton.addEventListener("click",(()=>{dataTable.paginationBarOptions={...dataTable.paginationBarOptions,itemsPerPageOptions:pageOptions}})),resetPaginationButton.innerHTML="Reset page lengths";const buttonWrapper=document.createElement("div");buttonWrapper.style.display="flex",buttonWrapper.style.paddingTop="10px",buttonWrapper.style.gap="8px",buttonWrapper.insertAdjacentElement("afterbegin",updateDataButton),buttonWrapper.insertAdjacentElement("beforeend",clearDataButton),buttonWrapper.insertAdjacentElement("beforeend",updatePaginationButton),buttonWrapper.insertAdjacentElement("beforeend",resetPaginationButton);const wrapper=document.createElement("div");return wrapper.insertAdjacentElement("afterbegin",dataTable),wrapper.insertAdjacentElement("beforeend",buttonWrapper),wrapper})(),name:"Updating data"},SlottedPaginationBar={render:()=>(()=>{let itemsPerPage=5;const dataTable=createDataTableElement("slotted-pagination",LONG_COLS,LONG_DATA),paginationBar=document.createElement("ic-pagination-bar");return paginationBar.setAttribute("total-items",`${LONG_DATA.length}`),paginationBar.setAttribute("show-items-per-page-control","true"),paginationBar.itemsPerPageOptions=[{label:"5",value:"5"},{label:"10",value:"10"}],paginationBar.setAttribute("slot","pagination-bar"),paginationBar.addEventListener("icItemsPerPageChange",(ev=>{itemsPerPage=ev.detail.value,dataTable.data=LONG_DATA.slice(0,itemsPerPage)})),paginationBar.addEventListener("icPageChange",(ev=>{const fromRow=(ev.detail.value-1)*itemsPerPage;dataTable.data=LONG_DATA.slice(fromRow,fromRow+itemsPerPage)})),dataTable.appendChild(paginationBar),dataTable})(),name:"Slotted pagination bar"},DataTruncationTooltip={render:()=>(()=>{const dataTable=CustomRowHeights().querySelector("ic-data-table");dataTable.globalRowHeight=40,dataTable.variableRowHeight=void 0,dataTable.setAttribute("truncation-pattern","tooltip"),dataTable.setAttribute("sortable","true");const resetButton=document.createElement("ic-button");resetButton.addEventListener("click",(()=>dataTable.resetRowHeights(40))),resetButton.innerHTML="Reset rowHeight to 40";const setButton=document.createElement("ic-button");setButton.addEventListener("click",(()=>{dataTable.globalRowHeight=80})),setButton.innerHTML="Set global row heights to 80";const buttonWrapper=document.createElement("div");buttonWrapper.style.display="flex",buttonWrapper.style.paddingTop="10px",buttonWrapper.style.gap="8px",buttonWrapper.insertAdjacentElement("afterbegin",setButton),buttonWrapper.insertAdjacentElement("beforeend",resetButton);const wrapper=document.createElement("div");return wrapper.insertAdjacentElement("afterbegin",dataTable),wrapper.insertAdjacentElement("beforeend",buttonWrapper),wrapper})(),name:"Data truncation tooltip"},TruncationShowHideExample={render:()=>(()=>{const dataTable=CustomRowHeights().querySelector("ic-data-table");dataTable.globalRowHeight=40,dataTable.variableRowHeight=void 0,dataTable.truncationPattern="show-hide";const resetButton=document.createElement("ic-button");resetButton.addEventListener("click",(()=>dataTable.resetRowHeights(40))),resetButton.innerHTML="Reset rowHeight to 40";const setButton=document.createElement("ic-button");setButton.addEventListener("click",(()=>{dataTable.globalRowHeight=80})),setButton.innerHTML="Set globalRowHeight to 80";const updateDataButton=document.createElement("ic-button");updateDataButton.addEventListener("click",(()=>{setTimeout((()=>{dataTable.data=LONG_DATA_VALUES_UPDATE}),500)})),updateDataButton.innerHTML="Update data";const buttonWrapper=document.createElement("div");buttonWrapper.style.display="flex",buttonWrapper.style.paddingTop="10px",buttonWrapper.style.gap="8px",buttonWrapper.insertAdjacentElement("afterbegin",setButton),buttonWrapper.insertAdjacentElement("beforeend",resetButton),buttonWrapper.insertAdjacentElement("beforeend",updateDataButton);const wrapper=document.createElement("div");return wrapper.insertAdjacentElement("afterbegin",dataTable),wrapper.insertAdjacentElement("beforeend",buttonWrapper),wrapper})(),name:"Data truncation see more / see less"},TextWrap={render:()=>(()=>{const dataTable=createDataTableElement("Text Wrap",COLUMNS_TEXT_WRAP,TEXT_WRAP_LONG_DATA);dataTable.globalRowHeight=40,dataTable.variableRowHeight=void 0;const wrapper=document.createElement("div");return wrapper.insertAdjacentElement("afterbegin",dataTable),wrapper})(),name:"Text wrap"},TableSizingAndColumnWidth={render:()=>(()=>{const dataTable=createDataTableElement("Basic Table",COLS_WIDTH,DATA);return dataTable.setAttribute("width","800px"),dataTable.setAttribute("table-layout","auto"),dataTable})(),name:"Table sizing and column width"},ActionElementAndOnClickAction={render:()=>createDataTableElement("Action Element",COLS,ACTION_DATA_ELEMENTS),name:"Action element"},CellDescriptionsAndIcons={render:()=>(()=>{const dataTable=createDataTableElement("Cell descriptions data table",COLS,DATA_ELEMENTS_WITH_DESCRIPTIONS);return dataTable.setAttribute("sortable","true"),dataTable})(),name:"Description and icons within cells"},CellDescriptionsLongText={render:()=>(()=>{const dataTable=createDataTableElement("Cell descriptions data table auto with tooltip",COLS,LONG_DATA_ELEMENTS_WITH_DESCRIPTIONS),tooltipTruncationBtn=document.createElement("ic-button");tooltipTruncationBtn.textContent="truncationPattern: tooltip",tooltipTruncationBtn.addEventListener("click",(()=>{dataTable.truncationPattern="tooltip"}));const showHideTruncationBtn=document.createElement("ic-button");showHideTruncationBtn.textContent="truncationPattern: show-hide",showHideTruncationBtn.addEventListener("click",(()=>{dataTable.truncationPattern="show-hide"}));const buttonWrapper=document.createElement("div");buttonWrapper.className="wrapper",buttonWrapper.style.display="flex",buttonWrapper.style.flexWrap="wrap",buttonWrapper.style.paddingBlock="10px",buttonWrapper.style.gap="8px";const resetButton=document.createElement("ic-button");resetButton.addEventListener("click",(()=>dataTable.resetRowHeights())),resetButton.innerHTML="Reset row height: auto";const rowHeight40Btn=document.createElement("ic-button");rowHeight40Btn.addEventListener("click",(()=>{dataTable.globalRowHeight=40})),rowHeight40Btn.innerHTML="Set global row height: 40";const rowHeight80Btn=document.createElement("ic-button");rowHeight80Btn.addEventListener("click",(()=>{dataTable.globalRowHeight=80})),rowHeight80Btn.innerHTML="Set global row height: 80";const rowHeight150Btn=document.createElement("ic-button");rowHeight150Btn.addEventListener("click",(()=>{dataTable.globalRowHeight=150})),rowHeight150Btn.innerHTML="Set global row height: 150",buttonWrapper.insertAdjacentElement("beforeend",tooltipTruncationBtn),buttonWrapper.insertAdjacentElement("beforeend",showHideTruncationBtn),buttonWrapper.insertAdjacentElement("beforeend",rowHeight40Btn),buttonWrapper.insertAdjacentElement("beforeend",rowHeight80Btn),buttonWrapper.insertAdjacentElement("beforeend",rowHeight150Btn),buttonWrapper.insertAdjacentElement("beforeend",resetButton);const wrapper=document.createElement("div");return wrapper.insertAdjacentElement("beforeend",buttonWrapper),wrapper.insertAdjacentElement("beforeend",dataTable),wrapper})(),name:"Description and icons within cells with long text"},MissingCellDataExample={render:()=>createDataTableElement("Missing Cell Data",COLS,DATA_WITH_EMPTY_VALUES),name:"Missing cell data"},SelectRowsUsingCheckboxExample={render:()=>(()=>{const dataTable=createDataTableElement("Select using checkboxes",COLS,DATA);return dataTable.setAttribute("row-selection","true"),dataTable.addEventListener("icSelectedRowChange",(event=>{console.log("Selected row changed",event.detail)})),dataTable.addEventListener("icSelectAllRows",(event=>{console.log("Selected all rows",event.detail)})),dataTable})(),name:"Select rows with checkbox"},DevAreaExample={render:()=>(()=>{const dataTable=createDataTableElement("Basic Table",COLS,VERY_LONG_DATA(5));dataTable.sortable=!0,dataTable.variableRowHeight=void 0,dataTable.showPagination=!0;const description=document.createElement("ic-typography");description.innerHTML="\n  Use the buttons to change the state of the Data Tables component.<br /><br />\n  By default, the global row height is set to <b>'auto'</b>. This means the row height will be dictated by the cell with the most lines.<br />\n  In order to view the truncated data, the truncation pattern must first be set and then the row height. The reason for this is, the data will know how to behave if the cell space is reduced.<br />\n  Setting the truncation pattern while the row height is set to auto will not display the truncated data as the table cells\n  will have enough space to show all table cell data.<br /><br />\n  In this demo, the even rows have <b>'textWrap'</b> applied.\n  ";const resetButton=document.createElement("ic-button");resetButton.addEventListener("click",(()=>dataTable.resetRowHeights())),resetButton.innerHTML="Reset row height: auto";const rowHeight40Btn=document.createElement("ic-button");rowHeight40Btn.addEventListener("click",(()=>{dataTable.globalRowHeight=40})),rowHeight40Btn.innerHTML="Set global row height: 40";const rowHeight80Btn=document.createElement("ic-button");rowHeight80Btn.addEventListener("click",(()=>{dataTable.globalRowHeight=80})),rowHeight80Btn.innerHTML="Set global row height: 80";const rowHeight150Btn=document.createElement("ic-button");rowHeight150Btn.addEventListener("click",(()=>{dataTable.globalRowHeight=150})),rowHeight150Btn.innerHTML="Set global row height: 150";const updateRows200Btn=document.createElement("ic-button");updateRows200Btn.addEventListener("click",(()=>{setTimeout((()=>{dataTable.data=VERY_LONG_DATA(200)}),500)})),updateRows200Btn.innerHTML="Update data rows: 200";const tooltipTruncationBtn=document.createElement("ic-button");tooltipTruncationBtn.textContent="truncationPattern: tooltip",tooltipTruncationBtn.addEventListener("click",(()=>{dataTable.truncationPattern="tooltip"}));const showHideTruncationBtn=document.createElement("ic-button");showHideTruncationBtn.textContent="truncationPattern: show-hide",showHideTruncationBtn.addEventListener("click",(()=>{dataTable.truncationPattern="show-hide"}));const buttonWrapper=document.createElement("div");buttonWrapper.className="wrapper",buttonWrapper.style.display="flex",buttonWrapper.style.flexWrap="wrap",buttonWrapper.style.paddingBlock="10px",buttonWrapper.style.gap="8px",buttonWrapper.insertAdjacentElement("beforeend",tooltipTruncationBtn),buttonWrapper.insertAdjacentElement("beforeend",showHideTruncationBtn),buttonWrapper.insertAdjacentElement("beforeend",rowHeight40Btn),buttonWrapper.insertAdjacentElement("beforeend",rowHeight80Btn),buttonWrapper.insertAdjacentElement("beforeend",rowHeight150Btn),buttonWrapper.insertAdjacentElement("beforeend",resetButton),buttonWrapper.insertAdjacentElement("beforeend",updateRows200Btn);const wrapper=document.createElement("div");return wrapper.insertAdjacentElement("beforeend",description),wrapper.insertAdjacentElement("beforeend",buttonWrapper),wrapper.insertAdjacentElement("beforeend",dataTable),wrapper})(),name:"Dev area"},__namedExportsOrder=["Default","LargeDataSetExample","EmbeddedExample","DenseExample","SpaciousExample","StickyColumnHeaders","ColumnHeaderTruncation","RowHeadersExample","Sortable","SortOptionsExample","DisableSortExample","ExcludeColumnsFromSortExample","PaginationExample","ColumnOverridesExample","RowOverridesExample","CellOverridesExample","DefaultEmptyState","SlottedEmptyState","LoadingState","UpdatingState","LinksAndElementsInData","SlottedElementsWithPaginationExample","CustomIconsExample","CustomRowHeightsExample","CustomTitleBarExample","UpdatingDataExample","SlottedPaginationBar","DataTruncationTooltip","TruncationShowHideExample","TextWrap","TableSizingAndColumnWidth","ActionElementAndOnClickAction","CellDescriptionsAndIcons","CellDescriptionsLongText","MissingCellDataExample","SelectRowsUsingCheckboxExample","DevAreaExample"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  render: () => Basic(),\n  name: "Basic"\n}',...Default.parameters?.docs?.source},description:{story:"Use the data table component to display data in a tabular form.\n\nThere are two required props for data table:\n- Caption: `string`\n- Columns: `IcDataTableColumnObject[]`\n\nClick the 'Component API' tab to view all the available props, events and slots for data tables.\n\nTo use the data table component, import `@ukic/canary-web-components` into your application.",...Default.parameters?.docs?.description}}},LargeDataSetExample.parameters={...LargeDataSetExample.parameters,docs:{...LargeDataSetExample.parameters?.docs,source:{originalSource:'{\n  render: () => LargeDataSet(),\n  name: "Large data set"\n}',...LargeDataSetExample.parameters?.docs?.source}}},EmbeddedExample.parameters={...EmbeddedExample.parameters,docs:{...EmbeddedExample.parameters?.docs,source:{originalSource:'{\n  render: () => Embedded(),\n  name: "Embedded"\n}',...EmbeddedExample.parameters?.docs?.source},description:{story:"The `embedded` boolean adds a border around the table so it can be added as a standalone table and is not required to stretch the full width of its parent container.",...EmbeddedExample.parameters?.docs?.description}}},DenseExample.parameters={...DenseExample.parameters,docs:{...DenseExample.parameters?.docs,source:{originalSource:'{\n  render: () => Dense(),\n  name: "Dense"\n}',...DenseExample.parameters?.docs?.source},description:{story:"The `density` variant provides three different styles for the data table:\n- `dense` reduces the padding and font size of the table cells to give the data a more dense style.\n- `default` provides a padding of `8px` which is the default spacing. This variant is seen in the [first](#basic) example.\n- `spacious` gives the data table a more spacious look and feel by increasing the vertical padding as well as the font size.",...DenseExample.parameters?.docs?.description}}},SpaciousExample.parameters={...SpaciousExample.parameters,docs:{...SpaciousExample.parameters?.docs,source:{originalSource:'{\n  render: () => Spacious(),\n  name: "Spacious"\n}',...SpaciousExample.parameters?.docs?.source}}},StickyColumnHeaders.parameters={...StickyColumnHeaders.parameters,docs:{...StickyColumnHeaders.parameters?.docs,source:{originalSource:'{\n  render: () => Scrollable(),\n  name: "Sticky column headers"\n}',...StickyColumnHeaders.parameters?.docs?.source},description:{story:"When a height for the data table is set, the scroll bar will appear to the right. However, by default, the column headers will move up and out of view making it difficult to understand what the data means.\nThis can be mitigated by using the `sticky-column-headers` prop which takes a boolean. This can be toggled within the example below.",...StickyColumnHeaders.parameters?.docs?.description}}},ColumnHeaderTruncation.parameters={...ColumnHeaderTruncation.parameters,docs:{...ColumnHeaderTruncation.parameters?.docs,source:{originalSource:'{\n  render: () => HeaderTruncation(),\n  name: "Column header truncation"\n}',...ColumnHeaderTruncation.parameters?.docs?.source},description:{story:"By default, column header labels will wrap when they exceed the column width. To keep the column header height constant, the `columnHeaderTruncation` can be used. When set to `true`, the label will appear truncated and will display a tooltip with the full text when hovered over.",...ColumnHeaderTruncation.parameters?.docs?.description}}},RowHeadersExample.parameters={...RowHeadersExample.parameters,docs:{...RowHeadersExample.parameters?.docs,source:{originalSource:'{\n  render: () => RowHeaders(),\n  name: "Row headers"\n}',...RowHeadersExample.parameters?.docs?.source},description:{story:"Row headers allow headings to be added to individual rows and styles them as column headings. The column collection includes an additional `header` key which aligns with the row headers. The structure of the `header` column is the same as the columns (i.e. key, title, dataType).\nThe data array includes an additional `header` key which takes an object. The title of the row header is set by passing `title` as the key and a value.",...RowHeadersExample.parameters?.docs?.description}}},Sortable.parameters={...Sortable.parameters,docs:{...Sortable.parameters?.docs,source:{originalSource:'{\n  render: () => Sort(),\n  name: "Sortable"\n}',...Sortable.parameters?.docs?.source},description:{story:"Set `sortable` to `true` to set the sort functionality on all columns. Sorting can be set to `unsorted`, `ascending` and `descending` by press the sort buttons next to the column heading.",...Sortable.parameters?.docs?.description}}},SortOptionsExample.parameters={...SortOptionsExample.parameters,docs:{...SortOptionsExample.parameters?.docs,source:{originalSource:'{\n  render: () => SortOptions(),\n  name: "Sort options"\n}',...SortOptionsExample.parameters?.docs?.source},description:{story:"It is possible to change the sort options for the sort buttons. The `sortOptions` prop takes an object with `sortOrders` and `defaultColumn`. `sortOrders` allows the sort order to be amended as we all as remove a sort type. Such as changing the order to `descending`, `unsorted` and remove `ascending`. `defaultColumn` sets which column is ordered by default. This is set by padding the column key as the `defaultColumn` value.",...SortOptionsExample.parameters?.docs?.description}}},DisableSortExample.parameters={...DisableSortExample.parameters,docs:{...DisableSortExample.parameters?.docs,source:{originalSource:'{\n  render: () => DisableSort(),\n  name: "Disable sort"\n}',...DisableSortExample.parameters?.docs?.source},description:{story:"Set `sortable` to `true` and set `disable-auto-sort` to `true` to enable external sorting functionality.",...DisableSortExample.parameters?.docs?.description}}},ExcludeColumnsFromSortExample.parameters={...ExcludeColumnsFromSortExample.parameters,docs:{...ExcludeColumnsFromSortExample.parameters?.docs,source:{originalSource:'{\n  render: () => ExcludeColumnsFromSort(),\n  name: "Exclude columns from sort"\n}',...ExcludeColumnsFromSortExample.parameters?.docs?.source},description:{story:"Adding 'excludeColumnFromSort: true` to the column object excludes that column from displaying the sort button.",...ExcludeColumnsFromSortExample.parameters?.docs?.description}}},PaginationExample.parameters={...PaginationExample.parameters,docs:{...PaginationExample.parameters?.docs,source:{originalSource:'{\n  render: () => Pagination(),\n  name: "Pagination"\n}',...PaginationExample.parameters?.docs?.source},description:{story:"Pagination allows large data sets to be split into pages in order to make the data easier to digest. Setting `show-pagination` to `true` will add the `ic-pagination` component to the bottom of the table. There a several sub components within pagination which are set via the `paginationBarOptions` prop:\n- `itemsPerPage` allows customization on the number of items on each page. This requires a collection with `label` and `value` key pairs.\n- `showItemsPerPageControl` shows or hides the `itemsPerPage` component using `true` or `false`.\n- `showGoToPageControl` displays controls which allows jumping between pages in a non-linear approach.",...PaginationExample.parameters?.docs?.description}}},ColumnOverridesExample.parameters={...ColumnOverridesExample.parameters,docs:{...ColumnOverridesExample.parameters?.docs,source:{originalSource:'{\n  render: () => ColumnOverrides(),\n  name: "Column overrides"\n}',...ColumnOverridesExample.parameters?.docs?.source},description:{story:"There may be a requirement to style a column differently to the rest of the data to add emphasis. For example, centre align data within the 'first name' column. To do this, add `columnAlignment` to the column. `columnAlignment` takes an object which sets the `horizontal` and `vertical` property:\n- `horizontal` accepts `left`, `right` or `center`.\n- `vertical` accepts `top`, `middle`, `bottom`.\n\n`emphasis` can be added to the column by setting `high` or `low`.",...ColumnOverridesExample.parameters?.docs?.description}}},RowOverridesExample.parameters={...RowOverridesExample.parameters,docs:{...RowOverridesExample.parameters?.docs,source:{originalSource:'{\n  render: () => RowOverrides(),\n  name: "Row overrides"\n}',...RowOverridesExample.parameters?.docs?.source},description:{story:"Row overrides allow styling to be applied at a row level and is set within the `header` object. The row overrides are used in conjunction with row headers. The following row overrides options apply:\n- `rowAlignment` accepts `left`, `right` and `center`.\n- `emphasis` accepts `high` or `low`.",...RowOverridesExample.parameters?.docs?.description}}},CellOverridesExample.parameters={...CellOverridesExample.parameters,docs:{...CellOverridesExample.parameters?.docs,source:{originalSource:'{\n  render: () => CellOverrides(),\n  name: "Cell overrides"\n}',...CellOverridesExample.parameters?.docs?.source},description:{story:"Cell overrides allows styling to be applied at a cell level. The cell which requires an override accepts an object which requires `data` and can contain `cellAlignment` and/or `emphasis`:\n- `data` is the cell value.\n- `emphasis` accepts `high` or `low`.\n- `cellAlignment` accepts an object with the following key pairs:\n - `horizontal` accepts `left`, `right` or `center`.\n - `vertical` accepts `top`, `middle`, `bottom`.",...CellOverridesExample.parameters?.docs?.description}}},DefaultEmptyState.parameters={...DefaultEmptyState.parameters,docs:{...DefaultEmptyState.parameters?.docs,source:{originalSource:'{\n  render: () => Empty(),\n  name: "Empty state"\n}',...DefaultEmptyState.parameters?.docs?.source},description:{story:"When the table receives no data (either `null` or an empty array) it will automatically show an `ic-empty-state` below the headers.",...DefaultEmptyState.parameters?.docs?.description}}},SlottedEmptyState.parameters={...SlottedEmptyState.parameters,docs:{...SlottedEmptyState.parameters?.docs,source:{originalSource:'{\n  render: () => EmptySlotted(),\n  name: "Slotted empty state"\n}',...SlottedEmptyState.parameters?.docs?.source},description:{story:"You can customise your own `ic-empty-state` component and slot it into the data table using the `empty-state` slot, to reflect different scenarios.",...SlottedEmptyState.parameters?.docs?.description}}},LoadingState.parameters={...LoadingState.parameters,docs:{...LoadingState.parameters?.docs,source:{originalSource:'{\n  render: () => Loading(),\n  name: "Loading state",\n  height: "720px"\n}',...LoadingState.parameters?.docs?.source},description:{story:"When a user wants to fetch their data asynchronously, a `loading` prop can be set to `true`, which then renders a circular variant of the `ic-loading-indicator`.\nThe loading indicator can be customised using the `loadingOptions` prop:\n- `description` sets the aria-label of the component\n- `label` sets the visual message\n- `labelDuration` is the number of milliseconds before the label changes\n- `overlay` renders a dark overlay over the previous data set while new data is loaded\n\nIf it needs to be determinate, use `max`, `min` and `progress`.",...LoadingState.parameters?.docs?.description}}},UpdatingState.parameters={...UpdatingState.parameters,docs:{...UpdatingState.parameters?.docs,source:{originalSource:'{\n  render: () => Updating(),\n  name: "Updating state"\n}',...UpdatingState.parameters?.docs?.source},description:{story:"If data in the table has changed, an `updating` prop has been supplied to show a linear `ic-loading-indicator` just above the data rows.\n\nThis prop is also accompanied by an `updatingOptions` prop, which contains similar options to `loadingOptions`, minus `label` and `labelDuration` since the linear version is displayed.",...UpdatingState.parameters?.docs?.description}}},LinksAndElementsInData.parameters={...LinksAndElementsInData.parameters,docs:{...LinksAndElementsInData.parameters?.docs,source:{originalSource:'{\n  render: () => LinksHTMLElements(),\n  name: "Links and elements in data"\n}',...LinksAndElementsInData.parameters?.docs?.source},description:{story:"Custom HTML elements can be slotted or passed via the `data` prop to display in certain cells. When using the slotted method, the slot name follows the format of `{COLUMN_TAG}-{ROW_INDEX}`.",...LinksAndElementsInData.parameters?.docs?.description}}},SlottedElementsWithPaginationExample.parameters={...SlottedElementsWithPaginationExample.parameters,docs:{...SlottedElementsWithPaginationExample.parameters?.docs,source:{originalSource:'{\n  render: () => SlottedElementsWithPagination(),\n  name: "Slotted elements with pagination"\n}',...SlottedElementsWithPaginationExample.parameters?.docs?.source}}},CustomIconsExample.parameters={...CustomIconsExample.parameters,docs:{...CustomIconsExample.parameters?.docs,source:{originalSource:'{\n  render: () => CustomIcons(),\n  name: "Custom icons"\n}',...CustomIconsExample.parameters?.docs?.source},description:{story:"Custom icons can be added to cells, columns and headers in the data table. To add it to headers, set the icon via the `columns` prop:\n```\nicon: {\n icon: //ICON_STRING_GOES_HERE,\n onAllCells: //Boolean to determine whether column header icon should be replicated on all cells in the column,\n hideOnHeader: //Boolean for whether this icon should only be shown on cells and not on the header,\n}\n```\n\nTo add icons to individual cells, they can be added through the `data` prop, in a similar method to overriding the cell. Cell icons take priority over the `onAllCells` prop, meaning specific cells can be made to stand out.\n\nBoth cells and headers can also have icons slotted in. Cells use the slot format: `{COLUMN_KEY}-{ROW_INDEX}-icon`, and headers use the format: `{COLUMN_KEY}-column-icon`. Slotted icons take priority over icons inserted via the `columns` and `data` props.",...CustomIconsExample.parameters?.docs?.description}}},CustomRowHeightsExample.parameters={...CustomRowHeightsExample.parameters,docs:{...CustomRowHeightsExample.parameters?.docs,source:{originalSource:'{\n  render: () => CustomRowHeights(),\n  name: "Custom row heights"\n}',...CustomRowHeightsExample.parameters?.docs?.source},description:{story:"A data table can have its rows use custom heights, to help display more data per row. This involves using the `globalRowHeight` prop, which applies this custom height to all rows.\n\nFor a more granular approach, `variableRowHeight` exists. This is passed through the data object for each row of data, as well as that row's `index`. Using these properties, you can write a custom function that will return a number for that row's height based on your criteria.\nReturning `null` from this function means that the row will use the `globalRowHeight` property value.\n\n**_NOTE:_** If the data table uses the `density` prop, then your custom value will be scaled depending on the density, in order to keep content readable as the text size changes:\n- `Dense` = 80% of `globalRowHeight` or `variableRowHeight`\n- `Spacious` = 120% of `globalRowHeight` or `variableRowHeight`\n\nE.G: If `globalRowHeight` = 100, a dense table will set the height to be **_80_**.\n\n**_NOTE:_** If a cell has a description (see \"Description and icons within cells\"), then the row height for that individual row will be increased by the description height in order to fully display it.\n\nE.G: If `globalRowHeight` = 100 and a cell has a description with a height of 20, then the row height for that cell's row will be set to **_120_**.\n\nTo quickly reset all row heights to the default, you can run the `resetRowHeights` method.\n\nIf you'd rather let the row calculate its own height based on its content, either set `globalRowHeight` to `auto`, or return `auto` from `variableRowHeight`.",...CustomRowHeightsExample.parameters?.docs?.description}}},CustomTitleBarExample.parameters={...CustomTitleBarExample.parameters,docs:{...CustomTitleBarExample.parameters?.docs,source:{originalSource:'{\n  render: () => CustomTitleBar(),\n  name: "Custom title bar"\n}',...CustomTitleBarExample.parameters?.docs?.source},description:{story:'To add additional information about the data held in your data table, you can use the `title-bar` slot to add an `ic-data-table-title-bar`, which will appear above the column headers.\n\nThe title bar can have a description and metadata added, to provide supporting information to display some context about the data to the user. Primary and custom action slots also exist to allow for actions to be performed that are related to the data, which can be prominently displayed.\n\nThe `ic-data-table-title-bar` has a built-in density selector, which allows a user to quickly change the size and padding of cells to make it more readable. This can also be hidden if preferred.\n\nMore details on `ic-data-table-title-bar` can be found in the <ic-link href="/?path=/story/web-components-data-table-title-bar--basic" inline="">data table title bar documentation</ic-link>.',...CustomTitleBarExample.parameters?.docs?.description}}},UpdatingDataExample.parameters={...UpdatingDataExample.parameters,docs:{...UpdatingDataExample.parameters?.docs,source:{originalSource:'{\n  render: () => UpdatingData(),\n  name: "Updating data"\n}',...UpdatingDataExample.parameters?.docs?.source},description:{story:'The example below demonstrates how the pagination bar responds to changes within the data.\n\nMore details on `ic-pagination-bar` can be found in the <ic-link href="/?path=/story/web-components-pagination-bar--docs" inline="">pagination bar documentation</ic-link>.',...UpdatingDataExample.parameters?.docs?.description}}},SlottedPaginationBar.parameters={...SlottedPaginationBar.parameters,docs:{...SlottedPaginationBar.parameters?.docs,source:{originalSource:'{\n  render: () => SlottedPagination(),\n  name: "Slotted pagination bar"\n}',...SlottedPaginationBar.parameters?.docs?.source},description:{story:"There may be scenarios when using `ic-data-table` when pagination and data fetching is done using a backend API.\n\nTo enable this behaviour, the `pagination-bar` slot can be utilised to provide a custom `ic-pagination-bar` component, allowing the user to have more control over how their data is displayed & interacted with.",...SlottedPaginationBar.parameters?.docs?.description}}},DataTruncationTooltip.parameters={...DataTruncationTooltip.parameters,docs:{...DataTruncationTooltip.parameters?.docs,source:{originalSource:'{\n  render: () => TruncationTooltip(),\n  name: "Data truncation tooltip"\n}',...DataTruncationTooltip.parameters?.docs?.source},description:{story:'When a row is given a set height, and has content that no longer fits into the cell area, the content becomes truncated. There are two types of truncation:\n- `tooltip`: Adds a line-clamp to the cell and displays the message in a tooltip.\n- `show-hide`: Adds a `See more/See less` button underneath the cell text, allowing the user to display the full content should they wish.\n\nThese values are set using the `truncation-pattern` attribute.\n\nBy default, `global-row-height` is set to `auto`. If the `truncation-pattern` attribute is set to `tooltip` or `show-hide` while `global-row-height` is `auto`, the data will not appear truncated due to the row height being set to the data which has the most height.\n\nTo see the data truncated, the `global-row-height` or `variable-row-height` needs to be explicitly set to a height which is shorter than data which has the most lines.\n\n**_NOTE:_** `truncation-pattern` only applies to a cell\'s main data value. If a cell has a description (see "Description and icons within cells") then this will not be truncated and will still be visible beyond the truncation.',...DataTruncationTooltip.parameters?.docs?.description}}},TruncationShowHideExample.parameters={...TruncationShowHideExample.parameters,docs:{...TruncationShowHideExample.parameters?.docs,source:{originalSource:'{\n  render: () => TruncationShowHide(),\n  name: "Data truncation see more / see less"\n}',...TruncationShowHideExample.parameters?.docs?.source}}},TextWrap.parameters={...TextWrap.parameters,docs:{...TextWrap.parameters?.docs,source:{originalSource:'{\n  render: () => TruncationTextWrap(),\n  name: "Text wrap"\n}',...TextWrap.parameters?.docs?.source},description:{story:'Text can be set to wrap in a particular column, row or cell. Any column, row or cell that text wrap is applied to will ignore the custom height if the custom height is too small and the full content will be shown.\n\nTo set text to wrap in a column, add `textWrap: true` as a key value:\n```\nconst column = [\n { key: "name", title: "Name", dataType: "string" },\n ...\n]\n```\n\nTo set text to wrap in a row, add `rowOptions: { textWrap: true }` to an object within the data array:\n```\nconst data = [\n {\n   name: "Tim Rayes",\n   age: 41,\n   department: "Sales and Marketing",\n   employeeNumber: 3,\n   jobTitle:\n     "Regional Sales and Marketing Strategy Director (Europe, the Middle East, and Africa)",\n   rowOptions: {\n     textWrap: true\n   }\n },\n ...\n]\n```\n\nTo set text wrap in a cell, add `textWrap` to a data key within an object:\n```\nconst data = [\n {\n   name: {\n     data:"Tim Rayes",\n     textWrap: true\n   },\n   age: 41,\n   department: "Sales and Marketing",\n   employeeNumber: 3,\n   jobTitle:\n     "Regional Sales and Marketing Strategy Director (Europe, the Middle East, and Africa)",\n },\n ...\n]\n```',...TextWrap.parameters?.docs?.description}}},TableSizingAndColumnWidth.parameters={...TableSizingAndColumnWidth.parameters,docs:{...TableSizingAndColumnWidth.parameters?.docs,source:{originalSource:'{\n  render: () => DataTableSizing(),\n  name: "Table sizing and column width"\n}',...TableSizingAndColumnWidth.parameters?.docs?.source},description:{story:"The dimensions of the data table can be set using the `width` and `height` attributes. The attribute accepts dimensions in `px`, `%`, `rem` and `auto`.\n\nBy default, the width is set to `100%` so the table spans across the viewport or parent container.\n\nTo set the column widths, the `columnWidth` property should be added to the relevant column within the column array.\n\nThe [table layout](https://developer.mozilla.org/en-US/docs/Web/CSS/table-layout) attribute is vital to how the table resizing and column widths behave. By default, the table layout is set to `fixed`. If no column width is set, the columns widths will be equally set within the viewport or parent container.\n\nA table with a `fixed` layout will force the table column widths to take precedence over the data with the table cells.\n\nFor the column widths to be dictated by the content inside, set the `table-layout` attribute to `auto` and set the table `width` to `auto`.\n\nTo set the min and max width of a table cell, set the `table-layout` attribute to `auto` and set a `minWidth` or `maxWidth` value into `columnWidth`. The min and max width accepts dimensions in `px`, `%`, `rem`.",...TableSizingAndColumnWidth.parameters?.docs?.description}}},ActionElementAndOnClickAction.parameters={...ActionElementAndOnClickAction.parameters,docs:{...ActionElementAndOnClickAction.parameters?.docs,source:{originalSource:'{\n  render: () => ActionElement(),\n  name: "Action element"\n}',...ActionElementAndOnClickAction.parameters?.docs?.source},description:{story:"The cell data can contain an `actionElement` which can be a string containing any html to be rendered. The `actionElement` will be displayed to the right of the cell data. An `actionOnClick` can be specified for the `actionElement`. This should be used with a keyboard accessible component such as `icButton` for a function to be run when the `actionElement` is clicked.",...ActionElementAndOnClickAction.parameters?.docs?.description}}},CellDescriptionsAndIcons.parameters={...CellDescriptionsAndIcons.parameters,docs:{...CellDescriptionsAndIcons.parameters?.docs,source:{originalSource:'{\n  render: () => CellDescriptions(),\n  name: "Description and icons within cells"\n}',...CellDescriptionsAndIcons.parameters?.docs?.source},description:{story:'Descriptions and icons can be included in the cells by proving a `description` field in the data. This will populate the cell with an icon (if provided) and a text string underneath the cell data. This can be applied to any cell.\n\nYou can provide a `description` object with or without an icon:\n```\n// With an icon\nfirstName: {\n data: "Joe",\n description: {\n   data: "The name of Joe",\n   icon: \'<svg xmlns="http://www.w3.org/2000/svg" height="20" viewBox="0 -960 960 960" width="20"><path d="M180-120q-24 0-42-18t-18-42v-600q0-24 18-42t42-18h600q24 0 42 18t18 42v600q0 24-18 42t-42 18H180Zm0-60h600v-600H180v600Zm56-97h489L578-473 446-302l-93-127-117 152Zm-56 97v-600 600Z"/></svg>\',\n },\n}\n```\n\n```\n// Without an icon\nfirstName: {\n data: "Joe",\n description: "The name of Joe"\n}\n```',...CellDescriptionsAndIcons.parameters?.docs?.description}}},CellDescriptionsLongText.parameters={...CellDescriptionsLongText.parameters,docs:{...CellDescriptionsLongText.parameters?.docs,source:{originalSource:'{\n  render: () => LongCellDescriptions(),\n  name: "Description and icons within cells with long text"\n}',...CellDescriptionsLongText.parameters?.docs?.source}}},MissingCellDataExample.parameters={...MissingCellDataExample.parameters,docs:{...MissingCellDataExample.parameters?.docs,source:{originalSource:'{\n  render: () => MissingCellData(),\n  name: "Missing cell data"\n}',...MissingCellDataExample.parameters?.docs?.source},description:{story:"The example below demonstrates the table being able to handle empty cell values (null, undefined or empty string).",...MissingCellDataExample.parameters?.docs?.description}}},SelectRowsUsingCheckboxExample.parameters={...SelectRowsUsingCheckboxExample.parameters,docs:{...SelectRowsUsingCheckboxExample.parameters?.docs,source:{originalSource:'{\n  render: () => SelectWithCheckbox(),\n  name: "Select rows with checkbox"\n}',...SelectRowsUsingCheckboxExample.parameters?.docs?.source},description:{story:"By setting `row-selection` to `true`, `ic-checkbox` elements will appear in the leftmost column, with one in the header.\nWhen checked, the corresponding row will be selected, with the `icSelectedRowChange` containing the selected row and an array of all the currently selected rows.\n\nWhen checking the header checkbox, all rows will be selected, with the `icSelectAllRows` event being emitted with an array of all the rows. When using pagination, only the rows on the current page will be selected.",...SelectRowsUsingCheckboxExample.parameters?.docs?.description}}},DevAreaExample.parameters={...DevAreaExample.parameters,docs:{...DevAreaExample.parameters?.docs,source:{originalSource:'{\n  render: () => DevArea(),\n  name: "Dev area"\n}',...DevAreaExample.parameters?.docs?.source}}}}}]);