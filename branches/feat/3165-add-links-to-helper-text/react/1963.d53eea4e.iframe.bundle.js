"use strict";(self.webpackChunk_ukic_react=self.webpackChunk_ukic_react||[]).push([[1963],{"./src/stories/ic-select_(multi).stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Controlled:()=>Controlled,CustomElements:()=>CustomElements,CustomPlaceholder:()=>CustomPlaceholder,Default:()=>Default,DefaultValue:()=>DefaultValue,Disabled:()=>Disabled,DisabledOptions:()=>DisabledOptions,FullWidth:()=>FullWidth,Groups:()=>Groups,HelperText:()=>HelperText,HiddenLabel:()=>HiddenLabel,LoadingWithError_:()=>LoadingWithError_,Playground:()=>Playground,ReadOnly:()=>ReadOnly,Recommended:()=>Recommended,Required:()=>Required,ScrollBehaviour:()=>ScrollBehaviour,Sizes:()=>Sizes,Uncontrolled_:()=>Uncontrolled_,Validation:()=>Validation,WithClearButton:()=>WithClearButton,WithDescriptions:()=>WithDescriptions,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_components__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components.ts"),_react_component_lib_slottedSVG__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/react-component-lib/slottedSVG.tsx");function _slicedToArray(r,e){return function _arrayWithHoles(r){if(Array.isArray(r))return r}(r)||function _iterableToArrayLimit(r,l){var t=null==r?null:"undefined"!=typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(null!=t){var e,n,i,u,a=[],f=!0,o=!1;try{if(i=(t=t.call(r)).next,0===l){if(Object(t)!==t)return;f=!1}else for(;!(f=(e=i.call(t)).done)&&(a.push(e.value),a.length!==l);f=!0);}catch(r){o=!0,n=r}finally{try{if(!f&&null!=t.return&&(u=t.return(),Object(u)!==u))return}finally{if(o)throw n}}return a}}(r,e)||function _unsupportedIterableToArray(r,a){if(r){if("string"==typeof r)return _arrayLikeToArray(r,a);var t={}.toString.call(r).slice(8,-1);return"Object"===t&&r.constructor&&(t=r.constructor.name),"Map"===t||"Set"===t?Array.from(r):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?_arrayLikeToArray(r,a):void 0}}(r,e)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(r,a){(null==a||a>r.length)&&(a=r.length);for(var e=0,n=Array(a);e<a;e++)n[e]=r[e];return n}var options=[{label:"Cappuccino",value:"Cap"},{label:"Latte",value:"Lat"},{label:"Americano",value:"Ame"},{label:"Filter",value:"Fil"},{label:"Flat white",value:"Fla"},{label:"Mocha",value:"Moc"},{label:"Macchiato",value:"Mac"}],optionsWithCustomElements=[{label:"Cappuccino",value:"Cap"},{label:"Latte",value:"Lat",element:{component:'<ic-status-tag label="Neutral status"></ic-status-tag>',ariaLabel:"Neutral status tag"}},{label:"Americano",value:"Ame",icon:'<svg aria-labelledby="warning-title" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="#000000"><g id="warning"><path id="Vector" d="M4.47 20.5037H19.53C21.07 20.5037 22.03 18.8337 21.26 17.5037L13.73 4.49375C12.96 3.16375 11.04 3.16375 10.27 4.49375L2.74 17.5037C1.97 18.8337 2.93 20.5037 4.47 20.5037ZM12 13.5037C11.45 13.5037 11 13.0537 11 12.5037V10.5037C11 9.95375 11.45 9.50375 12 9.50375C12.55 9.50375 13 9.95375 13 10.5037V12.5037C13 13.0537 12.55 13.5037 12 13.5037ZM13 17.5037H11V15.5037H13V17.5037Z" /></g></svg>'},{label:"Filter",value:"Fil"},{label:"Flat white",value:"Fla"},{label:"Mocha",value:"Moc"},{label:"Macchiato",value:"Mac"}],optionsWithDisabled=[{label:"Cappuccino",value:"Cap"},{label:"Latte",value:"Lat",disabled:!0},{label:"Americano",value:"Ame"},{label:"Filter",value:"Fil",disabled:!0},{label:"Flat white",value:"Fla",disabled:!0},{label:"Mocha",value:"Moc"},{label:"Macchiato",value:"Mac"}],optionsWithDescriptions=[{label:"Cappuccino",value:"Cap",description:"Coffee frothed up with pressurised steam"},{label:"Latte",value:"Lat",description:"A milkier coffee than a cappuccino"},{label:"Americano",value:"Ame",description:"Espresso coffee diluted with hot water"},{label:"Filter",value:"Fil",description:"Coffee filtered using paper or a mesh"},{label:"Flat white",value:"Fla",description:"Coffee without froth made with espresso and hot steamed milk"},{label:"Mocha",value:"Moc",description:"A mixture of coffee and chocolate"},{label:"Macchiato",value:"Mac",description:"Espresso coffee with a dash of frothy steamed milk"}],groupedOptions=[{label:"Fancy",children:[{label:"Cappuccino",value:"Cap"},{label:"Flat white",value:"Fla"}]},{label:"Boring",children:[{label:"Filter",value:"Fil"},{label:"Latte",value:"Lat"}]}],optionsWithRecommended=[{label:"Cappuccino",value:"Cap"},{label:"Latte",value:"Lat"},{label:"Americano",value:"Ame",recommended:!0},{label:"Filter",value:"Fil"},{label:"Flat white",value:"Fla",recommended:!0},{label:"Mocha",value:"Moc"},{label:"Macchiato",value:"Mac"}],manyOptions=[{label:"Cappuccino",value:"Cap"},{label:"Latte",value:"Lat"},{label:"Americano",value:"Ame"},{label:"Filter",value:"Fil"},{label:"Flat white",value:"Fla"},{label:"Mocha",value:"Moc"},{label:"Macchiato",value:"Mac"},{label:"Caf√© au lait",value:"Caf"},{label:"Espresso",value:"Esp"},{label:"Cortado",value:"Cor"},{label:"Ristretto",value:"Ris"},{label:"Latte macchiato",value:"Lam"}],playgroundOptions=[{label:"Cappuccino",value:"Cap",description:"Coffee frothed up with pressurised steam"},{label:"Boring",children:[{label:"Latte",value:"Lat",description:"A milkier coffee than a cappuccino"},{label:"Filter",value:"Fil",description:"Coffee filtered using paper or a mesh"}]},{label:"Fancy",children:[{label:"Flat white",value:"Fla",description:"Coffee without froth made with espresso and hot steamed milk"},{label:"Macchiato",value:"Mac",description:"Espresso coffee with a dash of frothy steamed milk"}]},{label:"Americano",value:"Ame",description:"Espresso coffee diluted with hot water"},{label:"Mocha",value:"Moc",description:"A mixture of coffee and chocolate"}],LoadingWithError=function LoadingWithError(){var selectEl=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.xO,{ref:selectEl,label:"What are your favourite types of coffee?",options,multiple:!0,loading:!0,timeout:"1000",onIcChange:function onIcChange(event){return console.log("icChange: ".concat(event.detail.value))},onIcRetryLoad:function onIcRetryLoad(){return selectEl.current.loading=!0}})},ControlledExample=function ControlledExample(){var _useState2=_slicedToArray((0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(["Cap"]),2),value=_useState2[0],setValue=_useState2[1];return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.xO,{placeholder:"Controlled",label:"Controlled",options,multiple:!0,value,onIcChange:function handleChange(event){console.log(event.detail.value),setValue(event.detail.value)}})},Uncontrolled=function Uncontrolled(){var selectEl=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();return react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.xO,{ref:selectEl,placeholder:"Uncontrolled",label:"Uncontrolled",options,multiple:!0,onIcChange:function handleChange(){console.log(selectEl.current.value)}}))};const __WEBPACK_DEFAULT_EXPORT__={title:"Select/Multi",component:_components__WEBPACK_IMPORTED_MODULE_1__.xO};var Default={render:function render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.xO,{label:"What are your favourite types of coffee?",options,multiple:!0,onIcClear:function onIcClear(){return console.log("clear all clicked")},onIcChange:function onIcChange(event){return console.log("icChange: ".concat(event.detail.value))},onIcOptionSelect:function onIcOptionSelect(event){return console.log("icOptionSelect: ".concat(event.detail.value))},onIcOptionDeselect:function onIcOptionDeselect(event){return console.log("icOptionDeselect: ".concat(event.detail.value))},onIcOpen:function onIcOpen(){return console.log("select dropdown opened")},onIcClose:function onIcClose(){return console.log("select dropdown closed")}})},name:"Default"},DefaultValue={render:function render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.xO,{label:"What are your favourite types of coffee?",options,multiple:!0,value:["Ame","Fil","Moc"],onIcChange:function onIcChange(event){return console.log("icChange: ".concat(event.detail.value))}})},name:"Default value"},WithClearButton={render:function render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.xO,{label:"What are your favourite types of coffee?",options,multiple:!0,showClearButton:!0,onIcChange:function onIcChange(event){return console.log("icChange: ".concat(event.detail.value))}})},name:"With clear button"},WithDescriptions={render:function render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.xO,{label:"What are your favourite types of coffee?",options:optionsWithDescriptions,multiple:!0,onIcChange:function onIcChange(event){return console.log("icChange: ".concat(event.detail.value))}})},name:"With descriptions"},HelperText={render:function render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.xO,{label:"What are your favourite types of coffee?",options,multiple:!0,helperText:"Select some options from the list",onIcChange:function onIcChange(event){return console.log("icChange: ".concat(event.detail.value))}})},name:"Helper text"},CustomPlaceholder={render:function render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.xO,{label:"What are your favourite types of coffee?",options,multiple:!0,placeholder:"Placeholder goes here",onIcChange:function onIcChange(event){return console.log("icChange: ".concat(event.detail.value))}})},name:"Custom placeholder"},CustomElements={render:function render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.xO,{label:"What are your favourite types of coffee?",options:optionsWithCustomElements,multiple:!0,onIcChange:function onIcChange(event){return console.log("icChange: ".concat(event.detail.value))}})},name:"Custom elements"},Sizes={render:function render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{display:"flex",flexDirection:"column",gap:"16px"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.xO,{label:"What are your favourite types of coffee?",options,multiple:!0,size:"small",onIcChange:function onIcChange(event){return console.log("icChange: ".concat(event.detail.value))}}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.xO,{label:"What are your favourite types of coffee?",options,multiple:!0,onIcChange:function onIcChange(event){return console.log("icChange: ".concat(event.detail.value))}}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.xO,{label:"What are your favourite types of coffee?",options,multiple:!0,size:"large",onIcChange:function onIcChange(event){return console.log("icChange: ".concat(event.detail.value))}}))},name:"Sizes"},Disabled={render:function render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.xO,{label:"What are your favourite types of coffee?",options,multiple:!0,disabled:!0,onIcChange:function onIcChange(event){return console.log("icChange: ".concat(event.detail.value))}})},name:"Disabled"},DisabledOptions={render:function render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.xO,{label:"What are your favourite types of coffee?",options:optionsWithDisabled,multiple:!0,onIcChange:function onIcChange(event){return console.log("icChange: ".concat(event.detail.value))}})},name:"Disabled options"},FullWidth={render:function render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.xO,{label:"What are your favourite types of coffee?",options,multiple:!0,fullWidth:!0,onIcChange:function onIcChange(event){return console.log("icChange: ".concat(event.detail.value))}})},name:"Full width"},HiddenLabel={render:function render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.xO,{label:"What are your favourite types of coffee?",options,multiple:!0,hideLabel:!0,onIcChange:function onIcChange(event){return console.log("icChange: ".concat(event.detail.value))}})},name:"Hidden label"},Required={render:function render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.xO,{label:"What are your favourite types of coffee?",options,multiple:!0,required:!0,onIcChange:function onIcChange(event){return console.log("icChange: ".concat(event.detail.value))}})},name:"Required"},ReadOnly={render:function render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.xO,{label:"What are your favourite types of coffee?",options,multiple:!0,readonly:!0,value:["Cap","Fla","Moc"],onIcChange:function onIcChange(event){return console.log("icChange: ".concat(event.detail.value))}})},name:"Read-only"},Groups={render:function render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.xO,{label:"What are your favourite types of coffee?",options:groupedOptions,multiple:!0,onIcChange:function onIcChange(event){return console.log("icChange: ".concat(event.detail.value))}})},name:"Groups"},Recommended={render:function render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.xO,{label:"What are your favourite types of coffee?",options:optionsWithRecommended,multiple:!0,onIcChange:function onIcChange(event){return console.log("icChange: ".concat(event.detail.value))}})},name:"Recommended"},Validation={render:function render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.xO,{label:"What are your favourite types of coffee?",validationStatus:"success",validationText:"Coffee available",options,multiple:!0,onIcChange:function onIcChange(event){return console.log("icChange: ".concat(event.detail.value))}}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.xO,{label:"What are your favourite types of coffee?",validationStatus:"warning",validationText:"Only a few left",options,multiple:!0,onIcChange:function onIcChange(event){return console.log("icChange: ".concat(event.detail.value))}}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.xO,{label:"What are your favourite types of coffee?",validationStatus:"error",validationText:"Coffee unavailable",options,multiple:!0,onIcChange:function onIcChange(event){return console.log("icChange: ".concat(event.detail.value))}}))},name:"Validation"},ScrollBehaviour={render:function render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.xO,{label:"What are your favourite types of coffee?",options:manyOptions,multiple:!0,onIcChange:function onIcChange(event){return console.log("icChange: ".concat(event.detail.value))}})},name:"Scroll behaviour"},LoadingWithError_={render:function render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(LoadingWithError,null)},name:"Loading with error"},Controlled={render:function render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(ControlledExample,null)},name:"Controlled"},Uncontrolled_={render:function render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Uncontrolled,null)},name:"Uncontrolled"},Playground={render:function render(args){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.xO,{multiple:!0,options:playgroundOptions,disabled:args.disabled,fullWidth:args.fullWidth,helperText:args.helperText,hideLabel:args.hideLabel,loading:args.loading,loadingLabel:args.loadingLabel,label:args.label,placeholder:args.placeholder,readonly:args.readonly,required:args.required,showClearButton:args.showClearButton,size:args.size,validationStatus:args.validationStatus,validationText:args.validationText,theme:args.theme},args.showIcon&&react__WEBPACK_IMPORTED_MODULE_0__.createElement(_react_component_lib_slottedSVG__WEBPACK_IMPORTED_MODULE_2__.k,{slot:"icon",xmlns:"http://www.w3.org/2000/svg",height:"24px",viewBox:"0 0 24 24",width:"24px",fill:"#000000"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{d:"M0 0h24v24H0z",fill:"none"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{d:"M17 3H7c-1.1 0-1.99.9-1.99 2L5 21l7-3 7 3V5c0-1.1-.9-2-2-2z"})))},name:"Playground",args:{disabled:!1,fullWidth:!1,helperText:"Select some options from the list",hideLabel:!1,loading:!1,loadingLabel:"Loading...",label:"What are your favourite types of coffee?",placeholder:"Select an option",readonly:!1,required:!1,size:"medium",validationStatus:"",validationText:"",showClearButton:!1,theme:"inherit"},argTypes:{size:{options:["medium","large","small"],control:{type:"inline-radio"}},validationStatus:{defaultValue:"",options:["","error","success","warning"],control:{type:"select"}},showIcon:{control:{type:"boolean"}},theme:{options:["inherit","light","dark"],control:{type:"inline-radio"}}}};const __namedExportsOrder=["Default","DefaultValue","WithClearButton","WithDescriptions","HelperText","CustomPlaceholder","CustomElements","Sizes","Disabled","DisabledOptions","FullWidth","HiddenLabel","Required","ReadOnly","Groups","Recommended","Validation","ScrollBehaviour","LoadingWithError_","Controlled","Uncontrolled_","Playground"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    return <IcSelect label="What are your favourite types of coffee?" options={options} multiple onIcClear={() => console.log("clear all clicked")} onIcChange={event => console.log(`icChange: ${event.detail.value}`)} onIcOptionSelect={event => console.log(`icOptionSelect: ${event.detail.value}`)} onIcOptionDeselect={event => console.log(`icOptionDeselect: ${event.detail.value}`)} onIcOpen={() => console.log("select dropdown opened")} onIcClose={() => console.log("select dropdown closed")} />;\n  },\n  name: "Default"\n}',...Default.parameters?.docs?.source}}},DefaultValue.parameters={...DefaultValue.parameters,docs:{...DefaultValue.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    return <IcSelect label="What are your favourite types of coffee?" options={options} multiple value={["Ame", "Fil", "Moc"]} onIcChange={event => console.log(`icChange: ${event.detail.value}`)} />;\n  },\n  name: "Default value"\n}',...DefaultValue.parameters?.docs?.source}}},WithClearButton.parameters={...WithClearButton.parameters,docs:{...WithClearButton.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    return <IcSelect label="What are your favourite types of coffee?" options={options} multiple showClearButton onIcChange={event => console.log(`icChange: ${event.detail.value}`)} />;\n  },\n  name: "With clear button"\n}',...WithClearButton.parameters?.docs?.source}}},WithDescriptions.parameters={...WithDescriptions.parameters,docs:{...WithDescriptions.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    return <IcSelect label="What are your favourite types of coffee?" options={optionsWithDescriptions} multiple onIcChange={event => console.log(`icChange: ${event.detail.value}`)} />;\n  },\n  name: "With descriptions"\n}',...WithDescriptions.parameters?.docs?.source}}},HelperText.parameters={...HelperText.parameters,docs:{...HelperText.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    return <IcSelect label="What are your favourite types of coffee?" options={options} multiple helperText="Select some options from the list" onIcChange={event => console.log(`icChange: ${event.detail.value}`)} />;\n  },\n  name: "Helper text"\n}',...HelperText.parameters?.docs?.source}}},CustomPlaceholder.parameters={...CustomPlaceholder.parameters,docs:{...CustomPlaceholder.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    return <IcSelect label="What are your favourite types of coffee?" options={options} multiple placeholder="Placeholder goes here" onIcChange={event => console.log(`icChange: ${event.detail.value}`)} />;\n  },\n  name: "Custom placeholder"\n}',...CustomPlaceholder.parameters?.docs?.source}}},CustomElements.parameters={...CustomElements.parameters,docs:{...CustomElements.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    return <IcSelect label="What are your favourite types of coffee?" options={optionsWithCustomElements} multiple onIcChange={event => console.log(`icChange: ${event.detail.value}`)} />;\n  },\n  name: "Custom elements"\n}',...CustomElements.parameters?.docs?.source}}},Sizes.parameters={...Sizes.parameters,docs:{...Sizes.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    return <div style={{\n      display: "flex",\n      flexDirection: "column",\n      gap: "16px"\n    }}>\n        <IcSelect label="What are your favourite types of coffee?" options={options} multiple size="small" onIcChange={event => console.log(`icChange: ${event.detail.value}`)} />\n        <IcSelect label="What are your favourite types of coffee?" options={options} multiple onIcChange={event => console.log(`icChange: ${event.detail.value}`)} />\n        <IcSelect label="What are your favourite types of coffee?" options={options} multiple size="large" onIcChange={event => console.log(`icChange: ${event.detail.value}`)} />\n      </div>;\n  },\n  name: "Sizes"\n}',...Sizes.parameters?.docs?.source}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    return <IcSelect label="What are your favourite types of coffee?" options={options} multiple disabled onIcChange={event => console.log(`icChange: ${event.detail.value}`)} />;\n  },\n  name: "Disabled"\n}',...Disabled.parameters?.docs?.source}}},DisabledOptions.parameters={...DisabledOptions.parameters,docs:{...DisabledOptions.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    return <IcSelect label="What are your favourite types of coffee?" options={optionsWithDisabled} multiple onIcChange={event => console.log(`icChange: ${event.detail.value}`)} />;\n  },\n  name: "Disabled options"\n}',...DisabledOptions.parameters?.docs?.source}}},FullWidth.parameters={...FullWidth.parameters,docs:{...FullWidth.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    return <IcSelect label="What are your favourite types of coffee?" options={options} multiple fullWidth onIcChange={event => console.log(`icChange: ${event.detail.value}`)} />;\n  },\n  name: "Full width"\n}',...FullWidth.parameters?.docs?.source}}},HiddenLabel.parameters={...HiddenLabel.parameters,docs:{...HiddenLabel.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    return <IcSelect label="What are your favourite types of coffee?" options={options} multiple hideLabel onIcChange={event => console.log(`icChange: ${event.detail.value}`)} />;\n  },\n  name: "Hidden label"\n}',...HiddenLabel.parameters?.docs?.source}}},Required.parameters={...Required.parameters,docs:{...Required.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    return <IcSelect label="What are your favourite types of coffee?" options={options} multiple required onIcChange={event => console.log(`icChange: ${event.detail.value}`)} />;\n  },\n  name: "Required"\n}',...Required.parameters?.docs?.source}}},ReadOnly.parameters={...ReadOnly.parameters,docs:{...ReadOnly.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    return <IcSelect label="What are your favourite types of coffee?" options={options} multiple readonly value={["Cap", "Fla", "Moc"]} onIcChange={event => console.log(`icChange: ${event.detail.value}`)} />;\n  },\n  name: "Read-only"\n}',...ReadOnly.parameters?.docs?.source}}},Groups.parameters={...Groups.parameters,docs:{...Groups.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    return <IcSelect label="What are your favourite types of coffee?" options={groupedOptions} multiple onIcChange={event => console.log(`icChange: ${event.detail.value}`)} />;\n  },\n  name: "Groups"\n}',...Groups.parameters?.docs?.source}}},Recommended.parameters={...Recommended.parameters,docs:{...Recommended.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    return <IcSelect label="What are your favourite types of coffee?" options={optionsWithRecommended} multiple onIcChange={event => console.log(`icChange: ${event.detail.value}`)} />;\n  },\n  name: "Recommended"\n}',...Recommended.parameters?.docs?.source}}},Validation.parameters={...Validation.parameters,docs:{...Validation.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    return <div>\n        <IcSelect label="What are your favourite types of coffee?" validationStatus="success" validationText="Coffee available" options={options} multiple onIcChange={event => console.log(`icChange: ${event.detail.value}`)} />\n        <IcSelect label="What are your favourite types of coffee?" validationStatus="warning" validationText="Only a few left" options={options} multiple onIcChange={event => console.log(`icChange: ${event.detail.value}`)} />\n        <IcSelect label="What are your favourite types of coffee?" validationStatus="error" validationText="Coffee unavailable" options={options} multiple onIcChange={event => console.log(`icChange: ${event.detail.value}`)} />\n      </div>;\n  },\n  name: "Validation"\n}',...Validation.parameters?.docs?.source}}},ScrollBehaviour.parameters={...ScrollBehaviour.parameters,docs:{...ScrollBehaviour.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    return <IcSelect label="What are your favourite types of coffee?" options={manyOptions} multiple onIcChange={event => console.log(`icChange: ${event.detail.value}`)} />;\n  },\n  name: "Scroll behaviour"\n}',...ScrollBehaviour.parameters?.docs?.source}}},LoadingWithError_.parameters={...LoadingWithError_.parameters,docs:{...LoadingWithError_.parameters?.docs,source:{originalSource:'{\n  render: () => <LoadingWithError />,\n  name: "Loading with error"\n}',...LoadingWithError_.parameters?.docs?.source}}},Controlled.parameters={...Controlled.parameters,docs:{...Controlled.parameters?.docs,source:{originalSource:'{\n  render: () => <ControlledExample />,\n  name: "Controlled"\n}',...Controlled.parameters?.docs?.source}}},Uncontrolled_.parameters={...Uncontrolled_.parameters,docs:{...Uncontrolled_.parameters?.docs,source:{originalSource:'{\n  render: () => <Uncontrolled />,\n  name: "Uncontrolled"\n}',...Uncontrolled_.parameters?.docs?.source}}},Playground.parameters={...Playground.parameters,docs:{...Playground.parameters?.docs,source:{originalSource:'{\n  render: args => <IcSelect multiple options={playgroundOptions} disabled={args.disabled} fullWidth={args.fullWidth} helperText={args.helperText} hideLabel={args.hideLabel} loading={args.loading} loadingLabel={args.loadingLabel} label={args.label} placeholder={args.placeholder} readonly={args.readonly} required={args.required} showClearButton={args.showClearButton} size={args.size} validationStatus={args.validationStatus} validationText={args.validationText} theme={args.theme}>\n      {args.showIcon && <SlottedSVG slot="icon" xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 0 24 24" width="24px" fill="#000000">\n          <path d="M0 0h24v24H0z" fill="none" />\n          <path d="M17 3H7c-1.1 0-1.99.9-1.99 2L5 21l7-3 7 3V5c0-1.1-.9-2-2-2z" />\n        </SlottedSVG>}\n    </IcSelect>,\n  name: "Playground",\n  args: defaultArgs,\n  argTypes: {\n    size: {\n      options: ["medium", "large", "small"],\n      control: {\n        type: "inline-radio"\n      }\n    },\n    validationStatus: {\n      defaultValue: "",\n      options: ["", "error", "success", "warning"],\n      control: {\n        type: "select"\n      }\n    },\n    showIcon: {\n      control: {\n        type: "boolean"\n      }\n    },\n    theme: {\n      options: ["inherit", "light", "dark"],\n      control: {\n        type: "inline-radio"\n      }\n    }\n  }\n}',...Playground.parameters?.docs?.source}}}}}]);