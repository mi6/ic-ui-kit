(self.webpackChunk_ukic_react=self.webpackChunk_ukic_react||[]).push([[2387,4805],{"./node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{R:()=>useMDXComponents,x:()=>MDXProvider});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const emptyComponents={},MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext(emptyComponents);function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((function(){return"function"==typeof components?components(contextComponents):{...contextComponents,...components}}),[contextComponents,components])}function MDXProvider(properties){let allComponents;return allComponents=properties.disableParentContext?"function"==typeof properties.components?properties.components(emptyComponents):properties.components||emptyComponents:useMDXComponents(properties.components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},properties.children)}},"./src/stories/ic-toggle-button.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>MDXContent});__webpack_require__("./node_modules/react/index.js");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),lib=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs"),readme=__webpack_require__("../web-components/src/components/ic-toggle-button/readme.md");const ic_toggle_button_group_readme_namespaceObject='# ic-toggle-button-group\n\n\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property           | Attribute           | Description                                                                                                                                                                                                    | Type                                     | Default                 |\n| ------------------ | ------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ---------------------------------------- | ----------------------- |\n| `accessibleLabel`  | `accessible-label`  | The accessible label of the toggle button group component to provide context for screen reader users.                                                                                                          | `string`                                 | `"Toggle button group"` |\n| `appearance`       | `appearance`        | The appearance of the toggle button group, e.g dark, or light.                                                                                                                                                 | `"dark" \\| "default" \\| "light"`         | `"default"`             |\n| `disabled`         | `disabled`          | If `true`, the toggle button group will be set to the disabled state.                                                                                                                                          | `boolean`                                | `false`                 |\n| `fullWidth`        | `full-width`        | If `true`, the toggle button group will fill the width of the container.                                                                                                                                       | `boolean`                                | `false`                 |\n| `iconPlacement`    | `icon-placement`    | The placement of the icons in relation to the toggle button labels.                                                                                                                                            | `"left" \\| "right" \\| "top"`             | `undefined`             |\n| `loading`          | `loading`           | If `true`, the toggle button group will be in loading state.                                                                                                                                                   | `boolean`                                | `false`                 |\n| `selectMethod`     | `select-method`     | If `auto`, controls are toggled automatically when navigated to. If `manual`, the controls must be actioned to change their toggled state. The value of this prop is ignored if `selectType` is set to`multi`. | `"auto" \\| "manual"`                     | `"manual"`              |\n| `selectType`       | `select-type`       | Sets whether single or multiple options can be toggled. If `multi`, then the `selectMethod` is always `manual`.                                                                                                | `"multi" \\| "single"`                    | `"single"`              |\n| `size`             | `size`              | The size of the toggle buttons to be displayed. This does not affect the font size of the accessible label.                                                                                                    | `"default" \\| "large" \\| "small"`        | `"default"`             |\n| `tooltipPlacement` | `tooltip-placement` | The position of the tooltip in relation to the toggle buttons.                                                                                                                                                 | `"bottom" \\| "left" \\| "right" \\| "top"` | `"bottom"`              |\n| `variant`          | `variant`           | The variant of the toggle button.                                                                                                                                                                              | `"default" \\| "icon"`                    | `"default"`             |\n\n\n## Events\n\n| Event      | Description                               | Type                               |\n| ---------- | ----------------------------------------- | ---------------------------------- |\n| `icChange` | Emitted when a toggle button is selected. | `CustomEvent<IcChangeEventDetail>` |\n\n\n----------------------------------------------\n\n\n';var ic_toggle_button_stories=__webpack_require__("./src/stories/ic-toggle-button.stories.js");function _createMdxContent(props){return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.W8,{of:ic_toggle_button_stories}),"\n",(0,jsx_runtime.jsx)(dist.oz,{children:readme+ic_toggle_button_group_readme_namespaceObject}),"\n",(0,jsx_runtime.jsx)(dist.om,{})]})}function MDXContent(props={}){const{wrapper:MDXLayout}={...(0,lib.R)(),...props.components};return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent()}},"./src/react-component-lib/slottedSVG.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{k:()=>SlottedSVG});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const defaultProps={xmlns:"http://www.w3.org/2000/svg"};const SlottedSVG=_ref=>{let{path,slot:slotName,children,...props}=_ref;return react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({},function slot(){let name=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return{ref:e=>e?e.setAttribute("slot",name):null}}(slotName),props,defaultProps),!!path&&react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{d:path}),children)};try{SlottedSVG.displayName="SlottedSVG",SlottedSVG.__docgenInfo={description:"",displayName:"SlottedSVG",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/react-component-lib/slottedSVG.tsx#SlottedSVG"]={docgenInfo:SlottedSVG.__docgenInfo,name:"SlottedSVG",path:"src/react-component-lib/slottedSVG.tsx#SlottedSVG"})}catch(__react_docgen_typescript_loader_error){}},"./node_modules/@storybook/blocks/dist sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/@storybook/blocks/dist sync recursive",module.exports=webpackEmptyContext},"./node_modules/@storybook/core/dist/components sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/@storybook/core/dist/components sync recursive",module.exports=webpackEmptyContext},"./node_modules/@storybook/core/dist/theming sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/@storybook/core/dist/theming sync recursive",module.exports=webpackEmptyContext},"./src/stories/ic-toggle-button.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AppearanceDark:()=>AppearanceDark,AppearanceLight:()=>AppearanceLight,Checked:()=>Checked,Default:()=>Default,Disabled:()=>Disabled,FullWidth:()=>FullWidth,IconOnly:()=>IconOnly,IconRight:()=>IconRight,IconTop:()=>IconTop,Loading:()=>Loading,Playground:()=>Playground,PlaygroundDefaultWithIcon:()=>PlaygroundDefaultWithIcon,PlaygroundIconVariant:()=>PlaygroundIconVariant,Sizes:()=>Sizes,TooltipPlacement:()=>TooltipPlacement,WithBadge:()=>WithBadge,WithIcon:()=>WithIcon,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_components__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components.ts"),_react_component_lib_slottedSVG__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/react-component-lib/slottedSVG.tsx");const __WEBPACK_DEFAULT_EXPORT__={title:"Toggle button",component:_components__WEBPACK_IMPORTED_MODULE_1__.d4};var Default={render:function render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.d4,{label:"Toggle",onIcToggleChecked:function onIcToggleChecked(event){return console.log(event.detail.checked)}})},name:"Default"},Checked={render:function render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.d4,{label:"Toggle",toggleChecked:!0})},name:"Checked"},Disabled={render:function render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.d4,{label:"Toggle",disabled:!0})},name:"Disabled"},WithIcon={render:function render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.d4,{label:"Toggle"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_react_component_lib_slottedSVG__WEBPACK_IMPORTED_MODULE_2__.k,{slot:"icon",xmlns:"http://www.w3.org/2000/svg",height:"24px",viewBox:"0 0 24 24",width:"24px",fill:"#000000"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{d:"M0 0h24v24H0V0z",fill:"none"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{d:"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z"})))},name:"With icon"},Sizes={render:function render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{padding:"6px"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.d4,{label:"Toggle",size:"small"})),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{padding:"6px"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.d4,{label:"Toggle",size:"default"})),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{padding:"6px"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.d4,{label:"Toggle",size:"large"})))},name:"Sizes"},WithBadge={render:function render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.d4,{label:"Toggle"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.E3,{textLabel:"1",slot:"badge",variant:"success"})),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.d4,{label:"Toggle"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.E3,{slot:"badge",variant:"success",type:"dot"})))},name:"With badge"},AppearanceDark={render:function render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.d4,{label:"Toggle",appearance:"dark"})},name:"Appearance dark"},AppearanceLight={render:function render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{backgroundColor:"#2c2f34",padding:"6px",width:"fit-content"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.d4,{label:"Toggle",appearance:"light"}))},name:"Appearance light"},FullWidth={render:function render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.d4,{label:"Toggle",fullWidth:!0})},name:"Full width"},Loading={render:function render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.d4,{label:"Toggle",loading:!0}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.d4,{label:"Toggle",loading:!0,toggleChecked:!0}))},name:"Loading"},IconOnly={render:function render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.d4,{variant:"icon",accessibleLabel:"Refresh the page"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_react_component_lib_slottedSVG__WEBPACK_IMPORTED_MODULE_2__.k,{xmlns:"http://www.w3.org/2000/svg",height:"24px",viewBox:"0 0 24 24",width:"24px",fill:"#000000"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{d:"M0 0h24v24H0V0z",fill:"none"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{d:"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z"}))),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.d4,{variant:"icon",accessibleLabel:"Refresh the page",disabled:!0},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_react_component_lib_slottedSVG__WEBPACK_IMPORTED_MODULE_2__.k,{xmlns:"http://www.w3.org/2000/svg",height:"24px",viewBox:"0 0 24 24",width:"24px",fill:"#000000"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{d:"M0 0h24v24H0V0z",fill:"none"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{d:"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z"}))))},name:"Icon only"},IconRight={render:function render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.d4,{label:"Toggle",iconPlacement:"right"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_react_component_lib_slottedSVG__WEBPACK_IMPORTED_MODULE_2__.k,{xmlns:"http://www.w3.org/2000/svg",slot:"icon",height:"24px",viewBox:"0 0 24 24",width:"24px",fill:"#000000"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{d:"M0 0h24v24H0V0z",fill:"none"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{d:"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z"})))},name:"Icon right"},IconTop={render:function render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.d4,{label:"Toggle",iconPlacement:"top"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_react_component_lib_slottedSVG__WEBPACK_IMPORTED_MODULE_2__.k,{xmlns:"http://www.w3.org/2000/svg",slot:"icon",height:"24px",viewBox:"0 0 24 24",width:"24px",fill:"#000000"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{d:"M0 0h24v24H0V0z",fill:"none"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{d:"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z"})))},name:"Icon top"},TooltipPlacement={render:function render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{padding:"100px 10px"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.d4,{variant:"icon",tooltipPlacement:"right",accessibleLabel:"Refresh the page"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_react_component_lib_slottedSVG__WEBPACK_IMPORTED_MODULE_2__.k,{xmlns:"http://www.w3.org/2000/svg",height:"24px",viewBox:"0 0 24 24",width:"24px",fill:"#000000"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{d:"M0 0h24v24H0V0z",fill:"none"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{d:"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z"}))),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.d4,{variant:"icon",tooltipPlacement:"top",accessibleLabel:"Refresh the page"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_react_component_lib_slottedSVG__WEBPACK_IMPORTED_MODULE_2__.k,{xmlns:"http://www.w3.org/2000/svg",height:"24px",viewBox:"0 0 24 24",width:"24px",fill:"#000000"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{d:"M0 0h24v24H0V0z",fill:"none"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{d:"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z"}))),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.d4,{variant:"icon",tooltipPlacement:"left",accessibleLabel:"Refresh the page"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_react_component_lib_slottedSVG__WEBPACK_IMPORTED_MODULE_2__.k,{xmlns:"http://www.w3.org/2000/svg",height:"24px",viewBox:"0 0 24 24",width:"24px",fill:"#000000"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{d:"M0 0h24v24H0V0z",fill:"none"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{d:"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z"}))))},name:"Tooltip placement"},Playground={render:function render(args){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{backgroundColor:"light"===args.appearance?"#393939":"#FFFFFF",width:args.fullWidth?"95%":"fit-content",padding:"1rem"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.d4,{label:args.label,disabled:args.disabled,variant:args.variant,size:args.size,loading:args.loading,appearance:args.appearance,fullWidth:args.fullWidth,toggleChecked:args.toggleChecked}))},args:{label:"Custom Button",disabled:!1,loading:!1,appearance:"default",size:"default",variant:"default",fullWidth:!1,toggleChecked:!1},argTypes:{size:{options:["default","large","small"],control:{type:"inline-radio"}},appearance:{options:["default","dark","light"],control:{type:"inline-radio"}},toggleChecked:{control:{type:"boolean"}},fullWidth:{control:{type:"boolean"}}},name:"Playground"},PlaygroundDefaultWithIcon={render:function render(args){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{backgroundColor:"light"===args.appearance?"#393939":"#FFFFFF",width:args.fullWidth?"95%":"fit-content",padding:"1rem"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.d4,{label:args.label,disabled:args.disabled,variant:args.variant,size:args.size,loading:args.loading,appearance:args.appearance,fullWidth:args.fullWidth,toggleChecked:args.toggleChecked,iconPlacement:args.iconPlacement},args.hasIcon&&react__WEBPACK_IMPORTED_MODULE_0__.createElement(_react_component_lib_slottedSVG__WEBPACK_IMPORTED_MODULE_2__.k,{xmlns:"http://www.w3.org/2000/svg",slot:"icon",height:"24px",viewBox:"0 0 24 24",width:"24px",fill:"#000000"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{d:"M0 0h24v24H0V0z",fill:"none"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{d:"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z"})),args.hasBadge&&react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.E3,{textLabel:"9+",slot:"badge",variant:"info"})))},args:{label:"Custom Button",disabled:!1,loading:!1,appearance:"default",size:"default",variant:"default",fullWidth:!1,iconPlacement:"left",toggleChecked:!1,accessibleLabel:"Custom Button Ally Label",hasIcon:!0,hasBadge:!1},argTypes:{size:{options:["default","large","small"],control:{type:"inline-radio"}},appearance:{options:["default","dark","light"],control:{type:"inline-radio"}},toggleChecked:{control:{type:"boolean"}},iconPlacement:{options:["left","right","top"],control:{type:"inline-radio"}},fullWidth:{control:{type:"boolean"}},hasIcon:{control:{type:"boolean"}},hasBadge:{control:{type:"boolean"}}},name:"Playground - default with icon"},PlaygroundIconVariant={render:function render(args){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{backgroundColor:"light"===args.appearance?"#393939":"#FFFFFF",width:args.fullWidth?"95%":"fit-content",padding:"1rem"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.d4,{label:args.label,disabled:args.disabled,variant:args.variant,size:args.size,loading:args.loading,appearance:args.appearance,fullWidth:args.fullWidth,toggleChecked:args.toggleChecked,accessibleLabel:args.accessibleLabel,tooltipPlacement:args.tooltipPlacement},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_react_component_lib_slottedSVG__WEBPACK_IMPORTED_MODULE_2__.k,{xmlns:"http://www.w3.org/2000/svg",slot:"icon",height:"24px",viewBox:"0 0 24 24",width:"24px",fill:"#000000"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{d:"M0 0h24v24H0V0z",fill:"none"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{d:"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z"}))))},args:{label:"Custom Button",disabled:!1,loading:!1,appearance:"default",size:"default",variant:"icon",fullWidth:!1,toggleChecked:!1,accessibleLabel:"Custom Button Ally Label",tooltipPlacement:"bottom"},argTypes:{size:{options:["default","large","small"],control:{type:"inline-radio"}},appearance:{options:["default","dark","light"],control:{type:"inline-radio"}},toggleChecked:{control:{type:"boolean"}},fullWidth:{control:{type:"boolean"}},tooltipPlacement:{options:["bottom","top","left","right"],control:{type:"radio"}}},name:"Playground - icon variant"};const __namedExportsOrder=["Default","Checked","Disabled","WithIcon","Sizes","WithBadge","AppearanceDark","AppearanceLight","FullWidth","Loading","IconOnly","IconRight","IconTop","TooltipPlacement","Playground","PlaygroundDefaultWithIcon","PlaygroundIconVariant"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  render: () => <IcToggleButton label="Toggle" onIcToggleChecked={event => console.log(event.detail.checked)} />,\n  name: "Default"\n}',...Default.parameters?.docs?.source}}},Checked.parameters={...Checked.parameters,docs:{...Checked.parameters?.docs,source:{originalSource:'{\n  render: () => <IcToggleButton label="Toggle" toggleChecked />,\n  name: "Checked"\n}',...Checked.parameters?.docs?.source}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:'{\n  render: () => <IcToggleButton label="Toggle" disabled />,\n  name: "Disabled"\n}',...Disabled.parameters?.docs?.source}}},WithIcon.parameters={...WithIcon.parameters,docs:{...WithIcon.parameters?.docs,source:{originalSource:'{\n  render: () => <IcToggleButton label="Toggle">\n      <SlottedSVG slot="icon" xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 0 24 24" width="24px" fill="#000000">\n        <path d="M0 0h24v24H0V0z" fill="none" />\n        <path d="M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z" />\n      </SlottedSVG>\n    </IcToggleButton>,\n  name: "With icon"\n}',...WithIcon.parameters?.docs?.source}}},Sizes.parameters={...Sizes.parameters,docs:{...Sizes.parameters?.docs,source:{originalSource:'{\n  render: () => <>\n      <div style={{\n      padding: "6px"\n    }}>\n      <IcToggleButton label="Toggle" size="small" />\n    </div>\n    <div style={{\n      padding: "6px"\n    }}>\n      <IcToggleButton label="Toggle" size="default" />\n    </div>\n    <div style={{\n      padding: "6px"\n    }}>\n      <IcToggleButton label="Toggle" size="large" />\n    </div>\n    </>,\n  name: "Sizes"\n}',...Sizes.parameters?.docs?.source}}},WithBadge.parameters={...WithBadge.parameters,docs:{...WithBadge.parameters?.docs,source:{originalSource:'{\n  render: () => <>\n      <IcToggleButton label="Toggle">\n      <IcBadge textLabel="1" slot="badge" variant="success" />\n    </IcToggleButton>\n    <IcToggleButton label="Toggle">\n      <IcBadge slot="badge" variant="success" type="dot" />\n    </IcToggleButton>\n    </>,\n  name: "With badge"\n}',...WithBadge.parameters?.docs?.source}}},AppearanceDark.parameters={...AppearanceDark.parameters,docs:{...AppearanceDark.parameters?.docs,source:{originalSource:'{\n  render: () => <IcToggleButton label="Toggle" appearance="dark" />,\n  name: "Appearance dark"\n}',...AppearanceDark.parameters?.docs?.source}}},AppearanceLight.parameters={...AppearanceLight.parameters,docs:{...AppearanceLight.parameters?.docs,source:{originalSource:'{\n  render: () => <div style={{\n    backgroundColor: "#2c2f34",\n    padding: "6px",\n    width: "fit-content"\n  }}>\n      <IcToggleButton label="Toggle" appearance="light" />\n    </div>,\n  name: "Appearance light"\n}',...AppearanceLight.parameters?.docs?.source}}},FullWidth.parameters={...FullWidth.parameters,docs:{...FullWidth.parameters?.docs,source:{originalSource:'{\n  render: () => <IcToggleButton label="Toggle" fullWidth />,\n  name: "Full width"\n}',...FullWidth.parameters?.docs?.source}}},Loading.parameters={...Loading.parameters,docs:{...Loading.parameters?.docs,source:{originalSource:'{\n  render: () => <>\n          <IcToggleButton label="Toggle" loading />\n          <IcToggleButton label="Toggle" loading toggleChecked />\n    </>,\n  name: "Loading"\n}',...Loading.parameters?.docs?.source}}},IconOnly.parameters={...IconOnly.parameters,docs:{...IconOnly.parameters?.docs,source:{originalSource:'{\n  render: () => <>\n      <IcToggleButton variant="icon" accessibleLabel="Refresh the page">\n      <SlottedSVG xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 0 24 24" width="24px" fill="#000000">\n        <path d="M0 0h24v24H0V0z" fill="none" />\n        <path d="M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z" />\n      </SlottedSVG>\n    </IcToggleButton>\n    <IcToggleButton variant="icon" accessibleLabel="Refresh the page" disabled>\n      <SlottedSVG xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 0 24 24" width="24px" fill="#000000">\n        <path d="M0 0h24v24H0V0z" fill="none" />\n        <path d="M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z" />\n      </SlottedSVG>\n    </IcToggleButton>\n    </>,\n  name: "Icon only"\n}',...IconOnly.parameters?.docs?.source}}},IconRight.parameters={...IconRight.parameters,docs:{...IconRight.parameters?.docs,source:{originalSource:'{\n  render: () => <IcToggleButton label="Toggle" iconPlacement="right">\n      <SlottedSVG xmlns="http://www.w3.org/2000/svg" slot="icon" height="24px" viewBox="0 0 24 24" width="24px" fill="#000000">\n        <path d="M0 0h24v24H0V0z" fill="none" />\n        <path d="M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z" />\n      </SlottedSVG>\n    </IcToggleButton>,\n  name: "Icon right"\n}',...IconRight.parameters?.docs?.source}}},IconTop.parameters={...IconTop.parameters,docs:{...IconTop.parameters?.docs,source:{originalSource:'{\n  render: () => <IcToggleButton label="Toggle" iconPlacement="top">\n      <SlottedSVG xmlns="http://www.w3.org/2000/svg" slot="icon" height="24px" viewBox="0 0 24 24" width="24px" fill="#000000">\n        <path d="M0 0h24v24H0V0z" fill="none" />\n        <path d="M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z" />\n      </SlottedSVG>\n    </IcToggleButton>,\n  name: "Icon top"\n}',...IconTop.parameters?.docs?.source}}},TooltipPlacement.parameters={...TooltipPlacement.parameters,docs:{...TooltipPlacement.parameters?.docs,source:{originalSource:'{\n  render: () => <div style={{\n    padding: "100px 10px"\n  }}>\n      <IcToggleButton variant="icon" tooltipPlacement="right" accessibleLabel="Refresh the page">\n        <SlottedSVG xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 0 24 24" width="24px" fill="#000000">\n          <path d="M0 0h24v24H0V0z" fill="none" />\n          <path d="M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z" />\n        </SlottedSVG>\n      </IcToggleButton>\n      <IcToggleButton variant="icon" tooltipPlacement="top" accessibleLabel="Refresh the page">\n        <SlottedSVG xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 0 24 24" width="24px" fill="#000000">\n          <path d="M0 0h24v24H0V0z" fill="none" />\n          <path d="M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z" />\n        </SlottedSVG>\n      </IcToggleButton>\n      <IcToggleButton variant="icon" tooltipPlacement="left" accessibleLabel="Refresh the page">\n        <SlottedSVG xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 0 24 24" width="24px" fill="#000000">\n          <path d="M0 0h24v24H0V0z" fill="none" />\n          <path d="M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z" />\n        </SlottedSVG>\n      </IcToggleButton>\n    </div>,\n  name: "Tooltip placement"\n}',...TooltipPlacement.parameters?.docs?.source}}},Playground.parameters={...Playground.parameters,docs:{...Playground.parameters?.docs,source:{originalSource:'{\n  render: args => <div style={{\n    backgroundColor: args.appearance === "light" ? "#393939" : "#FFFFFF",\n    width: args.fullWidth ? "95%" : "fit-content",\n    padding: "1rem"\n  }}>\n      <IcToggleButton label={args.label} disabled={args.disabled} variant={args.variant} size={args.size} loading={args.loading} appearance={args.appearance} fullWidth={args.fullWidth} toggleChecked={args.toggleChecked} />\n    </div>,\n  args: defaultArgs,\n  argTypes: {\n    size: {\n      options: ["default", "large", "small"],\n      control: {\n        type: "inline-radio"\n      }\n    },\n    appearance: {\n      options: ["default", "dark", "light"],\n      control: {\n        type: "inline-radio"\n      }\n    },\n    toggleChecked: {\n      control: {\n        type: "boolean"\n      }\n    },\n    fullWidth: {\n      control: {\n        type: "boolean"\n      }\n    }\n  },\n  name: "Playground"\n}',...Playground.parameters?.docs?.source}}},PlaygroundDefaultWithIcon.parameters={...PlaygroundDefaultWithIcon.parameters,docs:{...PlaygroundDefaultWithIcon.parameters?.docs,source:{originalSource:'{\n  render: args => <div style={{\n    backgroundColor: args.appearance === "light" ? "#393939" : "#FFFFFF",\n    width: args.fullWidth ? "95%" : "fit-content",\n    padding: "1rem"\n  }}>\n      <IcToggleButton label={args.label} disabled={args.disabled} variant={args.variant} size={args.size} loading={args.loading} appearance={args.appearance} fullWidth={args.fullWidth} toggleChecked={args.toggleChecked} iconPlacement={args.iconPlacement}>\n        {args.hasIcon && <SlottedSVG xmlns="http://www.w3.org/2000/svg" slot="icon" height="24px" viewBox="0 0 24 24" width="24px" fill="#000000">\n            <path d="M0 0h24v24H0V0z" fill="none" />\n            <path d="M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z" />\n          </SlottedSVG>}\n        {args.hasBadge && <IcBadge textLabel="9+" slot="badge" variant="info" />}\n      </IcToggleButton>\n    </div>,\n  args: defaultWithIconArgs,\n  argTypes: {\n    size: {\n      options: ["default", "large", "small"],\n      control: {\n        type: "inline-radio"\n      }\n    },\n    appearance: {\n      options: ["default", "dark", "light"],\n      control: {\n        type: "inline-radio"\n      }\n    },\n    toggleChecked: {\n      control: {\n        type: "boolean"\n      }\n    },\n    iconPlacement: {\n      options: ["left", "right", "top"],\n      control: {\n        type: "inline-radio"\n      }\n    },\n    fullWidth: {\n      control: {\n        type: "boolean"\n      }\n    },\n    hasIcon: {\n      control: {\n        type: "boolean"\n      }\n    },\n    hasBadge: {\n      control: {\n        type: "boolean"\n      }\n    }\n  },\n  name: "Playground - default with icon"\n}',...PlaygroundDefaultWithIcon.parameters?.docs?.source}}},PlaygroundIconVariant.parameters={...PlaygroundIconVariant.parameters,docs:{...PlaygroundIconVariant.parameters?.docs,source:{originalSource:'{\n  render: args => <div style={{\n    backgroundColor: args.appearance === "light" ? "#393939" : "#FFFFFF",\n    width: args.fullWidth ? "95%" : "fit-content",\n    padding: "1rem"\n  }}>\n      <IcToggleButton label={args.label} disabled={args.disabled} variant={args.variant} size={args.size} loading={args.loading} appearance={args.appearance} fullWidth={args.fullWidth} toggleChecked={args.toggleChecked} accessibleLabel={args.accessibleLabel} tooltipPlacement={args.tooltipPlacement}>\n        <SlottedSVG xmlns="http://www.w3.org/2000/svg" slot="icon" height="24px" viewBox="0 0 24 24" width="24px" fill="#000000">\n          <path d="M0 0h24v24H0V0z" fill="none" />\n          <path d="M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z" />\n        </SlottedSVG>\n      </IcToggleButton>\n    </div>,\n  args: defaultIconArgs,\n  argTypes: {\n    size: {\n      options: ["default", "large", "small"],\n      control: {\n        type: "inline-radio"\n      }\n    },\n    appearance: {\n      options: ["default", "dark", "light"],\n      control: {\n        type: "inline-radio"\n      }\n    },\n    toggleChecked: {\n      control: {\n        type: "boolean"\n      }\n    },\n    fullWidth: {\n      control: {\n        type: "boolean"\n      }\n    },\n    tooltipPlacement: {\n      options: ["bottom", "top", "left", "right"],\n      control: {\n        type: "radio"\n      }\n    }\n  },\n  name: "Playground - icon variant"\n}',...PlaygroundIconVariant.parameters?.docs?.source}}}},"../web-components/src/components/ic-toggle-button/readme.md":module=>{"use strict";module.exports='# ic-toggle-button\n\n\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property           | Attribute           | Description                                                                                                              | Type                                     | Default     |\n| ------------------ | ------------------- | ------------------------------------------------------------------------------------------------------------------------ | ---------------------------------------- | ----------- |\n| `accessibleLabel`  | `accessible-label`  | The accessible label that will be applied to the toggle button. This is required for the icon variant of toggle buttons. | `string`                                 | `undefined` |\n| `appearance`       | `appearance`        | The appearance of the toggle button.                                                                                     | `"dark" \\| "default" \\| "light"`         | `"default"` |\n| `disabled`         | `disabled`          | If `true`, the toggle button will be in disabled state.                                                                  | `boolean`                                | `false`     |\n| `fullWidth`        | `full-width`        | If `true`, the toggle button will fill the width of the container.                                                       | `boolean`                                | `false`     |\n| `iconPlacement`    | `icon-placement`    | The placement of the icon in relation to the toggle button label.                                                        | `"left" \\| "right" \\| "top"`             | `undefined` |\n| `label`            | `label`             | The label to display in the toggle button. This is required for the default variant of toggle buttons.                   | `string`                                 | `undefined` |\n| `loading`          | `loading`           | If `true`, the toggle button will be in loading state.                                                                   | `boolean`                                | `false`     |\n| `size`             | `size`              | The size of the toggle button to be displayed.                                                                           | `"default" \\| "large" \\| "small"`        | `"default"` |\n| `toggleChecked`    | `toggle-checked`    | If `true`, the toggle button will be in a checked state.                                                                 | `boolean`                                | `false`     |\n| `tooltipPlacement` | `tooltip-placement` | The position of the tooltip in relation to the toggle button.                                                            | `"bottom" \\| "left" \\| "right" \\| "top"` | `"bottom"`  |\n| `variant`          | `variant`           | The variant of the toggle button.                                                                                        | `"default" \\| "icon"`                    | `"default"` |\n\n\n## Events\n\n| Event             | Description                                   | Type                                 |\n| ----------------- | --------------------------------------------- | ------------------------------------ |\n| `icToggleChecked` | Emitted when the user clicks a toggle button. | `CustomEvent<{ checked: boolean; }>` |\n\n\n## Slots\n\n| Slot      | Description                                                    |\n| --------- | -------------------------------------------------------------- |\n| `"badge"` | Badge component overlaying the top right of the toggle button. |\n| `"icon"`  | Content will be displayed alongside the toggle button label.   |\n\n\n## Dependencies\n\n### Depends on\n\n- [ic-button](../ic-button)\n\n### Graph\n```mermaid\ngraph TD;\n  ic-toggle-button --\x3e ic-button\n  ic-button --\x3e ic-loading-indicator\n  ic-button --\x3e ic-tooltip\n  ic-loading-indicator --\x3e ic-typography\n  ic-tooltip --\x3e ic-typography\n  style ic-toggle-button fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n\n'}}]);