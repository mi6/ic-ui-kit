{"version":3,"file":"components-ic-stepper-ic-stepper-mdx.62f55ba1.iframe.bundle.js","mappings":";;;;;;AAgBA;;;;;AAYA;;;;;AAYA;;;;;AAYA;;;;;;;;;;;;;AAoBA;;;;;;;;;;;;;AAoBA;;;;;;;AAcA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqFA","sources":["webpack://@ukic/web-components/./src/components/ic-stepper/ic-stepper.stories.js"],"sourcesContent":["import { html } from \"lit-html\";\n\nexport default {\n  title: \"Web Components/Stepper\",\n  component: \"ic-stepper\",\n};\n\nexport const FullWidthStepper = {\n  render: () =>\n    html`<ic-stepper>\n      <ic-step step-title=\"Create\" step-type=\"completed\"></ic-step>\n      <ic-step step-title=\"Read\" step-type=\"current\"></ic-step>\n      <ic-step step-title=\"Update\" step-type=\"active\"></ic-step>\n      <ic-step step-title=\"Delete\" step-type=\"disabled\"></ic-step>\n    </ic-stepper>`,\n\n  name: \"Full-width stepper\",\n};\n\nexport const LeftAlignedStepper = {\n  render: () =>\n    html`<ic-stepper aligned=\"left\">\n      <ic-step step-title=\"Create\" step-type=\"completed\"></ic-step>\n      <ic-step step-title=\"Read\" step-type=\"current\"></ic-step>\n      <ic-step step-title=\"Update\" step-type=\"active\"></ic-step>\n      <ic-step step-title=\"Delete\" step-type=\"disabled\"></ic-step>\n    </ic-stepper>`,\n\n  name: \"Left-aligned stepper\",\n};\n\nexport const WithHiddenStepInformation = {\n  render: () =>\n    html`<ic-stepper hide-step-info>\n      <ic-step step-title=\"Create\" step-type=\"completed\"></ic-step>\n      <ic-step step-title=\"Read\" step-type=\"current\"></ic-step>\n      <ic-step step-title=\"Update\" step-type=\"active\"></ic-step>\n      <ic-step step-title=\"Delete\" step-type=\"disabled\"></ic-step>\n    </ic-stepper>`,\n\n  name: \"With hidden step information\",\n};\n\nexport const WithoutStepTitles = {\n  render: () =>\n    html`<ic-stepper>\n      <ic-step step-type=\"completed\"></ic-step>\n      <ic-step step-type=\"completed\"></ic-step>\n      <ic-step step-type=\"current\"></ic-step>\n      <ic-step></ic-step>\n    </ic-stepper>`,\n\n  name: \"Without step titles\",\n};\n\nexport const CustomStepper = {\n  render: () =>\n    html`<ic-stepper>\n      <ic-step step-title=\"First\"></ic-step>\n      <ic-step\n        step-title=\"Second With a Very Long Title\"\n        step-subtitle=\"Optional subtitle that is long and should wrap\"\n        step-type=\"current\"\n      ></ic-step>\n      <ic-step step-title=\"Third\" step-type=\"disabled\"></ic-step>\n      <ic-step\n        step-title=\"Fourth title that is long and should wrap\"\n        step-subtitle=\"Optional Subtitle\"\n        step-type=\"completed\"\n      ></ic-step>\n    </ic-stepper>`,\n\n  name: \"Custom stepper\",\n};\n\nexport const CustomConnectorWidth = {\n  render: () =>\n    html`<ic-stepper aligned=\"left\" connector-width=\"200\">\n      <ic-step step-title=\"First\"></ic-step>\n      <ic-step\n        step-title=\"Second With a Very Long Title\"\n        step-subtitle=\"Optional subtitle that is long and should wrap\"\n        step-type=\"current\"\n      ></ic-step>\n      <ic-step step-title=\"Third\" step-type=\"disabled\"></ic-step>\n      <ic-step\n        step-title=\"Fourth title that is long and should wrap\"\n        step-subtitle=\"Optional Subtitle\"\n        step-type=\"completed\"\n      ></ic-step>\n    </ic-stepper>`,\n\n  name: \"Custom connector width\",\n};\n\nexport const Light = {\n  render: () =>\n    html`<div style=\"background-color:#24262b;\">\n      <ic-stepper appearance=\"light\">\n        <ic-step step-title=\"Create\" step-type=\"completed\"></ic-step>\n        <ic-step step-title=\"Read\" step-type=\"current\"></ic-step>\n        <ic-step step-title=\"Update\" step-type=\"active\"></ic-step>\n        <ic-step step-title=\"Delete\" step-type=\"disabled\"></ic-step>\n      </ic-stepper>\n    </div>`,\n\n  name: \"Light\",\n};\n\nexport const CompactStepper = {\n  render: () =>\n    html`<ic-stepper variant=\"compact\" id=\"standard-compact-stepper\">\n        <ic-step step-title=\"Create\"></ic-step>\n        <ic-step step-title=\"Read\" step-type=\"current\"></ic-step>\n        <ic-step step-title=\"Update\" step-status=\"optional\"></ic-step>\n        <ic-step step-title=\"Delete\" step-status=\"required\"></ic-step>\n      </ic-stepper>\n      <ic-button\n        class=\"back-btn-compact-stepper\"\n        style=\"margin-right: var(--ic-space-lg)\"\n        onclick=\"toPreviousStep()\"\n        >Back</ic-button\n      >\n      <ic-button class=\"next-btn-compact-stepper\" onclick=\"toNextStep()\"\n        >Next</ic-button\n      >\n      <script>\n        const compactStepTypes = [\n          \"active\",\n          \"completed\",\n          \"disabled\",\n          \"completed\",\n        ];\n        const backBtn = document.querySelector(\".back-btn-compact-stepper\");\n        const nextBtn = document.querySelector(\".next-btn-compact-stepper\");\n        const steps = document.querySelectorAll(\n          \"#standard-compact-stepper > ic-step\"\n        );\n        function toPreviousStep() {\n          for (let i = steps.length - 1; i > 0; i--) {\n            if (steps[i].stepType === \"current\") {\n              steps[i].stepType = compactStepTypes[i];\n              steps[i - 1].stepType = \"current\";\n              i--;\n            }\n          }\n          if (steps[steps.length - 2].stepType === \"current\") {\n            nextBtn.setAttribute(\"disabled\", \"false\");\n          }\n          if (steps[0].stepType === \"current\") {\n            backBtn.setAttribute(\"disabled\", \"true\");\n          }\n        }\n        function toNextStep() {\n          for (let i = 0; i < steps.length - 1; i++) {\n            if (steps[i].stepType === \"current\") {\n              steps[i].stepType = compactStepTypes[i];\n              steps[i + 1].stepType = \"current\";\n              i++;\n            }\n          }\n          if (steps[1].stepType === \"current\") {\n            backBtn.setAttribute(\"disabled\", \"false\");\n          }\n          if (steps[steps.length - 1].stepType === \"current\") {\n            nextBtn.setAttribute(\"disabled\", \"true\");\n          }\n        }\n      </script>`,\n\n  name: \"Compact stepper\",\n};\n\nexport const CompactStepperLight = {\n  render: () =>\n    html`<div style=\"background-color:#24262b;\">\n        <ic-stepper\n          variant=\"compact\"\n          id=\"standard-compact-stepper\"\n          appearance=\"light\"\n        >\n          <ic-step step-title=\"Create\"></ic-step>\n          <ic-step step-title=\"Read\" step-type=\"current\"></ic-step>\n          <ic-step step-title=\"Update\" step-status=\"optional\"></ic-step>\n          <ic-step step-title=\"Delete\" step-status=\"required\"></ic-step>\n        </ic-stepper>\n      </div>\n      <ic-button\n        class=\"back-btn-compact-stepper\"\n        style=\"margin-right: var(--ic-space-lg)\"\n        onclick=\"toPreviousStep()\"\n        >Back</ic-button\n      >\n      <ic-button class=\"next-btn-compact-stepper\" onclick=\"toNextStep()\"\n        >Next</ic-button\n      >\n      <script>\n        const compactStepTypes = [\n          \"active\",\n          \"completed\",\n          \"disabled\",\n          \"completed\",\n        ];\n        const backBtn = document.querySelector(\".back-btn-compact-stepper\");\n        const nextBtn = document.querySelector(\".next-btn-compact-stepper\");\n        const steps = document.querySelectorAll(\n          \"#standard-compact-stepper > ic-step\"\n        );\n        function toPreviousStep() {\n          for (let i = steps.length - 1; i > 0; i--) {\n            if (steps[i].stepType === \"current\") {\n              steps[i].stepType = compactStepTypes[i];\n              steps[i - 1].stepType = \"current\";\n              i--;\n            }\n          }\n          if (steps[steps.length - 2].stepType === \"current\") {\n            nextBtn.setAttribute(\"disabled\", \"false\");\n          }\n          if (steps[0].stepType === \"current\") {\n            backBtn.setAttribute(\"disabled\", \"true\");\n          }\n        }\n        function toNextStep() {\n          for (let i = 0; i < steps.length - 1; i++) {\n            if (steps[i].stepType === \"current\") {\n              steps[i].stepType = compactStepTypes[i];\n              steps[i + 1].stepType = \"current\";\n              i++;\n            }\n          }\n          if (steps[1].stepType === \"current\") {\n            backBtn.setAttribute(\"disabled\", \"false\");\n          }\n          if (steps[steps.length - 1].stepType === \"current\") {\n            nextBtn.setAttribute(\"disabled\", \"true\");\n          }\n        }\n      </script>`,\n\n  name: \"Compact stepper light\",\n};\n\nexport const CustomCompactStepper = {\n  render: () =>\n    html`<ic-stepper variant=\"compact\" id=\"custom-compact-stepper\">\n        <ic-step step-title=\"First\"></ic-step>\n        <ic-step\n          step-title=\"Second With a Very Long Title\"\n          step-subtitle=\"Optional subtitle that is long and should wrap\"\n          step-type=\"current\"\n        ></ic-step>\n        <ic-step step-title=\"Third\" step-type=\"disabled\"></ic-step>\n        <ic-step\n          step-title=\"Fourth title that is long and should wrap\"\n          step-subtitle=\"Optional Subtitle\"\n          step-type=\"completed\"\n        ></ic-step>\n        <ic-step\n          step-title=\"Fifth and final step\"\n          step-subtitle=\"Optional Subtitle\"\n          step-status=\"optional\"\n          step-type=\"disabled\"\n        ></ic-step>\n      </ic-stepper>\n      <ic-button\n        class=\"back-btn-custom-compact-stepper\"\n        style=\"margin-right: var(--ic-space-lg)\"\n        onclick=\"toPreviousCustomStep()\"\n        >Back</ic-button\n      >\n      <ic-button\n        class=\"next-btn-custom-compact-stepper\"\n        onclick=\"toNextCustomStep()\"\n        >Next</ic-button\n      >\n      <script>\n        const customCompactStepTypes = [\n          \"active\",\n          \"completed\",\n          \"disabled\",\n          \"completed\",\n          \"disabled\",\n        ];\n        const backBtnCustomCompactStepper = document.querySelector(\n          \".back-btn-custom-compact-stepper\"\n        );\n        const nextBtnCustomCompactStepper = document.querySelector(\n          \".next-btn-custom-compact-stepper\"\n        );\n        const customSteps = document.querySelectorAll(\n          \"#custom-compact-stepper > ic-step\"\n        );\n        function toPreviousCustomStep() {\n          for (let i = customSteps.length - 1; i > 0; i--) {\n            if (customSteps[i].stepType === \"current\") {\n              customSteps[i].stepType = customCompactStepTypes[i];\n              customSteps[i - 1].stepType = \"current\";\n              i--;\n            }\n          }\n          if (customSteps[customSteps.length - 2].stepType === \"current\") {\n            nextBtnCustomCompactStepper.setAttribute(\"disabled\", \"false\");\n          }\n          if (customSteps[0].stepType === \"current\") {\n            backBtnCustomCompactStepper.setAttribute(\"disabled\", \"true\");\n          }\n        }\n        function toNextCustomStep() {\n          for (let i = 0; i < customSteps.length - 1; i++) {\n            if (customSteps[i].stepType === \"current\") {\n              customSteps[i].stepType = customCompactStepTypes[i];\n              customSteps[i + 1].stepType = \"current\";\n              i++;\n            }\n          }\n          if (customSteps[1].stepType === \"current\") {\n            backBtnCustomCompactStepper.setAttribute(\"disabled\", \"false\");\n          }\n          if (customSteps[customSteps.length - 1].stepType === \"current\") {\n            nextBtnCustomCompactStepper.setAttribute(\"disabled\", \"true\");\n          }\n        }\n      </script>`,\n\n  name: \"Custom compact stepper\",\n};\n;export const __namedExportsOrder = [\"FullWidthStepper\",\"LeftAlignedStepper\",\"WithHiddenStepInformation\",\"WithoutStepTitles\",\"CustomStepper\",\"CustomConnectorWidth\",\"Light\",\"CompactStepper\",\"CompactStepperLight\",\"CustomCompactStepper\"];"],"names":[],"sourceRoot":""}