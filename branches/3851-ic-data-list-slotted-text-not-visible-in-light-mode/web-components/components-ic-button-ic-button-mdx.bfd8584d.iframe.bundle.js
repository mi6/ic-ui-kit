(self.webpackChunk_ukic_web_components=self.webpackChunk_ukic_web_components||[]).push([[9801],{"./src/components/ic-button/ic-button.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>MDXContent});__webpack_require__("./node_modules/react/index.js");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),lib=__webpack_require__("./node_modules/@storybook/addon-docs/node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs");const readme_namespaceObject='# ic-button\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property                | Attribute                | Description                                                                                                                                                           | Type                                                                                                                                                                                                  | Default                                            |\n| ----------------------- | ------------------------ | --------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | -------------------------------------------------- |\n| `accept`                | `accept`                 | If `fileUpload` is set to `true`, this is the accepted list of file types.                                                                                            | `string`                                                                                                                                                                                              | `"*"`                                              |\n| `disableTooltip`        | `disable-tooltip`        | If `true`, the ic-tooltip which is shown for icon variant will be disabled. Title or aria-label must be set if this prop is not applied.                              | `boolean`                                                                                                                                                                                             | `false`                                            |\n| `disabled`              | `disabled`               | If `true`, the button will be in disabled state.                                                                                                                      | `boolean`                                                                                                                                                                                             | `false`                                            |\n| `download`              | `download`               | If `true`, the user can save the linked URL instead of navigating to it.                                                                                              | `boolean \\| string`                                                                                                                                                                                   | `false`                                            |\n| `dropdown`              | `dropdown`               | If `true`, the button will show a dropdown icon.                                                                                                                      | `boolean`                                                                                                                                                                                             | `false`                                            |\n| `dropdownExpanded`      | `dropdown-expanded`      | If `true`, the aria-expanded value will be set to true. This is only applied if the dropdown prop is also true.                                                       | `boolean`                                                                                                                                                                                             | `false`                                            |\n| `fileInputName`         | `file-input-name`        | The name of the control for the file input, which is submitted with the form data.                                                                                    | `string`                                                                                                                                                                                              | `` `ic-button-file-upload-input-${buttonIds++}` `` |\n| `fileUpload`            | `file-upload`            | If `true`, when the button is clicked the native file explorer will be launched.                                                                                      | `boolean`                                                                                                                                                                                             | `false`                                            |\n| `form`                  | `form`                   | The <form> element to associate the button with.                                                                                                                      | `string \\| undefined`                                                                                                                                                                                 | `undefined`                                        |\n| `formaction`            | `formaction`             | The URL that processes the information submitted by the button. It overrides the action attribute of the button\'s form owner. Does nothing if there is no form owner. | `string \\| undefined`                                                                                                                                                                                 | `undefined`                                        |\n| `formenctype`           | `formenctype`            | The way the submitted form data is encoded.                                                                                                                           | `string \\| undefined`                                                                                                                                                                                 | `undefined`                                        |\n| `formmethod`            | `formmethod`             | The HTTP method used to submit the form.                                                                                                                              | `string \\| undefined`                                                                                                                                                                                 | `undefined`                                        |\n| `formnovalidate`        | `formnovalidate`         | If `true`, the form will not be validated when submitted.                                                                                                             | `boolean \\| undefined`                                                                                                                                                                                | `undefined`                                        |\n| `formtarget`            | `formtarget`             | The place to display the response from submitting the form. It overrides the target attribute of the button\'s form owner.                                             | `string \\| undefined`                                                                                                                                                                                 | `undefined`                                        |\n| `fullWidth`             | `full-width`             | If `true`, the button will fill the width of the container.                                                                                                           | `boolean`                                                                                                                                                                                             | `false`                                            |\n| `href`                  | `href`                   | The URL that the link points to. This will render the button as an "a" tag.                                                                                           | `string \\| undefined`                                                                                                                                                                                 | `undefined`                                        |\n| `hreflang`              | `hreflang`               | The human language of the linked URL.                                                                                                                                 | `string \\| undefined`                                                                                                                                                                                 | `undefined`                                        |\n| `loading`               | `loading`                | If `true`, the button will be in loading state.                                                                                                                       | `boolean`                                                                                                                                                                                             | `false`                                            |\n| `monochrome`            | `monochrome`             | If `true`, the button will display as monochromatic in either `light` or `dark` theme.                                                                                | `boolean`                                                                                                                                                                                             | `false`                                            |\n| `multiple`              | `multiple`               | If `fileUpload` is set to `true`, this boolean determines whether multiple files are accepted.                                                                        | `boolean`                                                                                                                                                                                             | `false`                                            |\n| `referrerpolicy`        | `referrerpolicy`         | How much of the referrer to send when following the link.                                                                                                             | `"" \\| "no-referrer" \\| "no-referrer-when-downgrade" \\| "origin" \\| "origin-when-cross-origin" \\| "same-origin" \\| "strict-origin" \\| "strict-origin-when-cross-origin" \\| "unsafe-url" \\| undefined` | `undefined`                                        |\n| `rel`                   | `rel`                    | The relationship of the linked URL as space-separated link types.                                                                                                     | `string \\| undefined`                                                                                                                                                                                 | `undefined`                                        |\n| `selectedFiles`         | --                       | The list of the files that have been selected by a user.                                                                                                              | `FileList \\| undefined`                                                                                                                                                                               | `undefined`                                        |\n| `size`                  | `size`                   | The size of the button to be displayed.                                                                                                                               | `"large" \\| "medium" \\| "small"`                                                                                                                                                                      | `"medium"`                                         |\n| `target`                | `target`                 | The place to display the linked URL, as the name for a browsing context (a tab, window, or iframe).                                                                   | `string \\| undefined`                                                                                                                                                                                 | `undefined`                                        |\n| `theme`                 | `theme`                  | Sets the theme color to the dark or light theme color. "inherit" will set the color based on the system settings or ic-theme component.                               | `"dark" \\| "inherit" \\| "light"`                                                                                                                                                                      | `"inherit"`                                        |\n| `tooltipPlacement`      | `tooltip-placement`      | The position of the tooltip in relation to the button.                                                                                                                | `"bottom" \\| "left" \\| "right" \\| "top"`                                                                                                                                                              | `"bottom"`                                         |\n| `transparentBackground` | `transparent-background` | If `true`, the secondary & tertiary variants of button will have a transparent background when not hovered, pressed or loading.                                       | `boolean`                                                                                                                                                                                             | `true`                                             |\n| `type`                  | `type`                   | The type of the button.                                                                                                                                               | `"button" \\| "reset" \\| "submit"`                                                                                                                                                                     | `"button"`                                         |\n| `variant`               | `variant`                | The variant of the button to be displayed.                                                                                                                            | `"destructive" \\| "icon" \\| "icon-destructive" \\| "icon-primary" \\| "icon-secondary" \\| "icon-tertiary" \\| "primary" \\| "secondary" \\| "tertiary"`                                                    | `"primary"`                                        |\n\n\n## Events\n\n| Event             | Description                                                                                            | Type                    |\n| ----------------- | ------------------------------------------------------------------------------------------------------ | ----------------------- |\n| `icBlur`          | Emitted when button has blur                                                                           | `CustomEvent<void>`     |\n| `icFileSelection` | If `fileUpload` is set to `true`, this will be emitted when a file is selected in the native explorer. | `CustomEvent<FileList>` |\n| `icFocus`         | Emitted when button has focus                                                                          | `CustomEvent<void>`     |\n\n\n## Methods\n\n### `setFocus() => Promise<void>`\n\nSets focus on the native `button`.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n\n## Slots\n\n| Slot            | Description                                                                                                   |\n| --------------- | ------------------------------------------------------------------------------------------------------------- |\n| `"badge"`       | Badge component overlaying the top right of the button.                                                       |\n| `"left-icon"`   | Content will be placed to the left of the button label.                                                       |\n| `"right-icon"`  | Content will be placed to the right of the button label.                                                      |\n| `"router-item"` | Handle routing by nesting your routes in this slot. Setting loading to true will have no impact on this slot. |\n| `"top-icon"`    | Content will be placed above the button label.                                                                |\n\n\n## CSS Custom Properties\n\n| Name          | Description                  |\n| ------------- | ---------------------------- |\n| `--height`    | The height of the button.    |\n| `--min-width` | Minimum width of the button. |\n\n\n## Dependencies\n\n### Used by\n\n - [ic-accordion-group](../ic-accordion-group)\n - [ic-alert](../ic-alert)\n - [ic-back-to-top](../ic-back-to-top)\n - [ic-dialog](../ic-dialog)\n - [ic-horizontal-scroll](../ic-horizontal-scroll)\n - [ic-menu](../ic-menu)\n - [ic-menu-item](../ic-menu-item)\n - [ic-navigation-button](../ic-navigation-button)\n - [ic-navigation-menu](../ic-navigation-menu)\n - [ic-pagination](../ic-pagination)\n - [ic-search-bar](../ic-search-bar)\n - [ic-select](../ic-select)\n - [ic-side-navigation](../ic-side-navigation)\n - [ic-toast](../ic-toast)\n - [ic-toggle-button](../ic-toggle-button)\n - [ic-top-navigation](../ic-top-navigation)\n\n### Depends on\n\n- [ic-typography](../ic-typography)\n- [ic-loading-indicator](../ic-loading-indicator)\n- [ic-tooltip](../ic-tooltip)\n\n### Graph\n```mermaid\ngraph TD;\n  ic-button --\x3e ic-typography\n  ic-button --\x3e ic-loading-indicator\n  ic-button --\x3e ic-tooltip\n  ic-loading-indicator --\x3e ic-typography\n  ic-tooltip --\x3e ic-typography\n  ic-accordion-group --\x3e ic-button\n  ic-alert --\x3e ic-button\n  ic-back-to-top --\x3e ic-button\n  ic-dialog --\x3e ic-button\n  ic-horizontal-scroll --\x3e ic-button\n  ic-menu --\x3e ic-button\n  ic-menu-item --\x3e ic-button\n  ic-navigation-button --\x3e ic-button\n  ic-navigation-menu --\x3e ic-button\n  ic-pagination --\x3e ic-button\n  ic-search-bar --\x3e ic-button\n  ic-select --\x3e ic-button\n  ic-side-navigation --\x3e ic-button\n  ic-toast --\x3e ic-button\n  ic-toggle-button --\x3e ic-button\n  ic-top-navigation --\x3e ic-button\n  style ic-button fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n\n';var ic_button_stories=__webpack_require__("./src/components/ic-button/ic-button.stories.js");function _createMdxContent(props){return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.W8,{of:ic_button_stories}),"\n",(0,jsx_runtime.jsx)(dist.oz,{children:readme_namespaceObject}),"\n",(0,jsx_runtime.jsx)(dist.om,{})]})}function MDXContent(props={}){const{wrapper:MDXLayout}={...(0,lib.R)(),...props.components};return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent()}},"./node_modules/@storybook/addon-docs/node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{R:()=>useMDXComponents,x:()=>MDXProvider});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const emptyComponents={},MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext(emptyComponents);function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((function(){return"function"==typeof components?components(contextComponents):{...contextComponents,...components}}),[contextComponents,components])}function MDXProvider(properties){let allComponents;return allComponents=properties.disableParentContext?"function"==typeof properties.components?properties.components(emptyComponents):properties.components||emptyComponents:useMDXComponents(properties.components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},properties.children)}},"./node_modules/@storybook/blocks/dist sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/@storybook/blocks/dist sync recursive",module.exports=webpackEmptyContext},"./node_modules/@storybook/core/dist/components sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/@storybook/core/dist/components sync recursive",module.exports=webpackEmptyContext},"./node_modules/@storybook/core/dist/theming sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/@storybook/core/dist/theming sync recursive",module.exports=webpackEmptyContext}}]);