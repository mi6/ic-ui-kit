(self.webpackChunk_ukic_react=self.webpackChunk_ukic_react||[]).push([[7297,595],{"./node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{R:()=>useMDXComponents,x:()=>MDXProvider});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const emptyComponents={},MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext(emptyComponents);function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((function(){return"function"==typeof components?components(contextComponents):{...contextComponents,...components}}),[contextComponents,components])}function MDXProvider(properties){let allComponents;return allComponents=properties.disableParentContext?"function"==typeof properties.components?properties.components(emptyComponents):properties.components||emptyComponents:useMDXComponents(properties.components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},properties.children)}},"./src/stories/ic-layout-grid.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>MDXContent});__webpack_require__("./node_modules/react/index.js");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),lib=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs");const readme_namespaceObject='# ic-layout-grid\n\n\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property          | Attribute           | Description                                                                                                           | Type                                                                                                                                                           | Default     |\n| ----------------- | ------------------- | --------------------------------------------------------------------------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------- | ----------- |\n| `aligned`         | `aligned`           | The alignment of the grid.                                                                                            | `"center" \\| "full-width" \\| "left" \\| undefined`                                                                                                              | `"left"`    |\n| `columns`         | `columns`           | The number of columns in the grid. This can be a number or an object specifying different values for each breakpoint. | `number \\| undefined \\| { xs?: number \\| undefined; sm?: number \\| undefined; md?: number \\| undefined; lg?: number \\| undefined; xl?: number \\| undefined; }` | `undefined` |\n| `defaultColSpan`  | `default-col-span`  | The default column span for grid items.                                                                               | `number \\| undefined \\| { xs?: number \\| undefined; sm?: number \\| undefined; md?: number \\| undefined; lg?: number \\| undefined; xl?: number \\| undefined; }` | `1`         |\n| `defaultColWidth` | `default-col-width` | The default column width for grid items. This is used when the grid type is set to "fixed".                           | `string \\| undefined`                                                                                                                                          | `"64px"`    |\n| `defaultRowSpan`  | `default-row-span`  | The default row span for grid items.                                                                                  | `number \\| undefined`                                                                                                                                          | `1`         |\n| `fullHeight`      | `full-height`       | If `true`, the standard vertical padding from the grid will be removed.                                               | `boolean \\| undefined`                                                                                                                                         | `false`     |\n| `gridSpacing`     | `grid-spacing`      | The space between grid items, in multiples of the base spacing unit (`var(--ic-space-xs)`).                           | `number \\| undefined`                                                                                                                                          | `2`         |\n| `rows`            | `rows`              | The number of rows in the grid.                                                                                       | `number \\| undefined`                                                                                                                                          | `1`         |\n| `type`            | `type`              | The layout type of the grid.                                                                                          | `"fixed" \\| "fluid"`                                                                                                                                           | `"fixed"`   |\n\n\n----------------------------------------------\n\n\n',ic_layout_grid_item_readme_namespaceObject="# ic-layout-grid-item\n\n\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property           | Attribute             | Description                                                 | Type                   | Default |\n| ------------------ | --------------------- | ----------------------------------------------------------- | ---------------------- | ------- |\n| `colSpan`          | `col-span`            | The number of columns the grid item should span.            | `number \\| undefined`  | `1`     |\n| `colStart`         | `col-start`           | The column the grid item should start at.                   | `number \\| undefined`  | `1`     |\n| `hideInMobileMode` | `hide-in-mobile-mode` | If `true`, the grid item will be hidden on smaller screens. | `boolean \\| undefined` | `false` |\n| `rowSpan`          | `row-span`            | The number of rows the grid item should span.               | `number \\| undefined`  | `1`     |\n| `rowStart`         | `row-start`           | The row the grid item should start at.                      | `number \\| undefined`  | `1`     |\n\n\n----------------------------------------------\n\n\n";var ic_layout_grid_stories=__webpack_require__("./src/stories/ic-layout-grid.stories.js");function _createMdxContent(props){return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.W8,{of:ic_layout_grid_stories}),"\n",(0,jsx_runtime.jsx)(dist.oz,{children:readme_namespaceObject+ic_layout_grid_item_readme_namespaceObject}),"\n",(0,jsx_runtime.jsx)(dist.om,{})]})}function MDXContent(props={}){const{wrapper:MDXLayout}={...(0,lib.R)(),...props.components};return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent()}},"./node_modules/@storybook/blocks/dist sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/@storybook/blocks/dist sync recursive",module.exports=webpackEmptyContext},"./node_modules/@storybook/core/dist/components sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/@storybook/core/dist/components sync recursive",module.exports=webpackEmptyContext},"./node_modules/@storybook/core/dist/theming sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/@storybook/core/dist/theming sync recursive",module.exports=webpackEmptyContext},"./src/stories/ic-layout-grid.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AlignedCenter:()=>AlignedCenter,ColumnObject:()=>ColumnObject,Columns:()=>Columns,Default:()=>Default,DefaultColSpan:()=>DefaultColSpan,DefaultColSpanObject:()=>DefaultColSpanObject,DefaultColWidth:()=>DefaultColWidth,DefaultRowSpan:()=>DefaultRowSpan,Fluid:()=>Fluid,FullHeight:()=>FullHeight,FullWidth:()=>FullWidth,GridItem:()=>GridItem,Playground:()=>Playground,Rows:()=>Rows,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_components__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components.ts");const __WEBPACK_DEFAULT_EXPORT__={title:"Layout Grid",component:_components__WEBPACK_IMPORTED_MODULE_1__.XC};var Default={render:function render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.XC,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"50px",height:"50px",backgroundColor:"lightblue"}},"Grid item 1"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"50px",height:"50px",backgroundColor:"lightblue"}},"Grid item 2"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"50px",height:"50px",backgroundColor:"lightblue"}},"Grid item 3"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"50px",height:"50px",backgroundColor:"lightblue"}},"Grid item 4"))},name:"Default",parameters:{layout:"fullscreen"}},Fluid={render:function render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.XC,{type:"fluid"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"50px",height:"50px",backgroundColor:"lightblue"}},"Grid item 1"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"50px",height:"50px",backgroundColor:"lightblue"}},"Grid item 2"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"50px",height:"50px",backgroundColor:"lightblue"}},"Grid item 3"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"50px",height:"50px",backgroundColor:"lightblue"}},"Grid item 4"))},name:"Fluid",parameters:{layout:"fullscreen"}},Columns={render:function render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.XC,{columns:4},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"50px",height:"50px",backgroundColor:"lightblue"}},"Grid item 1"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"50px",height:"50px",backgroundColor:"lightblue"}},"Grid item 2"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"50px",height:"50px",backgroundColor:"lightblue"}},"Grid item 3"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"50px",height:"50px",backgroundColor:"lightblue"}},"Grid item 4"))},name:"Columns",parameters:{layout:"fullscreen"}},Rows={render:function render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.XC,{columns:3,rows:2},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"50px",height:"50px",backgroundColor:"lightblue"}},"Grid item 1"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"50px",height:"50px",backgroundColor:"lightblue"}},"Grid item 2"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"50px",height:"50px",backgroundColor:"lightblue"}},"Grid item 3"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"50px",height:"50px",backgroundColor:"lightblue"}},"Grid item 4"))},name:"Rows",parameters:{layout:"fullscreen"}},AlignedCenter={render:function render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.XC,{columns:4,aligned:"center"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"50px",height:"50px",backgroundColor:"lightblue"}},"Grid item 1"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"50px",height:"50px",backgroundColor:"lightblue"}},"Grid item 2"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"50px",height:"50px",backgroundColor:"lightblue"}},"Grid item 3"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"50px",height:"50px",backgroundColor:"lightblue"}},"Grid item 4"))},name:"Aligned center",parameters:{layout:"fullscreen"}},FullWidth={render:function render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.XC,{columns:4,aligned:"full-width"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"50px",height:"50px",backgroundColor:"lightblue"}},"Grid item 1"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"50px",height:"50px",backgroundColor:"lightblue"}},"Grid item 2"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"50px",height:"50px",backgroundColor:"lightblue"}},"Grid item 3"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"50px",height:"50px",backgroundColor:"lightblue"}},"Grid item 4"))},name:"Aligned full width",parameters:{layout:"fullscreen"}},FullHeight={render:function render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.XC,{fullHeight:"true",columns:4},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"50px",height:"50px",backgroundColor:"lightblue"}},"Grid item 1"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"50px",height:"50px",backgroundColor:"lightblue"}},"Grid item 2"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"50px",height:"50px",backgroundColor:"lightblue"}},"Grid item 3"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"50px",height:"50px",backgroundColor:"lightblue"}},"Grid item 4"))},name:"Full height",parameters:{layout:"fullscreen"}},ColumnObject={render:function render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.XC,{columns:{xs:1,sm:2,md:4,lg:8,xl:12}},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"50px",height:"50px",backgroundColor:"lightblue"}},"Grid item 1"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"50px",height:"50px",backgroundColor:"lightblue"}},"Grid item 2"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"50px",height:"50px",backgroundColor:"lightblue"}},"Grid item 3"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"50px",height:"50px",backgroundColor:"lightblue"}},"Grid item 4"))},name:"Column object",parameters:{layout:"fullscreen"}},DefaultColWidth={render:function render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.XC,{columns:4,defaultColWidth:"150px"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"50px",height:"50px",backgroundColor:"lightblue"}},"Grid item 1"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"50px",height:"50px",backgroundColor:"lightblue"}},"Grid item 2"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"50px",height:"50px",backgroundColor:"lightblue"}},"Grid item 3"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"50px",height:"50px",backgroundColor:"lightblue"}},"Grid item 4"))},name:"Default col width",parameters:{layout:"fullscreen"}},DefaultColSpan={render:function render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.XC,{defaultColSpan:2},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"100px",height:"50px",backgroundColor:"lightblue"}},"Grid item 1"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"50px",height:"50px",backgroundColor:"lightblue"}},"Grid item 2"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"80px",height:"50px",backgroundColor:"lightblue"}},"Grid item 3"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"80px",height:"50px",backgroundColor:"lightblue"}},"Grid item 4"))},name:"Default col span",parameters:{layout:"fullscreen"}},DefaultColSpanObject={render:function render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.XC,{defaultColSpan:{xs:1,sm:2,md:2,lg:4,xl:4}},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"100px",height:"50px",backgroundColor:"lightblue"}},"Grid item 1"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"50px",height:"50px",backgroundColor:"lightblue"}},"Grid item 2"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"80px",height:"50px",backgroundColor:"lightblue"}},"Grid item 3"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"80px",height:"50px",backgroundColor:"lightblue"}},"Grid item 4"))},name:"Default col span object",parameters:{layout:"fullscreen"}},DefaultRowSpan={render:function render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.XC,{defaultRowSpan:2,rows:"2"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"50px",height:"100px",backgroundColor:"lightblue"}},"Grid item 1"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"50px",height:"50px",backgroundColor:"lightblue"}},"Grid item 2"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"50px",height:"50px",backgroundColor:"lightblue"}},"Grid item 3"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"50px",height:"50px",backgroundColor:"lightblue"}},"Grid item 4"))},name:"Default row span",parameters:{layout:"fullscreen"}},GridItem={render:function render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.XC,{style:{border:"1px solid black"},columns:4},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.SW,{colStart:2,colSpan:2,rowSpan:2},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"50px",height:"100px",backgroundColor:"lightblue"}},"Grid item 1")),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.SW,{hideInMobileMode:!0},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"50px",height:"50px",backgroundColor:"lightblue"}},"Grid item 2")),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"50px",height:"50px",backgroundColor:"lightblue"}},"Grid item 3"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"50px",height:"50px",backgroundColor:"lightblue"}},"Grid item 4"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"50px",height:"50px",backgroundColor:"lightblue"}},"Grid item 5"))},name:"Grid item",parameters:{layout:"fullscreen"}},Playground={render:function render(args){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.XC,{style:{border:"1px solid black"},columns:args.columns,aligned:args.aligned,fullHeight:args.fullHeight,defaultColSpan:args.defaultColSpan,defaultColWidth:args.defaultColWidth,defaultRowSpan:args.defaultRowSpan,gridSpacing:args.gridSpacing,rows:args.rows,type:args.type},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.SW,{colSpan:args.gridItemColSpan,colStart:args.gridItemColStart,rowSpan:args.gridItemRowSpan,rowStart:args.gridItemRowStart,hideInMobileMode:args.gridItemHideInMobileMode},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"50px",height:"50px",backgroundColor:"lightblue"}},"Grid item 1")),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"50px",height:"50px",backgroundColor:"lightblue"}},"Grid item 2"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"50px",height:"50px",backgroundColor:"lightblue"}},"Grid item 3"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"50px",height:"50px",backgroundColor:"lightblue"}},"Grid item 4"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"50px",height:"50px",backgroundColor:"lightblue"}},"Grid item 5"))},name:"Playground",args:{aligned:null,fullHeight:!1,columns:4,defaultColSpan:1,defaultColWidth:"64px",defaultRowSpan:1,gridSpacing:2,rows:1,type:"fixed",gridItemColSpan:1,gridItemColStart:1,gridItemRowSpan:1,gridItemRowStart:1,gridItemHideInMobileMode:!1},argTypes:{aligned:{options:[null,"left","center","full-width"],control:{type:"inline-radio"}},type:{options:["fixed","fluid"],control:{type:"inline-radio"}}}};const __namedExportsOrder=["Default","Fluid","Columns","Rows","AlignedCenter","FullWidth","FullHeight","ColumnObject","DefaultColWidth","DefaultColSpan","DefaultColSpanObject","DefaultRowSpan","GridItem","Playground"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  render: () => <IcLayoutGrid>\n      <div style={{\n      width: "50px",\n      height: "50px",\n      backgroundColor: "lightblue"\n    }}>\n        Grid item 1\n      </div>\n      <div style={{\n      width: "50px",\n      height: "50px",\n      backgroundColor: "lightblue"\n    }}>\n        Grid item 2\n      </div>\n      <div style={{\n      width: "50px",\n      height: "50px",\n      backgroundColor: "lightblue"\n    }}>\n        Grid item 3\n      </div>\n      <div style={{\n      width: "50px",\n      height: "50px",\n      backgroundColor: "lightblue"\n    }}>\n        Grid item 4\n      </div>\n    </IcLayoutGrid>,\n  name: "Default",\n  parameters: {\n    layout: "fullscreen"\n  }\n}',...Default.parameters?.docs?.source}}},Fluid.parameters={...Fluid.parameters,docs:{...Fluid.parameters?.docs,source:{originalSource:'{\n  render: () => <IcLayoutGrid type="fluid">\n      <div style={{\n      width: "50px",\n      height: "50px",\n      backgroundColor: "lightblue"\n    }}>\n        Grid item 1\n      </div>\n      <div style={{\n      width: "50px",\n      height: "50px",\n      backgroundColor: "lightblue"\n    }}>\n        Grid item 2\n      </div>\n      <div style={{\n      width: "50px",\n      height: "50px",\n      backgroundColor: "lightblue"\n    }}>\n        Grid item 3\n      </div>\n      <div style={{\n      width: "50px",\n      height: "50px",\n      backgroundColor: "lightblue"\n    }}>\n        Grid item 4\n      </div>\n    </IcLayoutGrid>,\n  name: "Fluid",\n  parameters: {\n    layout: "fullscreen"\n  }\n}',...Fluid.parameters?.docs?.source}}},Columns.parameters={...Columns.parameters,docs:{...Columns.parameters?.docs,source:{originalSource:'{\n  render: () => <IcLayoutGrid columns={4}>\n      <div style={{\n      width: "50px",\n      height: "50px",\n      backgroundColor: "lightblue"\n    }}>\n        Grid item 1\n      </div>\n      <div style={{\n      width: "50px",\n      height: "50px",\n      backgroundColor: "lightblue"\n    }}>\n        Grid item 2\n      </div>\n      <div style={{\n      width: "50px",\n      height: "50px",\n      backgroundColor: "lightblue"\n    }}>\n        Grid item 3\n      </div>\n      <div style={{\n      width: "50px",\n      height: "50px",\n      backgroundColor: "lightblue"\n    }}>\n        Grid item 4\n      </div>\n    </IcLayoutGrid>,\n  name: "Columns",\n  parameters: {\n    layout: "fullscreen"\n  }\n}',...Columns.parameters?.docs?.source}}},Rows.parameters={...Rows.parameters,docs:{...Rows.parameters?.docs,source:{originalSource:'{\n  render: () => <IcLayoutGrid columns={3} rows={2}>\n      <div style={{\n      width: "50px",\n      height: "50px",\n      backgroundColor: "lightblue"\n    }}>\n        Grid item 1\n      </div>\n      <div style={{\n      width: "50px",\n      height: "50px",\n      backgroundColor: "lightblue"\n    }}>\n        Grid item 2\n      </div>\n      <div style={{\n      width: "50px",\n      height: "50px",\n      backgroundColor: "lightblue"\n    }}>\n        Grid item 3\n      </div>\n      <div style={{\n      width: "50px",\n      height: "50px",\n      backgroundColor: "lightblue"\n    }}>\n        Grid item 4\n      </div>\n    </IcLayoutGrid>,\n  name: "Rows",\n  parameters: {\n    layout: "fullscreen"\n  }\n}',...Rows.parameters?.docs?.source}}},AlignedCenter.parameters={...AlignedCenter.parameters,docs:{...AlignedCenter.parameters?.docs,source:{originalSource:'{\n  render: () => <IcLayoutGrid columns={4} aligned="center">\n      <div style={{\n      width: "50px",\n      height: "50px",\n      backgroundColor: "lightblue"\n    }}>\n        Grid item 1\n      </div>\n      <div style={{\n      width: "50px",\n      height: "50px",\n      backgroundColor: "lightblue"\n    }}>\n        Grid item 2\n      </div>\n      <div style={{\n      width: "50px",\n      height: "50px",\n      backgroundColor: "lightblue"\n    }}>\n        Grid item 3\n      </div>\n      <div style={{\n      width: "50px",\n      height: "50px",\n      backgroundColor: "lightblue"\n    }}>\n        Grid item 4\n      </div>\n    </IcLayoutGrid>,\n  name: "Aligned center",\n  parameters: {\n    layout: "fullscreen"\n  }\n}',...AlignedCenter.parameters?.docs?.source}}},FullWidth.parameters={...FullWidth.parameters,docs:{...FullWidth.parameters?.docs,source:{originalSource:'{\n  render: () => <IcLayoutGrid columns={4} aligned="full-width">\n      <div style={{\n      width: "50px",\n      height: "50px",\n      backgroundColor: "lightblue"\n    }}>\n        Grid item 1\n      </div>\n      <div style={{\n      width: "50px",\n      height: "50px",\n      backgroundColor: "lightblue"\n    }}>\n        Grid item 2\n      </div>\n      <div style={{\n      width: "50px",\n      height: "50px",\n      backgroundColor: "lightblue"\n    }}>\n        Grid item 3\n      </div>\n      <div style={{\n      width: "50px",\n      height: "50px",\n      backgroundColor: "lightblue"\n    }}>\n        Grid item 4\n      </div>\n    </IcLayoutGrid>,\n  name: "Aligned full width",\n  parameters: {\n    layout: "fullscreen"\n  }\n}',...FullWidth.parameters?.docs?.source}}},FullHeight.parameters={...FullHeight.parameters,docs:{...FullHeight.parameters?.docs,source:{originalSource:'{\n  render: () => <IcLayoutGrid fullHeight="true" columns={4}>\n      <div style={{\n      width: "50px",\n      height: "50px",\n      backgroundColor: "lightblue"\n    }}>\n        Grid item 1\n      </div>\n      <div style={{\n      width: "50px",\n      height: "50px",\n      backgroundColor: "lightblue"\n    }}>\n        Grid item 2\n      </div>\n      <div style={{\n      width: "50px",\n      height: "50px",\n      backgroundColor: "lightblue"\n    }}>\n        Grid item 3\n      </div>\n      <div style={{\n      width: "50px",\n      height: "50px",\n      backgroundColor: "lightblue"\n    }}>\n        Grid item 4\n      </div>\n    </IcLayoutGrid>,\n  name: "Full height",\n  parameters: {\n    layout: "fullscreen"\n  }\n}',...FullHeight.parameters?.docs?.source}}},ColumnObject.parameters={...ColumnObject.parameters,docs:{...ColumnObject.parameters?.docs,source:{originalSource:'{\n  render: () => <IcLayoutGrid columns={{\n    xs: 1,\n    sm: 2,\n    md: 4,\n    lg: 8,\n    xl: 12\n  }}>\n      <div style={{\n      width: "50px",\n      height: "50px",\n      backgroundColor: "lightblue"\n    }}>\n        Grid item 1\n      </div>\n      <div style={{\n      width: "50px",\n      height: "50px",\n      backgroundColor: "lightblue"\n    }}>\n        Grid item 2\n      </div>\n      <div style={{\n      width: "50px",\n      height: "50px",\n      backgroundColor: "lightblue"\n    }}>\n        Grid item 3\n      </div>\n      <div style={{\n      width: "50px",\n      height: "50px",\n      backgroundColor: "lightblue"\n    }}>\n        Grid item 4\n      </div>\n    </IcLayoutGrid>,\n  name: "Column object",\n  parameters: {\n    layout: "fullscreen"\n  }\n}',...ColumnObject.parameters?.docs?.source}}},DefaultColWidth.parameters={...DefaultColWidth.parameters,docs:{...DefaultColWidth.parameters?.docs,source:{originalSource:'{\n  render: () => <IcLayoutGrid columns={4} defaultColWidth="150px">\n      <div style={{\n      width: "50px",\n      height: "50px",\n      backgroundColor: "lightblue"\n    }}>\n        Grid item 1\n      </div>\n      <div style={{\n      width: "50px",\n      height: "50px",\n      backgroundColor: "lightblue"\n    }}>\n        Grid item 2\n      </div>\n      <div style={{\n      width: "50px",\n      height: "50px",\n      backgroundColor: "lightblue"\n    }}>\n        Grid item 3\n      </div>\n      <div style={{\n      width: "50px",\n      height: "50px",\n      backgroundColor: "lightblue"\n    }}>\n        Grid item 4\n      </div>\n    </IcLayoutGrid>,\n  name: "Default col width",\n  parameters: {\n    layout: "fullscreen"\n  }\n}',...DefaultColWidth.parameters?.docs?.source}}},DefaultColSpan.parameters={...DefaultColSpan.parameters,docs:{...DefaultColSpan.parameters?.docs,source:{originalSource:'{\n  render: () => <IcLayoutGrid defaultColSpan={2}>\n      <div style={{\n      width: "100px",\n      height: "50px",\n      backgroundColor: "lightblue"\n    }}>\n        Grid item 1\n      </div>\n      <div style={{\n      width: "50px",\n      height: "50px",\n      backgroundColor: "lightblue"\n    }}>\n        Grid item 2\n      </div>\n      <div style={{\n      width: "80px",\n      height: "50px",\n      backgroundColor: "lightblue"\n    }}>\n        Grid item 3\n      </div>\n      <div style={{\n      width: "80px",\n      height: "50px",\n      backgroundColor: "lightblue"\n    }}>\n        Grid item 4\n      </div>\n    </IcLayoutGrid>,\n  name: "Default col span",\n  parameters: {\n    layout: "fullscreen"\n  }\n}',...DefaultColSpan.parameters?.docs?.source}}},DefaultColSpanObject.parameters={...DefaultColSpanObject.parameters,docs:{...DefaultColSpanObject.parameters?.docs,source:{originalSource:'{\n  render: () => <IcLayoutGrid defaultColSpan={{\n    xs: 1,\n    sm: 2,\n    md: 2,\n    lg: 4,\n    xl: 4\n  }}>\n      <div style={{\n      width: "100px",\n      height: "50px",\n      backgroundColor: "lightblue"\n    }}>\n        Grid item 1\n      </div>\n      <div style={{\n      width: "50px",\n      height: "50px",\n      backgroundColor: "lightblue"\n    }}>\n        Grid item 2\n      </div>\n      <div style={{\n      width: "80px",\n      height: "50px",\n      backgroundColor: "lightblue"\n    }}>\n        Grid item 3\n      </div>\n      <div style={{\n      width: "80px",\n      height: "50px",\n      backgroundColor: "lightblue"\n    }}>\n        Grid item 4\n      </div>\n    </IcLayoutGrid>,\n  name: "Default col span object",\n  parameters: {\n    layout: "fullscreen"\n  }\n}',...DefaultColSpanObject.parameters?.docs?.source}}},DefaultRowSpan.parameters={...DefaultRowSpan.parameters,docs:{...DefaultRowSpan.parameters?.docs,source:{originalSource:'{\n  render: () => <IcLayoutGrid defaultRowSpan={2} rows="2">\n      <div style={{\n      width: "50px",\n      height: "100px",\n      backgroundColor: "lightblue"\n    }}>\n        Grid item 1\n      </div>\n      <div style={{\n      width: "50px",\n      height: "50px",\n      backgroundColor: "lightblue"\n    }}>\n        Grid item 2\n      </div>\n      <div style={{\n      width: "50px",\n      height: "50px",\n      backgroundColor: "lightblue"\n    }}>\n        Grid item 3\n      </div>\n      <div style={{\n      width: "50px",\n      height: "50px",\n      backgroundColor: "lightblue"\n    }}>\n        Grid item 4\n      </div>\n    </IcLayoutGrid>,\n  name: "Default row span",\n  parameters: {\n    layout: "fullscreen"\n  }\n}',...DefaultRowSpan.parameters?.docs?.source}}},GridItem.parameters={...GridItem.parameters,docs:{...GridItem.parameters?.docs,source:{originalSource:'{\n  render: () => <IcLayoutGrid style={{\n    border: "1px solid black"\n  }} columns={4}>\n      <IcLayoutGridItem colStart={2} colSpan={2} rowSpan={2}>\n        <div style={{\n        width: "50px",\n        height: "100px",\n        backgroundColor: "lightblue"\n      }}>\n          Grid item 1\n        </div>\n      </IcLayoutGridItem>\n      <IcLayoutGridItem hideInMobileMode>\n        <div style={{\n        width: "50px",\n        height: "50px",\n        backgroundColor: "lightblue"\n      }}>\n          Grid item 2\n        </div>\n      </IcLayoutGridItem>\n      <div style={{\n      width: "50px",\n      height: "50px",\n      backgroundColor: "lightblue"\n    }}>\n        Grid item 3\n      </div>\n      <div style={{\n      width: "50px",\n      height: "50px",\n      backgroundColor: "lightblue"\n    }}>\n        Grid item 4\n      </div>\n      <div style={{\n      width: "50px",\n      height: "50px",\n      backgroundColor: "lightblue"\n    }}>\n        Grid item 5\n      </div>\n    </IcLayoutGrid>,\n  name: "Grid item",\n  parameters: {\n    layout: "fullscreen"\n  }\n}',...GridItem.parameters?.docs?.source}}},Playground.parameters={...Playground.parameters,docs:{...Playground.parameters?.docs,source:{originalSource:'{\n  render: args => <IcLayoutGrid style={{\n    border: "1px solid black"\n  }} columns={args.columns} aligned={args.aligned} fullHeight={args.fullHeight} defaultColSpan={args.defaultColSpan} defaultColWidth={args.defaultColWidth} defaultRowSpan={args.defaultRowSpan} gridSpacing={args.gridSpacing} rows={args.rows} type={args.type}>\n      <IcLayoutGridItem colSpan={args.gridItemColSpan} colStart={args.gridItemColStart} rowSpan={args.gridItemRowSpan} rowStart={args.gridItemRowStart} hideInMobileMode={args.gridItemHideInMobileMode}>\n        <div style={{\n        width: "50px",\n        height: "50px",\n        backgroundColor: "lightblue"\n      }}>\n          Grid item 1\n        </div>\n      </IcLayoutGridItem>\n      <div style={{\n      width: "50px",\n      height: "50px",\n      backgroundColor: "lightblue"\n    }}>\n        Grid item 2\n      </div>\n      <div style={{\n      width: "50px",\n      height: "50px",\n      backgroundColor: "lightblue"\n    }}>\n        Grid item 3\n      </div>\n      <div style={{\n      width: "50px",\n      height: "50px",\n      backgroundColor: "lightblue"\n    }}>\n        Grid item 4\n      </div>\n      <div style={{\n      width: "50px",\n      height: "50px",\n      backgroundColor: "lightblue"\n    }}>\n        Grid item 5\n      </div>\n    </IcLayoutGrid>,\n  name: "Playground",\n  args: defaultArgs,\n  argTypes: {\n    aligned: {\n      options: [null, "left", "center", "full-width"],\n      control: {\n        type: "inline-radio"\n      }\n    },\n    type: {\n      options: ["fixed", "fluid"],\n      control: {\n        type: "inline-radio"\n      }\n    }\n  }\n}',...Playground.parameters?.docs?.source}}}}}]);