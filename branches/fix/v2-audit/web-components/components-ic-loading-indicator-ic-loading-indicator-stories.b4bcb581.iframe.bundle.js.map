{"version":3,"file":"components-ic-loading-indicator-ic-loading-indicator-stories.b4bcb581.iframe.bundle.js","mappings":";;;;;;AAkDA;;AASA;;;;AAWA;;;;;;;;;;;;;;;;;;;;;AA4BA;;;AAgBA;;;;;;AAaA;;;AAUA;;;;;;;;;;;;;;;;;;;;;AA4BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA;;;;;;;;;;;;;;;AAsBA;;;AAgBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyDA;;;;;;;;;;;;;;;;;;;AAgCA;;;AAUA;;;;;;AAaA;AAQA;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAKA;AAQA;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAKA","sources":["webpack://@ukic/web-components/./src/components/ic-loading-indicator/ic-loading-indicator.stories.js"],"sourcesContent":["import { html } from \"lit-html\";\n\nconst defaultArgs = {\n  appearance: \"dark\",\n  description: \"Loading\",\n  fullWidth: false,\n  labelDuration: 8000,\n  size: \"default\",\n  type: \"circular\",\n  label: null,\n};\n\nconst defaultArgTypes = {\n  appearance: {\n    options: [\"dark\", \"light\"],\n    control: { type: \"radio\" },\n  },\n  label: {\n    control: { type: \"text\" },\n  },\n  size: {\n    options: [\"small\", \"default\", \"large\", \"icon\"],\n    control: { type: \"radio\" },\n  },\n  type: {\n    options: [\"circular\", \"linear\"],\n    control: { type: \"radio\" },\n  },\n};\n\nexport default {\n  title: \"Web Components/Loading\",\n  component: \"ic-loading-indicator\",\n};\n\nexport const CircularIndeterminate = {\n  render: (args) =>\n    html`<ic-loading-indicator label=\"Loading...\"></ic-loading-indicator>`,\n  name: \"Circular (indeterminate)\",\n};\n\nexport const CircularDeterminate = {\n  render: (args) =>\n    html`<ic-loading-indicator\n      progress=\"30\"\n      min=\"0\"\n      max=\"100\"\n      label=\"Loading...\"\n    ></ic-loading-indicator>`,\n\n  name: \"Circular (determinate)\",\n};\n\nexport const CircularLongLabel = {\n  render: (args) =>\n    html`<ic-loading-indicator\n      label=\"This is a label for a loading indicator that is indeterminate and should wrap onto more than one line when it gets too long\"\n    ></ic-loading-indicator>`,\n\n  name: \"Circular long label\",\n};\n\nexport const CircularVariantsIndeterminate = {\n  render: (args) =>\n    html`<div style=\"display: grid; gap: 50px;\">\n      <ic-loading-indicator label=\"Small\" size=\"small\"></ic-loading-indicator>\n      <ic-loading-indicator label=\"Default\"></ic-loading-indicator>\n      <ic-loading-indicator label=\"Large\" size=\"large\"></ic-loading-indicator>\n    </div>`,\n\n  name: \"Circular variants (indeterminate)\",\n};\n\nexport const CircularVariantsDeterminate = {\n  render: (args) =>\n    html`<div style=\"display: grid; gap: 50px;\">\n      <ic-loading-indicator\n        progress=\"30\"\n        min=\"0\"\n        max=\"100\"\n        label=\"Small\"\n        size=\"small\"\n      ></ic-loading-indicator>\n      <ic-loading-indicator\n        progress=\"30\"\n        min=\"0\"\n        max=\"100\"\n        label=\"Default\"\n      ></ic-loading-indicator>\n      <ic-loading-indicator\n        progress=\"30\"\n        min=\"0\"\n        max=\"100\"\n        label=\"Large\"\n        size=\"large\"\n      ></ic-loading-indicator>\n    </div>`,\n\n  name: \"Circular variants (determinate)\",\n};\n\nexport const Icon = {\n  render: (args) =>\n    html`<ic-loading-indicator size=\"icon\"></ic-loading-indicator>`,\n  name: \"Icon\",\n};\n\nexport const LinearIndeterminate = {\n  render: (args) =>\n    html`<ic-loading-indicator\n      label=\"Loading...\"\n      type=\"linear\"\n    ></ic-loading-indicator>`,\n\n  name: \"Linear (indeterminate)\",\n};\n\nexport const LinearDeterminate = {\n  render: (args) =>\n    html`<ic-loading-indicator\n      progress=\"30\"\n      min=\"0\"\n      max=\"100\"\n      label=\"Progress\"\n      type=\"linear\"\n    ></ic-loading-indicator>`,\n\n  name: \"Linear (determinate)\",\n};\n\nexport const LinearLongLabel = {\n  render: (args) =>\n    html`<ic-loading-indicator\n      type=\"linear\"\n      label=\"This is a label for a loading indicator that is indeterminate and should wrap onto more than one line when it gets too long\"\n    ></ic-loading-indicator>`,\n\n  name: \"Linear long label\",\n};\n\nexport const LinearVariantsIndeterminate = {\n  render: (args) =>\n    html`<div style=\"display: grid; gap: 50px;\">\n      <ic-loading-indicator\n        label=\"Small\"\n        size=\"small\"\n        type=\"linear\"\n      ></ic-loading-indicator>\n      <ic-loading-indicator\n        label=\"Default\"\n        type=\"linear\"\n      ></ic-loading-indicator>\n      <ic-loading-indicator\n        label=\"Large\"\n        size=\"large\"\n        type=\"linear\"\n      ></ic-loading-indicator>\n      <ic-loading-indicator\n        label=\"Full-width\"\n        size=\"default\"\n        type=\"linear\"\n        full-width=\"true\"\n      ></ic-loading-indicator>\n    </div>`,\n\n  name: \"Linear variants (indeterminate)\",\n};\n\nexport const LinearVariantsDeterminate = {\n  render: (args) =>\n    html`<div style=\"display: grid; gap: 50px;\">\n      <ic-loading-indicator\n        progress=\"30\"\n        min=\"0\"\n        max=\"100\"\n        label=\"Small\"\n        size=\"small\"\n        type=\"linear\"\n      ></ic-loading-indicator>\n      <ic-loading-indicator\n        progress=\"30\"\n        min=\"0\"\n        max=\"100\"\n        label=\"Default\"\n        type=\"linear\"\n      ></ic-loading-indicator>\n      <ic-loading-indicator\n        progress=\"30\"\n        min=\"0\"\n        max=\"100\"\n        label=\"Large\"\n        size=\"large\"\n        type=\"linear\"\n      ></ic-loading-indicator>\n      <ic-loading-indicator\n        progress=\"30\"\n        min=\"0\"\n        max=\"100\"\n        label=\"Full-width\"\n        size=\"default\"\n        type=\"linear\"\n        full-width=\"true\"\n      ></ic-loading-indicator>\n    </div>`,\n\n  name: \"Linear variants (determinate)\",\n};\n\nexport const CircularLight = {\n  render: (args) =>\n    html`<div style=\"display: grid; gap: 50px;\">\n      <ic-loading-indicator\n        label=\"Small\"\n        size=\"small\"\n        appearance=\"light\"\n      ></ic-loading-indicator>\n      <ic-loading-indicator\n        label=\"Default\"\n        appearance=\"light\"\n      ></ic-loading-indicator>\n      <ic-loading-indicator\n        label=\"Large\"\n        size=\"large\"\n        appearance=\"light\"\n      ></ic-loading-indicator>\n    </div>`,\n\n  name: \"Circular light\",\n\n  parameters: {\n    backgrounds: {\n      default: \"dark\",\n    },\n  },\n};\n\nexport const IconLight = {\n  render: (args) =>\n    html`<ic-loading-indicator\n      size=\"icon\"\n      appearance=\"light\"\n    ></ic-loading-indicator>`,\n\n  name: \"Icon light\",\n\n  parameters: {\n    backgrounds: {\n      default: \"dark\",\n    },\n  },\n};\n\nexport const LinearLight = {\n  render: (args) =>\n    html`<div style=\"display: grid; gap: 50px;\">\n      <ic-loading-indicator\n        label=\"Default\"\n        type=\"linear\"\n        appearance=\"light\"\n      ></ic-loading-indicator>\n      <ic-loading-indicator\n        label=\"Large\"\n        size=\"large\"\n        type=\"linear\"\n        appearance=\"light\"\n      ></ic-loading-indicator>\n      <ic-loading-indicator\n        label=\"Full-width\"\n        type=\"linear\"\n        full-width=\"true\"\n        appearance=\"light\"\n      ></ic-loading-indicator>\n      <ic-loading-indicator\n        progress=\"30\"\n        min=\"0\"\n        max=\"100\"\n        label=\"Default\"\n        type=\"linear\"\n        appearance=\"light\"\n      ></ic-loading-indicator>\n      <ic-loading-indicator\n        progress=\"30\"\n        min=\"0\"\n        max=\"100\"\n        label=\"Large\"\n        size=\"large\"\n        type=\"linear\"\n        appearance=\"light\"\n      ></ic-loading-indicator>\n      <ic-loading-indicator\n        progress=\"30\"\n        min=\"0\"\n        max=\"100\"\n        label=\"Full-width\"\n        type=\"linear\"\n        full-width=\"true\"\n        appearance=\"light\"\n      ></ic-loading-indicator>\n    </div>`,\n\n  name: \"Linear light\",\n\n  parameters: {\n    backgrounds: {\n      default: \"dark\",\n    },\n  },\n};\n\nexport const NoLabel = {\n  render: (args) =>\n    html`<div style=\"display: grid; gap: 50px;\">\n      <ic-loading-indicator description=\"Loading\"></ic-loading-indicator\n      ><ic-loading-indicator\n        progress=\"30\"\n        min=\"0\"\n        max=\"100\"\n        description=\"Loading\"\n      ></ic-loading-indicator\n      ><ic-loading-indicator\n        description=\"Loading\"\n        type=\"linear\"\n      ></ic-loading-indicator\n      ><ic-loading-indicator\n        progress=\"30\"\n        min=\"0\"\n        max=\"100\"\n        description=\"Loading\"\n        type=\"linear\"\n      ></ic-loading-indicator>\n    </div>`,\n\n  name: \"No label\",\n};\n\nexport const ChangingLabel = {\n  render: (args) =>\n    html`<ic-loading-indicator\n      label=\"Loading.../Still loading...\"\n      label-duration=\"4000\"\n    ></ic-loading-indicator>`,\n\n  name: \"Changing label\",\n};\n\nexport const ProgressIndicatorForCompactStep = {\n  render: (args) =>\n    html`<ic-loading-indicator\n      size=\"small\"\n      inner-label=\"3\"\n      progress=\"30\"\n      min=\"0\"\n      max=\"100\"\n    ></ic-loading-indicator>`,\n\n  name: \"Progress indicator for compact step\",\n  args: defaultArgs,\n  argTypes: defaultArgTypes,\n};\n\nexport const PlaygroundIndeterminate = {\n  render: (args) =>\n    html`<div\n      style=\"background-color: ${args.appearance === \"light\"\n        ? \"#393939\"\n        : \"#FFFFFF\"}; padding: 16px;\"\n    >\n      <ic-loading-indicator\n        appearance=${args.appearance}\n        description=${args.description}\n        full-width=${args.fullWidth}\n        label-duration=${args.labelDuration}\n        size=${args.size}\n        type=${args.type}\n        label=${args.label}\n      >\n      </ic-loading-indicator>\n    </div>`,\n\n  args: defaultArgs,\n  argTypes: defaultArgTypes,\n  name: \"Playground - indeterminate\",\n};\n\nexport const PlaygroundDeterminate = {\n  render: (args) =>\n    html`<div\n      style=\"background-color: ${args.appearance === \"light\"\n        ? \"#393939\"\n        : \"#FFFFFF\"}; padding: 16px;\"\n    >\n      <ic-loading-indicator\n        appearance=${args.appearance}\n        description=${args.description}\n        full-width=${args.fullWidth}\n        label-duration=${args.labelDuration}\n        size=${args.size}\n        type=${args.type}\n        label=${args.label}\n        progress=${args.progress}\n        min=${args.min}\n        max=${args.max}\n      >\n      </ic-loading-indicator>\n    </div>`,\n\n  args: {\n    ...defaultArgs,\n    max: 100,\n    min: 0,\n    progress: 30,\n  },\n\n  argTypes: defaultArgTypes,\n  name: \"Playground - determinate\",\n};\n;export const __namedExportsOrder = [\"CircularIndeterminate\",\"CircularDeterminate\",\"CircularLongLabel\",\"CircularVariantsIndeterminate\",\"CircularVariantsDeterminate\",\"Icon\",\"LinearIndeterminate\",\"LinearDeterminate\",\"LinearLongLabel\",\"LinearVariantsIndeterminate\",\"LinearVariantsDeterminate\",\"CircularLight\",\"IconLight\",\"LinearLight\",\"NoLabel\",\"ChangingLabel\",\"ProgressIndicatorForCompactStep\",\"PlaygroundIndeterminate\",\"PlaygroundDeterminate\"];"],"names":[],"sourceRoot":""}