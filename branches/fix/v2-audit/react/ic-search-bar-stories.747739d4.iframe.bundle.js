"use strict";(self.webpackChunk_ukic_react=self.webpackChunk_ukic_react||[]).push([[5804],{"./src/stories/ic-search-bar.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CharactersUntilSuggestion:()=>CharactersUntilSuggestion,Controlled:()=>Controlled,Dark:()=>Dark,Default:()=>Default,DeprecatedSmall:()=>DeprecatedSmall,Disabled:()=>Disabled,EmptyOptionListText:()=>EmptyOptionListText,ExternalFiltering_:()=>ExternalFiltering_,FullWidth:()=>FullWidth,HelperText:()=>HelperText,HiddenLabel:()=>HiddenLabel,HintText:()=>HintText,InAForm:()=>InAForm,LongOptionLabels:()=>LongOptionLabels,Playground:()=>Playground,QuerySearchMode:()=>QuerySearchMode,SizeSmall:()=>SizeSmall,Uncontrolled_:()=>Uncontrolled_,WithOptions:()=>WithOptions,WithOptionsNoFiltering:()=>WithOptionsNoFiltering,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_components__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components.ts");function _slicedToArray(r,e){return function _arrayWithHoles(r){if(Array.isArray(r))return r}(r)||function _iterableToArrayLimit(r,l){var t=null==r?null:"undefined"!=typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(null!=t){var e,n,i,u,a=[],f=!0,o=!1;try{if(i=(t=t.call(r)).next,0===l){if(Object(t)!==t)return;f=!1}else for(;!(f=(e=i.call(t)).done)&&(a.push(e.value),a.length!==l);f=!0);}catch(r){o=!0,n=r}finally{try{if(!f&&null!=t.return&&(u=t.return(),Object(u)!==u))return}finally{if(o)throw n}}return a}}(r,e)||function _unsupportedIterableToArray(r,a){if(r){if("string"==typeof r)return _arrayLikeToArray(r,a);var t={}.toString.call(r).slice(8,-1);return"Object"===t&&r.constructor&&(t=r.constructor.name),"Map"===t||"Set"===t?Array.from(r):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?_arrayLikeToArray(r,a):void 0}}(r,e)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(r,a){(null==a||a>r.length)&&(a=r.length);for(var e=0,n=Array(a);e<a;e++)n[e]=r[e];return n}var ExternalFiltering=function ExternalFiltering(){var mockData=[{label:"Espresso",value:"espresso"},{label:"Double Espresso",value:"doubleespresso"},{label:"Flat White",value:"flatwhite"},{label:"Cappuccino",value:"cappuccino"},{label:"Americano",value:"americano"},{label:"Mocha",value:"mocha"}],_useState2=_slicedToArray((0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),2),event=_useState2[0],setEvent=_useState2[1],_useState4=_slicedToArray((0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]),2),results=_useState4[0],setResults=_useState4[1],_useState6=_slicedToArray((0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1),2),loading=_useState6[0],setLoading=_useState6[1],_useState8=_slicedToArray((0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1),2),optionSelected=_useState8[0],setOptionSelected=_useState8[1];(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((function(){var searchTerm=null==event?void 0:event.detail.value;if(searchTerm!==optionSelected)if((null==searchTerm?void 0:searchTerm.length)>1){optionSelected||setLoading(!0),setOptionSelected(!1);(function mockAPI(query){var filteredResults=mockData.filter((function(m){return m.label.toLowerCase().includes(query.toLowerCase())}));return new Promise((function(resolve){return setTimeout((function(){return resolve(filteredResults)}),"icChange"===event.type?2e3:500)}))})(searchTerm).then((function(results){return setResults(results)}))}else setResults([]);setOptionSelected(!1)}),[event,optionSelected]);var handleChange=function handleChange(event){setEvent(event)};return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.GJ,{loading,timeout:1e3,debounce:300,placeholder:"Type to search",label:"Search for coffee",onIcChange:handleChange,onIcRetryLoad:handleChange,onIcOptionSelect:function handleOptionSelect(){setOptionSelected(!0)},disableFilter:!0,options:results,loadingLabel:"Loading time",loadingErrorLabel:"Oops error"})},ControlledExample=function ControlledExample(){var _useState10=_slicedToArray((0,react__WEBPACK_IMPORTED_MODULE_0__.useState)("cap"),2),value=_useState10[0],setValue=_useState10[1];return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.GJ,{placeholder:"Controlled",label:"Controlled",options:[{label:"Espresso",value:"esp"},{label:"Double Espresso",value:"dbl"},{label:"Flat White",value:"fla"},{label:"Cappuccino",value:"cap"},{label:"Americano",value:"ame"},{label:"Mocha",value:"moc"}],value,onIcChange:function handleChange(event){console.log(event.detail.value),setValue(event.detail.value)}})},Uncontrolled=function Uncontrolled(){var searchEl=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();return react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.GJ,{ref:searchEl,placeholder:"Uncontrolled",label:"Uncontrolled",options:[{label:"Espresso",value:"esp"},{label:"Double Espresso",value:"dbl"},{label:"Flat White",value:"fla"},{label:"Cappuccino",value:"cap"},{label:"Americano",value:"ame"},{label:"Mocha",value:"moc"}],onIcChange:function handleChange(){console.log(searchEl.current.value)}}))};const __WEBPACK_DEFAULT_EXPORT__={title:"Search bar",component:_components__WEBPACK_IMPORTED_MODULE_1__.GJ};var Default={render:function render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.GJ,{label:"What is your favourite coffee?",onIcSubmitSearch:function onIcSubmitSearch(){return console.log("submit search")}})},name:"Default"},WithOptions={render:function render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.GJ,{label:"What is your favourite coffee?",options:[{label:"Espresso",value:"espresso"},{label:"Double Espresso",value:"doubleespresso"},{label:"Flat White",value:"flatwhite"},{label:"Cappuccino",value:"cappuccino"},{label:"Americano",value:"americano"},{label:"Mocha",value:"mocha"}]}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("br",null),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.Cu,null,"Suggested search options: Espresso, Double Espresso, Flat White, Cappuccino, Americano, Mocha"))},name:"With options"},WithOptionsNoFiltering={render:function render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.GJ,{label:"What is your favourite coffee?",disableFilter:!0,options:[{label:"Espresso",value:"espresso"},{label:"Double Espresso",value:"doubleespresso"},{label:"Flat White",value:"flatwhite"},{label:"Cappuccino",value:"cappuccino"},{label:"Americano",value:"americano"},{label:"Mocha",value:"mocha"}]}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("br",null),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.Cu,null,"All options will be displayed as you type"))},name:"With options (no filtering)"},InAForm={render:function render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("form",{onSubmit:function onSubmit(){return console.log("form submit")}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.GJ,{label:"What is your favourite coffee?"}))},name:"In a form"},HelperText={render:function render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.GJ,{label:"What is your favourite coffee?",helperText:"Some helper text"})},name:"Helper text"},SizeSmall={render:function render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.GJ,{label:"What is your favourite coffee?",size:"small"})},name:"Size small"},DeprecatedSmall={render:function render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.GJ,{label:"What is your favourite coffee?",small:!0})},name:"Deprecated - small"},HiddenLabel={render:function render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.GJ,{label:"What is your favourite coffee?",hideLabel:!0})},name:"Hidden label"},Disabled={render:function render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.GJ,{label:"What is your favourite coffee?",disabled:!0})},name:"Disabled"},FullWidth={render:function render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.GJ,{label:"What is your favourite coffee?",fullWidth:!0,options:[{label:"Espresso",value:"espresso"},{label:"Double Espresso",value:"doubleespresso"},{label:"Flat White",value:"flatwhite"},{label:"Cappuccino",value:"cappuccino"},{label:"Americano",value:"americano"},{label:"Mocha",value:"mocha"}]}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("br",null),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.Cu,null,"Suggested search options: Espresso, Double Espresso, Flat White, Cappuccino, Americano, Mocha"))},name:"Full Width"},Dark={render:function render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.GJ,{label:"What is your favourite coffee?",dark:!0})},name:"Dark",parameters:{backgrounds:{default:"dark"}}},ExternalFiltering_={render:function render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(ExternalFiltering,null),react__WEBPACK_IMPORTED_MODULE_0__.createElement("br",null),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.Cu,null,"Suggested search options: Espresso, Double Espresso, Flat White, Cappuccino, Americano, Mocha"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("br",null),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.Cu,null,"The IcChange event will trigger 300ms after you finish typing. 1 second later, the options in the searchbar menu will be updated."))},name:"External filtering"},QuerySearchMode={render:function render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.GJ,{label:"What is your favourite coffee?",searchMode:"query",onIcSubmitSearch:function onIcSubmitSearch(){return console.log("submit search")},options:[{label:"Espresso",value:"espresso"},{label:"Double Espresso",value:"doubleespresso"},{label:"Flat White",value:"flatwhite"},{label:"Cappuccino",value:"cappuccino"},{label:"Americano",value:"americano"},{label:"Mocha",value:"mocha"}]})},name:"Query search mode"},EmptyOptionListText={render:function render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.GJ,{label:"What is your favourite coffee?",emptyOptionListText:"There's nothing here",options:[{label:"Espresso",value:"espresso"},{label:"Double Espresso",value:"doubleespresso"},{label:"Flat White",value:"flatwhite"},{label:"Cappuccino",value:"cappuccino"},{label:"Americano",value:"americano"},{label:"Mocha",value:"mocha"}]})},name:"Empty option list text"},CharactersUntilSuggestion={render:function render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.GJ,{label:"What is your favourite coffee?",charactersUntilSuggestion:5,options:[{label:"Espresso",value:"espresso"},{label:"Double Espresso",value:"doubleespresso"},{label:"Flat White",value:"flatwhite"},{label:"Cappuccino",value:"cappuccino"},{label:"Americano",value:"americano"},{label:"Mocha",value:"mocha"}]})},name:"Characters until suggestion"},HintText={render:function render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.GJ,{label:"What is your favourite coffee?",hintText:"You can use up and down arrows to navigate the options when they are available, and press enter to select an option.",options:[{label:"Espresso",value:"espresso"},{label:"Double Espresso",value:"doubleespresso"},{label:"Flat White",value:"flatwhite"},{label:"Cappuccino",value:"cappuccino"},{label:"Americano",value:"americano"},{label:"Mocha",value:"mocha"}]})},name:"Hint text"},LongOptionLabels={render:function render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.GJ,{label:"What is your favourite coffee?",options:[{label:"Espresso because it tastes like coffee",value:"espresso"},{label:"Double Espresso because it tastes like double the amount of coffee",value:"doubleespresso"},{label:"Reallylongonewordanswerthatcouldbethenameofacoffee",value:"flatwhite"}]})},name:"Long option labels"},Controlled={render:function render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(ControlledExample,null)},name:"Controlled"},Uncontrolled_={render:function render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Uncontrolled,null)},name:"Uncontrolled"},Playground={render:function render(args){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components__WEBPACK_IMPORTED_MODULE_1__.GJ,{autocapitalize:args.autocapitalize,autocorrect:args.autocorrect,autofocus:args.autofocus,label:args.label,required:args.required,readonly:args.readonly,spellcheck:args.spellcheck,disabled:args.disabled,fullWidth:args.fullWidth,focusOnLoad:args.focusOnLoad,helperText:args.helperText,hideLabel:args.hideLabel,placeholder:args.placeholder,size:args.size,options:[{label:"Espresso",value:"espresso"},{label:"Double Espresso",value:"doubleespresso"},{label:"Flat White",value:"flatwhite"},{label:"Cappuccino",value:"cappuccino"},{label:"Americano",value:"americano"},{label:"Mocha",value:"mocha"}]})},args:{autocapitalize:"off",autocorrect:"off",autofocus:!1,disabled:!1,fullWidth:!1,focusOnLoad:!0,helperText:"",hideLabel:!1,label:"What is your favourite coffee?",placeholder:"Search",readonly:!1,required:!1,size:"default",spellcheck:!1},argTypes:{autocapitalize:{options:["off","none","on","sentences","words","characters"],control:{type:"select"}},autocorrect:{options:["on","off"],control:{type:"inline-radio"}},size:{options:["default","small"],control:{type:"inline-radio"}}},name:"Playground"};const __namedExportsOrder=["Default","WithOptions","WithOptionsNoFiltering","InAForm","HelperText","SizeSmall","DeprecatedSmall","HiddenLabel","Disabled","FullWidth","Dark","ExternalFiltering_","QuerySearchMode","EmptyOptionListText","CharactersUntilSuggestion","HintText","LongOptionLabels","Controlled","Uncontrolled_","Playground"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  render: () => <IcSearchBar label="What is your favourite coffee?" onIcSubmitSearch={() => console.log("submit search")} />,\n  name: "Default"\n}',...Default.parameters?.docs?.source}}},WithOptions.parameters={...WithOptions.parameters,docs:{...WithOptions.parameters?.docs,source:{originalSource:'{\n  render: () => <>\n      <IcSearchBar label="What is your favourite coffee?" options={[{\n      label: "Espresso",\n      value: "espresso"\n    }, {\n      label: "Double Espresso",\n      value: "doubleespresso"\n    }, {\n      label: "Flat White",\n      value: "flatwhite"\n    }, {\n      label: "Cappuccino",\n      value: "cappuccino"\n    }, {\n      label: "Americano",\n      value: "americano"\n    }, {\n      label: "Mocha",\n      value: "mocha"\n    }]} />\n    <br />\n    <IcTypography>\n      Suggested search options: Espresso, Double Espresso, Flat White,\n      Cappuccino, Americano, Mocha\n    </IcTypography>\n    </>,\n  name: "With options"\n}',...WithOptions.parameters?.docs?.source}}},WithOptionsNoFiltering.parameters={...WithOptionsNoFiltering.parameters,docs:{...WithOptionsNoFiltering.parameters?.docs,source:{originalSource:'{\n  render: () => <>\n      <IcSearchBar label="What is your favourite coffee?" disableFilter options={[{\n      label: "Espresso",\n      value: "espresso"\n    }, {\n      label: "Double Espresso",\n      value: "doubleespresso"\n    }, {\n      label: "Flat White",\n      value: "flatwhite"\n    }, {\n      label: "Cappuccino",\n      value: "cappuccino"\n    }, {\n      label: "Americano",\n      value: "americano"\n    }, {\n      label: "Mocha",\n      value: "mocha"\n    }]} />\n    <br />\n    <IcTypography>All options will be displayed as you type</IcTypography>\n    </>,\n  name: "With options (no filtering)"\n}',...WithOptionsNoFiltering.parameters?.docs?.source}}},InAForm.parameters={...InAForm.parameters,docs:{...InAForm.parameters?.docs,source:{originalSource:'{\n  render: () => <form onSubmit={() => console.log("form submit")}>\n      <IcSearchBar label="What is your favourite coffee?" />\n    </form>,\n  name: "In a form"\n}',...InAForm.parameters?.docs?.source}}},HelperText.parameters={...HelperText.parameters,docs:{...HelperText.parameters?.docs,source:{originalSource:'{\n  render: () => <IcSearchBar label="What is your favourite coffee?" helperText="Some helper text" />,\n  name: "Helper text"\n}',...HelperText.parameters?.docs?.source}}},SizeSmall.parameters={...SizeSmall.parameters,docs:{...SizeSmall.parameters?.docs,source:{originalSource:'{\n  render: () => <IcSearchBar label="What is your favourite coffee?" size="small" />,\n  name: "Size small"\n}',...SizeSmall.parameters?.docs?.source}}},DeprecatedSmall.parameters={...DeprecatedSmall.parameters,docs:{...DeprecatedSmall.parameters?.docs,source:{originalSource:'{\n  render: () => <IcSearchBar label="What is your favourite coffee?" small />,\n  name: "Deprecated - small"\n}',...DeprecatedSmall.parameters?.docs?.source}}},HiddenLabel.parameters={...HiddenLabel.parameters,docs:{...HiddenLabel.parameters?.docs,source:{originalSource:'{\n  render: () => <IcSearchBar label="What is your favourite coffee?" hideLabel />,\n  name: "Hidden label"\n}',...HiddenLabel.parameters?.docs?.source}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:'{\n  render: () => <IcSearchBar label="What is your favourite coffee?" disabled />,\n  name: "Disabled"\n}',...Disabled.parameters?.docs?.source}}},FullWidth.parameters={...FullWidth.parameters,docs:{...FullWidth.parameters?.docs,source:{originalSource:'{\n  render: () => <>\n      <IcSearchBar label="What is your favourite coffee?" fullWidth options={[{\n      label: "Espresso",\n      value: "espresso"\n    }, {\n      label: "Double Espresso",\n      value: "doubleespresso"\n    }, {\n      label: "Flat White",\n      value: "flatwhite"\n    }, {\n      label: "Cappuccino",\n      value: "cappuccino"\n    }, {\n      label: "Americano",\n      value: "americano"\n    }, {\n      label: "Mocha",\n      value: "mocha"\n    }]} />\n    <br />\n    <IcTypography>\n      Suggested search options: Espresso, Double Espresso, Flat White,\n      Cappuccino, Americano, Mocha\n    </IcTypography>\n    </>,\n  name: "Full Width"\n}',...FullWidth.parameters?.docs?.source}}},Dark.parameters={...Dark.parameters,docs:{...Dark.parameters?.docs,source:{originalSource:'{\n  render: () => <IcSearchBar label="What is your favourite coffee?" dark />,\n  name: "Dark",\n  parameters: {\n    backgrounds: {\n      default: "dark"\n    }\n  }\n}',...Dark.parameters?.docs?.source}}},ExternalFiltering_.parameters={...ExternalFiltering_.parameters,docs:{...ExternalFiltering_.parameters?.docs,source:{originalSource:'{\n  render: () => <>\n      <ExternalFiltering />\n    <br />\n    <IcTypography>\n      Suggested search options: Espresso, Double Espresso, Flat White,\n      Cappuccino, Americano, Mocha\n    </IcTypography>\n    <br />\n    <IcTypography>\n      The IcChange event will trigger 300ms after you finish typing. 1 second\n      later, the options in the searchbar menu will be updated.\n    </IcTypography>\n    </>,\n  name: "External filtering"\n}',...ExternalFiltering_.parameters?.docs?.source}}},QuerySearchMode.parameters={...QuerySearchMode.parameters,docs:{...QuerySearchMode.parameters?.docs,source:{originalSource:'{\n  render: () => <IcSearchBar label="What is your favourite coffee?" searchMode="query" onIcSubmitSearch={() => console.log("submit search")} options={[{\n    label: "Espresso",\n    value: "espresso"\n  }, {\n    label: "Double Espresso",\n    value: "doubleespresso"\n  }, {\n    label: "Flat White",\n    value: "flatwhite"\n  }, {\n    label: "Cappuccino",\n    value: "cappuccino"\n  }, {\n    label: "Americano",\n    value: "americano"\n  }, {\n    label: "Mocha",\n    value: "mocha"\n  }]} />,\n  name: "Query search mode"\n}',...QuerySearchMode.parameters?.docs?.source}}},EmptyOptionListText.parameters={...EmptyOptionListText.parameters,docs:{...EmptyOptionListText.parameters?.docs,source:{originalSource:'{\n  render: () => <IcSearchBar label="What is your favourite coffee?" emptyOptionListText="There\'s nothing here" options={[{\n    label: "Espresso",\n    value: "espresso"\n  }, {\n    label: "Double Espresso",\n    value: "doubleespresso"\n  }, {\n    label: "Flat White",\n    value: "flatwhite"\n  }, {\n    label: "Cappuccino",\n    value: "cappuccino"\n  }, {\n    label: "Americano",\n    value: "americano"\n  }, {\n    label: "Mocha",\n    value: "mocha"\n  }]} />,\n  name: "Empty option list text"\n}',...EmptyOptionListText.parameters?.docs?.source}}},CharactersUntilSuggestion.parameters={...CharactersUntilSuggestion.parameters,docs:{...CharactersUntilSuggestion.parameters?.docs,source:{originalSource:'{\n  render: () => <IcSearchBar label="What is your favourite coffee?" charactersUntilSuggestion={5} options={[{\n    label: "Espresso",\n    value: "espresso"\n  }, {\n    label: "Double Espresso",\n    value: "doubleespresso"\n  }, {\n    label: "Flat White",\n    value: "flatwhite"\n  }, {\n    label: "Cappuccino",\n    value: "cappuccino"\n  }, {\n    label: "Americano",\n    value: "americano"\n  }, {\n    label: "Mocha",\n    value: "mocha"\n  }]} />,\n  name: "Characters until suggestion"\n}',...CharactersUntilSuggestion.parameters?.docs?.source}}},HintText.parameters={...HintText.parameters,docs:{...HintText.parameters?.docs,source:{originalSource:'{\n  render: () => <IcSearchBar label="What is your favourite coffee?" hintText="You can use up and down arrows to navigate the options when they are available, and press enter to select an option." options={[{\n    label: "Espresso",\n    value: "espresso"\n  }, {\n    label: "Double Espresso",\n    value: "doubleespresso"\n  }, {\n    label: "Flat White",\n    value: "flatwhite"\n  }, {\n    label: "Cappuccino",\n    value: "cappuccino"\n  }, {\n    label: "Americano",\n    value: "americano"\n  }, {\n    label: "Mocha",\n    value: "mocha"\n  }]} />,\n  name: "Hint text"\n}',...HintText.parameters?.docs?.source}}},LongOptionLabels.parameters={...LongOptionLabels.parameters,docs:{...LongOptionLabels.parameters?.docs,source:{originalSource:'{\n  render: () => <IcSearchBar label="What is your favourite coffee?" options={[{\n    label: "Espresso because it tastes like coffee",\n    value: "espresso"\n  }, {\n    label: "Double Espresso because it tastes like double the amount of coffee",\n    value: "doubleespresso"\n  }, {\n    label: "Reallylongonewordanswerthatcouldbethenameofacoffee",\n    value: "flatwhite"\n  }]} />,\n  name: "Long option labels"\n}',...LongOptionLabels.parameters?.docs?.source}}},Controlled.parameters={...Controlled.parameters,docs:{...Controlled.parameters?.docs,source:{originalSource:'{\n  render: () => <ControlledExample />,\n  name: "Controlled"\n}',...Controlled.parameters?.docs?.source}}},Uncontrolled_.parameters={...Uncontrolled_.parameters,docs:{...Uncontrolled_.parameters?.docs,source:{originalSource:'{\n  render: () => <Uncontrolled />,\n  name: "Uncontrolled"\n}',...Uncontrolled_.parameters?.docs?.source}}},Playground.parameters={...Playground.parameters,docs:{...Playground.parameters?.docs,source:{originalSource:'{\n  render: args => <IcSearchBar autocapitalize={args.autocapitalize} autocorrect={args.autocorrect} autofocus={args.autofocus} label={args.label} required={args.required} readonly={args.readonly} spellcheck={args.spellcheck} disabled={args.disabled} fullWidth={args.fullWidth} focusOnLoad={args.focusOnLoad} helperText={args.helperText} hideLabel={args.hideLabel} placeholder={args.placeholder} size={args.size} options={[{\n    label: "Espresso",\n    value: "espresso"\n  }, {\n    label: "Double Espresso",\n    value: "doubleespresso"\n  }, {\n    label: "Flat White",\n    value: "flatwhite"\n  }, {\n    label: "Cappuccino",\n    value: "cappuccino"\n  }, {\n    label: "Americano",\n    value: "americano"\n  }, {\n    label: "Mocha",\n    value: "mocha"\n  }]} />,\n  args: defaultArgs,\n  argTypes: {\n    autocapitalize: {\n      options: ["off", "none", "on", "sentences", "words", "characters"],\n      control: {\n        type: "select"\n      }\n    },\n    autocorrect: {\n      options: ["on", "off"],\n      control: {\n        type: "inline-radio"\n      }\n    },\n    size: {\n      options: ["default", "small"],\n      control: {\n        type: "inline-radio"\n      }\n    }\n  },\n  name: "Playground"\n}',...Playground.parameters?.docs?.source}}}}}]);