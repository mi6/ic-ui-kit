{"version":3,"file":"components-ic-tree-view-ic-tree-view-stories.20f6f053.iframe.bundle.js","mappings":";;;;;;;;;;;;AAmCA;;;;;;;;AAaA;;;;;;;;;;;;;;;;;;;;;AA0BA;;;;;;;;;;;;;;;;;AAsBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA;;;;;;;;;;;;;;AAsBA;;;;;;;;;;;AAmBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgDA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA;;;;;;;;;;;AAmBA;;;;;;;;AAaA;;;;;;;;;;;AAmBA;;;;;;;;;;;;AAiBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;;;;;;;;;;;;;;;;;;AAuBA","sources":["webpack://@ukic/canary-web-components/./src/components/ic-tree-view/ic-tree-view.stories.js"],"sourcesContent":["/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport { html } from \"lit-html\";\nimport readme from \"./readme.md\";\nimport treeItemReadme from \"../ic-tree-item/readme.md\";\n\nexport default {\n  title: \"Web Components/Tree view\",\n  component: \"ic-tree-view\",\n  parameters: {\n    componentAPI: {\n      data: readme + treeItemReadme,\n    },\n  },\n};\n\n/**\n * Use the tree view component to display hierarchical data in a tree structure. The tree view component is useful for displaying nested data, such as a file system or a category hierarchy.\n *\n * Click the 'Component API' tab to view all the available attributes, events and slots for tree view.\n *\n * To use the tree view component, import `@ukic/canary-web-components` into your application.\n */\nexport const Basic = {\n  render: () => html`\n    <div style=\"width:250px\">\n      <ic-tree-view id=\"basic-tree-view\" heading=\"Menu\"> </ic-tree-view>\n    </div>\n    <script>\n      document.querySelector(\"#basic-tree-view\").treeItemData = [\n        { label: \"Coffee\" },\n        { label: \"Tea\" },\n        { label: \"Hot chocolate\" },\n      ];\n    </script>\n  `,\n  name: \"Basic\",\n};\n\nexport const BasicSlotted = {\n  render: () => html`\n    <div style=\"width:250px\">\n      <ic-tree-view heading=\"Menu\">\n        <ic-tree-item label=\"Coffee\"></ic-tree-item>\n        <ic-tree-item label=\"Tea\"></ic-tree-item>\n        <ic-tree-item label=\"Hot chocolate\"></ic-tree-item>\n      </ic-tree-view>\n    </div>\n  `,\n  name: \"Basic - slotted\",\n};\n\nexport const Nested = {\n  render: () => html`\n    <div style=\"width:250px\">\n      <ic-tree-view id=\"nested-tree-view\" heading=\"Menu\"> </ic-tree-view>\n    </div>\n    <script>\n      document.querySelector(\"#nested-tree-view\").treeItemData = [\n        {\n          label: \"Coffee\",\n          children: [\n            { label: \"Americano\", children: [{ label: \"With milk\" }] },\n            { label: \"Latte\" },\n            { label: \"Espresso\" },\n          ],\n        },\n        {\n          label: \"Tea\",\n          children: [{ label: \"Earl grey\" }, { label: \"Chai\" }],\n        },\n        { label: \"Hot chocolate\" },\n      ];\n    </script>\n  `,\n  name: \"Nested\",\n};\n\nexport const NestedSlotted = {\n  render: () => html`\n    <div style=\"width:250px\">\n      <ic-tree-view heading=\"Menu\">\n        <ic-tree-item label=\"Coffee\">\n          <ic-tree-item label=\"Americano\">\n            <ic-tree-item label=\"With milk\"></ic-tree-item>\n          </ic-tree-item>\n          <ic-tree-item label=\"Latte\"></ic-tree-item>\n          <ic-tree-item label=\"Espresso\"></ic-tree-item>\n        </ic-tree-item>\n        <ic-tree-item label=\"Tea\">\n          <ic-tree-item label=\"Earl Grey\"></ic-tree-item>\n          <ic-tree-item label=\"Chai\"></ic-tree-item>\n        </ic-tree-item>\n        <ic-tree-item label=\"Hot chocolate\"></ic-tree-item>\n      </ic-tree-view>\n    </div>\n  `,\n  name: \"Nested - slotted\",\n};\n\nexport const WithIcons = {\n  render: () => html`\n    <div style=\"width:250px\">\n      <ic-tree-view id=\"icon-tree-view\" heading=\"Menu\">\n        <svg slot=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n          <path\n            d=\"M10,4H4C2.89,4 2,4.89 2,6V18A2,2 0 0,0 4,20H20A2,2 0 0,0 22,18V8C22,6.89 21.1,6 20,6H12L10,4Z\"\n          />\n        </svg>\n      </ic-tree-view>\n    </div>\n    <script>\n      document.querySelector(\"#icon-tree-view\").treeItemData = [\n        {\n          label: \"Coffee\",\n          icon: '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M13,9V3.5L18.5,9M6,2C4.89,2 4,2.89 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2H6Z\" /></svg>',\n          children: [\n            { label: \"Americano\" },\n            {\n              label: \"Latte\",\n              icon: '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M13,9V3.5L18.5,9M6,2C4.89,2 4,2.89 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2H6Z\" /></svg>',\n            },\n            { label: \"Espresso\" },\n          ],\n        },\n        {\n          label: \"Tea\",\n          children: [{ label: \"Earl grey\" }, { label: \"Chai\" }],\n        },\n        { label: \"Hot chocolate\" },\n      ];\n    </script>\n  `,\n  name: \"With icons\",\n};\n\nexport const WithIconsSlotted = {\n  render: () => html`\n    <div style=\"width:250px\">\n      <ic-tree-view heading=\"Menu\">\n        <svg slot=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n          <path\n            d=\"M10,4H4C2.89,4 2,4.89 2,6V18A2,2 0 0,0 4,20H20A2,2 0 0,0 22,18V8C22,6.89 21.1,6 20,6H12L10,4Z\"\n          />\n        </svg>\n        <ic-tree-item label=\"Coffee\">\n          <svg\n            slot=\"icon\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path\n              d=\"M13,9V3.5L18.5,9M6,2C4.89,2 4,2.89 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2H6Z\"\n            />\n          </svg>\n          <ic-tree-item label=\"Americano\"></ic-tree-item>\n          <ic-tree-item label=\"Latte\">\n            <svg\n              slot=\"icon\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path\n                d=\"M13,9V3.5L18.5,9M6,2C4.89,2 4,2.89 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2H6Z\"\n              />\n            </svg>\n          </ic-tree-item>\n          <ic-tree-item label=\"Espresso\"></ic-tree-item>\n        </ic-tree-item>\n        <ic-tree-item label=\"Tea\">\n          <ic-tree-item label=\"Earl Grey\"></ic-tree-item>\n          <ic-tree-item label=\"Chai\"></ic-tree-item>\n        </ic-tree-item>\n        <ic-tree-item label=\"Hot chocolate\"></ic-tree-item>\n      </ic-tree-view>\n    </div>\n  `,\n  name: \"With icons - slotted\",\n};\n\n/**\n * Small and large styling will be passed down from tree view to tree items and nested tree items.\n */\nexport const Small = {\n  render: () => html`\n    <div style=\"width:250px\">\n      <ic-tree-view id=\"small-tree-view\" heading=\"Menu\" size=\"small\">\n        <svg slot=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n          <path\n            d=\"M10,4H4C2.89,4 2,4.89 2,6V18A2,2 0 0,0 4,20H20A2,2 0 0,0 22,18V8C22,6.89 21.1,6 20,6H12L10,4Z\"\n          />\n        </svg>\n      </ic-tree-view>\n    </div>\n    <script>\n      document.querySelector(\"#small-tree-view\").treeItemData = [\n        {\n          label: \"Coffee\",\n          icon: '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M13,9V3.5L18.5,9M6,2C4.89,2 4,2.89 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2H6Z\" /></svg>',\n          children: [\n            { label: \"Americano\" },\n            {\n              label: \"Latte\",\n              icon: '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M13,9V3.5L18.5,9M6,2C4.89,2 4,2.89 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2H6Z\" /></svg>',\n            },\n            { label: \"Espresso\" },\n          ],\n        },\n        {\n          label: \"Tea\",\n          children: [{ label: \"Earl grey\" }, { label: \"Chai\" }],\n        },\n        { label: \"Hot chocolate\" },\n      ];\n    </script>\n  `,\n  name: \"Small\",\n};\n\nexport const SmallSlotted = {\n  render: () => html`\n    <div style=\"width:250px\">\n      <ic-tree-view heading=\"Menu\" size=\"small\">\n        <svg slot=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n          <path\n            d=\"M10,4H4C2.89,4 2,4.89 2,6V18A2,2 0 0,0 4,20H20A2,2 0 0,0 22,18V8C22,6.89 21.1,6 20,6H12L10,4Z\"\n          />\n        </svg>\n        <ic-tree-item label=\"Coffee\">\n          <svg\n            slot=\"icon\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path\n              d=\"M13,9V3.5L18.5,9M6,2C4.89,2 4,2.89 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2H6Z\"\n            />\n          </svg>\n          <ic-tree-item label=\"Americano\"></ic-tree-item>\n          <ic-tree-item label=\"Latte\">\n            <svg\n              slot=\"icon\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path\n                d=\"M13,9V3.5L18.5,9M6,2C4.89,2 4,2.89 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2H6Z\"\n              />\n            </svg>\n          </ic-tree-item>\n          <ic-tree-item label=\"Espresso\"></ic-tree-item>\n        </ic-tree-item>\n        <ic-tree-item label=\"Tea\">\n          <ic-tree-item label=\"Earl Grey\"></ic-tree-item>\n          <ic-tree-item label=\"Chai\"></ic-tree-item>\n        </ic-tree-item>\n        <ic-tree-item label=\"Hot chocolate\"></ic-tree-item>\n      </ic-tree-view>\n    </div>\n  `,\n  name: \"Small - slotted\",\n};\n\nexport const Large = {\n  render: () => html`\n    <div style=\"width:250px\">\n      <ic-tree-view id=\"large-tree-view\" heading=\"Menu\" size=\"large\">\n        <svg slot=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n          <path\n            d=\"M10,4H4C2.89,4 2,4.89 2,6V18A2,2 0 0,0 4,20H20A2,2 0 0,0 22,18V8C22,6.89 21.1,6 20,6H12L10,4Z\"\n          />\n        </svg>\n      </ic-tree-view>\n    </div>\n    <script>\n      document.querySelector(\"#large-tree-view\").treeItemData = [\n        {\n          label: \"Coffee\",\n          icon: '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M13,9V3.5L18.5,9M6,2C4.89,2 4,2.89 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2H6Z\" /></svg>',\n          children: [\n            { label: \"Americano\" },\n            {\n              label: \"Latte\",\n              icon: '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M13,9V3.5L18.5,9M6,2C4.89,2 4,2.89 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2H6Z\" /></svg>',\n            },\n            { label: \"Espresso\" },\n          ],\n        },\n        {\n          label: \"Tea\",\n          children: [{ label: \"Earl grey\" }, { label: \"Chai\" }],\n        },\n        { label: \"Hot chocolate\" },\n      ];\n    </script>\n  `,\n  name: \"Large\",\n};\n\nexport const LargeSlotted = {\n  render: () => html`\n    <div style=\"width:250px\">\n      <ic-tree-view heading=\"Menu\" size=\"large\">\n        <svg slot=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n          <path\n            d=\"M10,4H4C2.89,4 2,4.89 2,6V18A2,2 0 0,0 4,20H20A2,2 0 0,0 22,18V8C22,6.89 21.1,6 20,6H12L10,4Z\"\n          />\n        </svg>\n        <ic-tree-item label=\"Coffee\">\n          <svg\n            slot=\"icon\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path\n              d=\"M13,9V3.5L18.5,9M6,2C4.89,2 4,2.89 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2H6Z\"\n            />\n          </svg>\n          <ic-tree-item label=\"Americano\"></ic-tree-item>\n          <ic-tree-item label=\"Latte\">\n            <svg\n              slot=\"icon\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path\n                d=\"M13,9V3.5L18.5,9M6,2C4.89,2 4,2.89 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2H6Z\"\n              />\n            </svg>\n          </ic-tree-item>\n          <ic-tree-item label=\"Espresso\"></ic-tree-item>\n        </ic-tree-item>\n        <ic-tree-item label=\"Tea\">\n          <ic-tree-item label=\"Earl Grey\"></ic-tree-item>\n          <ic-tree-item label=\"Chai\"></ic-tree-item>\n        </ic-tree-item>\n        <ic-tree-item label=\"Hot chocolate\"></ic-tree-item>\n      </ic-tree-view>\n    </div>\n  `,\n  name: \"Large - slotted\",\n};\n\n/**\n * Individual tree-items can be disabled using the `disabled` prop.\n */\nexport const DisabledTreeItems = {\n  render: () => html`\n    <div style=\"width:250px\">\n      <ic-tree-view id=\"disabled-tree-view\" heading=\"Menu\">\n        <svg slot=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n          <path\n            d=\"M10,4H4C2.89,4 2,4.89 2,6V18A2,2 0 0,0 4,20H20A2,2 0 0,0 22,18V8C22,6.89 21.1,6 20,6H12L10,4Z\"\n          />\n        </svg>\n      </ic-tree-view>\n    </div>\n    <script>\n      document.querySelector(\"#disabled-tree-view\").treeItemData = [\n        {\n          label: \"Coffee\",\n          icon: '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M13,9V3.5L18.5,9M6,2C4.89,2 4,2.89 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2H6Z\" /></svg>',\n          children: [\n            { label: \"Americano\" },\n            {\n              label: \"Latte\",\n              disabled: true,\n              icon: '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M13,9V3.5L18.5,9M6,2C4.89,2 4,2.89 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2H6Z\" /></svg>',\n            },\n            { label: \"Espresso\" },\n          ],\n        },\n        {\n          label: \"Tea\",\n          children: [{ label: \"Earl grey\" }, { label: \"Chai\", disabled: true }],\n        },\n        { label: \"Hot chocolate\", disabled: true },\n      ];\n    </script>\n  `,\n  name: \"Disabled tree items\",\n};\n\nexport const DisabledTreeItemsSlotted = {\n  render: () => html`\n    <div style=\"width:250px\">\n      <ic-tree-view heading=\"Menu\">\n        <svg slot=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n          <path\n            d=\"M10,4H4C2.89,4 2,4.89 2,6V18A2,2 0 0,0 4,20H20A2,2 0 0,0 22,18V8C22,6.89 21.1,6 20,6H12L10,4Z\"\n          />\n        </svg>\n        <ic-tree-item label=\"Coffee\">\n          <svg\n            slot=\"icon\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path\n              d=\"M13,9V3.5L18.5,9M6,2C4.89,2 4,2.89 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2H6Z\"\n            />\n          </svg>\n          <ic-tree-item label=\"Americano\"></ic-tree-item>\n          <ic-tree-item label=\"Latte\" disabled=\"true\">\n            <svg\n              slot=\"icon\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path\n                d=\"M13,9V3.5L18.5,9M6,2C4.89,2 4,2.89 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2H6Z\"\n              />\n            </svg>\n          </ic-tree-item>\n          <ic-tree-item label=\"Espresso\"></ic-tree-item>\n        </ic-tree-item>\n        <ic-tree-item label=\"Tea\">\n          <ic-tree-item label=\"Earl Grey\"></ic-tree-item>\n          <ic-tree-item label=\"Chai\" disabled=\"true\"></ic-tree-item>\n        </ic-tree-item>\n        <ic-tree-item label=\"Hot chocolate\" disabled=\"true\"></ic-tree-item>\n      </ic-tree-view>\n    </div>\n  `,\n  name: \"Disabled tree items - slotted\",\n};\n\n/**\n * Custom links and router-items can be passed in using the `router-item` slot.\n */\nexport const RouterItem = {\n  render: () => html`\n    <div style=\"width:250px\">\n      <ic-tree-view heading=\"Menu\" truncate-tree-items=\"true\">\n        <ic-tree-item>\n          <a slot=\"router-item\" href=\"/\"\n            >Hot chocolate with marshmallows and whipped cream</a\n          >\n        </ic-tree-item>\n        <ic-tree-item>\n          <a slot=\"router-item\" href=\"/tea\">Tea</a>\n        </ic-tree-item>\n        <ic-tree-item label=\"Coffee\"></ic-tree-item>\n      </ic-tree-view>\n    </div>\n  `,\n  name: \"Router item\",\n};\n\n/**\n * Custom content can be passed to both the tree view (using the `heading` slot) and the tree-item (using the `label` slot).\n */\nexport const SlottedContent = {\n  render: () => html`\n      <div style=\"width:250px\">\n        <ic-tree-view>\n          <ic-typography variant=\"subtitle-large\" slot=\"heading\">Menu</ic-typography>\n          <ic-tree-item>\n            <ic-typography slot=\"label\">Coffee<ic-typography>\n          </ic-tree-item>\n          <ic-tree-item label=\"Tea\"></ic-tree-item>\n          <ic-tree-item label=\"Hot chocolate\"></ic-tree-item>\n        </ic-tree-view>\n      </div>\n    `,\n  name: \"Slotted content\",\n};\n\n/**\n * When the heading/label exceeds the width of the container, the text will wrap unless `truncate-tree-item` is set to `true`.\n */\nexport const MaxContent = {\n  render: () => html`\n    <div style=\"width:250px\">\n      <ic-tree-view\n        id=\"max-content-tree-view\"\n        heading=\"Menu with nested options\"\n      >\n        <svg slot=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n          <path\n            d=\"M10,4H4C2.89,4 2,4.89 2,6V18A2,2 0 0,0 4,20H20A2,2 0 0,0 22,18V8C22,6.89 21.1,6 20,6H12L10,4Z\"\n          />\n        </svg>\n      </ic-tree-view>\n    </div>\n    <script>\n      document.querySelector(\"#max-content-tree-view\").treeItemData = [\n        {\n          label: \"Coffee\",\n          icon: '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M13,9V3.5L18.5,9M6,2C4.89,2 4,2.89 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2H6Z\" /></svg>',\n          children: [\n            { label: \"Americano\" },\n            { label: \"Latte with extra milk and sugar\" },\n            { label: \"Espresso\" },\n          ],\n        },\n        {\n          label: \"Tea\",\n          children: [{ label: \"Earl grey\" }, { label: \"Chai\" }],\n        },\n        { label: \"Hot chocolate with marshmallows\" },\n      ];\n    </script>\n  `,\n  name: \"Max content\",\n};\n\nexport const MaxContentSlotted = {\n  render: () => html`\n    <div style=\"width:250px\">\n      <ic-tree-view heading=\"Menu with nested options\">\n        <svg slot=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n          <path\n            d=\"M10,4H4C2.89,4 2,4.89 2,6V18A2,2 0 0,0 4,20H20A2,2 0 0,0 22,18V8C22,6.89 21.1,6 20,6H12L10,4Z\"\n          />\n        </svg>\n        <ic-tree-item label=\"Coffee\">\n          <svg\n            slot=\"icon\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path\n              d=\"M13,9V3.5L18.5,9M6,2C4.89,2 4,2.89 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2H6Z\"\n            />\n          </svg>\n          <ic-tree-item label=\"Americano\"></ic-tree-item>\n          <ic-tree-item label=\"Latte with extra milk and sugar\"></ic-tree-item>\n          <ic-tree-item label=\"Espresso\"></ic-tree-item>\n        </ic-tree-item>\n        <ic-tree-item label=\"Tea\">\n          <ic-tree-item label=\"Earl Grey\"></ic-tree-item>\n          <ic-tree-item label=\"Chai\"></ic-tree-item>\n        </ic-tree-item>\n        <ic-tree-item label=\"Hot chocolate with marshmallows\"></ic-tree-item>\n      </ic-tree-view>\n    </div>\n  `,\n  name: \"Max content - slotted\",\n};\n\n/**\n * When `truncate-tree-items` or `truncate-heading` are set to `true`, and the heading/label exceeds the width of the container, they will be truncated with an ellipsis.\n */\nexport const TruncationBehaviour = {\n  render: () => html`\n    <div style=\"width:250px\">\n      <ic-tree-view\n        id=\"truncated-tree-view\"\n        heading=\"Menu with nested options\"\n        truncate-tree-items=\"true\"\n        truncate-heading=\"true\"\n      >\n        <svg slot=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n          <path\n            d=\"M10,4H4C2.89,4 2,4.89 2,6V18A2,2 0 0,0 4,20H20A2,2 0 0,0 22,18V8C22,6.89 21.1,6 20,6H12L10,4Z\"\n          />\n        </svg>\n      </ic-tree-view>\n    </div>\n    <script>\n      document.querySelector(\"#truncated-tree-view\").treeItemData = [\n        {\n          label: \"Coffee\",\n          icon: '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M13,9V3.5L18.5,9M6,2C4.89,2 4,2.89 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2H6Z\" /></svg>',\n          children: [\n            { label: \"Americano\" },\n            { label: \"Latte with extra milk and sugar\" },\n            { label: \"Espresso\" },\n          ],\n        },\n        {\n          label: \"Tea\",\n          children: [\n            { label: \"Earl grey\" },\n            {\n              label: \"Earl Grey with truncation false\",\n              truncateTreeItem: false,\n            },\n            { label: \"Chai\" },\n          ],\n        },\n        { label: \"Hot chocolate with marshmallows\" },\n      ];\n    </script>\n  `,\n  name: \"Truncation behaviour\",\n};\n\nexport const TruncationBehaviourSlotted = {\n  render: () => html`\n    <div style=\"width:250px\">\n      <ic-tree-view\n        heading=\"Menu with nested options\"\n        truncate-tree-items=\"true\"\n        truncate-heading=\"true\"\n      >\n        <svg slot=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n          <path\n            d=\"M10,4H4C2.89,4 2,4.89 2,6V18A2,2 0 0,0 4,20H20A2,2 0 0,0 22,18V8C22,6.89 21.1,6 20,6H12L10,4Z\"\n          />\n        </svg>\n        <ic-tree-item label=\"Coffee\" expanded=\"true\">\n          <svg\n            slot=\"icon\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path\n              d=\"M13,9V3.5L18.5,9M6,2C4.89,2 4,2.89 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2H6Z\"\n            />\n          </svg>\n          <ic-tree-item label=\"Americano\"></ic-tree-item>\n          <ic-tree-item label=\"Latte with extra milk and sugar\"></ic-tree-item>\n          <ic-tree-item label=\"Espresso\"></ic-tree-item>\n        </ic-tree-item>\n        <ic-tree-item label=\"Tea\" expanded=\"true\">\n          <ic-tree-item label=\"Earl Grey\"></ic-tree-item>\n          <ic-tree-item\n            label=\"Earl Grey with truncation false\"\n            truncate-tree-item=\"false\"\n          ></ic-tree-item>\n          <ic-tree-item label=\"Chai\"></ic-tree-item>\n        </ic-tree-item>\n        <ic-tree-item label=\"Hot chocolate with marshmallows\"></ic-tree-item>\n      </ic-tree-view>\n    </div>\n  `,\n  name: \"Truncation behaviour - slotted\",\n};\n\n/**\n * Utilising the `selected` attribute on `ic-tree-item` will turn it into a controlled component, displaying the selected state when set to `true`.\n */\nexport const SelectedTreeItem = {\n  render: () => html`\n    <div style=\"width:250px\">\n      <ic-tree-view id=\"selected-tree-view\" heading=\"Menu\"> </ic-tree-view>\n    </div>\n    <script>\n      document.querySelector(\"#selected-tree-view\").treeItemData = [\n        { label: \"Coffee\" },\n        { label: \"Tea\" },\n        { label: \"Hot chocolate\", selected: true },\n      ];\n    </script>\n  `,\n  name: \"Selected tree item\",\n};\n\nexport const SelectedTreeItemSlotted = {\n  render: () => html`\n    <div style=\"width:250px\">\n      <ic-tree-view heading=\"Menu\">\n        <ic-tree-item label=\"Coffee\"></ic-tree-item>\n        <ic-tree-item label=\"Tea\"></ic-tree-item>\n        <ic-tree-item label=\"Hot chocolate\" selected=\"true\"></ic-tree-item>\n      </ic-tree-view>\n    </div>\n  `,\n  name: \"Selected tree item - slotted\",\n};\n\n/**\n * When setting the `href` attribute, the tree-item will function as a link.\n */\nexport const Link = {\n  render: () => html`\n    <div style=\"width:250px\">\n      <ic-tree-view id=\"link-tree-view\" heading=\"Menu\"> </ic-tree-view>\n    </div>\n    <script>\n      document.querySelector(\"#link-tree-view\").treeItemData = [\n        { label: \"Coffee\", href: \"#\" },\n        { label: \"Tea\", href: \"#\", selected: true },\n        { label: \"Hot chocolate\", disabled: true, href: \"#\" },\n      ];\n    </script>\n  `,\n  name: \"Link\",\n};\n\nexport const LinkSlotted = {\n  render: () => html`\n    <div style=\"width:250px\">\n      <ic-tree-view heading=\"Menu\">\n        <ic-tree-item label=\"Coffee\" href=\"#\"></ic-tree-item>\n        <ic-tree-item label=\"Tea\" selected=\"true\" href=\"#\"></ic-tree-item>\n        <ic-tree-item\n          label=\"Hot chocolate\"\n          disabled=\"true\"\n          href=\"#\"\n        ></ic-tree-item>\n      </ic-tree-view>\n    </div>\n  `,\n  name: \"Link - slotted\",\n};\n\n/**\n * An example with the `expanded` prop set to `true` on a parent tree item.\n */\nexport const Expanded = {\n  render: () => html`\n    <div style=\"width:250px\">\n      <ic-tree-view id=\"expanded-tree-view\" heading=\"Menu\"> </ic-tree-view>\n    </div>\n    <script>\n      document.querySelector(\"#expanded-tree-view\").treeItemData = [\n        {\n          label: \"Coffee\",\n          expanded: true,\n          children: [\n            {\n              label: \"Americano\",\n              expanded: true,\n              children: [{ label: \"With milk\" }],\n            },\n            { label: \"Latte\" },\n            { label: \"Espresso\" },\n          ],\n        },\n        {\n          label: \"Tea\",\n          children: [{ label: \"Earl grey\" }, { label: \"Chai\" }],\n        },\n        { label: \"Hot chocolate\" },\n      ];\n      const expandElement = document.querySelector(\"#expanded-tree-view\");\n      expandElement.addEventListener(\"icTreeItemExpanded\", function (event) {\n        console.log(\"icTreeItemExpanded\", event.detail);\n      });\n    </script>\n  `,\n  name: \"Expanded\",\n};\n\nexport const ExpandedSlotted = {\n  render: () => html`\n    <div style=\"width:250px\">\n      <ic-tree-view heading=\"Menu\" id=\"expanded-slotted-tree-view\">\n        <ic-tree-item label=\"Coffee\" expanded=\"true\">\n          <ic-tree-item label=\"Americano\" expanded=\"true\">\n            <ic-tree-item label=\"With milk\"></ic-tree-item>\n          </ic-tree-item>\n          <ic-tree-item label=\"Latte\"></ic-tree-item>\n          <ic-tree-item label=\"Espresso\"></ic-tree-item>\n        </ic-tree-item>\n        <ic-tree-item label=\"Tea\">\n          <ic-tree-item label=\"Earl Grey\"></ic-tree-item>\n          <ic-tree-item label=\"Chai\"></ic-tree-item>\n        </ic-tree-item>\n        <ic-tree-item label=\"Hot chocolate\"></ic-tree-item>\n      </ic-tree-view>\n      <script>\n        const expandElement = document.querySelector(\n          \"#expanded-slotted-tree-view\"\n        );\n        expandElement.addEventListener(\"icTreeItemExpanded\", function (event) {\n          console.log(\"icTreeItemExpanded - Slotted\", event.detail);\n        });\n      </script>\n    </div>\n  `,\n  name: \"Expanded - slotted\",\n};\n\nexport const WithNestedSkipLink = {\n  render: () => html`\n    <div style=\"width:250px\">\n      <ic-skip-link target=\"next-content\" inline=\"true\"></ic-skip-link>\n      <ic-tree-view heading=\"Menu\">\n        <ic-tree-item label=\"Coffee\">\n          <ic-tree-item label=\"Americano\">\n            <ic-tree-item label=\"With milk\"></ic-tree-item>\n          </ic-tree-item>\n          <ic-tree-item label=\"Latte\"></ic-tree-item>\n          <ic-tree-item label=\"Espresso\"></ic-tree-item>\n        </ic-tree-item>\n        <ic-tree-item label=\"Tea\">\n          <ic-tree-item label=\"Earl Grey\"></ic-tree-item>\n          <ic-tree-item label=\"Chai\"></ic-tree-item>\n        </ic-tree-item>\n        <ic-tree-item label=\"Hot chocolate\"></ic-tree-item>\n      </ic-tree-view>\n    </div>\n  `,\n  name: \"Nested skip link\",\n};\n"],"names":[],"sourceRoot":""}