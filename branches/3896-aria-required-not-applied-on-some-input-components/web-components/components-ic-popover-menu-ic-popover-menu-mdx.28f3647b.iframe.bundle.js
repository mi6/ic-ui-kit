(self.webpackChunk_ukic_web_components=self.webpackChunk_ukic_web_components||[]).push([[4765],{"./src/components/ic-popover-menu/ic-popover-menu.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>MDXContent});__webpack_require__("./node_modules/react/index.js");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),lib=__webpack_require__("./node_modules/@storybook/addon-docs/node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs");const readme_namespaceObject='# ic-popover-menu\n\nThis is a wrapper component to be placed around one or more ic-menu-item components.\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property           | Attribute           | Description                                                                                                                             | Type                                          | Default     |\n| ------------------ | ------------------- | --------------------------------------------------------------------------------------------------------------------------------------- | --------------------------------------------- | ----------- |\n| `anchor`           | `anchor`            | The ID of the element the popover menu will anchor itself to. This is required unless the popover is a submenu.                         | `string \\| undefined`                         | `undefined` |\n| `fixedPositioning` | `fixed-positioning` | Setting to `true` can help in situations where tooltip content is clipped by a parent element.                                          | `boolean`                                     | `false`     |\n| `open`             | `open`              | If `true`, the popover menu will be displayed.                                                                                          | `boolean \\| undefined`                        | `undefined` |\n| `submenuId`        | `submenu-id`        | The unique identifier for a popover submenu.                                                                                            | `string \\| undefined`                         | `undefined` |\n| `theme`            | `theme`             | Sets the theme color to the dark or light theme color. "inherit" will set the color based on the system settings or ic-theme component. | `"dark" \\| "inherit" \\| "light" \\| undefined` | `"inherit"` |\n\n\n## Events\n\n| Event             | Description                              | Type                                 |\n| ----------------- | ---------------------------------------- | ------------------------------------ |\n| `icPopoverClosed` | Emitted when the popover menu is closed. | `CustomEvent<HTMLIcMenuItemElement>` |\n\n\n## CSS Custom Properties\n\n| Name                   | Description                         |\n| ---------------------- | ----------------------------------- |\n| `--ic-z-index-popover` | z-index of popover menu.            |\n| `--max-height`         | Maximum height of the popover menu. |\n| `--popover-width`      | Default width of the popover menu.  |\n\n\n## Dependencies\n\n### Depends on\n\n- [ic-menu-item](../ic-menu-item)\n- [ic-typography](../ic-typography)\n\n### Graph\n```mermaid\ngraph TD;\n  ic-popover-menu --\x3e ic-menu-item\n  ic-popover-menu --\x3e ic-typography\n  ic-menu-item --\x3e ic-typography\n  ic-menu-item --\x3e ic-button\n  ic-button --\x3e ic-typography\n  ic-button --\x3e ic-loading-indicator\n  ic-button --\x3e ic-tooltip\n  ic-loading-indicator --\x3e ic-typography\n  ic-tooltip --\x3e ic-typography\n  style ic-popover-menu fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n\n',ic_menu_item_readme_namespaceObject='# ic-menu-item\n\n\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property                | Attribute                 | Description                                                                                                                                  | Type                                                                                                                                                                                                  | Default     |\n| ----------------------- | ------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ----------- |\n| `checked`               | `checked`                 | If `true`, the menu item will be in a checked state. This is only applicable when variant is set to `toggle`.                                | `boolean \\| undefined`                                                                                                                                                                                | `false`     |\n| `description`           | `description`             | The description displayed in the menu item, below the label.                                                                                 | `string \\| undefined`                                                                                                                                                                                 | `undefined` |\n| `disabled`              | `disabled`                | If `true`, the menu item will be in disabled state.                                                                                          | `boolean \\| undefined`                                                                                                                                                                                | `false`     |\n| `href`                  | `href`                    | The URL that the link points to. This will render the menu item as an "a" tag.                                                               | `string \\| undefined`                                                                                                                                                                                 | `undefined` |\n| `hreflang`              | `hreflang`                | The human language of the linked URL.                                                                                                        | `string \\| undefined`                                                                                                                                                                                 | `undefined` |\n| `keyboardShortcutLabel` | `keyboard-shortcut-label` | The label describing the keyboard shortcut for a menu item\'s action.                                                                         | `string \\| undefined`                                                                                                                                                                                 | `undefined` |\n| `label` _(required)_    | `label`                   | The label to display in the menu item.                                                                                                       | `string`                                                                                                                                                                                              | `undefined` |\n| `referrerpolicy`        | `referrerpolicy`          | How much of the referrer to send when following the link.                                                                                    | `"" \\| "no-referrer" \\| "no-referrer-when-downgrade" \\| "origin" \\| "origin-when-cross-origin" \\| "same-origin" \\| "strict-origin" \\| "strict-origin-when-cross-origin" \\| "unsafe-url" \\| undefined` | `undefined` |\n| `rel`                   | `rel`                     | The relationship of the linked URL as space-separated link types.                                                                            | `string \\| undefined`                                                                                                                                                                                 | `undefined` |\n| `submenuTriggerFor`     | `submenu-trigger-for`     | This references the popover menu instance that the menu item is a trigger for. If this prop is set, then the variant will always be default. | `string \\| undefined`                                                                                                                                                                                 | `undefined` |\n| `target`                | `target`                  | The place to display the linked URL, as the name for a browsing context (a tab, window, or iframe).                                          | `string \\| undefined`                                                                                                                                                                                 | `undefined` |\n| `variant`               | `variant`                 | The variant of the menu item.                                                                                                                | `"default" \\| "destructive" \\| "toggle" \\| undefined`                                                                                                                                                 | `"default"` |\n\n\n## Events\n\n| Event             | Description                                                                 | Type                                 |\n| ----------------- | --------------------------------------------------------------------------- | ------------------------------------ |\n| `icToggleChecked` | Emitted when the user clicks a menu item that is set to the toggle variant. | `CustomEvent<{ checked: boolean; }>` |\n\n\n## Slots\n\n| Slot     | Description                                                |\n| -------- | ---------------------------------------------------------- |\n| `"icon"` | Content will be placed to the left of the menu item label. |\n\n\n## Dependencies\n\n### Used by\n\n - [ic-popover-menu](../ic-popover-menu)\n\n### Depends on\n\n- [ic-typography](../ic-typography)\n- [ic-button](../ic-button)\n\n### Graph\n```mermaid\ngraph TD;\n  ic-menu-item --\x3e ic-typography\n  ic-menu-item --\x3e ic-button\n  ic-button --\x3e ic-typography\n  ic-button --\x3e ic-loading-indicator\n  ic-button --\x3e ic-tooltip\n  ic-loading-indicator --\x3e ic-typography\n  ic-tooltip --\x3e ic-typography\n  ic-popover-menu --\x3e ic-menu-item\n  style ic-menu-item fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n\n',ic_menu_group_readme_namespaceObject="# ic-menu-group\n\n\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property | Attribute | Description                                          | Type                  | Default     |\n| -------- | --------- | ---------------------------------------------------- | --------------------- | ----------- |\n| `label`  | `label`   | The label to display as the title of the menu group. | `string \\| undefined` | `undefined` |\n\n\n## Dependencies\n\n### Depends on\n\n- [ic-typography](../ic-typography)\n\n### Graph\n```mermaid\ngraph TD;\n  ic-menu-group --\x3e ic-typography\n  style ic-menu-group fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n\n";var ic_popover_menu_stories=__webpack_require__("./src/components/ic-popover-menu/ic-popover-menu.stories.js");function _createMdxContent(props){return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.W8,{of:ic_popover_menu_stories}),"\n",(0,jsx_runtime.jsx)(dist.oz,{children:readme_namespaceObject+ic_menu_item_readme_namespaceObject+ic_menu_group_readme_namespaceObject}),"\n",(0,jsx_runtime.jsx)(dist.om,{})]})}function MDXContent(props={}){const{wrapper:MDXLayout}={...(0,lib.R)(),...props.components};return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent()}},"./node_modules/@storybook/addon-docs/node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{R:()=>useMDXComponents,x:()=>MDXProvider});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const emptyComponents={},MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext(emptyComponents);function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((function(){return"function"==typeof components?components(contextComponents):{...contextComponents,...components}}),[contextComponents,components])}function MDXProvider(properties){let allComponents;return allComponents=properties.disableParentContext?"function"==typeof properties.components?properties.components(emptyComponents):properties.components||emptyComponents:useMDXComponents(properties.components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},properties.children)}},"./node_modules/@storybook/blocks/dist sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/@storybook/blocks/dist sync recursive",module.exports=webpackEmptyContext},"./node_modules/@storybook/core/dist/components sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/@storybook/core/dist/components sync recursive",module.exports=webpackEmptyContext},"./node_modules/@storybook/core/dist/theming sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/@storybook/core/dist/theming sync recursive",module.exports=webpackEmptyContext}}]);