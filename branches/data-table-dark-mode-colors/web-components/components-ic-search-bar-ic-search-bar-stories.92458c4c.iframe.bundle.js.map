{"version":3,"file":"components-ic-search-bar-ic-search-bar-stories.92458c4c.iframe.bundle.js","mappings":";;AAiCA;;;;;;;;;;;;AAmBA;;;;;;;;;;;;;;;;AAuBA;;;;;;;;;;;;;;;;;;;AA0BA;;;;;;;;;;;;;;;AAsBA;;;;;AAYA;;;;;;;;;;;;;AAoBA;;;AAUA;;;AAUA;;;AAUA;;;;;;;;;;;;;;;;;;;AA0BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsEA;;;;;;;;;;;;;;AAqBA;;;;;;;;;;;;;;AAqBA;;;;;;;;;;;;;;AAqBA;;;;;;;;;;;;;;;AAsBA;;;;;;;;;;;;;;;;;AAwBA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AAcA","sources":["webpack://@ukic/web-components/./src/components/ic-search-bar/ic-search-bar.stories.js"],"sourcesContent":["import { html } from \"lit-html\";\n\nconst defaultArgs = {\n  autocapitalize: \"off\",\n  autocorrect: \"off\",\n  autofocus: false,\n  charactersUntilSuggestion: 2,\n  disableAutoFiltering: false,\n  disabled: false,\n  focusOnLoad: true,\n  fullWidth: false,\n  helperText: \"\",\n  hideLabel: false,\n  label: \"What is your favourite coffee?\",\n  loading: false,\n  placeholder: \"Search\",\n  readonly: false,\n  required: false,\n  size: \"medium\",\n  spellcheck: false,\n  theme: \"inherit\",\n};\n\nexport default {\n  title: \"Web Components/Search bar\",\n  component: \"ic-search-bar\",\n};\n\nexport const Default = {\n  render: (args) =>\n    html` <ic-search-bar label=\"What is your favourite coffee?\">\n    </ic-search-bar>`,\n\n  name: \"Default\",\n};\n\nexport const Basic = {\n  render: (args) =>\n    html` <ic-search-bar label=\"What is your favourite coffee?\"></ic-search-bar>\n      <script>\n        document.querySelector(\"ic-search-bar\").options = [\n          { label: \"Espresso\", value: \"espresso\" },\n          { label: \"Double Espresso\", value: \"doubleespresso\" },\n          { label: \"Flat White\", value: \"flatwhite\" },\n          { label: \"Cappuccino\", value: \"cappuccino\" },\n          { label: \"Americano\", value: \"americano\" },\n          { label: \"Ameno\", value: \"ameno\" },\n          { label: \"Aicano\", value: \"acano\" },\n          { label: \"Mocha\", value: \"mocha\" },\n        ];\n      </script>`,\n\n  name: \"Basic\",\n};\n\nexport const WithCustomLabelAndValueFields = {\n  render: (args) =>\n    html` <ic-search-bar\n        label=\"What is your favourite coffee?\"\n        label-field=\"urn\"\n        value-field=\"reference\"\n      ></ic-search-bar>\n      <script>\n        document.querySelector(\"ic-search-bar\").options = [\n          { urn: \"Espresso\", reference: \"espresso\" },\n          { urn: \"Double Espresso\", reference: \"doubleespresso\" },\n          { urn: \"Flat White\", reference: \"flatwhite\" },\n          { urn: \"Cappuccino\", reference: \"cappuccino\" },\n          { urn: \"Americano\", reference: \"americano\" },\n          { urn: \"Ameno\", reference: \"ameno\" },\n          { urn: \"Aicano\", reference: \"acano\" },\n          { urn: \"Mocha\", reference: \"mocha\" },\n        ];\n      </script>`,\n\n  name: \"With custom label and value fields\",\n};\n\nexport const WithOptions = {\n  render: (args) =>\n    html` <ic-search-bar\n        label=\"What is your favourite coffee?\"\n        value=\"Flat White\"\n      ></ic-search-bar>\n      <br />\n      <ic-typography\n        >Suggested search options: Espresso, Double Espresso, Flat White,\n        Cappuccino, Americano, Mocha</ic-typography\n      >\n      <script>\n        document.querySelector(\"ic-search-bar\").options = [\n          { label: \"Espresso\", value: \"espresso\" },\n          { label: \"Double Espresso\", value: \"doubleespresso\" },\n          { label: \"Flat White\", value: \"flatwhite\" },\n          { label: \"Cappuccino\", value: \"cappuccino\" },\n          { label: \"Americano\", value: \"americano\", disabled: true },\n          { label: \"Cafe au lait\", value: \"cafe\" },\n          { label: \"Mocha\", value: \"mocha\" },\n        ];\n      </script>`,\n\n  name: \"With options\",\n};\n\nexport const WithOptionsNoFiltering = {\n  render: (args) =>\n    html` <ic-search-bar\n        label=\"What is your favourite coffee?\"\n        disable-auto-filtering\n      ></ic-search-bar>\n      <br />\n      <ic-typography> All options will be displayed as you type </ic-typography>\n      <script>\n        document.querySelector(\"ic-search-bar\").options = [\n          { label: \"Espresso\", value: \"espresso\" },\n          { label: \"Double Espresso\", value: \"doubleespresso\" },\n          { label: \"Flat White\", value: \"flatwhite\" },\n          { label: \"Cappuccino\", value: \"cappuccino\" },\n          { label: \"Americano\", value: \"americano\", disabled: true },\n          { label: \"Mocha\", value: \"mocha\" },\n        ];\n      </script>`,\n\n  name: \"With options (no filtering)\",\n};\n\nexport const InAForm = {\n  render: (args) =>\n    html` <form>\n      <ic-search-bar\n        name=\"search-01\"\n        label=\"What is your favourite coffee?\"\n      ></ic-search-bar>\n    </form>`,\n\n  name: \"In a form\",\n};\n\nexport const HelperText = {\n  render: (args) =>\n    html` <ic-search-bar\n        label=\"What is your favourite coffee?\"\n        helper-text=\"Some helper text\"\n      ></ic-search-bar>\n      <script>\n        document.querySelector(\"ic-search-bar\").options = [\n          { label: \"Espresso\", value: \"espresso\" },\n          { label: \"Double Espresso\", value: \"doubleespresso\" },\n          { label: \"Flat White\", value: \"flatwhite\" },\n          { label: \"Cappuccino\", value: \"cappuccino\" },\n          { label: \"Americano\", value: \"americano\" },\n          { label: \"Mocha\", value: \"mocha\" },\n        ];\n      </script>`,\n\n  name: \"Helper text\",\n};\n\nexport const Small = {\n  render: (args) =>\n    html` <ic-search-bar\n      label=\"What is your favourite coffee?\"\n      size=\"small\"\n    ></ic-search-bar>`,\n\n  name: \"Small\",\n};\n\nexport const HiddenLabel = {\n  render: (args) =>\n    html` <ic-search-bar\n      label=\"What is your favourite coffee?\"\n      hide-label\n    ></ic-search-bar>`,\n\n  name: \"Hidden label\",\n};\n\nexport const Disabled = {\n  render: (args) =>\n    html` <ic-search-bar\n      label=\"What is your favourite coffee?\"\n      disabled\n    ></ic-search-bar>`,\n\n  name: \"Disabled\",\n};\n\nexport const FullWidth = {\n  render: (args) =>\n    html` <ic-search-bar\n        label=\"What is your favourite coffee?\"\n        full-width\n        id=\"search2\"\n      ></ic-search-bar>\n      <br />\n      <ic-typography\n        >Suggested search options: Espresso, Double Espresso, Flat White,\n        Cappuccino, Americano, Mocha</ic-typography\n      >\n      <script>\n        document.querySelector(\"#search2\").options = [\n          { label: \"Espresso\", value: \"espresso\" },\n          { label: \"Double Espresso\", value: \"doubleespresso\" },\n          { label: \"Flat White\", value: \"flatwhite\" },\n          { label: \"Cappuccino\", value: \"cappuccino\" },\n          { label: \"Americano\", value: \"americano\" },\n          { label: \"Mocha\", value: \"mocha\" },\n        ];\n      </script>`,\n\n  name: \"Full width\",\n};\n\nexport const ExternalFiltering = {\n  render: (args) =>\n    html` <ic-search-bar\n        label=\"Search for coffee\"\n        placeholder=\"Type to search\"\n        debounce=\"300\"\n        disable-auto-filtering=\"true\"\n        id=\"external-filter-search\"\n      ></ic-search-bar>\n      <br />\n      <ic-typography\n        >Suggested search options: Espresso, Double Espresso, Flat White,\n        Cappuccino, Americano, Mocha</ic-typography\n      >\n      <br />\n      <ic-typography\n        >The IcChange event will trigger 300ms after you finish\n        typing.</ic-typography\n      >\n      <script>\n        var mockData = [\n          { label: \"Espresso\", value: \"espresso\" },\n          { label: \"Double Espresso\", value: \"doubleespresso\" },\n          { label: \"Flat White\", value: \"flatwhite\" },\n          { label: \"Cappuccino\", value: \"cappuccino\" },\n          { label: \"Americano\", value: \"americano\" },\n          { label: \"Mocha\", value: \"mocha\" },\n        ];\n        var select = document.querySelector(\"#external-filter-search\");\n        var optionSelected = false;\n        function handleFilter(event) {\n          query = event.detail.value;\n          if (query !== optionSelected) {\n            if (query.length > 1) {\n              optionSelected = false;\n              mockAPI = (query) => {\n                filteredResults = mockData.filter((m) =>\n                  m.label.toLowerCase().includes(query.toLowerCase())\n                );\n                return new Promise((resolve) =>\n                  setTimeout(\n                    () => resolve(filteredResults),\n                    event.type === \"icChange\" ? 2000 : 1000\n                  )\n                );\n              };\n              mockAPI(query).then((results) => (select.options = results));\n            } else {\n              select.options = [];\n            }\n          }\n          optionSelected = \"\";\n        }\n        function handleSelect(event) {\n          optionSelected = true;\n        }\n        select.addEventListener(\"icOptionSelect\", handleSelect);\n        select.addEventListener(\"icChange\", handleFilter);\n        select.addEventListener(\"icRetryLoad\", handleFilter);\n      </script>`,\n\n  name: \"External filtering\",\n};\n\nexport const ExternalFilteringWithLoading = {\n  render: (args) =>\n    html` <ic-search-bar\n        label=\"Search for coffee\"\n        placeholder=\"Type to search\"\n        debounce=\"300\"\n        disable-auto-filtering=\"true\"\n        id=\"external-filter-search\"\n        timeout=\"1000\"\n      ></ic-search-bar>\n      <br />\n      <ic-typography\n        >Suggested search options: Espresso, Double Espresso, Flat White,\n        Cappuccino, Americano, Mocha</ic-typography\n      >\n      <br />\n      <ic-typography\n        >The IcChange event will trigger 300ms after you finish typing. 1 second\n        later, the options in the searchbar menu will be updated.</ic-typography\n      >\n      <script>\n        var mockData = [\n          { label: \"Espresso\", value: \"espresso\" },\n          { label: \"Double Espresso\", value: \"doubleespresso\" },\n          { label: \"Flat White\", value: \"flatwhite\" },\n          { label: \"Cappuccino\", value: \"cappuccino\" },\n          { label: \"Americano\", value: \"americano\" },\n          { label: \"Mocha\", value: \"mocha\" },\n        ];\n        var select = document.querySelector(\"#external-filter-search\");\n        var optionSelected = false;\n        function handleFilter(event) {\n          query = event.detail.value;\n          if (query !== optionSelected) {\n            if (query.length > 1) {\n              if (!optionSelected) {\n                select.loading = true;\n              }\n              optionSelected = false;\n              mockAPI = (query) => {\n                filteredResults = mockData.filter((m) =>\n                  m.label.toLowerCase().includes(query.toLowerCase())\n                );\n                return new Promise((resolve) =>\n                  setTimeout(\n                    () => resolve(filteredResults),\n                    event.type === \"icChange\" ? 2000 : 1000\n                  )\n                );\n              };\n              mockAPI(query).then((results) => (select.options = results));\n            } else {\n              select.options = [];\n            }\n          }\n          optionSelected = \"\";\n        }\n        function handleSelect(event) {\n          optionSelected = true;\n        }\n        select.addEventListener(\"icOptionSelect\", handleSelect);\n        select.addEventListener(\"icChange\", handleFilter);\n        select.addEventListener(\"icRetryLoad\", handleFilter);\n      </script>`,\n\n  name: \"External filtering with loading\",\n};\n\nexport const ExternalFilteringWithCustomLoadingMessages = {\n  render: (args) =>\n    html` <ic-search-bar\n        label=\"Search for coffee\"\n        placeholder=\"Type to search\"\n        debounce=\"300\"\n        disable-auto-filtering=\"true\"\n        id=\"external-filter-search\"\n        timeout=\"1000\"\n        loading-label=\"Loading time\"\n        loading-error-label=\"Oops error\"\n      ></ic-search-bar>\n      <br />\n      <ic-typography\n        >Suggested search options: Espresso, Double Espresso, Flat White,\n        Cappuccino, Americano, Mocha</ic-typography\n      >\n      <br />\n      <ic-typography\n        >The IcChange event will trigger 300ms after you finish typing. 1 second\n        later, the options in the searchbar menu will be updated.</ic-typography\n      >\n      <script>\n        var mockData = [\n          { label: \"Espresso\", value: \"espresso\" },\n          { label: \"Double Espresso\", value: \"doubleespresso\" },\n          { label: \"Flat White\", value: \"flatwhite\" },\n          { label: \"Cappuccino\", value: \"cappuccino\" },\n          { label: \"Americano\", value: \"americano\" },\n          { label: \"Mocha\", value: \"mocha\" },\n        ];\n        var select = document.querySelector(\"#external-filter-search\");\n        var optionSelected = false;\n        function handleFilter(event) {\n          query = event.detail.value;\n          if (query !== optionSelected) {\n            if (query.length > 1) {\n              if (!optionSelected) {\n                select.loading = true;\n              }\n              optionSelected = false;\n              mockAPI = (query) => {\n                filteredResults = mockData.filter((m) =>\n                  m.label.toLowerCase().includes(query.toLowerCase())\n                );\n                return new Promise((resolve) =>\n                  setTimeout(\n                    () => resolve(filteredResults),\n                    event.type === \"icChange\" ? 2000 : 1000\n                  )\n                );\n              };\n              mockAPI(query).then((results) => (select.options = results));\n            } else {\n              select.options = [];\n            }\n          }\n          optionSelected = \"\";\n        }\n        function handleSelect(event) {\n          optionSelected = true;\n        }\n        select.addEventListener(\"icOptionSelect\", handleSelect);\n        select.addEventListener(\"icChange\", handleFilter);\n        select.addEventListener(\"icRetryLoad\", handleFilter);\n      </script>`,\n\n  name: \"External filtering with custom loading messages\",\n};\n\nexport const QuerySearchMode = {\n  render: (args) =>\n    html` <ic-search-bar\n        label=\"What is your favourite coffee?\"\n        search-mode=\"query\"\n      >\n      </ic-search-bar>\n      <script>\n        document.querySelector(\"ic-search-bar\").options = [\n          { label: \"Espresso\", value: \"espresso\" },\n          { label: \"Double Espresso\", value: \"doubleespresso\" },\n          { label: \"Flat White\", value: \"flatwhite\" },\n          { label: \"Cappuccino\", value: \"cappuccino\" },\n          { label: \"Americano\", value: \"americano\" },\n          { label: \"Mocha\", value: \"mocha\" },\n        ];\n      </script>`,\n\n  name: \"Query search mode\",\n};\n\nexport const EmptyOptionListText = {\n  render: (args) =>\n    html` <ic-search-bar\n        label=\"What is your favourite coffee?\"\n        empty-option-list-text=\"There's nothing here\"\n      >\n      </ic-search-bar>\n      <script>\n        document.querySelector(\"ic-search-bar\").options = [\n          { label: \"Espresso\", value: \"espresso\" },\n          { label: \"Double Espresso\", value: \"doubleespresso\" },\n          { label: \"Flat White\", value: \"flatwhite\" },\n          { label: \"Cappuccino\", value: \"cappuccino\" },\n          { label: \"Americano\", value: \"americano\" },\n          { label: \"Mocha\", value: \"mocha\" },\n        ];\n      </script>`,\n\n  name: \"Empty option list text\",\n};\n\nexport const CharactersUntilSuggestion = {\n  render: (args) =>\n    html` <ic-search-bar\n        label=\"What is your favourite coffee?\"\n        characters-until-suggestion=\"5\"\n      >\n      </ic-search-bar>\n      <script>\n        document.querySelector(\"ic-search-bar\").options = [\n          { label: \"Espresso\", value: \"espresso\" },\n          { label: \"Double Espresso\", value: \"doubleespresso\" },\n          { label: \"Flat White\", value: \"flatwhite\" },\n          { label: \"Cappuccino\", value: \"cappuccino\" },\n          { label: \"Americano\", value: \"americano\" },\n          { label: \"Mocha\", value: \"mocha\" },\n        ];\n      </script>`,\n\n  name: \"Characters until suggestion\",\n};\n\nexport const HintText = {\n  render: (args) =>\n    html` <ic-search-bar\n        label=\"What is your favourite coffee?\"\n        assistive-hint-text=\"You can use up and down arrows to navigate the options when they are available, and press enter to select an option.\"\n      ></ic-search-bar>\n      <script>\n        document.querySelector(\"ic-search-bar\").options = [\n          { label: \"Espresso\", value: \"espresso\" },\n          { label: \"Double Espresso\", value: \"doubleespresso\" },\n          { label: \"Flat White\", value: \"flatwhite\" },\n          { label: \"Cappuccino\", value: \"cappuccino\" },\n          { label: \"Americano\", value: \"americano\" },\n          { label: \"Ameno\", value: \"ameno\" },\n          { label: \"Aicano\", value: \"acano\" },\n          { label: \"Mocha\", value: \"mocha\" },\n        ];\n      </script>`,\n\n  name: \"Hint text\",\n};\n\nexport const LongOptionLabels = {\n  render: (args) =>\n    html` <ic-search-bar label=\"What is your favourite coffee?\"></ic-search-bar>\n      <script>\n        document.querySelector(\"ic-search-bar\").options = [\n          {\n            label: \"Espresso because it tastes like coffee\",\n            value: \"espresso\",\n          },\n          {\n            label:\n              \"Double Espresso because it tastes like double the amount of coffee\",\n            value: \"doubleespresso\",\n          },\n          {\n            label: \"Reallylongonewordanswerthatcouldbethenameofacoffee\",\n            value: \"flatwhite\",\n          },\n        ];\n      </script>`,\n\n  name: \"Long option labels\",\n};\n\nconst inlineRadioSelector = \"inline-radio\";\n\nexport const Playground = {\n  render: (args) =>\n    html`<ic-search-bar\n        autocapitalize=${args.autocapitalize}\n        autocorrect=${args.autocorrect}\n        autofocus=${args.autofocus}\n        characters-until-suggestion=${args.charactersUntilSuggestion}\n        disable-auto-filtering=${args.disableAutoFiltering}\n        disabled=${args.disabled}\n        focus-on-load=${args.focusOnLoad}\n        full-width=${args.fullWidth}\n        helper-text=${args.helperText}\n        hide-label=${args.hideLabel}\n        label=${args.label}\n        loading=${args.loading}\n        placeholder=${args.placeholder}\n      >\n      </ic-search-bar>\n      <script>\n        document.querySelector(\"ic-search-bar\").options = [\n          { label: \"Espresso\", value: \"espresso\" },\n          { label: \"Double Espresso\", value: \"doubleespresso\" },\n          { label: \"Flat White\", value: \"flatwhite\" },\n          { label: \"Cappuccino\", value: \"cappuccino\" },\n          { label: \"Americano\", value: \"americano\" },\n          { label: \"Mocha\", value: \"mocha\" },\n        ];\n      </script>`,\n\n  args: defaultArgs,\n\n  argTypes: {\n    autocapitalize: {\n      options: [\"off\", \"none\", \"on\", \"sentences\", \"words\", \"characters\"],\n\n      control: {\n        type: \"select\",\n      },\n    },\n\n    autocorrect: {\n      options: [\"on\", \"off\"],\n\n      control: {\n        type: inlineRadioSelector,\n      },\n    },\n\n    size: {\n      options: [\"medium\", \"small\"],\n\n      control: {\n        type: inlineRadioSelector,\n      },\n    },\n\n    theme: {\n      options: [\"inherit\", \"light\", \"dark\"],\n\n      control: {\n        type: inlineRadioSelector,\n      },\n    },\n  },\n\n  name: \"Playground\",\n};\n"],"names":[],"sourceRoot":""}