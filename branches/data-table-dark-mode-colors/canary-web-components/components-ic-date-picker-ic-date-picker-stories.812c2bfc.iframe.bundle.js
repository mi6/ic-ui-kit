"use strict";(self.webpackChunk_ukic_canary_web_components=self.webpackChunk_ukic_canary_web_components||[]).push([[2217],{"./src/components/ic-date-picker/ic-date-picker.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ButtonsHidden:()=>ButtonsHidden,DateFormatsExample:()=>DateFormatsExample,DaysOutsideMonthHidden:()=>DaysOutsideMonthHidden,DefaultExample:()=>DefaultExample,DisableDaysOfWeek:()=>DisableDaysOfWeek,DisableFutureExample:()=>DisableFutureExample,DisablePastExample:()=>DisablePastExample,DisabledExample:()=>DisabledExample,IcChangeEvent:()=>IcChangeEvent,IcChangeEventEmitDatePartChange:()=>IcChangeEventEmitDatePartChange,JavascriptDates:()=>JavascriptDates,MaxWidthExample:()=>MaxWidthExample,MinMax:()=>MinMax,OpenAtDate:()=>OpenAtDate,SizesExample:()=>SizesExample,StartOfWeek:()=>StartOfWeek,ValueExample:()=>ValueExample,__namedExportsOrder:()=>__namedExportsOrder,default:()=>ic_date_picker_stories});const createDatePickerElement=()=>{const datePicker=document.createElement("ic-date-picker");return datePicker.label="When would you like to collect your coffee?",datePicker},Default=()=>createDatePickerElement(),Small=()=>{const datePicker=createDatePickerElement();return datePicker.size="small",datePicker},Large=()=>{const datePicker=createDatePickerElement();return datePicker.size="large",datePicker},DateFormats=()=>{const container=document.createElement("div");return container.appendChild(Default()),container.appendChild((()=>{const datePicker=createDatePickerElement();return datePicker.dateFormat="MM/DD/YYYY",datePicker})()),container.appendChild((()=>{const datePicker=createDatePickerElement();return datePicker.dateFormat="YYYY/MM/DD",datePicker})()),container.style.display="flex",container.style.flexDirection="column",container.style.gap="16px",container},updateSelectedDate=ev=>{const el=document.querySelector("#selected-date");let text="Selected date: ";ev.detail.value&&(text+=ev.detail.value),el.innerHTML=text,console.log("ic-change",ev.detail)},ic_date_picker_stories={title:"Web Components/Date Picker",component:"ic-date-picker",parameters:{componentAPI:{data:'# ic-date-picker\n\n\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property                | Attribute                  | Description                                                                                                                                                                                                                                            | Type                                                                                                                                                      | Default                                                                                                 |\n| ----------------------- | -------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | --------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------- |\n| `dateFormat`            | `date-format`              | The format in which the date will be displayed.                                                                                                                                                                                                        | `"DD/MM/YYYY" \\| "MM/DD/YYYY" \\| "YYYY/MM/DD"`                                                                                                            | `"DD/MM/YYYY"`                                                                                          |\n| `disableDays`           | --                         | The days of the week to disable.                                                                                                                                                                                                                       | `IcWeekDays[] \\| undefined`                                                                                                                               | `[]`                                                                                                    |\n| `disableDaysMessage`    | `disable-days-message`     | The text to display as the validation message when `disableDays` is `true` and a disabled date is entered.                                                                                                                                             | `string \\| undefined`                                                                                                                                     | `"The date you have selected is on a day of the week that is not allowed. Please select another date."` |\n| `disableFuture`         | `disable-future`           | If `true`, dates in the future are not allowed. A validation message will appear if a date in the future is entered.                                                                                                                                   | `boolean \\| undefined`                                                                                                                                    | `false`                                                                                                 |\n| `disableFutureMessage`  | `disable-future-message`   | The text to display as the validation message when `disableFuture` is `true` and a date in the future is entered.                                                                                                                                      | `string \\| undefined`                                                                                                                                     | `"Dates in the future are not allowed. Please select a date in the past."`                              |\n| `disablePast`           | `disable-past`             | If `true`, dates in the past are not allowed. A validation message will appear if a date in the past is entered.                                                                                                                                       | `boolean \\| undefined`                                                                                                                                    | `false`                                                                                                 |\n| `disablePastMessage`    | `disable-past-message`     | The text to display as the validation message when `disablePast` is `true` and a date in the past is entered.                                                                                                                                          | `string \\| undefined`                                                                                                                                     | `"Dates in the past are not allowed. Please select a date in the future."`                              |\n| `disabled`              | `disabled`                 | If `true`, the disabled state will be set.                                                                                                                                                                                                             | `boolean`                                                                                                                                                 | `false`                                                                                                 |\n| `emitDatePartChange`    | `emit-date-part-change`    | If `true`, every individual input field completed will emit an icChange event.                                                                                                                                                                         | `boolean \\| undefined`                                                                                                                                    | `false`                                                                                                 |\n| `helperText`            | `helper-text`              | The helper text that will be displayed for additional field guidance. This will default to the text "Use format" along with the `dateFormat` value.                                                                                                    | `string \\| undefined`                                                                                                                                     | `undefined`                                                                                             |\n| `hideHelperText`        | `hide-helper-text`         | If `true`, the helper text will be visually hidden, but still read out by screenreaders.                                                                                                                                                               | `boolean`                                                                                                                                                 | `false`                                                                                                 |\n| `hideLabel`             | `hide-label`               | If `true`, the label will be visually hidden, but the required label will still be read out by screen readers.                                                                                                                                         | `boolean \\| undefined`                                                                                                                                    | `false`                                                                                                 |\n| `inputId`               | `input-id`                 | The ID for the input field. The default will be an automatically generated value.                                                                                                                                                                      | `string \\| undefined`                                                                                                                                     | `undefined`                                                                                             |\n| `invalidDateMessage`    | `invalid-date-message`     | The text to display as the validation message when an invalid date is entered.                                                                                                                                                                         | `string \\| undefined`                                                                                                                                     | `"Please enter a valid date."`                                                                          |\n| `label` _(required)_    | `label`                    | The label for the date input.                                                                                                                                                                                                                          | `string`                                                                                                                                                  | `undefined`                                                                                             |\n| `max`                   | `max`                      | The latest date that will be allowed. The value can be in any format supported as `dateFormat`, in ISO 8601 date string format (`yyyy-mm-dd`) or as a JavaScript `Date` object. The value of this prop is ignored if `disableFuture` is set to `true`. | `Date \\| string`                                                                                                                                          | `""`                                                                                                    |\n| `min`                   | `min`                      | The earliest date that will be allowed. The value can be in any format supported as `dateFormat`, in ISO 8601 date string format (`yyyy-mm-dd`) or as a JavaScript `Date` object. The value of this prop is ignored if `disablePast` is set to `true`. | `Date \\| string`                                                                                                                                          | `""`                                                                                                    |\n| `name`                  | `name`                     | The name of the control, which is submitted with the form data.                                                                                                                                                                                        | `string \\| undefined`                                                                                                                                     | `undefined`                                                                                             |\n| `openAtDate`            | `open-at-date`             | The date visible when the calendar opens. Used if no date is currently selected. The value can be in any format supported as `dateFormat`, in ISO 8601 date string format (`yyyy-mm-dd`) or as a JavaScript `Date` object.                             | `Date \\| string`                                                                                                                                          | `""`                                                                                                    |\n| `required`              | `required`                 | If `true`, the input will require a value.                                                                                                                                                                                                             | `boolean \\| undefined`                                                                                                                                    | `false`                                                                                                 |\n| `showDaysOutsideMonth`  | `show-days-outside-month`  | If `true`, days outside the current month will be visible in the date picker.                                                                                                                                                                          | `boolean \\| undefined`                                                                                                                                    | `true`                                                                                                  |\n| `showPickerClearButton` | `show-picker-clear-button` | If `true`, the `Clear` button on the date picker will be visible.                                                                                                                                                                                      | `boolean \\| undefined`                                                                                                                                    | `true`                                                                                                  |\n| `showPickerTodayButton` | `show-picker-today-button` | If `true`, the `Go to today` button on the date picker will be visible.                                                                                                                                                                                | `boolean \\| undefined`                                                                                                                                    | `true`                                                                                                  |\n| `size`                  | `size`                     | The size of the date picker to be displayed.                                                                                                                                                                                                           | `"large" \\| "medium" \\| "small" \\| undefined`                                                                                                             | `"medium"`                                                                                              |\n| `startOfWeek`           | `start-of-week`            | The first day of the week. `0` for Sunday, `1` for Monday, etc. Default is Monday.                                                                                                                                                                     | `IcWeekDays.Friday \\| IcWeekDays.Monday \\| IcWeekDays.Saturday \\| IcWeekDays.Sunday \\| IcWeekDays.Thursday \\| IcWeekDays.Tuesday \\| IcWeekDays.Wednesday` | `IcWeekDays.Monday`                                                                                     |\n| `theme`                 | `theme`                    | Sets the date picker to the dark or light theme colors. "inherit" will set the color based on the system settings or ic-theme component.                                                                                                               | `"dark" \\| "inherit" \\| "light" \\| undefined`                                                                                                             | `"inherit"`                                                                                             |\n| `validationStatus`      | `validation-status`        | The validation status - e.g. \'error\' \\| \'warning\' \\| \'success\'. This will override the built-in date validation.                                                                                                                                       | `"" \\| "error" \\| "success" \\| "warning" \\| undefined`                                                                                                    | `""`                                                                                                    |\n| `validationText`        | `validation-text`          | The text to display as the validation message. This will override the built-in date validation.                                                                                                                                                        | `string \\| undefined`                                                                                                                                     | `""`                                                                                                    |\n| `value`                 | `value`                    | The value of the date picker. The value can be in any format supported as `dateFormat`, in ISO 8601 date string format (`yyyy-mm-dd`) or as a JavaScript `Date` object.                                                                                | `Date \\| null \\| string \\| undefined`                                                                                                                     | `""`                                                                                                    |\n\n\n## Events\n\n| Event      | Description                         | Type                            |\n| ---------- | ----------------------------------- | ------------------------------- |\n| `icChange` | Emitted when the value has changed. | `CustomEvent<{ value: Date; }>` |\n\n\n## CSS Custom Properties\n\n| Name                       | Description              |\n| -------------------------- | ------------------------ |\n| `--ic-z-index-date-picker` | z-index of date picker.  |\n| `--input-width`            | Width of the input field |\n\n\n## Dependencies\n\n### Depends on\n\n- ic-button\n- [ic-date-input](../ic-date-input)\n- ic-typography\n\n### Graph\n```mermaid\ngraph TD;\n  ic-date-picker --\x3e ic-button\n  ic-date-picker --\x3e ic-date-input\n  ic-date-picker --\x3e ic-typography\n  ic-button --\x3e ic-typography\n  ic-button --\x3e ic-loading-indicator\n  ic-button --\x3e ic-tooltip\n  ic-loading-indicator --\x3e ic-typography\n  ic-tooltip --\x3e ic-typography\n  ic-date-input --\x3e ic-input-container\n  ic-date-input --\x3e ic-input-label\n  ic-date-input --\x3e ic-input-component-container\n  ic-date-input --\x3e ic-button\n  ic-date-input --\x3e ic-input-validation\n  ic-input-label --\x3e ic-typography\n  ic-input-validation --\x3e ic-typography\n  style ic-date-picker fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n\n'}}},DefaultExample={render:()=>Default(),name:"Default",height:"540px"},SizesExample={render:()=>(()=>{const container=document.createElement("div");return container.appendChild(Small()),container.appendChild(Default()),container.appendChild(Large()),container.style.display="flex",container.style.flexDirection="column",container.style.gap="16px",container})(),name:"Sizes",height:"790px"},MaxWidthExample={render:()=>(()=>{const container=document.createElement("div");return container.className="dp-max-width-example",container.appendChild(Small()),container.appendChild(Default()),container.appendChild(Large()),container.style.display="flex",container.style.flexDirection="column",container.style.gap="16px",container})(),name:"Max width",height:"790px"},DisabledExample={render:()=>(()=>{const datePicker=createDatePickerElement();return datePicker.disabled=!0,datePicker})(),name:"Disabled",height:"100px"},DateFormatsExample={render:()=>DateFormats(),name:"Date formats",height:"750px"},ValueExample={render:()=>(()=>{const datePicker=createDatePickerElement();return datePicker.value="01/01/2024",datePicker})(),name:"Value",height:"540px"},OpenAtDate={render:()=>(()=>{const datePicker=createDatePickerElement();return datePicker.helperText="The calendar will open showing 25th December 2024, if no date selected",datePicker.openAtDate="2024-12-25",datePicker})(),name:"Open at date",height:"540px"},StartOfWeek={render:()=>(()=>{const datePicker=createDatePickerElement();return datePicker.startOfWeek=0,datePicker})(),name:"Start of week",height:"540px"},DisableDaysOfWeek={render:()=>(()=>{const datePicker=createDatePickerElement();return datePicker.disableDays=[0,6],datePicker})(),name:"Disable days of week",height:"540px"},MinMax={render:()=>(()=>{const datePicker=createDatePickerElement();return datePicker.helperText="Choose a date between the 1st and 31st of July",datePicker.min="2024-07-01",datePicker.max="2024-07-31",datePicker.showPickerTodayButton=!1,datePicker})(),name:"Min and max",height:"540px"},DisablePastExample={render:()=>(()=>{const datePicker=createDatePickerElement();return datePicker.disablePast=!0,datePicker})(),name:"Disable dates in past",height:"540px"},DisableFutureExample={render:()=>(()=>{const datePicker=createDatePickerElement();return datePicker.disableFuture=!0,datePicker})(),name:"Disable dates in future",height:"540px"},DaysOutsideMonthHidden={render:()=>(()=>{const datePicker=createDatePickerElement();return datePicker.showDaysOutsideMonth=!1,datePicker})(),name:"Days outside month hidden",height:"540px"},ButtonsHidden={render:()=>(()=>{const datePicker=createDatePickerElement();return datePicker.showPickerClearButton=!1,datePicker.showPickerTodayButton=!1,datePicker})(),name:"Today & clear buttons hidden",height:"480px"},JavascriptDates={render:()=>(()=>{const datePicker=createDatePickerElement();return datePicker.helperText="Choose a date between the 1st and 31st of July",datePicker.showPickerTodayButton=!1,datePicker.min=new Date(2024,6,1),datePicker.max=new Date(2024,6,31),datePicker.value=new Date(2024,6,15),datePicker})(),name:"JavaScript dates",height:"500px"},IcChangeEvent={render:()=>(()=>{const datePicker=createDatePickerElement();datePicker.addEventListener("icChange",updateSelectedDate);const container=document.createElement("div"),selDate=document.createElement("span");return selDate.innerText="Selected date:",selDate.id="selected-date",container.appendChild(datePicker),container.appendChild(selDate),container.style.display="flex",container.style.flexDirection="column",container.style.gap="50px",container})(),name:"IcChange event",height:"540px"},IcChangeEventEmitDatePartChange={render:()=>(()=>{const datePicker=createDatePickerElement();datePicker.emitDatePartChange=!0,datePicker.addEventListener("icChange",updateSelectedDate);const container=document.createElement("div"),selDate=document.createElement("span");return selDate.innerText="Selected date:",selDate.id="selected-date",container.appendChild(datePicker),container.appendChild(selDate),container.style.display="flex",container.style.flexDirection="column",container.style.gap="50px",container})(),name:"IcChange event with emitDatePartChange",height:"540px"},__namedExportsOrder=["DefaultExample","SizesExample","MaxWidthExample","DisabledExample","DateFormatsExample","ValueExample","OpenAtDate","StartOfWeek","DisableDaysOfWeek","MinMax","DisablePastExample","DisableFutureExample","DaysOutsideMonthHidden","ButtonsHidden","JavascriptDates","IcChangeEvent","IcChangeEventEmitDatePartChange"];DefaultExample.parameters={...DefaultExample.parameters,docs:{...DefaultExample.parameters?.docs,source:{originalSource:'{\n  render: () => Default(),\n  name: "Default",\n  height: "540px"\n}',...DefaultExample.parameters?.docs?.source},description:{story:"Use a date picker to select a single date where visualising that date could be useful.\n\nThere is one required prop for a date picker:\n- label: `string`\n\nClick the 'Component API' tab to view all the available props and events for date pickers.\n\nTo use the date picker component, import `@ukic/canary-web-components` into your application.\n\nThe default date picker uses the date format of `DD/MM/YYYY`.",...DefaultExample.parameters?.docs?.description}}},SizesExample.parameters={...SizesExample.parameters,docs:{...SizesExample.parameters?.docs,source:{originalSource:'{\n  render: () => Sizes(),\n  name: "Sizes",\n  height: "790px"\n}',...SizesExample.parameters?.docs?.source},description:{story:"Set the size of the date picker by using the `size` prop. This prop takes the values `small`, `medium` (default) or `large`. Depending on the chosen size, the prop will apply styling to increase or decrease the amount of spacing within the component.",...SizesExample.parameters?.docs?.description}}},MaxWidthExample.parameters={...MaxWidthExample.parameters,docs:{...MaxWidthExample.parameters?.docs,source:{originalSource:'{\n  render: () => MaxWidth(),\n  name: "Max width",\n  height: "790px"\n}',...MaxWidthExample.parameters?.docs?.source},description:{story:"Set the size of the input field by using the `--input-width` CSS custom property. The picker will grow, but not exceed its maximum supported width.",...MaxWidthExample.parameters?.docs?.description}}},DisabledExample.parameters={...DisabledExample.parameters,docs:{...DisabledExample.parameters?.docs,source:{originalSource:'{\n  render: () => Disabled(),\n  name: "Disabled",\n  height: "100px"\n}',...DisabledExample.parameters?.docs?.source},description:{story:"Disable the date picker and prevent user interaction by using the `disabled` prop.",...DisabledExample.parameters?.docs?.description}}},DateFormatsExample.parameters={...DateFormatsExample.parameters,docs:{...DateFormatsExample.parameters?.docs,source:{originalSource:'{\n  render: () => DateFormats(),\n  name: "Date formats",\n  height: "750px"\n}',...DateFormatsExample.parameters?.docs?.source},description:{story:"The `date-format` prop determines how dates are displayed. The supported formats are `DD/MM/YYYY`, `MM/DD/YYYY` or `YYYY/MM/DD`.",...DateFormatsExample.parameters?.docs?.description}}},ValueExample.parameters={...ValueExample.parameters,docs:{...ValueExample.parameters?.docs,source:{originalSource:'{\n  render: () => Value(),\n  name: "Value",\n  height: "540px"\n}',...ValueExample.parameters?.docs?.source},description:{story:"The `value` prop sets the date in the input field. The value can be in any format supported by the `date-format` prop, in ISO 8601 date string format (yyyy-mm-dd) or as a JavaScript Date object.",...ValueExample.parameters?.docs?.description}}},OpenAtDate.parameters={...OpenAtDate.parameters,docs:{...OpenAtDate.parameters?.docs,source:{originalSource:'{\n  render: () => OpenAt(),\n  name: "Open at date",\n  height: "540px"\n}',...OpenAtDate.parameters?.docs?.source},description:{story:"If no `value` is set, the `open-at-date` prop can be used to specify the date in view when the calendar view is opened. If not set to a value, the calendar will default to showing the current date.\n\nThe supported formats are the same as for the `value` prop.",...OpenAtDate.parameters?.docs?.description}}},StartOfWeek.parameters={...StartOfWeek.parameters,docs:{...StartOfWeek.parameters?.docs,source:{originalSource:'{\n  render: () => WeekStart(),\n  name: "Start of week",\n  height: "540px"\n}',...StartOfWeek.parameters?.docs?.source},description:{story:"The first day of the week can be changed by setting the `start-of-week` prop. This is a numeric value where 0 = Sunday, 1 = Monday, etc up to 6 = Saturday.",...StartOfWeek.parameters?.docs?.description}}},DisableDaysOfWeek.parameters={...DisableDaysOfWeek.parameters,docs:{...DisableDaysOfWeek.parameters?.docs,source:{originalSource:'{\n  render: () => WorkingWeek(),\n  name: "Disable days of week",\n  height: "540px"\n}',...DisableDaysOfWeek.parameters?.docs?.source},description:{story:"Specific days of the week can be disabled from selection by setting the `disable-days` prop. The value can be set as an array of numeric values where where 0 = Sunday, 1 = Monday, etc up to 6 = Saturday.",...DisableDaysOfWeek.parameters?.docs?.description}}},MinMax.parameters={...MinMax.parameters,docs:{...MinMax.parameters?.docs,source:{originalSource:'{\n  render: () => MaxMin(),\n  name: "Min and max",\n  height: "540px"\n}',...MinMax.parameters?.docs?.source},description:{story:"The `max` and `min` props can be used to limit the range of dates available for selection. Values can be in any format supported by the `date-format` prop, in ISO 8601 date string format (yyyy-mm-dd) or as a JavaScript Date object.",...MinMax.parameters?.docs?.description}}},DisablePastExample.parameters={...DisablePastExample.parameters,docs:{...DisablePastExample.parameters?.docs,source:{originalSource:'{\n  render: () => DisablePast(),\n  name: "Disable dates in past",\n  height: "540px"\n}',...DisablePastExample.parameters?.docs?.source},description:{story:"Dates before today can be disabled with the `disable-past` prop.",...DisablePastExample.parameters?.docs?.description}}},DisableFutureExample.parameters={...DisableFutureExample.parameters,docs:{...DisableFutureExample.parameters?.docs,source:{originalSource:'{\n  render: () => DisableFuture(),\n  name: "Disable dates in future",\n  height: "540px"\n}',...DisableFutureExample.parameters?.docs?.source},description:{story:"Dates after today can be disabled with the `disable-future` prop.",...DisableFutureExample.parameters?.docs?.description}}},DaysOutsideMonthHidden.parameters={...DaysOutsideMonthHidden.parameters,docs:{...DaysOutsideMonthHidden.parameters?.docs,source:{originalSource:'{\n  render: () => HideOutsideMonth(),\n  name: "Days outside month hidden",\n  height: "540px"\n}',...DaysOutsideMonthHidden.parameters?.docs?.source},description:{story:"Days outside of the current month in view can be hidden by setting the `show-days-outside-month` prop to `false`.",...DaysOutsideMonthHidden.parameters?.docs?.description}}},ButtonsHidden.parameters={...ButtonsHidden.parameters,docs:{...ButtonsHidden.parameters?.docs,source:{originalSource:'{\n  render: () => HideButtons(),\n  name: "Today & clear buttons hidden",\n  height: "480px"\n}',...ButtonsHidden.parameters?.docs?.source},description:{story:'The "Go to today" and "Clear" buttons can be hidden from the calendar view by setting the `show-picker-today-button` and `show-picker-clear-button` props to `false`.',...ButtonsHidden.parameters?.docs?.description}}},JavascriptDates.parameters={...JavascriptDates.parameters,docs:{...JavascriptDates.parameters?.docs,source:{originalSource:'{\n  render: () => JSDates(),\n  name: "JavaScript dates",\n  height: "500px"\n}',...JavascriptDates.parameters?.docs?.source},description:{story:"Any prop that accepts a date value can be set to a Javascript Date object. The following example sets the `value`, `max` and `min` props.",...JavascriptDates.parameters?.docs?.description}}},IcChangeEvent.parameters={...IcChangeEvent.parameters,docs:{...IcChangeEvent.parameters?.docs,source:{originalSource:'{\n  render: () => IcChangeDate(),\n  name: "IcChange event",\n  height: "540px"\n}',...IcChangeEvent.parameters?.docs?.source},description:{story:"The `IcChange` event is emitted by the date picker when the selected date changes.",...IcChangeEvent.parameters?.docs?.description}}},IcChangeEventEmitDatePartChange.parameters={...IcChangeEventEmitDatePartChange.parameters,docs:{...IcChangeEventEmitDatePartChange.parameters?.docs,source:{originalSource:'{\n  render: () => IcChangeDateEmitDatePartChanges(),\n  name: "IcChange event with emitDatePartChange",\n  height: "540px"\n}',...IcChangeEventEmitDatePartChange.parameters?.docs?.source},description:{story:"The `IcChange` event is emitted by the date picker every time an input field is changed.",...IcChangeEventEmitDatePartChange.parameters?.docs?.description}}}}}]);