"use strict";(self.webpackChunk_ukic_canary_react=self.webpackChunk_ukic_canary_react||[]).push([[710],{"../react/dist/react-component-lib/slottedSVG.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{k:()=>SlottedSVG});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),__assign=function(){return __assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t},__assign.apply(this,arguments)},__rest=function(s,e){var t={};for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0&&(t[p]=s[p]);if(null!=s&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(p=Object.getOwnPropertySymbols(s);i<p.length;i++)e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]])}return t},defaultProps={xmlns:"http://www.w3.org/2000/svg"};var SlottedSVG=function(_a){var path=_a.path,slotName=_a.slot,children=_a.children,props=__rest(_a,["path","slot","children"]);return react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",__assign({},function slot(name){return void 0===name&&(name=""),{ref:function(e){return e?e.setAttribute("slot",name):null}}}(slotName),props,defaultProps),!!path&&react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{d:path}),children)};SlottedSVG.__docgenInfo={description:"",methods:[],displayName:"SlottedSVG"}},"./src/stories/ic-tree-view.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Basic:()=>Basic,BasicSlotted:()=>BasicSlotted,DisabledTreeItems:()=>DisabledTreeItems,DisabledTreeItemsSlotted:()=>DisabledTreeItemsSlotted,Expanded:()=>Expanded,ExpandedSlotted:()=>ExpandedSlotted,Large:()=>Large,LargeSlotted:()=>LargeSlotted,Link:()=>Link,LinkSlotted:()=>LinkSlotted,MaxContent:()=>MaxContent,MaxContentSlotted:()=>MaxContentSlotted,Nested:()=>Nested,NestedSlotted:()=>NestedSlotted,Playground:()=>Playground,PlaygroundSlotted:()=>PlaygroundSlotted,RouterItem:()=>RouterItem,SelectedTreeItem:()=>SelectedTreeItem,SelectedTreeItemSlotted:()=>SelectedTreeItemSlotted,SlottedContent:()=>SlottedContent,Small:()=>Small,SmallSlotted:()=>SmallSlotted,TruncationBehaviour:()=>TruncationBehaviour,TruncationBehaviourSlotted:()=>TruncationBehaviourSlotted,UpdatingOptions:()=>UpdatingOptions,UpdatingOptionsSlotted:()=>UpdatingOptionsSlotted,WithIcons:()=>WithIcons,WithIconsSlotted:()=>WithIconsSlotted,WithNestedSkipLink:()=>WithNestedSkipLink,__namedExportsOrder:()=>__namedExportsOrder,default:()=>ic_tree_view_stories});var slottedSVG=__webpack_require__("../react/dist/react-component-lib/slottedSVG.js"),components=__webpack_require__("../react/dist/components.js"),react=__webpack_require__("./node_modules/react/index.js");var src_components=__webpack_require__("./src/components.ts");const ic_tree_view_stories={title:"React Components/Tree view",component:src_components.yy,parameters:{componentAPI:{data:'# ic-tree-view\n\n\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property            | Attribute             | Description                                                                                                                                                                         | Type                                          | Default     |\n| ------------------- | --------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | --------------------------------------------- | ----------- |\n| `heading`           | `heading`             | The heading of the tree view.                                                                                                                                                       | `string`                                      | `""`        |\n| `size`              | `size`                | The size of the tree view.                                                                                                                                                          | `"large" \\| "medium" \\| "small" \\| undefined` | `"medium"`  |\n| `theme`             | `theme`               | Sets the theme color to the dark or light theme color. "inherit" will set the color based on the system settings or ic-theme component.                                             | `"dark" \\| "inherit" \\| "light" \\| undefined` | `"inherit"` |\n| `treeItemData`      | --                    | The content within the tree view tree items. This will take precedence over slotted content.                                                                                        | `IcTreeItemOptions[]`                         | `[]`        |\n| `truncateHeading`   | `truncate-heading`    | If `true`, the tree view heading will be truncated instead of text wrapping. When used on small devices, this prop will be overridden and headings will be set to text-wrap.        | `boolean`                                     | `false`     |\n| `truncateTreeItems` | `truncate-tree-items` | If `true`, tree items will be truncated, unless they are individually overridden. When used on small devices, this prop will be overridden and tree-items will be set to text-wrap. | `boolean`                                     | `false`     |\n\n\n## Slots\n\n| Slot        | Description                                   |\n| ----------- | --------------------------------------------- |\n| `"heading"` | Content is set as the tree view heading.      |\n| `"icon"`    | Content is placed to the left of the heading. |\n\n\n## CSS Custom Properties\n\n| Name                | Description            |\n| ------------------- | ---------------------- |\n| `--tree-view-width` | Width of the tree view |\n\n\n## Dependencies\n\n### Depends on\n\n- ic-tooltip\n- ic-typography\n\n### Graph\n```mermaid\ngraph TD;\n  ic-tree-view --\x3e ic-tooltip\n  ic-tree-view --\x3e ic-typography\n  ic-tooltip --\x3e ic-typography\n  style ic-tree-view fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n\n# ic-tree-item\n\n\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property           | Attribute            | Description                                                                                                                             | Type                                                                                                                                                                                                  | Default     |\n| ------------------ | -------------------- | --------------------------------------------------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ----------- |\n| `disabled`         | `disabled`           | If `true`, the tree item appears in the disabled state.                                                                                 | `boolean`                                                                                                                                                                                             | `false`     |\n| `expanded`         | `expanded`           | If `true`, the tree item appears in the expanded state.                                                                                 | `boolean`                                                                                                                                                                                             | `false`     |\n| `href`             | `href`               | The URL that the tree item link points to. If set, the tree item will render as an "a" tag, otherwise it will render as a div.          | `string \\| undefined`                                                                                                                                                                                 | `undefined` |\n| `hreflang`         | `hreflang`           | The human language of the linked URL.                                                                                                   | `string \\| undefined`                                                                                                                                                                                 | `""`        |\n| `label`            | `label`              | The label of the tree item.                                                                                                             | `string`                                                                                                                                                                                              | `""`        |\n| `referrerpolicy`   | `referrerpolicy`     | How much of the referrer to send when following the link.                                                                               | `"" \\| "no-referrer" \\| "no-referrer-when-downgrade" \\| "origin" \\| "origin-when-cross-origin" \\| "same-origin" \\| "strict-origin" \\| "strict-origin-when-cross-origin" \\| "unsafe-url" \\| undefined` | `undefined` |\n| `rel`              | `rel`                | The relationship of the linked URL as space-separated link types.                                                                       | `string \\| undefined`                                                                                                                                                                                 | `undefined` |\n| `selected`         | `selected`           | If `true`, the tree item appears in the selected state.                                                                                 | `boolean`                                                                                                                                                                                             | `false`     |\n| `target`           | `target`             | The place to display the linked URL, as the name for a browsing context (a tab, window, or iframe).                                     | `string \\| undefined`                                                                                                                                                                                 | `undefined` |\n| `theme`            | `theme`              | Sets the theme color to the dark or light theme color. "inherit" will set the color based on the system settings or ic-theme component. | `"dark" \\| "inherit" \\| "light" \\| undefined`                                                                                                                                                         | `"inherit"` |\n| `truncateTreeItem` | `truncate-tree-item` | If `true`, the tree item label will be truncated instead of text wrapping.                                                              | `boolean \\| undefined`                                                                                                                                                                                | `undefined` |\n\n\n## Events\n\n| Event                | Description                         | Type                                    |\n| -------------------- | ----------------------------------- | --------------------------------------- |\n| `icTreeItemExpanded` | Emitted when tree item is expanded. | `CustomEvent<{ isExpanded: boolean; }>` |\n| `icTreeItemSelected` | Emitted when tree item is selected. | `CustomEvent<{ id: string; }>`          |\n\n\n## Methods\n\n### `setFocus() => Promise<void>`\n\nSets focus on the native `input`.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n\n## Slots\n\n| Slot            | Description                                         |\n| --------------- | --------------------------------------------------- |\n| `"icon"`        | Content is placed to the left of the label.         |\n| `"label"`       | Content is set as the tree item label.              |\n| `"router-item"` | Handle routing by nesting your routes in this slot. |\n\n\n## Dependencies\n\n### Depends on\n\n- ic-typography\n- ic-tooltip\n\n### Graph\n```mermaid\ngraph TD;\n  ic-tree-item --\x3e ic-typography\n  ic-tree-item --\x3e ic-tooltip\n  ic-tooltip --\x3e ic-typography\n  style ic-tree-item fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n\n'}}},Basic={render:()=>react.createElement("div",{style:{width:"250px"}},react.createElement(src_components.yy,{heading:"Menu",treeItemData:[{label:"Coffee"},{label:"Tea"},{label:"Hot chocolate"}]})),name:"Basic"},BasicSlotted={render:()=>react.createElement("div",{style:{width:"250px"}},react.createElement(src_components.yy,{heading:"Menu"},react.createElement(src_components.EU,{label:"Coffee"}),react.createElement(src_components.EU,{label:"Tea"}),react.createElement(src_components.EU,{label:"Hot chocolate"}))),name:"Basic - slotted"},Nested={render:()=>react.createElement("div",{style:{width:"250px"}},react.createElement(src_components.yy,{heading:"Menu",treeItemData:[{label:"Coffee",children:[{label:"Americano",children:[{label:"With milk"}]},{label:"Latte"},{label:"Espresso"}]},{label:"Tea",children:[{label:"Earl grey"},{label:"Chai"}]},{label:"Hot chocolate"}]})),name:"Nested"},NestedSlotted={render:()=>react.createElement("div",{style:{width:"250px"}},react.createElement(src_components.yy,{heading:"Menu"},react.createElement(src_components.EU,{label:"Coffee"},react.createElement(src_components.EU,{label:"Americano"}),react.createElement(src_components.EU,{label:"Latte"}),react.createElement(src_components.EU,{label:"Espresso"})),react.createElement(src_components.EU,{label:"Tea"},react.createElement(src_components.EU,{label:"Earl Grey"}),react.createElement(src_components.EU,{label:"Chai"})),react.createElement(src_components.EU,{label:"Hot chocolate"}))),name:"Nested - slotted"},WithIcons={render:()=>react.createElement("div",{style:{width:"250px"}},react.createElement(src_components.yy,{heading:"Menu",treeItemData:[{label:"Coffee",icon:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M13,9V3.5L18.5,9M6,2C4.89,2 4,2.89 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2H6Z" /></svg>',children:[{label:"Americano"},{label:"Latte",icon:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M13,9V3.5L18.5,9M6,2C4.89,2 4,2.89 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2H6Z" /></svg>'},{label:"Espresso"}]},{label:"Tea",children:[{label:"Earl grey"},{label:"Chai"}]},{label:"Hot chocolate"}]},react.createElement(slottedSVG.k,{slot:"icon",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24"},react.createElement("path",{d:"M10,4H4C2.89,4 2,4.89 2,6V18A2,2 0 0,0 4,20H20A2,2 0 0,0 22,18V8C22,6.89 21.1,6 20,6H12L10,4Z"})))),name:"With icons"},WithIconsSlotted={render:()=>react.createElement("div",{style:{width:"250px"}},react.createElement(src_components.yy,{heading:"Menu"},react.createElement(slottedSVG.k,{slot:"icon",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24"},react.createElement("path",{d:"M10,4H4C2.89,4 2,4.89 2,6V18A2,2 0 0,0 4,20H20A2,2 0 0,0 22,18V8C22,6.89 21.1,6 20,6H12L10,4Z"})),react.createElement(src_components.EU,{label:"Coffee"},react.createElement(slottedSVG.k,{slot:"icon",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24"},react.createElement("path",{d:"M13,9V3.5L18.5,9M6,2C4.89,2 4,2.89 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2H6Z"})),react.createElement(src_components.EU,{label:"Americano"}),react.createElement(src_components.EU,{label:"Latte"},react.createElement(slottedSVG.k,{slot:"icon",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24"},react.createElement("path",{d:"M13,9V3.5L18.5,9M6,2C4.89,2 4,2.89 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2H6Z"}))),react.createElement(src_components.EU,{label:"Espresso"})),react.createElement(src_components.EU,{label:"Tea"},react.createElement(src_components.EU,{label:"Earl Grey"}),react.createElement(src_components.EU,{label:"Chai"})),react.createElement(src_components.EU,{label:"Hot chocolate"}))),name:"With icons - slotted"},Small={render:()=>react.createElement("div",{style:{width:"250px"}},react.createElement(src_components.yy,{heading:"Menu",size:"small",treeItemData:[{label:"Coffee",icon:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M13,9V3.5L18.5,9M6,2C4.89,2 4,2.89 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2H6Z" /></svg>',children:[{label:"Americano"},{label:"Latte",icon:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M13,9V3.5L18.5,9M6,2C4.89,2 4,2.89 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2H6Z" /></svg>'},{label:"Espresso"}]},{label:"Tea",children:[{label:"Earl grey"},{label:"Chai"}]},{label:"Hot chocolate"}]},react.createElement(slottedSVG.k,{slot:"icon",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24"},react.createElement("path",{d:"M10,4H4C2.89,4 2,4.89 2,6V18A2,2 0 0,0 4,20H20A2,2 0 0,0 22,18V8C22,6.89 21.1,6 20,6H12L10,4Z"})))),name:"Small"},SmallSlotted={render:()=>react.createElement("div",{style:{width:"250px"}},react.createElement(src_components.yy,{heading:"Menu",size:"small"},react.createElement(slottedSVG.k,{slot:"icon",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24"},react.createElement("path",{d:"M10,4H4C2.89,4 2,4.89 2,6V18A2,2 0 0,0 4,20H20A2,2 0 0,0 22,18V8C22,6.89 21.1,6 20,6H12L10,4Z"})),react.createElement(src_components.EU,{label:"Coffee"},react.createElement(slottedSVG.k,{slot:"icon",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24"},react.createElement("path",{d:"M13,9V3.5L18.5,9M6,2C4.89,2 4,2.89 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2H6Z"})),react.createElement(src_components.EU,{label:"Americano"}),react.createElement(src_components.EU,{label:"Latte"},react.createElement(slottedSVG.k,{slot:"icon",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24"},react.createElement("path",{d:"M13,9V3.5L18.5,9M6,2C4.89,2 4,2.89 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2H6Z"}))),react.createElement(src_components.EU,{label:"Espresso"})),react.createElement(src_components.EU,{label:"Tea"},react.createElement(src_components.EU,{label:"Earl Grey"}),react.createElement(src_components.EU,{label:"Chai"})),react.createElement(src_components.EU,{label:"Hot chocolate"}))),name:"Small - slotted"},Large={render:()=>react.createElement("div",{style:{width:"250px"}},react.createElement(src_components.yy,{heading:"Menu",size:"large",treeItemData:[{label:"Coffee",icon:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M13,9V3.5L18.5,9M6,2C4.89,2 4,2.89 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2H6Z" /></svg>',children:[{label:"Americano"},{label:"Latte",icon:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M13,9V3.5L18.5,9M6,2C4.89,2 4,2.89 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2H6Z" /></svg>'},{label:"Espresso"}]},{label:"Tea",children:[{label:"Earl grey"},{label:"Chai"}]},{label:"Hot chocolate"}]},react.createElement(slottedSVG.k,{slot:"icon",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24"},react.createElement("path",{d:"M10,4H4C2.89,4 2,4.89 2,6V18A2,2 0 0,0 4,20H20A2,2 0 0,0 22,18V8C22,6.89 21.1,6 20,6H12L10,4Z"})))),name:"Large"},LargeSlotted={render:()=>react.createElement("div",{style:{width:"250px"}},react.createElement(src_components.yy,{heading:"Menu",size:"large"},react.createElement(slottedSVG.k,{slot:"icon",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24"},react.createElement("path",{d:"M10,4H4C2.89,4 2,4.89 2,6V18A2,2 0 0,0 4,20H20A2,2 0 0,0 22,18V8C22,6.89 21.1,6 20,6H12L10,4Z"})),react.createElement(src_components.EU,{label:"Coffee"},react.createElement(slottedSVG.k,{slot:"icon",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24"},react.createElement("path",{d:"M13,9V3.5L18.5,9M6,2C4.89,2 4,2.89 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2H6Z"})),react.createElement(src_components.EU,{label:"Americano"}),react.createElement(src_components.EU,{label:"Latte"},react.createElement(slottedSVG.k,{slot:"icon",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24"},react.createElement("path",{d:"M13,9V3.5L18.5,9M6,2C4.89,2 4,2.89 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2H6Z"}))),react.createElement(src_components.EU,{label:"Espresso"})),react.createElement(src_components.EU,{label:"Tea"},react.createElement(src_components.EU,{label:"Earl Grey"}),react.createElement(src_components.EU,{label:"Chai"})),react.createElement(src_components.EU,{label:"Hot chocolate"}))),name:"Large - slotted"},DisabledTreeItems={render:()=>react.createElement("div",{style:{width:"250px"}},react.createElement(src_components.yy,{heading:"Menu",treeItemData:[{label:"Coffee",icon:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M13,9V3.5L18.5,9M6,2C4.89,2 4,2.89 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2H6Z" /></svg>',children:[{label:"Americano"},{label:"Latte",disabled:!0,icon:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M13,9V3.5L18.5,9M6,2C4.89,2 4,2.89 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2H6Z" /></svg>'},{label:"Espresso"}]},{label:"Tea",children:[{label:"Earl grey"},{label:"Chai",disabled:!0}]},{label:"Hot chocolate",disabled:!0}]},react.createElement(slottedSVG.k,{slot:"icon",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24"},react.createElement("path",{d:"M10,4H4C2.89,4 2,4.89 2,6V18A2,2 0 0,0 4,20H20A2,2 0 0,0 22,18V8C22,6.89 21.1,6 20,6H12L10,4Z"})))),name:"Disabled tree items"},DisabledTreeItemsSlotted={render:()=>react.createElement("div",{style:{width:"250px"}},react.createElement(src_components.yy,{heading:"Menu"},react.createElement(slottedSVG.k,{slot:"icon",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24"},react.createElement("path",{d:"M10,4H4C2.89,4 2,4.89 2,6V18A2,2 0 0,0 4,20H20A2,2 0 0,0 22,18V8C22,6.89 21.1,6 20,6H12L10,4Z"})),react.createElement(src_components.EU,{label:"Coffee"},react.createElement(slottedSVG.k,{slot:"icon",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24"},react.createElement("path",{d:"M13,9V3.5L18.5,9M6,2C4.89,2 4,2.89 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2H6Z"})),react.createElement(src_components.EU,{label:"Americano"}),react.createElement(src_components.EU,{label:"Latte",disabled:!0},react.createElement(slottedSVG.k,{slot:"icon",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24"},react.createElement("path",{d:"M13,9V3.5L18.5,9M6,2C4.89,2 4,2.89 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2H6Z"}))),react.createElement(src_components.EU,{label:"Espresso"})),react.createElement(src_components.EU,{label:"Tea"},react.createElement(src_components.EU,{label:"Earl Grey"}),react.createElement(src_components.EU,{label:"Chai",disabled:!0})),react.createElement(src_components.EU,{label:"Hot chocolate",disabled:!0}))),name:"Disabled tree items - slotted"},RouterItem={render:()=>react.createElement("div",{style:{width:"250px"}},react.createElement(src_components.yy,{heading:"Menu",truncateTreeItems:!0},react.createElement(src_components.EU,null,react.createElement("a",{slot:"router-item",href:"/"},"Hot chocolate with marshmallows and whipped cream")),react.createElement(src_components.EU,null,react.createElement("a",{slot:"router-item",href:"/tea"},"Tea")),react.createElement(src_components.EU,{label:"Coffee"}))),name:"Router item"},SlottedContent={render:()=>react.createElement("div",{style:{width:"250px"}},react.createElement(src_components.yy,null,react.createElement(components.Cu,{variant:"subtitle-large",slot:"heading"},"Menu"),react.createElement(src_components.EU,null,react.createElement(components.Cu,{slot:"label"},"Coffee")),react.createElement(src_components.EU,{label:"Tea"}),react.createElement(src_components.EU,{label:"Hot chocolate"}))),name:"Slotted content"},MaxContent={render:()=>react.createElement("div",{style:{width:"250px"}},react.createElement(src_components.yy,{heading:"Menu",treeItemData:[{label:"Coffee",icon:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M13,9V3.5L18.5,9M6,2C4.89,2 4,2.89 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2H6Z" /></svg>',children:[{label:"Americano"},{label:"Latte with extra milk and sugar"},{label:"Espresso"}]},{label:"Tea",children:[{label:"Earl grey"},{label:"Chai"}]},{label:"Hot chocolate with marshmallows"}]},react.createElement(slottedSVG.k,{slot:"icon",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24"},react.createElement("path",{d:"M10,4H4C2.89,4 2,4.89 2,6V18A2,2 0 0,0 4,20H20A2,2 0 0,0 22,18V8C22,6.89 21.1,6 20,6H12L10,4Z"})))),name:"Max content"},MaxContentSlotted={render:()=>react.createElement("div",{style:{width:"250px"}},react.createElement(src_components.yy,{heading:"Menu with nested options"},react.createElement(slottedSVG.k,{slot:"icon",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24"},react.createElement("path",{d:"M10,4H4C2.89,4 2,4.89 2,6V18A2,2 0 0,0 4,20H20A2,2 0 0,0 22,18V8C22,6.89 21.1,6 20,6H12L10,4Z"})),react.createElement(src_components.EU,{label:"Coffee"},react.createElement(slottedSVG.k,{slot:"icon",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24"},react.createElement("path",{d:"M13,9V3.5L18.5,9M6,2C4.89,2 4,2.89 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2H6Z"})),react.createElement(src_components.EU,{label:"Americano"}),react.createElement(src_components.EU,{label:"Latte with extra milk and sugar"}),react.createElement(src_components.EU,{label:"Espresso"})),react.createElement(src_components.EU,{label:"Tea"},react.createElement(src_components.EU,{label:"Earl Grey"}),react.createElement(src_components.EU,{label:"Chai"})),react.createElement(src_components.EU,{label:"Hot chocolate with marshmallows"}))),name:"Max content - slotted"},TruncationBehaviour={render:()=>react.createElement("div",{style:{width:"250px"}},react.createElement(src_components.yy,{heading:"Menu",truncateTreeItems:!0,truncateHeading:!0,treeItemData:[{label:"Coffee",icon:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M13,9V3.5L18.5,9M6,2C4.89,2 4,2.89 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2H6Z" /></svg>',children:[{label:"Americano"},{label:"Latte with extra milk and sugar"},{label:"Espresso"}]},{label:"Tea",children:[{label:"Earl grey"},{label:"Earl Grey with truncation false",truncateTreeItem:!1},{label:"Chai"}]},{label:"Hot chocolate with marshmallows"}]},react.createElement(slottedSVG.k,{slot:"icon",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24"},react.createElement("path",{d:"M10,4H4C2.89,4 2,4.89 2,6V18A2,2 0 0,0 4,20H20A2,2 0 0,0 22,18V8C22,6.89 21.1,6 20,6H12L10,4Z"})))),name:"Truncation behaviour"},TruncationBehaviourSlotted={render:()=>react.createElement("div",{style:{width:"250px"}},react.createElement(src_components.yy,{heading:"Menu with nested options",truncateHeading:!0,truncateTreeItems:!0},react.createElement(slottedSVG.k,{slot:"icon",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24"},react.createElement("path",{d:"M10,4H4C2.89,4 2,4.89 2,6V18A2,2 0 0,0 4,20H20A2,2 0 0,0 22,18V8C22,6.89 21.1,6 20,6H12L10,4Z"})),react.createElement(src_components.EU,{label:"Coffee",expanded:!0},react.createElement(slottedSVG.k,{slot:"icon",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24"},react.createElement("path",{d:"M13,9V3.5L18.5,9M6,2C4.89,2 4,2.89 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2H6Z"})),react.createElement(src_components.EU,{label:"Americano"}),react.createElement(src_components.EU,{label:"Latte with extra milk and sugar"}),react.createElement(src_components.EU,{label:"Espresso"})),react.createElement(src_components.EU,{label:"Tea",expanded:!0},react.createElement(src_components.EU,{label:"Earl Grey"}),react.createElement(src_components.EU,{label:"Earl Grey with truncation false",truncateTreeItem:!1}),react.createElement(src_components.EU,{label:"Chai"})),react.createElement(src_components.EU,{label:"Hot chocolate with marshmallows"}))),name:"Truncation behaviour - slotted"},SelectedTreeItem={render:()=>react.createElement("div",{style:{width:"250px"}},react.createElement(src_components.yy,{heading:"Menu",treeItemData:[{label:"Coffee"},{label:"Tea"},{label:"Hot chocolate",selected:!0}]})),name:"Selected tree item"},SelectedTreeItemSlotted={render:()=>react.createElement("div",{style:{width:"250px"}},react.createElement(src_components.yy,{heading:"Menu"},react.createElement(src_components.EU,{label:"Coffee"}),react.createElement(src_components.EU,{label:"Tea"}),react.createElement(src_components.EU,{label:"Hot chocolate",selected:!0}))),name:"Selected tree item - slotted"},Link={render:()=>react.createElement("div",{style:{width:"250px"}},react.createElement(src_components.yy,{heading:"Menu",treeItemData:[{label:"Coffee",href:"#"},{label:"Tea",href:"#",selected:!0},{label:"Hot chocolate",disabled:!0,href:"#"}]})),name:"Link"},LinkSlotted={render:()=>react.createElement("div",{style:{width:"250px"}},react.createElement(src_components.yy,{heading:"Menu"},react.createElement(src_components.EU,{label:"Coffee",href:"#"}),react.createElement(src_components.EU,{label:"Tea",selected:!0,href:"#"}),react.createElement(src_components.EU,{label:"Hot chocolate",disabled:!0,href:"#"}))),name:"Link - slotted"},Expanded={render:()=>react.createElement("div",{style:{width:"250px"}},react.createElement(src_components.yy,{onIcTreeItemExpanded:event=>console.log("onIcTreeItemExpanded: ",event.detail),heading:"Menu",treeItemData:[{label:"Coffee",expanded:!0,children:[{label:"Americano",expanded:!0,children:[{label:"With milk"}]},{label:"Latte"},{label:"Espresso"}]},{label:"Tea",children:[{label:"Earl grey"},{label:"Chai"}]},{label:"Hot chocolate"}]})),name:"Expanded"},ExpandedSlotted={render:()=>react.createElement("div",{style:{width:"250px"}},react.createElement(src_components.yy,{heading:"Menu",onIcTreeItemExpanded:event=>console.log("[Slotted] onIcTreeItemExpanded: ",event.detail)},react.createElement(src_components.EU,{label:"Coffee",expanded:!0},react.createElement(src_components.EU,{label:"Americano",expanded:!0},react.createElement(src_components.EU,{label:"With milk"})),react.createElement(src_components.EU,{label:"Latte"}),react.createElement(src_components.EU,{label:"Espresso"})),react.createElement(src_components.EU,{label:"Tea"},react.createElement(src_components.EU,{label:"Earl Grey"}),react.createElement(src_components.EU,{label:"Chai"})),react.createElement(src_components.EU,{label:"Hot chocolate"}))),name:"Expanded - slotted"},UpdatingOptions={render:()=>{const[treeItems,setTreeItems]=(0,react.useState)([{label:"Item 1"},{label:"Item 2"},{label:"Item 3"},{label:"Item 4"}]);return react.createElement(react.Fragment,null,react.createElement(src_components.yy,{heading:"Updating options",treeItemData:treeItems}),react.createElement("br",null),react.createElement(components.nP,{onClick:()=>{setTreeItems([{label:"Item 5"},{label:"Item 6"}])}},"Update"))},name:"Updating options"},UpdatingOptionsSlotted={render:()=>{const[treeItems,setTreeItems]=(0,react.useState)([{label:"Item 1"},{label:"Item 2"},{label:"Item 3"},{label:"Item 4"}]);return react.createElement(react.Fragment,null,react.createElement(src_components.yy,{heading:"Updating options"},treeItems.map(((option,index)=>react.createElement(src_components.EU,{key:index,label:option.label})))),react.createElement("br",null),react.createElement(components.nP,{onClick:()=>{setTreeItems([{label:"Item 5"},{label:"Item 6"}])}},"Update"))},name:"Updating options - slotted"},WithNestedSkipLink={render:()=>{components.QE,src_components.yy,src_components.EU,src_components.EU,src_components.EU,src_components.EU,src_components.EU,src_components.EU,src_components.EU,src_components.EU,src_components.EU},name:"Nested skip link"},Playground={render:args=>react.createElement(src_components.yy,{heading:args.heading,size:args.size,theme:args.theme,truncateTreeItems:args.truncateTreeItems,treeItemData:[{label:args.treeItemLabel,href:args.treeItemHref,disabled:args.treeItemDisabled,selected:args.treeItemSelected,icon:args.showTreeItemIcon&&'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M13,9V3.5L18.5,9M6,2C4.89,2 4,2.89 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2H6Z" /></svg>'},{label:"Tea"},{label:"Hot chocolate"}]}),args:{heading:"Menu",size:"medium",truncateTreeItems:!1,treeItemDisabled:!1,treeItemHref:"",treeItemLabel:"Coffee",treeItemSelected:!1,showTreeItemIcon:!1,theme:"inherit"},argTypes:{size:{options:["medium","small","large"],control:{type:"inline-radio"}},theme:{options:["inherit","light","dark"],control:{type:"inline-radio"}}},name:"Playground"},PlaygroundSlotted={render:args=>react.createElement(src_components.yy,{heading:args.heading,size:args.size,theme:args.theme,truncateHeading:args.truncateHeading,truncateTreeItems:args.truncateTreeItems},args.showIcon&&react.createElement(slottedSVG.k,{slot:"icon",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24"},react.createElement("path",{d:"M10,4H4C2.89,4 2,4.89 2,6V18A2,2 0 0,0 4,20H20A2,2 0 0,0 22,18V8C22,6.89 21.1,6 20,6H12L10,4Z"})),react.createElement(src_components.EU,{label:args.treeItemLabel,disabled:args.treeItemDisabled,selected:args.treeItemSelected,href:args.treeItemHref},args.showTreeItemIcon&&react.createElement(slottedSVG.k,{slot:"icon",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24"},react.createElement("path",{d:"M13,9V3.5L18.5,9M6,2C4.89,2 4,2.89 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2H6Z"}))),react.createElement(src_components.EU,{label:"Tea"}),react.createElement(src_components.EU,{label:"Hot chocolate"})),args:{heading:"Menu",size:"medium",showIcon:!1,truncateHeading:!1,truncateTreeItems:!1,treeItemDisabled:!1,treeItemHref:"",treeItemLabel:"Coffee",treeItemSelected:!1,showTreeItemIcon:!1,theme:"inherit"},argTypes:{size:{options:["medium","small","large"],control:{type:"inline-radio"}},theme:{options:["inherit","light","dark"],control:{type:"inline-radio"}}},name:"Playground - slotted"},__namedExportsOrder=["Basic","BasicSlotted","Nested","NestedSlotted","WithIcons","WithIconsSlotted","Small","SmallSlotted","Large","LargeSlotted","DisabledTreeItems","DisabledTreeItemsSlotted","RouterItem","SlottedContent","MaxContent","MaxContentSlotted","TruncationBehaviour","TruncationBehaviourSlotted","SelectedTreeItem","SelectedTreeItemSlotted","Link","LinkSlotted","Expanded","ExpandedSlotted","UpdatingOptions","UpdatingOptionsSlotted","WithNestedSkipLink","Playground","PlaygroundSlotted"];Basic.parameters={...Basic.parameters,docs:{...Basic.parameters?.docs,source:{originalSource:'{\n  render: () => <div style={{\n    width: "250px"\n  }}>\n      <IcTreeView heading="Menu" treeItemData={[{\n      label: "Coffee"\n    }, {\n      label: "Tea"\n    }, {\n      label: "Hot chocolate"\n    }]} />\n    </div>,\n  name: "Basic"\n}',...Basic.parameters?.docs?.source},description:{story:"Use the tree view component to display hierarchical data in a tree structure. The tree view component is useful for displaying nested data, such as a file system or a category hierarchy.\n\nClick the 'Component API' tab to view all the available attributes, events and slots for tree view.\n\nTo use the tree view component, import `@ukic/canary-react` into your application.",...Basic.parameters?.docs?.description}}},BasicSlotted.parameters={...BasicSlotted.parameters,docs:{...BasicSlotted.parameters?.docs,source:{originalSource:'{\n  render: () => <div style={{\n    width: "250px"\n  }}>\n      <IcTreeView heading="Menu">\n        <IcTreeItem label="Coffee" />\n        <IcTreeItem label="Tea" />\n        <IcTreeItem label="Hot chocolate" />\n      </IcTreeView>\n    </div>,\n  name: "Basic - slotted"\n}',...BasicSlotted.parameters?.docs?.source}}},Nested.parameters={...Nested.parameters,docs:{...Nested.parameters?.docs,source:{originalSource:'{\n  render: () => <div style={{\n    width: "250px"\n  }}>\n      <IcTreeView heading="Menu" treeItemData={[{\n      label: "Coffee",\n      children: [{\n        label: "Americano",\n        children: [{\n          label: "With milk"\n        }]\n      }, {\n        label: "Latte"\n      }, {\n        label: "Espresso"\n      }]\n    }, {\n      label: "Tea",\n      children: [{\n        label: "Earl grey"\n      }, {\n        label: "Chai"\n      }]\n    }, {\n      label: "Hot chocolate"\n    }]} />\n    </div>,\n  name: "Nested"\n}',...Nested.parameters?.docs?.source}}},NestedSlotted.parameters={...NestedSlotted.parameters,docs:{...NestedSlotted.parameters?.docs,source:{originalSource:'{\n  render: () => <div style={{\n    width: "250px"\n  }}>\n      <IcTreeView heading="Menu">\n        <IcTreeItem label="Coffee">\n          <IcTreeItem label="Americano" />\n          <IcTreeItem label="Latte" />\n          <IcTreeItem label="Espresso" />\n        </IcTreeItem>\n        <IcTreeItem label="Tea">\n          <IcTreeItem label="Earl Grey" />\n          <IcTreeItem label="Chai" />\n        </IcTreeItem>\n        <IcTreeItem label="Hot chocolate" />\n      </IcTreeView>\n    </div>,\n  name: "Nested - slotted"\n}',...NestedSlotted.parameters?.docs?.source}}},WithIcons.parameters={...WithIcons.parameters,docs:{...WithIcons.parameters?.docs,source:{originalSource:'{\n  render: () => <div style={{\n    width: "250px"\n  }}>\n      <IcTreeView heading="Menu" treeItemData={[{\n      label: "Coffee",\n      icon: \'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M13,9V3.5L18.5,9M6,2C4.89,2 4,2.89 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2H6Z" /></svg>\',\n      children: [{\n        label: "Americano"\n      }, {\n        label: "Latte",\n        icon: \'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M13,9V3.5L18.5,9M6,2C4.89,2 4,2.89 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2H6Z" /></svg>\'\n      }, {\n        label: "Espresso"\n      }]\n    }, {\n      label: "Tea",\n      children: [{\n        label: "Earl grey"\n      }, {\n        label: "Chai"\n      }]\n    }, {\n      label: "Hot chocolate"\n    }]}>\n        <SlottedSVG slot="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">\n          <path d="M10,4H4C2.89,4 2,4.89 2,6V18A2,2 0 0,0 4,20H20A2,2 0 0,0 22,18V8C22,6.89 21.1,6 20,6H12L10,4Z" />\n        </SlottedSVG>\n      </IcTreeView>\n    </div>,\n  name: "With icons"\n}',...WithIcons.parameters?.docs?.source}}},WithIconsSlotted.parameters={...WithIconsSlotted.parameters,docs:{...WithIconsSlotted.parameters?.docs,source:{originalSource:'{\n  render: () => <div style={{\n    width: "250px"\n  }}>\n      <IcTreeView heading="Menu">\n        <SlottedSVG slot="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">\n          <path d="M10,4H4C2.89,4 2,4.89 2,6V18A2,2 0 0,0 4,20H20A2,2 0 0,0 22,18V8C22,6.89 21.1,6 20,6H12L10,4Z" />\n        </SlottedSVG>\n        <IcTreeItem label="Coffee">\n          <SlottedSVG slot="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">\n            <path d="M13,9V3.5L18.5,9M6,2C4.89,2 4,2.89 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2H6Z" />\n          </SlottedSVG>\n          <IcTreeItem label="Americano" />\n          <IcTreeItem label="Latte">\n            <SlottedSVG slot="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">\n              <path d="M13,9V3.5L18.5,9M6,2C4.89,2 4,2.89 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2H6Z" />\n            </SlottedSVG>\n          </IcTreeItem>\n          <IcTreeItem label="Espresso" />\n        </IcTreeItem>\n        <IcTreeItem label="Tea">\n          <IcTreeItem label="Earl Grey" />\n          <IcTreeItem label="Chai" />\n        </IcTreeItem>\n        <IcTreeItem label="Hot chocolate" />\n      </IcTreeView>\n    </div>,\n  name: "With icons - slotted"\n}',...WithIconsSlotted.parameters?.docs?.source}}},Small.parameters={...Small.parameters,docs:{...Small.parameters?.docs,source:{originalSource:'{\n  render: () => <div style={{\n    width: "250px"\n  }}>\n      <IcTreeView heading="Menu" size="small" treeItemData={[{\n      label: "Coffee",\n      icon: \'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M13,9V3.5L18.5,9M6,2C4.89,2 4,2.89 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2H6Z" /></svg>\',\n      children: [{\n        label: "Americano"\n      }, {\n        label: "Latte",\n        icon: \'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M13,9V3.5L18.5,9M6,2C4.89,2 4,2.89 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2H6Z" /></svg>\'\n      }, {\n        label: "Espresso"\n      }]\n    }, {\n      label: "Tea",\n      children: [{\n        label: "Earl grey"\n      }, {\n        label: "Chai"\n      }]\n    }, {\n      label: "Hot chocolate"\n    }]}>\n        <SlottedSVG slot="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">\n          <path d="M10,4H4C2.89,4 2,4.89 2,6V18A2,2 0 0,0 4,20H20A2,2 0 0,0 22,18V8C22,6.89 21.1,6 20,6H12L10,4Z" />\n        </SlottedSVG>\n      </IcTreeView>\n    </div>,\n  name: "Small"\n}',...Small.parameters?.docs?.source},description:{story:"Small and large styling will be passed down from tree view to tree items and nested tree items.",...Small.parameters?.docs?.description}}},SmallSlotted.parameters={...SmallSlotted.parameters,docs:{...SmallSlotted.parameters?.docs,source:{originalSource:'{\n  render: () => <div style={{\n    width: "250px"\n  }}>\n      <IcTreeView heading="Menu" size="small">\n        <SlottedSVG slot="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">\n          <path d="M10,4H4C2.89,4 2,4.89 2,6V18A2,2 0 0,0 4,20H20A2,2 0 0,0 22,18V8C22,6.89 21.1,6 20,6H12L10,4Z" />\n        </SlottedSVG>\n        <IcTreeItem label="Coffee">\n          <SlottedSVG slot="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">\n            <path d="M13,9V3.5L18.5,9M6,2C4.89,2 4,2.89 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2H6Z" />\n          </SlottedSVG>\n          <IcTreeItem label="Americano" />\n          <IcTreeItem label="Latte">\n            <SlottedSVG slot="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">\n              <path d="M13,9V3.5L18.5,9M6,2C4.89,2 4,2.89 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2H6Z" />\n            </SlottedSVG>\n          </IcTreeItem>\n          <IcTreeItem label="Espresso" />\n        </IcTreeItem>\n        <IcTreeItem label="Tea">\n          <IcTreeItem label="Earl Grey" />\n          <IcTreeItem label="Chai" />\n        </IcTreeItem>\n        <IcTreeItem label="Hot chocolate" />\n      </IcTreeView>\n    </div>,\n  name: "Small - slotted"\n}',...SmallSlotted.parameters?.docs?.source}}},Large.parameters={...Large.parameters,docs:{...Large.parameters?.docs,source:{originalSource:'{\n  render: () => <div style={{\n    width: "250px"\n  }}>\n      <IcTreeView heading="Menu" size="large" treeItemData={[{\n      label: "Coffee",\n      icon: \'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M13,9V3.5L18.5,9M6,2C4.89,2 4,2.89 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2H6Z" /></svg>\',\n      children: [{\n        label: "Americano"\n      }, {\n        label: "Latte",\n        icon: \'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M13,9V3.5L18.5,9M6,2C4.89,2 4,2.89 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2H6Z" /></svg>\'\n      }, {\n        label: "Espresso"\n      }]\n    }, {\n      label: "Tea",\n      children: [{\n        label: "Earl grey"\n      }, {\n        label: "Chai"\n      }]\n    }, {\n      label: "Hot chocolate"\n    }]}>\n        <SlottedSVG slot="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">\n          <path d="M10,4H4C2.89,4 2,4.89 2,6V18A2,2 0 0,0 4,20H20A2,2 0 0,0 22,18V8C22,6.89 21.1,6 20,6H12L10,4Z" />\n        </SlottedSVG>\n      </IcTreeView>\n    </div>,\n  name: "Large"\n}',...Large.parameters?.docs?.source}}},LargeSlotted.parameters={...LargeSlotted.parameters,docs:{...LargeSlotted.parameters?.docs,source:{originalSource:'{\n  render: () => <div style={{\n    width: "250px"\n  }}>\n      <IcTreeView heading="Menu" size="large">\n        <SlottedSVG slot="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">\n          <path d="M10,4H4C2.89,4 2,4.89 2,6V18A2,2 0 0,0 4,20H20A2,2 0 0,0 22,18V8C22,6.89 21.1,6 20,6H12L10,4Z" />\n        </SlottedSVG>\n        <IcTreeItem label="Coffee">\n          <SlottedSVG slot="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">\n            <path d="M13,9V3.5L18.5,9M6,2C4.89,2 4,2.89 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2H6Z" />\n          </SlottedSVG>\n          <IcTreeItem label="Americano" />\n          <IcTreeItem label="Latte">\n            <SlottedSVG slot="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">\n              <path d="M13,9V3.5L18.5,9M6,2C4.89,2 4,2.89 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2H6Z" />\n            </SlottedSVG>\n          </IcTreeItem>\n          <IcTreeItem label="Espresso" />\n        </IcTreeItem>\n        <IcTreeItem label="Tea">\n          <IcTreeItem label="Earl Grey" />\n          <IcTreeItem label="Chai" />\n        </IcTreeItem>\n        <IcTreeItem label="Hot chocolate" />\n      </IcTreeView>\n    </div>,\n  name: "Large - slotted"\n}',...LargeSlotted.parameters?.docs?.source}}},DisabledTreeItems.parameters={...DisabledTreeItems.parameters,docs:{...DisabledTreeItems.parameters?.docs,source:{originalSource:'{\n  render: () => <div style={{\n    width: "250px"\n  }}>\n      <IcTreeView heading="Menu" treeItemData={[{\n      label: "Coffee",\n      icon: \'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M13,9V3.5L18.5,9M6,2C4.89,2 4,2.89 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2H6Z" /></svg>\',\n      children: [{\n        label: "Americano"\n      }, {\n        label: "Latte",\n        disabled: true,\n        icon: \'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M13,9V3.5L18.5,9M6,2C4.89,2 4,2.89 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2H6Z" /></svg>\'\n      }, {\n        label: "Espresso"\n      }]\n    }, {\n      label: "Tea",\n      children: [{\n        label: "Earl grey"\n      }, {\n        label: "Chai",\n        disabled: true\n      }]\n    }, {\n      label: "Hot chocolate",\n      disabled: true\n    }]}>\n        <SlottedSVG slot="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">\n          <path d="M10,4H4C2.89,4 2,4.89 2,6V18A2,2 0 0,0 4,20H20A2,2 0 0,0 22,18V8C22,6.89 21.1,6 20,6H12L10,4Z" />\n        </SlottedSVG>\n      </IcTreeView>\n    </div>,\n  name: "Disabled tree items"\n}',...DisabledTreeItems.parameters?.docs?.source},description:{story:"Individual tree-items can be disabled using the `disabled` prop.",...DisabledTreeItems.parameters?.docs?.description}}},DisabledTreeItemsSlotted.parameters={...DisabledTreeItemsSlotted.parameters,docs:{...DisabledTreeItemsSlotted.parameters?.docs,source:{originalSource:'{\n  render: () => <div style={{\n    width: "250px"\n  }}>\n      <IcTreeView heading="Menu">\n        <SlottedSVG slot="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">\n          <path d="M10,4H4C2.89,4 2,4.89 2,6V18A2,2 0 0,0 4,20H20A2,2 0 0,0 22,18V8C22,6.89 21.1,6 20,6H12L10,4Z" />\n        </SlottedSVG>\n        <IcTreeItem label="Coffee">\n          <SlottedSVG slot="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">\n            <path d="M13,9V3.5L18.5,9M6,2C4.89,2 4,2.89 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2H6Z" />\n          </SlottedSVG>\n          <IcTreeItem label="Americano" />\n          <IcTreeItem label="Latte" disabled>\n            <SlottedSVG slot="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">\n              <path d="M13,9V3.5L18.5,9M6,2C4.89,2 4,2.89 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2H6Z" />\n            </SlottedSVG>\n          </IcTreeItem>\n          <IcTreeItem label="Espresso" />\n        </IcTreeItem>\n        <IcTreeItem label="Tea">\n          <IcTreeItem label="Earl Grey" />\n          <IcTreeItem label="Chai" disabled />\n        </IcTreeItem>\n        <IcTreeItem label="Hot chocolate" disabled />\n      </IcTreeView>\n    </div>,\n  name: "Disabled tree items - slotted"\n}',...DisabledTreeItemsSlotted.parameters?.docs?.source}}},RouterItem.parameters={...RouterItem.parameters,docs:{...RouterItem.parameters?.docs,source:{originalSource:'{\n  render: () => <div style={{\n    width: "250px"\n  }}>\n      <IcTreeView heading="Menu" truncateTreeItems>\n        <IcTreeItem>\n          <a slot="router-item" href="/">\n            Hot chocolate with marshmallows and whipped cream\n          </a>\n        </IcTreeItem>\n        <IcTreeItem>\n          <a slot="router-item" href="/tea">\n            Tea\n          </a>\n        </IcTreeItem>\n        <IcTreeItem label="Coffee" />\n      </IcTreeView>\n    </div>,\n  name: "Router item"\n}',...RouterItem.parameters?.docs?.source},description:{story:"Custom links and router-items can be passed in using the `router-item` slot.",...RouterItem.parameters?.docs?.description}}},SlottedContent.parameters={...SlottedContent.parameters,docs:{...SlottedContent.parameters?.docs,source:{originalSource:'{\n  render: () => <div style={{\n    width: "250px"\n  }}>\n      <IcTreeView>\n        <IcTypography variant="subtitle-large" slot="heading">\n          Menu\n        </IcTypography>\n        <IcTreeItem>\n          <IcTypography slot="label">Coffee</IcTypography>\n        </IcTreeItem>\n        <IcTreeItem label="Tea" />\n        <IcTreeItem label="Hot chocolate" />\n      </IcTreeView>\n    </div>,\n  name: "Slotted content"\n}',...SlottedContent.parameters?.docs?.source},description:{story:"Custom content can be passed to both the tree view (using the `heading` slot) and the tree-item (using the `label` slot).",...SlottedContent.parameters?.docs?.description}}},MaxContent.parameters={...MaxContent.parameters,docs:{...MaxContent.parameters?.docs,source:{originalSource:'{\n  render: () => <div style={{\n    width: "250px"\n  }}>\n      <IcTreeView heading="Menu" treeItemData={[{\n      label: "Coffee",\n      icon: \'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M13,9V3.5L18.5,9M6,2C4.89,2 4,2.89 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2H6Z" /></svg>\',\n      children: [{\n        label: "Americano"\n      }, {\n        label: "Latte with extra milk and sugar"\n      }, {\n        label: "Espresso"\n      }]\n    }, {\n      label: "Tea",\n      children: [{\n        label: "Earl grey"\n      }, {\n        label: "Chai"\n      }]\n    }, {\n      label: "Hot chocolate with marshmallows"\n    }]}>\n        <SlottedSVG slot="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">\n          <path d="M10,4H4C2.89,4 2,4.89 2,6V18A2,2 0 0,0 4,20H20A2,2 0 0,0 22,18V8C22,6.89 21.1,6 20,6H12L10,4Z" />\n        </SlottedSVG>\n      </IcTreeView>\n    </div>,\n  name: "Max content"\n}',...MaxContent.parameters?.docs?.source},description:{story:"When the heading/label exceeds the width of the container, the text will wrap unless `truncateTreeItem` is set to `true`.",...MaxContent.parameters?.docs?.description}}},MaxContentSlotted.parameters={...MaxContentSlotted.parameters,docs:{...MaxContentSlotted.parameters?.docs,source:{originalSource:'{\n  render: () => <div style={{\n    width: "250px"\n  }}>\n      <IcTreeView heading="Menu with nested options">\n        <SlottedSVG slot="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">\n          <path d="M10,4H4C2.89,4 2,4.89 2,6V18A2,2 0 0,0 4,20H20A2,2 0 0,0 22,18V8C22,6.89 21.1,6 20,6H12L10,4Z" />\n        </SlottedSVG>\n        <IcTreeItem label="Coffee">\n          <SlottedSVG slot="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">\n            <path d="M13,9V3.5L18.5,9M6,2C4.89,2 4,2.89 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2H6Z" />\n          </SlottedSVG>\n          <IcTreeItem label="Americano" />\n          <IcTreeItem label="Latte with extra milk and sugar" />\n          <IcTreeItem label="Espresso" />\n        </IcTreeItem>\n        <IcTreeItem label="Tea">\n          <IcTreeItem label="Earl Grey" />\n          <IcTreeItem label="Chai" />\n        </IcTreeItem>\n        <IcTreeItem label="Hot chocolate with marshmallows" />\n      </IcTreeView>\n    </div>,\n  name: "Max content - slotted"\n}',...MaxContentSlotted.parameters?.docs?.source}}},TruncationBehaviour.parameters={...TruncationBehaviour.parameters,docs:{...TruncationBehaviour.parameters?.docs,source:{originalSource:'{\n  render: () => <div style={{\n    width: "250px"\n  }}>\n      <IcTreeView heading="Menu" truncateTreeItems truncateHeading treeItemData={[{\n      label: "Coffee",\n      icon: \'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M13,9V3.5L18.5,9M6,2C4.89,2 4,2.89 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2H6Z" /></svg>\',\n      children: [{\n        label: "Americano"\n      }, {\n        label: "Latte with extra milk and sugar"\n      }, {\n        label: "Espresso"\n      }]\n    }, {\n      label: "Tea",\n      children: [{\n        label: "Earl grey"\n      }, {\n        label: "Earl Grey with truncation false",\n        truncateTreeItem: false\n      }, {\n        label: "Chai"\n      }]\n    }, {\n      label: "Hot chocolate with marshmallows"\n    }]}>\n        <SlottedSVG slot="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">\n          <path d="M10,4H4C2.89,4 2,4.89 2,6V18A2,2 0 0,0 4,20H20A2,2 0 0,0 22,18V8C22,6.89 21.1,6 20,6H12L10,4Z" />\n        </SlottedSVG>\n      </IcTreeView>\n    </div>,\n  name: "Truncation behaviour"\n}',...TruncationBehaviour.parameters?.docs?.source},description:{story:"When `truncateTreeItems` or `truncateHeading` are set to `true`, and the heading/label exceeds the width of the container, they will be truncated with an ellipsis.",...TruncationBehaviour.parameters?.docs?.description}}},TruncationBehaviourSlotted.parameters={...TruncationBehaviourSlotted.parameters,docs:{...TruncationBehaviourSlotted.parameters?.docs,source:{originalSource:'{\n  render: () => <div style={{\n    width: "250px"\n  }}>\n      <IcTreeView heading="Menu with nested options" truncateHeading truncateTreeItems>\n        <SlottedSVG slot="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">\n          <path d="M10,4H4C2.89,4 2,4.89 2,6V18A2,2 0 0,0 4,20H20A2,2 0 0,0 22,18V8C22,6.89 21.1,6 20,6H12L10,4Z" />\n        </SlottedSVG>\n        <IcTreeItem label="Coffee" expanded>\n          <SlottedSVG slot="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">\n            <path d="M13,9V3.5L18.5,9M6,2C4.89,2 4,2.89 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2H6Z" />\n          </SlottedSVG>\n          <IcTreeItem label="Americano" />\n          <IcTreeItem label="Latte with extra milk and sugar" />\n          <IcTreeItem label="Espresso" />\n        </IcTreeItem>\n        <IcTreeItem label="Tea" expanded>\n          <IcTreeItem label="Earl Grey" />\n          <IcTreeItem label="Earl Grey with truncation false" truncateTreeItem={false} />\n          <IcTreeItem label="Chai" />\n        </IcTreeItem>\n        <IcTreeItem label="Hot chocolate with marshmallows" />\n      </IcTreeView>\n    </div>,\n  name: "Truncation behaviour - slotted"\n}',...TruncationBehaviourSlotted.parameters?.docs?.source}}},SelectedTreeItem.parameters={...SelectedTreeItem.parameters,docs:{...SelectedTreeItem.parameters?.docs,source:{originalSource:'{\n  render: () => <div style={{\n    width: "250px"\n  }}>\n      <IcTreeView heading="Menu" treeItemData={[{\n      label: "Coffee"\n    }, {\n      label: "Tea"\n    }, {\n      label: "Hot chocolate",\n      selected: true\n    }]} />\n    </div>,\n  name: "Selected tree item"\n}',...SelectedTreeItem.parameters?.docs?.source},description:{story:"Utilising the `selected` attribute on `IcTreeItem` will turn it into a controlled component, displaying the selected state when set to `true`.",...SelectedTreeItem.parameters?.docs?.description}}},SelectedTreeItemSlotted.parameters={...SelectedTreeItemSlotted.parameters,docs:{...SelectedTreeItemSlotted.parameters?.docs,source:{originalSource:'{\n  render: () => <div style={{\n    width: "250px"\n  }}>\n      <IcTreeView heading="Menu">\n        <IcTreeItem label="Coffee" />\n        <IcTreeItem label="Tea" />\n        <IcTreeItem label="Hot chocolate" selected />\n      </IcTreeView>\n    </div>,\n  name: "Selected tree item - slotted"\n}',...SelectedTreeItemSlotted.parameters?.docs?.source}}},Link.parameters={...Link.parameters,docs:{...Link.parameters?.docs,source:{originalSource:'{\n  render: () => <div style={{\n    width: "250px"\n  }}>\n      <IcTreeView heading="Menu" treeItemData={[{\n      label: "Coffee",\n      href: "#"\n    }, {\n      label: "Tea",\n      href: "#",\n      selected: true\n    }, {\n      label: "Hot chocolate",\n      disabled: true,\n      href: "#"\n    }]} />\n    </div>,\n  name: "Link"\n}',...Link.parameters?.docs?.source},description:{story:"When setting the `href` attribute, the tree-item will function as a link.",...Link.parameters?.docs?.description}}},LinkSlotted.parameters={...LinkSlotted.parameters,docs:{...LinkSlotted.parameters?.docs,source:{originalSource:'{\n  render: () => <div style={{\n    width: "250px"\n  }}>\n      <IcTreeView heading="Menu">\n        <IcTreeItem label="Coffee" href="#" />\n        <IcTreeItem label="Tea" selected href="#" />\n        <IcTreeItem label="Hot chocolate" disabled href="#" />\n      </IcTreeView>\n    </div>,\n  name: "Link - slotted"\n}',...LinkSlotted.parameters?.docs?.source}}},Expanded.parameters={...Expanded.parameters,docs:{...Expanded.parameters?.docs,source:{originalSource:'{\n  render: () => <div style={{\n    width: "250px"\n  }}>\n      <IcTreeView onIcTreeItemExpanded={event => console.log("onIcTreeItemExpanded: ", event.detail)} heading="Menu" treeItemData={[{\n      label: "Coffee",\n      expanded: true,\n      children: [{\n        label: "Americano",\n        expanded: true,\n        children: [{\n          label: "With milk"\n        }]\n      }, {\n        label: "Latte"\n      }, {\n        label: "Espresso"\n      }]\n    }, {\n      label: "Tea",\n      children: [{\n        label: "Earl grey"\n      }, {\n        label: "Chai"\n      }]\n    }, {\n      label: "Hot chocolate"\n    }]} />\n    </div>,\n  name: "Expanded"\n}',...Expanded.parameters?.docs?.source},description:{story:"An example with the `expanded` prop set to `true` on a parent tree item.",...Expanded.parameters?.docs?.description}}},ExpandedSlotted.parameters={...ExpandedSlotted.parameters,docs:{...ExpandedSlotted.parameters?.docs,source:{originalSource:'{\n  render: () => <div style={{\n    width: "250px"\n  }}>\n      <IcTreeView heading="Menu" onIcTreeItemExpanded={event => console.log("[Slotted] onIcTreeItemExpanded: ", event.detail)}>\n        <IcTreeItem label="Coffee" expanded>\n          <IcTreeItem label="Americano" expanded>\n            <IcTreeItem label="With milk" />\n          </IcTreeItem>\n          <IcTreeItem label="Latte" />\n          <IcTreeItem label="Espresso" />\n        </IcTreeItem>\n        <IcTreeItem label="Tea">\n          <IcTreeItem label="Earl Grey" />\n          <IcTreeItem label="Chai" />\n        </IcTreeItem>\n        <IcTreeItem label="Hot chocolate" />\n      </IcTreeView>\n    </div>,\n  name: "Expanded - slotted"\n}',...ExpandedSlotted.parameters?.docs?.source}}},UpdatingOptions.parameters={...UpdatingOptions.parameters,docs:{...UpdatingOptions.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    const [treeItems, setTreeItems] = useState([{\n      label: "Item 1"\n    }, {\n      label: "Item 2"\n    }, {\n      label: "Item 3"\n    }, {\n      label: "Item 4"\n    }]);\n    const updateTreeItems = () => {\n      setTreeItems([{\n        label: "Item 5"\n      }, {\n        label: "Item 6"\n      }]);\n    };\n    return <>\n        <IcTreeView heading="Updating options" treeItemData={treeItems} />\n        <br />\n        <IcButton onClick={updateTreeItems}>Update</IcButton>\n      </>;\n  },\n  name: "Updating options"\n}',...UpdatingOptions.parameters?.docs?.source}}},UpdatingOptionsSlotted.parameters={...UpdatingOptionsSlotted.parameters,docs:{...UpdatingOptionsSlotted.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    const [treeItems, setTreeItems] = useState([{\n      label: "Item 1"\n    }, {\n      label: "Item 2"\n    }, {\n      label: "Item 3"\n    }, {\n      label: "Item 4"\n    }]);\n    const updateTreeItems = () => {\n      setTreeItems([{\n        label: "Item 5"\n      }, {\n        label: "Item 6"\n      }]);\n    };\n    return <>\n        <IcTreeView heading="Updating options">\n          {treeItems.map((option, index) => <IcTreeItem key={index} label={option.label} />)}\n        </IcTreeView>\n        <br />\n        <IcButton onClick={updateTreeItems}>Update</IcButton>\n      </>;\n  },\n  name: "Updating options - slotted"\n}',...UpdatingOptionsSlotted.parameters?.docs?.source}}},WithNestedSkipLink.parameters={...WithNestedSkipLink.parameters,docs:{...WithNestedSkipLink.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    <div style={{\n      width: "250px"\n    }}>\n      <IcSkipLink target="next-content" inline />\n      <IcTreeView heading="Menu">\n        <IcTreeItem label="Coffee">\n          <IcTreeItem label="Americano">\n            <IcTreeItem label="With milk" />\n          </IcTreeItem>\n          <IcTreeItem label="Latte" />\n          <IcTreeItem label="Espresso" />\n        </IcTreeItem>\n        <IcTreeItem label="Tea">\n          <IcTreeItem label="Earl Grey" />\n          <IcTreeItem label="Chai" />\n        </IcTreeItem>\n        <IcTreeItem label="Hot chocolate" />\n      </IcTreeView>\n    </div>;\n  },\n  name: "Nested skip link"\n}',...WithNestedSkipLink.parameters?.docs?.source}}},Playground.parameters={...Playground.parameters,docs:{...Playground.parameters?.docs,source:{originalSource:'{\n  render: args => <IcTreeView heading={args.heading} size={args.size} theme={args.theme} truncateTreeItems={args.truncateTreeItems} treeItemData={[{\n    label: args.treeItemLabel,\n    href: args.treeItemHref,\n    disabled: args.treeItemDisabled,\n    selected: args.treeItemSelected,\n    icon: args.showTreeItemIcon && \'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M13,9V3.5L18.5,9M6,2C4.89,2 4,2.89 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2H6Z" /></svg>\'\n  }, {\n    label: "Tea"\n  }, {\n    label: "Hot chocolate"\n  }]} />,\n  args: defaultArgs,\n  argTypes: {\n    size: {\n      options: ["medium", "small", "large"],\n      control: {\n        type: "inline-radio"\n      }\n    },\n    theme: {\n      options: ["inherit", "light", "dark"],\n      control: {\n        type: "inline-radio"\n      }\n    }\n  },\n  name: "Playground"\n}',...Playground.parameters?.docs?.source}}},PlaygroundSlotted.parameters={...PlaygroundSlotted.parameters,docs:{...PlaygroundSlotted.parameters?.docs,source:{originalSource:'{\n  render: args => <IcTreeView heading={args.heading} size={args.size} theme={args.theme} truncateHeading={args.truncateHeading} truncateTreeItems={args.truncateTreeItems}>\n      {args.showIcon && <SlottedSVG slot="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">\n          <path d="M10,4H4C2.89,4 2,4.89 2,6V18A2,2 0 0,0 4,20H20A2,2 0 0,0 22,18V8C22,6.89 21.1,6 20,6H12L10,4Z" />\n        </SlottedSVG>}\n      <IcTreeItem label={args.treeItemLabel} disabled={args.treeItemDisabled} selected={args.treeItemSelected} href={args.treeItemHref}>\n        {args.showTreeItemIcon && <SlottedSVG slot="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">\n            <path d="M13,9V3.5L18.5,9M6,2C4.89,2 4,2.89 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2H6Z" />\n          </SlottedSVG>}\n      </IcTreeItem>\n      <IcTreeItem label="Tea" />\n      <IcTreeItem label="Hot chocolate" />\n    </IcTreeView>,\n  args: defaultSlottedArgs,\n  argTypes: {\n    size: {\n      options: ["medium", "small", "large"],\n      control: {\n        type: "inline-radio"\n      }\n    },\n    theme: {\n      options: ["inherit", "light", "dark"],\n      control: {\n        type: "inline-radio"\n      }\n    }\n  },\n  name: "Playground - slotted"\n}',...PlaygroundSlotted.parameters?.docs?.source},description:{story:'Go to the <ic-link href="/?path=/story/react-components-tree-view--playground">separate page for the playground example</ic-link> to view the prop controls.',...PlaygroundSlotted.parameters?.docs?.description}}}}}]);