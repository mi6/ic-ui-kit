{"version":3,"file":"components-ic-calendar-ic-calendar-stories.070a6f27.iframe.bundle.js","mappings":";;;;;;AA4CA;;;AAqBA;;;;AAaA;;;;AAcA;;;;AAcA;;AAmCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sources":["webpack://@ukic/canary-web-components/./src/components/ic-calendar/ic-calendar.stories.js"],"sourcesContent":["/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport readme from \"./readme.md\";\nimport { html } from \"lit-html\";\nexport default {\n  title: \"Web Components/Calendar\",\n  component: \"ic-calendar\",\n  parameters: {\n    componentAPI: {\n      data: readme,\n    },\n  },\n};\n\nconst INLINE_RADIO = \"inline-radio\";\n\n/**\n * Use a calendar to select a single date where visualising that date could be useful.\n *\n * Click the 'Component API' tab to view all the available props and events for calendars.\n *\n * To use the calendar component, import `@ukic/canary-web-components` into your application.\n *\n * The default calendar uses the date format of `DD/MM/YYYY`.\n */\nexport const Default = {\n  render: () => {\n    setTimeout(() => {\n      document.addEventListener(\"icChange\", function (event) {\n        if (event.detail.value) {\n          document.getElementById(\"selected-date-display\").textContent =\n            \"Selected date: \" + event.detail.value;\n        } else {\n          document.getElementById(\"selected-date-display\").textContent =\n            \"No date selected\";\n        }\n      });\n    }, 0);\n    return html`<ic-calendar id=\"default\"></ic-calendar>\n      <span>\n        <ic-typography id=\"selected-date-display\" style=\"top: 420px\"\n          >No date selected</ic-typography\n        >\n      </span>`;\n  },\n  name: \"Default\",\n};\n\n/**\n * The `value` prop sets the selected date in the calendar. The value can be in any format supported by the `date-format` prop, in ISO 8601 date string format (yyyy-mm-dd) or as a JavaScript Date object.\n */\nexport const Value = {\n  render: () => html`<ic-calendar id=\"value\" value=\"01/01/2000\"></ic-calendar>`,\n  name: \"Value\",\n};\n\n/**\n * The `open-at-date` prop sets the month and year that the calendar will open to. The value can be in any format supported by the `date-format` prop, in ISO 8601 date string format (yyyy-mm-dd) or as a JavaScript Date object. If the `value` prop is set, the calendar will open to that date instead.\n */\n\nexport const OpenAtDate = {\n  render: () =>\n    html`<ic-calendar\n      id=\"open-at-date\"\n      open-at-date=\"01/01/2000\"\n    ></ic-calendar>`,\n  name: \"Open at date\",\n};\n\n/**\n * The `min` and `max` props set the minimum and maximum selectable dates in the calendar. The values can be in any format supported by the `date-format` prop, in ISO 8601 date string format (yyyy-mm-dd) or as a JavaScript Date object.\n */\nexport const MinMax = {\n  render: () =>\n    html`<ic-calendar\n      id=\"min-max\"\n      min=\"01/01/2000\"\n      max=\"31/12/2020\"\n    ></ic-calendar>`,\n  name: \"Min & max\",\n};\n\n/**\n * The `start-of-week` prop sets the first day of the week in the calendar. This prop takes a number between 0 and 6, where 0 is Sunday and 6 is Saturday. By default, the first day of the week is set to Monday (1).\n */\n\nexport const StartOfWeek = {\n  render: () =>\n    html`<ic-calendar id=\"start-of-week\"></ic-calendar>\n      <script>\n        const calendar = document.querySelector(\"#start-of-week\");\n        calendar.startOfWeek = 6;\n      </script>`,\n  name: \"Start of week\",\n};\n\n/**\n * Disable specific days of the week by using the `disable-days` prop. This prop takes an array of numbers between 0 and 6, where 0 is Sunday and 6 is Saturday.\n */\n\nexport const DisableDaysOfWeek = {\n  render: () =>\n    html`<ic-calendar id=\"disable-weekends\"></ic-calendar>\n      <script>\n        const calendar = document.querySelector(\"#disable-weekends\");\n        calendar.disableDays = [0, 6];\n      </script>`,\n  name: \"Disable days of the week\",\n};\n\nconst defaultArgs = {\n  [\"date-format\"]: \"DD/MM/YYYY\",\n  disabled: false,\n  [\"disable-days\"]: [],\n  [\"disable-future\"]: false,\n  [\"disable-past\"]: false,\n  max: \"\",\n  min: \"\",\n  [\"open-at-date\"]: \"\",\n  [\"show-clear-button\"]: true,\n  [\"show-days-outside-month\"]: true,\n  [\"show-today-button\"]: true,\n  size: \"medium\",\n  [\"start-of-week\"]: 1,\n  theme: \"inherit\",\n  value: \"\",\n};\n\nconst weekDays = {\n  Sunday: 0,\n  Monday: 1,\n  Tuesday: 2,\n  Wednesday: 3,\n  Thursday: 4,\n  Friday: 5,\n  Saturday: 6,\n};\n\nexport const Playground = {\n  render: (args) =>\n    html`<ic-calendar\n      id=\"playground\"\n      disabled=${args.disabled}\n      size=${args.size}\n      date-format=${args[\"date-format\"]}\n      disable-days=${JSON.stringify(args[\"disable-days\"])}\n      disable-future=${args[\"disable-future\"]}\n      disable-past=${args[\"disable-past\"]}\n      max=${args.max}\n      min=${args.min}\n      open-at-date=${args.openAtDate}\n      show-clear-button=${args[\"show-clear-button\"]}\n      show-days-outside-month=${args[\"show-days-outside-month\"]}\n      show-today-button=${args[\"show-today-button\"]}\n      start-of-week=${args[\"start-of-week\"]}\n      theme=${args.theme}\n      value=${args.value}\n    ></ic-calendar>`,\n  name: \"Playground\",\n  args: defaultArgs,\n  argTypes: {\n    [\"date-format\"]: {\n      options: [\"DD/MM/YYYY\", \"MM/DD/YYYY\", \"YYYY/MM/DD\"],\n      control: {\n        type: INLINE_RADIO,\n      },\n    },\n    size: {\n      control: INLINE_RADIO,\n      options: [\"small\", \"medium\", \"large\"],\n    },\n    [\"start-of-week\"]: {\n      options: Object.keys(weekDays),\n      mapping: weekDays,\n      control: {\n        type: INLINE_RADIO,\n        labels: {\n          Sunday: \"Sunday\",\n          Monday: \"Monday\",\n          Tuesday: \"Tuesday\",\n          Wednesday: \"Wednesday\",\n          Thursday: \"Thursday\",\n          Friday: \"Friday\",\n          Saturday: \"Saturday\",\n        },\n      },\n    },\n    theme: {\n      control: INLINE_RADIO,\n      options: [\"inherit\", \"light\", \"dark\"],\n    },\n  },\n};\n"],"names":[],"sourceRoot":""}