{"version":3,"file":"components-ic-stepper-ic-stepper-mdx.96c4ce77.iframe.bundle.js","mappings":";;;;;;AAsBA;;;;;AAYA;;;;;AAYA;;;;;AAYA;;;;;;;;;;;;;;;;;AAwBA;;;;;;;;;;;;;AAoBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqFA;;AAOA;AACA;;;;;;AAQA","sources":["webpack://@ukic/web-components/./src/components/ic-stepper/ic-stepper.stories.js"],"sourcesContent":["import { html } from \"lit-html\";\n\nconst defaultArgs = {\n  heading: \"Create\",\n  subheading: \"Optional\",\n  theme: \"inherit\",\n};\n\nexport default {\n  title: \"Web Components/Stepper\",\n  component: \"ic-stepper\",\n};\n\nexport const FullWidthStepper = {\n  render: () =>\n    html`<ic-stepper>\n      <ic-step heading=\"Create\" type=\"completed\"></ic-step>\n      <ic-step heading=\"Read\" type=\"current\"></ic-step>\n      <ic-step heading=\"Update\" type=\"active\"></ic-step>\n      <ic-step heading=\"Delete\" type=\"disabled\"></ic-step>\n    </ic-stepper>`,\n\n  name: \"Full-width stepper\",\n};\n\nexport const LeftAlignedStepper = {\n  render: () =>\n    html`<ic-stepper aligned=\"left\">\n      <ic-step heading=\"Create\" type=\"completed\"></ic-step>\n      <ic-step heading=\"Read\" type=\"current\"></ic-step>\n      <ic-step heading=\"Update\" type=\"active\"></ic-step>\n      <ic-step heading=\"Delete\" type=\"disabled\"></ic-step>\n    </ic-stepper>`,\n\n  name: \"Left-aligned stepper\",\n};\n\nexport const WithHiddenStepInformation = {\n  render: () =>\n    html`<ic-stepper hide-step-info>\n      <ic-step heading=\"Create\" type=\"completed\"></ic-step>\n      <ic-step heading=\"Read\" type=\"current\"></ic-step>\n      <ic-step heading=\"Update\" type=\"active\"></ic-step>\n      <ic-step heading=\"Delete\" type=\"disabled\"></ic-step>\n    </ic-stepper>`,\n\n  name: \"With hidden step information\",\n};\n\nexport const WithoutHeadings = {\n  render: () =>\n    html`<ic-stepper>\n      <ic-step type=\"completed\"></ic-step>\n      <ic-step type=\"completed\"></ic-step>\n      <ic-step type=\"current\"></ic-step>\n      <ic-step></ic-step>\n    </ic-stepper>`,\n\n  name: \"Without headings\",\n};\n\nexport const CustomStepper = {\n  render: () =>\n    html`<ic-stepper>\n      <ic-step heading=\"First\"></ic-step>\n      <ic-step\n        heading=\"Second With a Very Long Title\"\n        subheading=\"Optional subtitle that is long and should wrap\"\n        type=\"current\"\n      ></ic-step>\n      <ic-step\n        heading=\"Third\"\n        subheading=\"Optional subtitle\"\n        type=\"disabled\"\n      ></ic-step>\n      <ic-step\n        heading=\"Fourth title that is long and should wrap\"\n        subheading=\"Optional Subtitle\"\n        type=\"completed\"\n      ></ic-step>\n    </ic-stepper>`,\n\n  name: \"Custom stepper\",\n};\n\nexport const CustomConnectorWidth = {\n  render: () =>\n    html`<ic-stepper aligned=\"left\" connector-width=\"200\">\n      <ic-step heading=\"First\"></ic-step>\n      <ic-step\n        heading=\"Second With a Very Long Title\"\n        subheading=\"Optional subtitle that is long and should wrap\"\n        type=\"current\"\n      ></ic-step>\n      <ic-step heading=\"Third\" type=\"disabled\"></ic-step>\n      <ic-step\n        heading=\"Fourth title that is long and should wrap\"\n        subheading=\"Optional Subtitle\"\n        type=\"completed\"\n      ></ic-step>\n    </ic-stepper>`,\n\n  name: \"Custom connector width\",\n};\n\nexport const CompactStepper = {\n  render: () =>\n    html`<ic-stepper variant=\"compact\" id=\"standard-compact-stepper\">\n        <ic-step heading=\"Create\"></ic-step>\n        <ic-step heading=\"Read\" type=\"current\"></ic-step>\n        <ic-step heading=\"Update\" status=\"optional\"></ic-step>\n        <ic-step heading=\"Delete\" status=\"required\"></ic-step>\n      </ic-stepper>\n      <ic-button\n        class=\"back-btn-compact-stepper\"\n        style=\"margin-right: var(--ic-space-lg)\"\n        onclick=\"toPreviousStep()\"\n        >Back</ic-button\n      >\n      <ic-button class=\"next-btn-compact-stepper\" onclick=\"toNextStep()\"\n        >Next</ic-button\n      >\n      <script>\n        const compactStepTypes = [\n          \"active\",\n          \"completed\",\n          \"disabled\",\n          \"completed\",\n        ];\n        const backBtn = document.querySelector(\".back-btn-compact-stepper\");\n        const nextBtn = document.querySelector(\".next-btn-compact-stepper\");\n        const steps = document.querySelectorAll(\n          \"#standard-compact-stepper > ic-step\"\n        );\n        function toPreviousStep() {\n          for (let i = steps.length - 1; i > 0; i--) {\n            if (steps[i].type === \"current\") {\n              steps[i].type = compactStepTypes[i];\n              steps[i - 1].type = \"current\";\n              i--;\n            }\n          }\n          if (steps[steps.length - 2].type === \"current\") {\n            nextBtn.setAttribute(\"disabled\", \"false\");\n          }\n          if (steps[0].type === \"current\") {\n            backBtn.setAttribute(\"disabled\", \"true\");\n          }\n        }\n        function toNextStep() {\n          for (let i = 0; i < steps.length - 1; i++) {\n            if (steps[i].type === \"current\") {\n              steps[i].type = compactStepTypes[i];\n              steps[i + 1].type = \"current\";\n              i++;\n            }\n          }\n          if (steps[1].type === \"current\") {\n            backBtn.setAttribute(\"disabled\", \"false\");\n          }\n          if (steps[steps.length - 1].type === \"current\") {\n            nextBtn.setAttribute(\"disabled\", \"true\");\n          }\n        }\n      </script>`,\n\n  name: \"Compact stepper\",\n};\n\nexport const CustomCompactStepper = {\n  render: () =>\n    html`<ic-stepper variant=\"compact\" id=\"custom-compact-stepper\">\n        <ic-step heading=\"First\"></ic-step>\n        <ic-step\n          heading=\"Second With a Very Long Title\"\n          subheading=\"Optional subtitle that is long and should wrap\"\n          type=\"current\"\n        ></ic-step>\n        <ic-step heading=\"Third\" type=\"disabled\"></ic-step>\n        <ic-step\n          heading=\"Fourth title that is long and should wrap\"\n          subheading=\"Optional Subtitle\"\n          type=\"completed\"\n        ></ic-step>\n        <ic-step\n          heading=\"Fifth and final step\"\n          subheading=\"Optional Subtitle\"\n          status=\"optional\"\n          type=\"disabled\"\n        ></ic-step>\n      </ic-stepper>\n      <ic-button\n        class=\"back-btn-custom-compact-stepper\"\n        style=\"margin-right: var(--ic-space-lg)\"\n        onclick=\"toPreviousCustomStep()\"\n        >Back</ic-button\n      >\n      <ic-button\n        class=\"next-btn-custom-compact-stepper\"\n        onclick=\"toNextCustomStep()\"\n        >Next</ic-button\n      >\n      <script>\n        const customCompactStepTypes = [\n          \"active\",\n          \"completed\",\n          \"disabled\",\n          \"completed\",\n          \"disabled\",\n        ];\n        const backBtnCustomCompactStepper = document.querySelector(\n          \".back-btn-custom-compact-stepper\"\n        );\n        const nextBtnCustomCompactStepper = document.querySelector(\n          \".next-btn-custom-compact-stepper\"\n        );\n        const customSteps = document.querySelectorAll(\n          \"#custom-compact-stepper > ic-step\"\n        );\n        function toPreviousCustomStep() {\n          for (let i = customSteps.length - 1; i > 0; i--) {\n            if (customSteps[i].type === \"current\") {\n              customSteps[i].type = customCompactStepTypes[i];\n              customSteps[i - 1].type = \"current\";\n              i--;\n            }\n          }\n          if (customSteps[customSteps.length - 2].type === \"current\") {\n            nextBtnCustomCompactStepper.setAttribute(\"disabled\", \"false\");\n          }\n          if (customSteps[0].type === \"current\") {\n            backBtnCustomCompactStepper.setAttribute(\"disabled\", \"true\");\n          }\n        }\n        function toNextCustomStep() {\n          for (let i = 0; i < customSteps.length - 1; i++) {\n            if (customSteps[i].type === \"current\") {\n              customSteps[i].type = customCompactStepTypes[i];\n              customSteps[i + 1].type = \"current\";\n              i++;\n            }\n          }\n          if (customSteps[1].type === \"current\") {\n            backBtnCustomCompactStepper.setAttribute(\"disabled\", \"false\");\n          }\n          if (customSteps[customSteps.length - 1].type === \"current\") {\n            nextBtnCustomCompactStepper.setAttribute(\"disabled\", \"true\");\n          }\n        }\n      </script>`,\n\n  name: \"Custom compact stepper\",\n};\n\nexport const Playground = {\n  render: (args) =>\n    html`<ic-stepper theme=${args.theme}>\n      <ic-step\n        heading=${args.heading}\n        subheading=${args.subheading}\n        type=\"completed\"\n      ></ic-step>\n      <ic-step heading=\"Read\" type=\"current\" subheading=\"Optional\"></ic-step>\n      <ic-step heading=\"Update\" type=\"active\"></ic-step>\n      <ic-step heading=\"Delete\" type=\"disabled\" subheading=\"Optional\"></ic-step>\n    </ic-stepper>`,\n\n  args: defaultArgs,\n\n  argTypes: {\n    theme: {\n      options: [\"inherit\", \"light\", \"dark\"],\n\n      control: {\n        type: \"inline-radio\",\n      },\n    },\n  },\n\n  name: \"Playground\",\n};\n"],"names":[],"sourceRoot":""}